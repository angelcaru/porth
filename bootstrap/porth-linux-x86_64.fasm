format ELF64
section '.text' executable
print:
    mov     r9, -3689348814741910323
    sub     rsp, 40
    mov     BYTE [rsp+31], 10
    lea     rcx, [rsp+30]
.L2:
    mov     rax, rdi
    lea     r8, [rsp+32]
    mul     r9
    mov     rax, rdi
    sub     r8, rcx
    shr     rdx, 3
    lea     rsi, [rdx+rdx*4]
    add     rsi, rsi
    sub     rax, rsi
    add     eax, 48
    mov     BYTE [rcx], al
    mov     rax, rdi
    mov     rdi, rdx
    mov     rdx, rcx
    sub     rcx, 1
    cmp     rax, 9
    ja      .L2
    lea     rax, [rsp+32]
    mov     edi, 1
    sub     rdx, rax
    xor     eax, eax
    lea     rsi, [rsp+32+rdx]
    mov     rdx, r8
    mov     rax, 1
    syscall
    add     rsp, 40
    ret
addr_0: ;;// std/core.porth:20:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_1: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_3: ;;// std/core.porth:20:46: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_4: ;;// std/core.porth:21:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_5: ;;// std/core.porth:21:33: OP_INLINED 0
addr_6: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_8: ;;// std/core.porth:21:38: OP_INLINED 0
addr_9: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_10: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_11: ;;// std/core.porth:21:43: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_12: ;;// std/core.porth:22:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_13: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_14: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_15: ;;// std/core.porth:22:49: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_16: ;;// std/core.porth:23:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18: ;;// std/core.porth:23:36: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_19: ;;// std/core.porth:24:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20: ;;// std/core.porth:24:34: OP_INLINED 16
addr_21: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22: ;;// std/core.porth:24:39: OP_INTRINSIC cast(addr)
addr_23: ;;// std/core.porth:24:50: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_24: ;;// std/core.porth:26:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_25: ;;// std/core.porth:26:31: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_26: ;;// std/core.porth:26:35: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_27: ;;// std/core.porth:27:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_28: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_29: ;;// std/core.porth:27:33: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_30: ;;// std/core.porth:28:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_31: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_32: ;;// std/core.porth:28:33: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_33: ;;// std/core.porth:29:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_34: ;;// std/core.porth:29:31: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_35: ;;// std/core.porth:29:35: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_36: ;;// std/core.porth:31:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_37: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_42: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_43: ;;// std/core.porth:36:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_44: ;;// std/core.porth:38:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_45: ;;// std/core.porth:39:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_46: ;;// std/core.porth:39:8: OP_INTRINSIC cast(int)
addr_47: ;;// std/core.porth:40:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_48: ;;// std/core.porth:40:8: OP_INTRINSIC cast(int)
addr_49: ;;// std/core.porth:41:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_50: ;;// std/core.porth:42:3: OP_INTRINSIC cast(ptr)
addr_51: ;;// std/core.porth:43:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_52: ;;// std/core.porth:45:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_53: ;;// std/core.porth:46:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_54: ;;// std/core.porth:46:8: OP_INTRINSIC cast(int)
addr_55: ;;// std/core.porth:47:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_56: ;;// std/core.porth:47:8: OP_INTRINSIC cast(int)
addr_57: ;;// std/core.porth:48:3: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_58: ;;// std/core.porth:49:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_59: ;;// std/core.porth:51:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_60: ;;// std/core.porth:52:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_61: ;;// std/core.porth:52:8: OP_INTRINSIC cast(int)
addr_62: ;;// std/core.porth:53:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_63: ;;// std/core.porth:53:8: OP_INTRINSIC cast(int)
addr_64: ;;// std/core.porth:54:3: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_65: ;;// std/core.porth:55:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_66: ;;// std/core.porth:57:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_67: ;;// std/core.porth:58:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_68: ;;// std/core.porth:58:8: OP_INTRINSIC cast(int)
addr_69: ;;// std/core.porth:59:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_70: ;;// std/core.porth:59:8: OP_INTRINSIC cast(int)
addr_71: ;;// std/core.porth:60:3: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_72: ;;// std/core.porth:61:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_73: ;;// std/core.porth:63:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_74: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_75: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_76: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_77: ;;// std/core.porth:65:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_78: ;;// std/core.porth:67:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_79: ;;// std/core.porth:68:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_80: ;;// std/core.porth:68:8: OP_INTRINSIC cast(int)
addr_81: ;;// std/core.porth:69:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_82: ;;// std/core.porth:69:8: OP_INTRINSIC cast(int)
addr_83: ;;// std/core.porth:70:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_84: ;;// std/core.porth:71:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_85: ;;// std/core.porth:73:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_86: ;;// std/core.porth:73:36: OP_INTRINSIC divmod
    xor rdx, rdx
    pop rbx
    pop rax
    div rbx
    push rax
    push rdx
addr_87: ;;// std/core.porth:73:43: OP_INTRINSIC drop
    pop rax
addr_88: ;;// std/core.porth:73:48: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_89: ;;// std/core.porth:74:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_90: ;;// std/core.porth:74:36: OP_INTRINSIC divmod
    xor rdx, rdx
    pop rbx
    pop rax
    div rbx
    push rax
    push rdx
addr_91: ;;// std/core.porth:74:43: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_92: ;;// std/core.porth:74:48: OP_INTRINSIC drop
    pop rax
addr_93: ;;// std/core.porth:74:53: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_94: ;;// std/core.porth:75:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_95: ;;// std/core.porth:75:36: OP_INLINED 89
addr_96: ;;// std/core.porth:74:36: OP_INTRINSIC divmod
    xor rdx, rdx
    pop rbx
    pop rax
    div rbx
    push rax
    push rdx
addr_97: ;;// std/core.porth:74:43: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_98: ;;// std/core.porth:74:48: OP_INTRINSIC drop
    pop rax
addr_99: ;;// std/core.porth:75:38: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_100: ;;// std/core.porth:76:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_101: ;;// std/core.porth:76:36: OP_INLINED 85
addr_102: ;;// std/core.porth:73:36: OP_INTRINSIC divmod
    xor rdx, rdx
    pop rbx
    pop rax
    div rbx
    push rax
    push rdx
addr_103: ;;// std/core.porth:73:43: OP_INTRINSIC drop
    pop rax
addr_104: ;;// std/core.porth:76:38: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_105: ;;// std/core.porth:77:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_106: ;;// std/core.porth:77:36: OP_INTRINSIC idivmod
    pop rbx
    pop rax
    cqo
    idiv rbx
    push rax
    push rdx
addr_107: ;;// std/core.porth:77:44: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_108: ;;// std/core.porth:77:49: OP_INTRINSIC drop
    pop rax
addr_109: ;;// std/core.porth:77:54: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_110: ;;// std/core.porth:78:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_111: ;;// std/core.porth:78:36: OP_INTRINSIC idivmod
    pop rbx
    pop rax
    cqo
    idiv rbx
    push rax
    push rdx
addr_112: ;;// std/core.porth:78:44: OP_INTRINSIC drop
    pop rax
addr_113: ;;// std/core.porth:78:49: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_114: ;;// std/core.porth:79:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_115: ;;// std/core.porth:80:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_116: ;;// std/core.porth:81:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_117: ;;// std/core.porth:82:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_118: ;;// std/core.porth:82:7: OP_INLINED 105
addr_119: ;;// std/core.porth:77:36: OP_INTRINSIC idivmod
    pop rbx
    pop rax
    cqo
    idiv rbx
    push rax
    push rdx
addr_120: ;;// std/core.porth:77:44: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_121: ;;// std/core.porth:77:49: OP_INTRINSIC drop
    pop rax
addr_122: ;;// std/core.porth:83:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_123: ;;// std/core.porth:83:7: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_124: ;;// std/core.porth:84:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_125: ;;// std/core.porth:84:7: OP_INLINED 105
addr_126: ;;// std/core.porth:77:36: OP_INTRINSIC idivmod
    pop rbx
    pop rax
    cqo
    idiv rbx
    push rax
    push rdx
addr_127: ;;// std/core.porth:77:44: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_128: ;;// std/core.porth:77:49: OP_INTRINSIC drop
    pop rax
addr_129: ;;// std/core.porth:85:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_130: ;;// std/core.porth:86:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_131: ;;// std/core.porth:88:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_132: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_133: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_134: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_135: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_136: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_137: ;;// std/core.porth:90:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_138: ;;// std/core.porth:92:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_139: ;;// std/core.porth:93:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_140: ;;// std/core.porth:93:8: OP_INTRINSIC cast(int)
addr_141: ;;// std/core.porth:94:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_142: ;;// std/core.porth:94:8: OP_INTRINSIC cast(int)
addr_143: ;;// std/core.porth:95:3: OP_INTRINSIC and
    pop rax
    pop rbx
    and rbx, rax
    push rbx
addr_144: ;;// std/core.porth:96:3: OP_INTRINSIC cast(bool)
addr_145: ;;// std/core.porth:97:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_146: ;;// std/core.porth:99:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_147: ;;// std/core.porth:100:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_148: ;;// std/core.porth:100:8: OP_INTRINSIC cast(int)
addr_149: ;;// std/core.porth:101:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_150: ;;// std/core.porth:101:8: OP_INTRINSIC cast(int)
addr_151: ;;// std/core.porth:102:3: OP_INTRINSIC or
    pop rax
    pop rbx
    or rbx, rax
    push rbx
addr_152: ;;// std/core.porth:103:3: OP_INTRINSIC cast(bool)
addr_153: ;;// std/core.porth:104:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_154: ;;// std/core.porth:106:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_155: ;;// std/core.porth:106:33: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_156: ;;// std/core.porth:106:38: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_157: ;;// std/core.porth:106:42: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_158: ;;// std/core.porth:106:44: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_159: ;;// std/core.porth:106:49: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_160: ;;// std/core.porth:106:53: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_161: ;;// std/core.porth:107:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_162: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_163: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_164: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_165: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_166: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_167: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_168: ;;// std/core.porth:107:47: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_169: ;;// std/core.porth:108:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_170: ;;// std/core.porth:108:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_171: ;;// std/core.porth:108:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_172: ;;// std/core.porth:108:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_173: ;;// std/core.porth:108:36: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_174: ;;// std/core.porth:108:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_175: ;;// std/core.porth:108:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_176: ;;// std/core.porth:108:47: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_177: ;;// std/core.porth:109:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_178: ;;// std/core.porth:109:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_179: ;;// std/core.porth:109:30: OP_INTRINSIC @32
    pop rax
    xor rbx, rbx
    mov ebx, [rax]
    push rbx
addr_180: ;;// std/core.porth:109:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_181: ;;// std/core.porth:109:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_182: ;;// std/core.porth:109:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_183: ;;// std/core.porth:109:43: OP_INTRINSIC !32
    pop rax
    pop rbx
    mov [rax], ebx
addr_184: ;;// std/core.porth:109:47: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_185: ;;// std/core.porth:110:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_186: ;;// std/core.porth:110:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_187: ;;// std/core.porth:110:30: OP_INTRINSIC @32
    pop rax
    xor rbx, rbx
    mov ebx, [rax]
    push rbx
addr_188: ;;// std/core.porth:110:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_189: ;;// std/core.porth:110:36: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_190: ;;// std/core.porth:110:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_191: ;;// std/core.porth:110:43: OP_INTRINSIC !32
    pop rax
    pop rbx
    mov [rax], ebx
addr_192: ;;// std/core.porth:110:47: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_193: ;;// std/core.porth:111:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_194: ;;// std/core.porth:111:25: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_195: ;;// std/core.porth:111:29: OP_INTRINSIC @8
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_196: ;;// std/core.porth:111:32: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_197: ;;// std/core.porth:111:34: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_198: ;;// std/core.porth:111:36: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_199: ;;// std/core.porth:111:41: OP_INTRINSIC !8
    pop rax
    pop rbx
    mov [rax], bl
addr_200: ;;// std/core.porth:111:44: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_201: ;;// std/core.porth:112:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_202: ;;// std/core.porth:112:25: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_203: ;;// std/core.porth:112:29: OP_INTRINSIC @8
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_204: ;;// std/core.porth:112:32: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_205: ;;// std/core.porth:112:34: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_206: ;;// std/core.porth:112:36: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_207: ;;// std/core.porth:112:41: OP_INTRINSIC !8
    pop rax
    pop rbx
    mov [rax], bl
addr_208: ;;// std/core.porth:112:44: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_209: ;;// std/core.porth:114:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_210: ;;// std/core.porth:114:31: OP_INTRINSIC not
    pop rax
    not rax
    push rax
addr_211: ;;// std/core.porth:114:35: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_212: ;;// std/core.porth:114:37: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_213: ;;// std/core.porth:114:39: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_214: ;;// std/core.porth:116:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_215: ;;// std/core.porth:116:34: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_216: ;;// std/core.porth:116:39: OP_INLINED 59
addr_217: ;;// std/core.porth:52:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_218: ;;// std/core.porth:52:8: OP_INTRINSIC cast(int)
addr_219: ;;// std/core.porth:53:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_220: ;;// std/core.porth:53:8: OP_INTRINSIC cast(int)
addr_221: ;;// std/core.porth:54:3: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_222: ;;// std/core.porth:116:44: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_223: ;;// std/core.porth:118:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_224: ;;// std/core.porth:118:27: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_225: ;;// std/core.porth:118:31: OP_INLINED 12
addr_226: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_227: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_228: ;;// std/core.porth:118:37: OP_INLINED 131
addr_229: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_230: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_231: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_232: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_233: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_234: ;;// std/core.porth:118:42: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_235: ;;// std/core.porth:118:47: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_236: ;;// std/core.porth:118:51: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_237: ;;// std/linux.porth:364:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_238: ;;// std/linux.porth:364:43: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_239: ;;// std/linux.porth:364:47: OP_INLINED 36
addr_240: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_241: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_242: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_243: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_244: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_245: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_246: ;;// std/linux.porth:364:52: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_247: ;;// std/linux.porth:365:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_248: ;;// std/linux.porth:365:43: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_249: ;;// std/linux.porth:365:47: OP_INLINED 36
addr_250: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_251: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_252: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_253: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_254: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_255: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_256: ;;// std/linux.porth:365:52: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_257: ;;// std/linux.porth:366:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_258: ;;// std/linux.porth:366:43: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_259: ;;// std/linux.porth:366:47: OP_INLINED 36
addr_260: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_261: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_262: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_263: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_264: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_265: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_266: ;;// std/linux.porth:366:52: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_267: ;;// std/linux.porth:367:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_268: ;;// std/linux.porth:367:43: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_269: ;;// std/linux.porth:367:47: OP_INLINED 36
addr_270: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_271: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_272: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_273: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_274: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_275: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_276: ;;// std/linux.porth:367:52: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_277: ;;// std/linux.porth:368:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_278: ;;// std/linux.porth:368:43: OP_PUSH_INT 28
    mov rax, 28
    push rax
addr_279: ;;// std/linux.porth:368:47: OP_INLINED 36
addr_280: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_281: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_282: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_283: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_284: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_285: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_286: ;;// std/linux.porth:368:52: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_287: ;;// std/linux.porth:369:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_288: ;;// std/linux.porth:369:43: OP_PUSH_INT 32
    mov rax, 32
    push rax
addr_289: ;;// std/linux.porth:369:47: OP_INLINED 36
addr_290: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_291: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_292: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_293: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_294: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_295: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_296: ;;// std/linux.porth:369:52: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_297: ;;// std/linux.porth:370:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_298: ;;// std/linux.porth:370:43: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_299: ;;// std/linux.porth:370:47: OP_INLINED 36
addr_300: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_301: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_302: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_303: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_304: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_305: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_306: ;;// std/linux.porth:370:52: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_307: ;;// std/linux.porth:371:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_308: ;;// std/linux.porth:371:43: OP_PUSH_INT 48
    mov rax, 48
    push rax
addr_309: ;;// std/linux.porth:371:47: OP_INLINED 36
addr_310: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_311: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_312: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_313: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_314: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_315: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_316: ;;// std/linux.porth:371:52: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_317: ;;// std/linux.porth:372:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_318: ;;// std/linux.porth:372:43: OP_INLINED 307
addr_319: ;;// std/linux.porth:371:43: OP_PUSH_INT 48
    mov rax, 48
    push rax
addr_320: ;;// std/linux.porth:371:47: OP_INLINED 36
addr_321: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_322: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_323: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_324: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_325: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_326: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_327: ;;// std/linux.porth:372:56: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_328: ;;// std/linux.porth:372:60: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_329: ;;// std/linux.porth:373:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_330: ;;// std/linux.porth:373:43: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_331: ;;// std/linux.porth:373:47: OP_INLINED 36
addr_332: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_333: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_334: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_335: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_336: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_337: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_338: ;;// std/linux.porth:373:52: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_339: ;;// std/linux.porth:374:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_340: ;;// std/linux.porth:374:43: OP_PUSH_INT 64
    mov rax, 64
    push rax
addr_341: ;;// std/linux.porth:374:47: OP_INLINED 36
addr_342: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_343: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_344: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_345: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_346: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_347: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_348: ;;// std/linux.porth:374:52: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_349: ;;// std/linux.porth:375:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_350: ;;// std/linux.porth:375:43: OP_PUSH_INT 72
    mov rax, 72
    push rax
addr_351: ;;// std/linux.porth:375:47: OP_INLINED 36
addr_352: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_353: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_354: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_355: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_356: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_357: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_358: ;;// std/linux.porth:375:52: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_359: ;;// std/linux.porth:376:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_360: ;;// std/linux.porth:376:43: OP_PUSH_INT 88
    mov rax, 88
    push rax
addr_361: ;;// std/linux.porth:376:47: OP_INLINED 36
addr_362: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_363: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_364: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_365: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_366: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_367: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_368: ;;// std/linux.porth:376:52: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_369: ;;// std/linux.porth:377:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_370: ;;// std/linux.porth:377:43: OP_PUSH_INT 104
    mov rax, 104
    push rax
addr_371: ;;// std/linux.porth:377:47: OP_INLINED 36
addr_372: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_373: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_374: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_375: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_376: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_377: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_378: ;;// std/linux.porth:377:52: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_379: ;;// std/linux.porth:405:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_380: ;;// std/linux.porth:406:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_381: ;;// std/linux.porth:407:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_382: ;;// std/linux.porth:407:13: OP_PUSH_INT 255
    mov rax, 255
    push rax
addr_383: ;;// std/linux.porth:407:17: OP_INTRINSIC and
    pop rax
    pop rbx
    and rbx, rax
    push rbx
addr_384: ;;// std/linux.porth:407:21: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_385: ;;// std/linux.porth:407:23: OP_INTRINSIC shl
    pop rcx
    pop rbx
    shl rbx, cl
    push rbx
addr_386: ;;// std/linux.porth:408:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_387: ;;// std/linux.porth:408:7: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_388: ;;// std/linux.porth:408:9: OP_INTRINSIC shr
    pop rcx
    pop rbx
    shr rbx, cl
    push rbx
addr_389: ;;// std/linux.porth:408:13: OP_PUSH_INT 255
    mov rax, 255
    push rax
addr_390: ;;// std/linux.porth:408:17: OP_INTRINSIC and
    pop rax
    pop rbx
    and rbx, rax
    push rbx
addr_391: ;;// std/linux.porth:409:5: OP_INTRINSIC or
    pop rax
    pop rbx
    or rbx, rax
    push rbx
addr_392: ;;// std/linux.porth:410:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_393: ;;// std/linux.porth:411:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_394: ;;// std/linux.porth:414:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_395: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_396: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_397: ;;// std/linux.porth:414:60: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_398: ;;// std/linux.porth:415:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_399: ;;// std/linux.porth:415:40: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_400: ;;// std/linux.porth:415:49: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_401: ;;// std/linux.porth:415:58: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_402: ;;// std/linux.porth:416:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_403: ;;// std/linux.porth:416:46: OP_PUSH_INT 257
    mov rax, 257
    push rax
addr_404: ;;// std/linux.porth:416:57: OP_INTRINSIC syscall4
    pop rax
    pop rdi
    pop rsi
    pop rdx
    pop r10
    syscall
    push rax
addr_405: ;;// std/linux.porth:416:66: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_406: ;;// std/linux.porth:417:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_407: ;;// std/linux.porth:417:37: OP_PUSH_INT 5
    mov rax, 5
    push rax
addr_408: ;;// std/linux.porth:417:47: OP_INTRINSIC syscall2
    pop rax
    pop rdi
    pop rsi
    syscall
    push rax
addr_409: ;;// std/linux.porth:417:56: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_410: ;;// std/linux.porth:418:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_411: ;;// std/linux.porth:418:36: OP_PUSH_INT 4
    mov rax, 4
    push rax
addr_412: ;;// std/linux.porth:418:45: OP_INTRINSIC syscall2
    pop rax
    pop rdi
    pop rsi
    syscall
    push rax
addr_413: ;;// std/linux.porth:418:54: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_414: ;;// std/linux.porth:419:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_415: ;;// std/linux.porth:419:33: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_416: ;;// std/linux.porth:419:43: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_417: ;;// std/linux.porth:419:52: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_418: ;;// std/linux.porth:420:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_419: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_420: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_421: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_422: ;;// std/linux.porth:420:48: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_423: ;;// std/linux.porth:421:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_424: ;;// std/linux.porth:421:52: OP_PUSH_INT 9
    mov rax, 9
    push rax
addr_425: ;;// std/linux.porth:421:61: OP_INTRINSIC syscall6
    pop rax
    pop rdi
    pop rsi
    pop rdx
    pop r10
    pop r8
    pop r9
    syscall
    push rax
addr_426: ;;// std/linux.porth:421:70: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_427: ;;// std/linux.porth:422:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_428: ;;// std/linux.porth:422:55: OP_PUSH_INT 230
    mov rax, 230
    push rax
addr_429: ;;// std/linux.porth:422:75: OP_INTRINSIC syscall4
    pop rax
    pop rdi
    pop rsi
    pop rdx
    pop r10
    syscall
    push rax
addr_430: ;;// std/linux.porth:422:84: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_431: ;;// std/linux.porth:423:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_432: ;;// std/linux.porth:423:45: OP_PUSH_INT 228
    mov rax, 228
    push rax
addr_433: ;;// std/linux.porth:423:63: OP_INTRINSIC syscall2
    pop rax
    pop rdi
    pop rsi
    syscall
    push rax
addr_434: ;;// std/linux.porth:423:72: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_435: ;;// std/linux.porth:424:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_436: ;;// std/linux.porth:424:28: OP_PUSH_INT 57
    mov rax, 57
    push rax
addr_437: ;;// std/linux.porth:424:37: OP_INTRINSIC syscall0
    pop rax
    syscall
    push rax
addr_438: ;;// std/linux.porth:424:46: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_439: ;;// std/linux.porth:425:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_440: ;;// std/linux.porth:425:30: OP_PUSH_INT 39
    mov rax, 39
    push rax
addr_441: ;;// std/linux.porth:425:41: OP_INTRINSIC syscall0
    pop rax
    syscall
    push rax
addr_442: ;;// std/linux.porth:425:50: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_443: ;;// std/linux.porth:426:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_444: ;;// std/linux.porth:426:42: OP_PUSH_INT 59
    mov rax, 59
    push rax
addr_445: ;;// std/linux.porth:426:53: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_446: ;;// std/linux.porth:426:62: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_447: ;;// std/linux.porth:427:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_448: ;;// std/linux.porth:427:45: OP_PUSH_INT 61
    mov rax, 61
    push rax
addr_449: ;;// std/linux.porth:427:55: OP_INTRINSIC syscall4
    pop rax
    pop rdi
    pop rsi
    pop rdx
    pop r10
    syscall
    push rax
addr_450: ;;// std/linux.porth:427:64: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_451: ;;// std/linux.porth:428:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_452: ;;// std/linux.porth:428:38: OP_PUSH_INT 82
    mov rax, 82
    push rax
addr_453: ;;// std/linux.porth:428:49: OP_INTRINSIC syscall2
    pop rax
    pop rdi
    pop rsi
    syscall
    push rax
addr_454: ;;// std/linux.porth:428:58: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_455: ;;// std/linux.porth:429:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_456: ;;// std/linux.porth:429:41: OP_PUSH_INT 72
    mov rax, 72
    push rax
addr_457: ;;// std/linux.porth:429:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_458: ;;// std/linux.porth:429:60: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_459: ;;// std/linux.porth:430:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_460: ;;// std/linux.porth:430:36: OP_PUSH_INT 62
    mov rax, 62
    push rax
addr_461: ;;// std/linux.porth:430:45: OP_INTRINSIC syscall2
    pop rax
    pop rdi
    pop rsi
    syscall
    push rax
addr_462: ;;// std/linux.porth:430:54: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_463: ;;// std/linux.porth:432:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_464: ;;// std/linux.porth:432:36: OP_PUSH_INT 33
    mov rax, 33
    push rax
addr_465: ;;// std/linux.porth:432:45: OP_INTRINSIC syscall2
    pop rax
    pop rdi
    pop rsi
    syscall
    push rax
addr_466: ;;// std/linux.porth:432:54: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_467: ;;// std/linux.porth:433:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_468: ;;// std/linux.porth:433:42: OP_PUSH_INT 41
    mov rax, 41
    push rax
addr_469: ;;// std/linux.porth:433:53: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_470: ;;// std/linux.porth:433:62: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_471: ;;// std/linux.porth:434:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_472: ;;// std/linux.porth:434:40: OP_PUSH_INT 49
    mov rax, 49
    push rax
addr_473: ;;// std/linux.porth:434:49: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_474: ;;// std/linux.porth:434:58: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_475: ;;// std/linux.porth:435:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_476: ;;// std/linux.porth:435:38: OP_PUSH_INT 50
    mov rax, 50
    push rax
addr_477: ;;// std/linux.porth:435:49: OP_INTRINSIC syscall2
    pop rax
    pop rdi
    pop rsi
    syscall
    push rax
addr_478: ;;// std/linux.porth:435:58: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_479: ;;// std/linux.porth:436:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_480: ;;// std/linux.porth:436:42: OP_PUSH_INT 43
    mov rax, 43
    push rax
addr_481: ;;// std/linux.porth:436:53: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_482: ;;// std/linux.porth:436:62: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_483: ;;// std/linux.porth:437:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_484: ;;// std/linux.porth:437:38: OP_PUSH_INT 79
    mov rax, 79
    push rax
addr_485: ;;// std/linux.porth:437:49: OP_INTRINSIC syscall2
    pop rax
    pop rdi
    pop rsi
    syscall
    push rax
addr_486: ;;// std/linux.porth:437:58: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_487: ;;// std/linux.porth:438:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_488: ;;// std/linux.porth:438:34: OP_PUSH_INT 161
    mov rax, 161
    push rax
addr_489: ;;// std/linux.porth:438:45: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_490: ;;// std/linux.porth:438:54: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_491: ;;// std/linux.porth:439:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_492: ;;// std/linux.porth:439:41: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_493: ;;// std/linux.porth:439:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_494: ;;// std/linux.porth:439:60: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_495: ;;// std/linux.porth:441:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_496: ;;// std/linux.porth:443:3: OP_PUSH_INT 255
    mov rax, 255
    push rax
addr_497: ;;// std/linux.porth:443:7: OP_INTRINSIC and
    pop rax
    pop rbx
    and rbx, rax
    push rbx
addr_498: ;;// std/linux.porth:444:3: OP_PUSH_INT 127
    mov rax, 127
    push rax
addr_499: ;;// std/linux.porth:444:7: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_500: ;;// std/linux.porth:445:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_501: ;;// std/linux.porth:447:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_502: ;;// std/linux.porth:449:3: OP_PUSH_INT 65535
    mov rax, 65535
    push rax
addr_503: ;;// std/linux.porth:449:9: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_504: ;;// std/linux.porth:450:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_505: ;;// std/linux.porth:452:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_506: ;;// std/linux.porth:454:3: OP_PUSH_INT 127
    mov rax, 127
    push rax
addr_507: ;;// std/linux.porth:454:7: OP_INTRINSIC and
    pop rax
    pop rbx
    and rbx, rax
    push rbx
addr_508: ;;// std/linux.porth:455:3: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_509: ;;// std/linux.porth:455:5: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_510: ;;// std/linux.porth:456:3: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_511: ;;// std/linux.porth:456:5: OP_INTRINSIC shr
    pop rcx
    pop rbx
    shr rbx, cl
    push rbx
addr_512: ;;// std/linux.porth:457:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_513: ;;// std/linux.porth:457:5: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_514: ;;// std/linux.porth:458:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_515: ;;// std/linux.porth:460:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_516: ;;// std/linux.porth:462:3: OP_PUSH_INT 127
    mov rax, 127
    push rax
addr_517: ;;// std/linux.porth:462:7: OP_INTRINSIC and
    pop rax
    pop rbx
    and rbx, rax
    push rbx
addr_518: ;;// std/linux.porth:463:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_519: ;;// std/linux.porth:465:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_520: ;;// std/linux.porth:467:3: OP_PUSH_INT 127
    mov rax, 127
    push rax
addr_521: ;;// std/linux.porth:467:7: OP_INTRINSIC and
    pop rax
    pop rbx
    and rbx, rax
    push rbx
addr_522: ;;// std/linux.porth:468:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_523: ;;// std/linux.porth:468:5: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_524: ;;// std/linux.porth:469:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_525: ;;// std/linux.porth:471:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_526: ;;// std/linux.porth:473:3: OP_PUSH_INT 65280
    mov rax, 65280
    push rax
addr_527: ;;// std/linux.porth:473:9: OP_INTRINSIC and
    pop rax
    pop rbx
    and rbx, rax
    push rbx
addr_528: ;;// std/linux.porth:474:3: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_529: ;;// std/linux.porth:474:5: OP_INTRINSIC shr
    pop rcx
    pop rbx
    shr rbx, cl
    push rbx
addr_530: ;;// std/linux.porth:475:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_531: ;;// std/linux.porth:507:6: OP_PREP_PROC 8
    sub rsp, 8
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_532: ;;// std/linux.porth:514:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_533: ;;// std/linux.porth:515:5: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_534: ;;// std/linux.porth:515:9: OP_PUSH_INT 21523
    mov rax, 21523
    push rax
addr_535: ;;// std/linux.porth:515:20: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_536: ;;// std/linux.porth:515:23: OP_INLINED 491
addr_537: ;;// std/linux.porth:439:41: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_538: ;;// std/linux.porth:439:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_539: ;;// std/linux.porth:516:5: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_540: ;;// std/linux.porth:517:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_541: ;;// std/linux.porth:517:11: OP_INLINED 209
addr_542: ;;// std/core.porth:114:31: OP_INTRINSIC not
    pop rax
    not rax
    push rax
addr_543: ;;// std/core.porth:114:35: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_544: ;;// std/core.porth:114:37: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_545: ;;// std/linux.porth:518:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_546: ;;// std/linux.porth:518:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_547: ;;// std/linux.porth:518:13: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_548: ;;// std/linux.porth:519:5: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_549: ;;// std/linux.porth:520:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_550: ;;// std/linux.porth:521:1: OP_RET 8
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 8
    ret
addr_551: ;;// std/std.porth:12:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_552: ;;// std/std.porth:13:3: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_553: ;;// std/std.porth:13:15: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_554: ;;// std/std.porth:14:3: OP_INTRINSIC argv
    mov rax, [args_ptr]
    add rax, 8
    push rax
addr_555: ;;// std/std.porth:14:8: OP_INLINED 73
addr_556: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_557: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_558: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_559: ;;// std/std.porth:15:3: OP_INLINED 0
addr_560: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_561: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_562: ;;// std/std.porth:15:8: OP_INTRINSIC cast(ptr)
addr_563: ;;// std/std.porth:16:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_564: ;;// std/std.porth:18:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_565: ;;// std/std.porth:19:3: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_566: ;;// std/std.porth:20:3: OP_WHILE 15
addr_567: ;;// std/std.porth:20:9: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_568: ;;// std/std.porth:20:13: OP_INTRINSIC @8
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_569: ;;// std/std.porth:20:16: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_570: ;;// std/std.porth:20:18: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_571: ;;// std/std.porth:20:21: OP_DO 10
    pop rax
    test rax, rax
    jz addr_581
addr_572: ;;// std/std.porth:20:24: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_573: ;;// std/std.porth:20:26: OP_INLINED 36
addr_574: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_575: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_576: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_577: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_578: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_579: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_580: ;;// std/std.porth:20:31: OP_END_WHILE 14
    jmp addr_566
addr_581: ;;// std/std.porth:21:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_582: ;;// std/std.porth:21:8: OP_INLINED 78
addr_583: ;;// std/core.porth:68:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_584: ;;// std/core.porth:68:8: OP_INTRINSIC cast(int)
addr_585: ;;// std/core.porth:69:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_586: ;;// std/core.porth:69:8: OP_INTRINSIC cast(int)
addr_587: ;;// std/core.porth:70:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_588: ;;// std/std.porth:22:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_589: ;;// std/std.porth:24:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_590: ;;// std/std.porth:25:3: OP_WHILE 49
addr_591: ;;// std/std.porth:26:5: OP_BIND_PEEK 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    mov rbx, [rsp+0]
    mov [rax+8], rbx
    mov rbx, [rsp+8]
    mov [rax+0], rbx
addr_592: ;;// std/std.porth:27:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_593: ;;// std/std.porth:27:10: OP_INTRINSIC @8
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_594: ;;// std/std.porth:27:13: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_595: ;;// std/std.porth:27:15: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_596: ;;// std/std.porth:27:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_597: ;;// std/std.porth:27:21: OP_INTRINSIC @8
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_598: ;;// std/std.porth:27:24: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_599: ;;// std/std.porth:27:26: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_600: ;;// std/std.porth:27:29: OP_INLINED 138
addr_601: ;;// std/core.porth:93:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_602: ;;// std/core.porth:93:8: OP_INTRINSIC cast(int)
addr_603: ;;// std/core.porth:94:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_604: ;;// std/core.porth:94:8: OP_INTRINSIC cast(int)
addr_605: ;;// std/core.porth:95:3: OP_INTRINSIC and
    pop rax
    pop rbx
    and rbx, rax
    push rbx
addr_606: ;;// std/core.porth:96:3: OP_INTRINSIC cast(bool)
addr_607: ;;// std/std.porth:27:34: OP_IF 7
    pop rax
    test rax, rax
    jz addr_614
addr_608: ;;// std/std.porth:28:10: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_609: ;;// std/std.porth:28:13: OP_INTRINSIC @8
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_610: ;;// std/std.porth:28:16: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_611: ;;// std/std.porth:28:19: OP_INTRINSIC @8
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_612: ;;// std/std.porth:28:22: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_613: ;;// std/std.porth:29:7: OP_ELSE 2
    jmp addr_615
addr_614: ;;// std/std.porth:29:12: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_615: ;;// std/std.porth:29:18: OP_END_IF 0
addr_616: ;;// std/std.porth:30:5: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_617: ;;// std/std.porth:31:3: OP_DO 22
    pop rax
    test rax, rax
    jz addr_639
addr_618: ;;// std/std.porth:32:5: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_619: ;;// std/std.porth:33:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_620: ;;// std/std.porth:33:10: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_621: ;;// std/std.porth:33:12: OP_INLINED 36
addr_622: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_623: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_624: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_625: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_626: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_627: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_628: ;;// std/std.porth:34:7: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_629: ;;// std/std.porth:34:10: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_630: ;;// std/std.porth:34:12: OP_INLINED 36
addr_631: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_632: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_633: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_634: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_635: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_636: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_637: ;;// std/std.porth:35:5: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_638: ;;// std/std.porth:36:3: OP_END_WHILE 48
    jmp addr_590
addr_639: ;;// std/std.porth:38:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_640: ;;// std/std.porth:39:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_641: ;;// std/std.porth:39:8: OP_INTRINSIC @8
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_642: ;;// std/std.porth:39:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_643: ;;// std/std.porth:39:13: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_644: ;;// std/std.porth:40:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_645: ;;// std/std.porth:40:8: OP_INTRINSIC @8
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_646: ;;// std/std.porth:40:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_647: ;;// std/std.porth:40:13: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_648: ;;// std/std.porth:41:5: OP_INLINED 138
addr_649: ;;// std/core.porth:93:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_650: ;;// std/core.porth:93:8: OP_INTRINSIC cast(int)
addr_651: ;;// std/core.porth:94:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_652: ;;// std/core.porth:94:8: OP_INTRINSIC cast(int)
addr_653: ;;// std/core.porth:95:3: OP_INTRINSIC and
    pop rax
    pop rbx
    and rbx, rax
    push rbx
addr_654: ;;// std/core.porth:96:3: OP_INTRINSIC cast(bool)
addr_655: ;;// std/std.porth:42:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_656: ;;// std/std.porth:43:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_657: ;;// std/std.porth:45:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_658: ;;// std/std.porth:45:43: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_659: ;;// std/std.porth:45:47: OP_CALL 564
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_564
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_660: ;;// std/std.porth:45:55: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_661: ;;// std/std.porth:45:60: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_662: ;;// std/std.porth:48:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_663: ;;// std/std.porth:48:34: OP_INLINED 394
addr_664: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_665: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_666: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_667: ;;// std/std.porth:48:45: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_668: ;;// std/std.porth:49:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_669: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_670: ;;// std/std.porth:49:36: OP_INLINED 662
addr_671: ;;// std/std.porth:48:34: OP_INLINED 394
addr_672: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_673: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_674: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_675: ;;// std/std.porth:49:42: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_676: ;;// std/std.porth:50:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_677: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_678: ;;// std/std.porth:50:37: OP_INLINED 662
addr_679: ;;// std/std.porth:48:34: OP_INLINED 394
addr_680: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_681: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_682: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_683: ;;// std/std.porth:50:43: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_684: ;;// std/std.porth:56:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_685: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_686: ;;// std/std.porth:56:57: OP_INLINED 36
addr_687: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_688: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_689: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_690: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_691: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_692: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_693: ;;// std/std.porth:56:62: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_694: ;;// std/std.porth:57:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_695: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_696: ;;// std/std.porth:57:55: OP_INLINED 36
addr_697: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_698: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_699: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_700: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_701: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_702: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_703: ;;// std/std.porth:57:60: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_704: ;;// std/std.porth:58:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_705: ;;// std/std.porth:58:38: OP_INLINED 684
addr_706: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_707: ;;// std/std.porth:56:57: OP_INLINED 36
addr_708: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_709: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_710: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_711: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_712: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_713: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_714: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_715: ;;// std/std.porth:58:52: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_716: ;;// std/std.porth:59:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_717: ;;// std/std.porth:59:37: OP_INLINED 694
addr_718: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_719: ;;// std/std.porth:57:55: OP_INLINED 36
addr_720: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_721: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_722: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_723: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_724: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_725: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_726: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_727: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_728: ;;// std/std.porth:59:61: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_729: ;;// std/std.porth:60:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_730: ;;// std/std.porth:60:35: OP_INLINED 684
addr_731: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_732: ;;// std/std.porth:56:57: OP_INLINED 36
addr_733: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_734: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_735: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_736: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_737: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_738: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_739: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_740: ;;// std/std.porth:60:49: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_741: ;;// std/std.porth:61:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_742: ;;// std/std.porth:61:34: OP_INLINED 694
addr_743: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_744: ;;// std/std.porth:57:55: OP_INLINED 36
addr_745: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_746: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_747: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_748: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_749: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_750: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_751: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_752: ;;// std/std.porth:61:48: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_753: ;;// std/std.porth:63:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_754: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_755: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_756: ;;// std/std.porth:65:7: OP_INLINED 704
addr_757: ;;// std/std.porth:58:38: OP_INLINED 684
addr_758: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_759: ;;// std/std.porth:56:57: OP_INLINED 36
addr_760: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_761: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_762: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_763: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_764: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_765: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_766: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_767: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_768: ;;// std/std.porth:66:7: OP_INLINED 716
addr_769: ;;// std/std.porth:59:37: OP_INLINED 694
addr_770: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_771: ;;// std/std.porth:57:55: OP_INLINED 36
addr_772: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_773: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_774: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_775: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_776: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_777: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_778: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_779: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_780: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_781: ;;// std/std.porth:68:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_782: ;;// std/std.porth:70:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_783: ;;// std/std.porth:71:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_784: ;;// std/std.porth:72:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_785: ;;// std/std.porth:72:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_786: ;;// std/std.porth:72:9: OP_INLINED 729
addr_787: ;;// std/std.porth:60:35: OP_INLINED 684
addr_788: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_789: ;;// std/std.porth:56:57: OP_INLINED 36
addr_790: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_791: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_792: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_793: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_794: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_795: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_796: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_797: ;;// std/std.porth:73:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_798: ;;// std/std.porth:73:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_799: ;;// std/std.porth:73:9: OP_INLINED 741
addr_800: ;;// std/std.porth:61:34: OP_INLINED 694
addr_801: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_802: ;;// std/std.porth:57:55: OP_INLINED 36
addr_803: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_804: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_805: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_806: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_807: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_808: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_809: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_810: ;;// std/std.porth:74:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_811: ;;// std/std.porth:75:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_812: ;;// std/std.porth:77:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_813: ;;// std/std.porth:77:36: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_814: ;;// std/std.porth:77:38: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_815: ;;// std/std.porth:77:43: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_816: ;;// std/std.porth:79:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_817: ;;// std/std.porth:80:4: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_818: ;;// std/std.porth:80:8: OP_INLINED 684
addr_819: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_820: ;;// std/std.porth:56:57: OP_INLINED 36
addr_821: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_822: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_823: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_824: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_825: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_826: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_827: ;;// std/std.porth:80:18: OP_INLINED 169
addr_828: ;;// std/core.porth:108:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_829: ;;// std/core.porth:108:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_830: ;;// std/core.porth:108:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_831: ;;// std/core.porth:108:36: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_832: ;;// std/core.porth:108:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_833: ;;// std/core.porth:108:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_834: ;;// std/std.porth:81:8: OP_INLINED 694
addr_835: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_836: ;;// std/std.porth:57:55: OP_INLINED 36
addr_837: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_838: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_839: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_840: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_841: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_842: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_843: ;;// std/std.porth:81:17: OP_INLINED 161
addr_844: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_845: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_846: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_847: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_848: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_849: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_850: ;;// std/std.porth:82:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_851: ;;// std/std.porth:84:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_852: ;;// std/std.porth:85:3: OP_INLINED 684
addr_853: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_854: ;;// std/std.porth:56:57: OP_INLINED 36
addr_855: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_856: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_857: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_858: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_859: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_860: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_861: ;;// std/std.porth:85:13: OP_INLINED 169
addr_862: ;;// std/core.porth:108:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_863: ;;// std/core.porth:108:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_864: ;;// std/core.porth:108:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_865: ;;// std/core.porth:108:36: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_866: ;;// std/core.porth:108:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_867: ;;// std/core.porth:108:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_868: ;;// std/std.porth:86:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_869: ;;// std/std.porth:88:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_870: ;;// std/std.porth:89:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_871: ;;// std/std.porth:90:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_872: ;;// std/std.porth:90:7: OP_PUSH_INT 32
    mov rax, 32
    push rax
addr_873: ;;// std/std.porth:90:12: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_874: ;;// std/std.porth:91:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_875: ;;// std/std.porth:91:7: OP_PUSH_INT 10
    mov rax, 10
    push rax
addr_876: ;;// std/std.porth:91:12: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_877: ;;// std/std.porth:91:14: OP_INLINED 146
addr_878: ;;// std/core.porth:100:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_879: ;;// std/core.porth:100:8: OP_INTRINSIC cast(int)
addr_880: ;;// std/core.porth:101:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_881: ;;// std/core.porth:101:8: OP_INTRINSIC cast(int)
addr_882: ;;// std/core.porth:102:3: OP_INTRINSIC or
    pop rax
    pop rbx
    or rbx, rax
    push rbx
addr_883: ;;// std/core.porth:103:3: OP_INTRINSIC cast(bool)
addr_884: ;;// std/std.porth:92:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_885: ;;// std/std.porth:92:7: OP_PUSH_INT 13
    mov rax, 13
    push rax
addr_886: ;;// std/std.porth:92:12: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_887: ;;// std/std.porth:92:14: OP_INLINED 146
addr_888: ;;// std/core.porth:100:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_889: ;;// std/core.porth:100:8: OP_INTRINSIC cast(int)
addr_890: ;;// std/core.porth:101:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_891: ;;// std/core.porth:101:8: OP_INTRINSIC cast(int)
addr_892: ;;// std/core.porth:102:3: OP_INTRINSIC or
    pop rax
    pop rbx
    or rbx, rax
    push rbx
addr_893: ;;// std/core.porth:103:3: OP_INTRINSIC cast(bool)
addr_894: ;;// std/std.porth:93:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_895: ;;// std/std.porth:94:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_896: ;;// std/std.porth:96:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_897: ;;// std/std.porth:97:3: OP_WHILE 71
addr_898: ;;// std/std.porth:98:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_899: ;;// std/std.porth:98:9: OP_INLINED 704
addr_900: ;;// std/std.porth:58:38: OP_INLINED 684
addr_901: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_902: ;;// std/std.porth:56:57: OP_INLINED 36
addr_903: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_904: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_905: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_906: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_907: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_908: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_909: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_910: ;;// std/std.porth:98:20: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_911: ;;// std/std.porth:98:22: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_912: ;;// std/std.porth:98:24: OP_IF 17
    pop rax
    test rax, rax
    jz addr_929
addr_913: ;;// std/std.porth:99:7: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_914: ;;// std/std.porth:99:11: OP_INLINED 716
addr_915: ;;// std/std.porth:59:37: OP_INLINED 694
addr_916: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_917: ;;// std/std.porth:57:55: OP_INLINED 36
addr_918: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_919: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_920: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_921: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_922: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_923: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_924: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_925: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_926: ;;// std/std.porth:99:21: OP_INTRINSIC @8
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_927: ;;// std/std.porth:99:24: OP_CALL 869
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_869
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_928: ;;// std/std.porth:100:5: OP_ELSE 2
    jmp addr_930
addr_929: ;;// std/std.porth:100:10: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_930: ;;// std/std.porth:100:16: OP_END_IF 0
addr_931: ;;// std/std.porth:101:3: OP_DO 37
    pop rax
    test rax, rax
    jz addr_968
addr_932: ;;// std/std.porth:102:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_933: ;;// std/std.porth:102:9: OP_INLINED 816
addr_934: ;;// std/std.porth:80:4: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_935: ;;// std/std.porth:80:8: OP_INLINED 684
addr_936: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_937: ;;// std/std.porth:56:57: OP_INLINED 36
addr_938: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_939: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_940: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_941: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_942: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_943: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_944: ;;// std/std.porth:80:18: OP_INLINED 169
addr_945: ;;// std/core.porth:108:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_946: ;;// std/core.porth:108:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_947: ;;// std/core.porth:108:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_948: ;;// std/core.porth:108:36: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_949: ;;// std/core.porth:108:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_950: ;;// std/core.porth:108:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_951: ;;// std/std.porth:81:8: OP_INLINED 694
addr_952: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_953: ;;// std/std.porth:57:55: OP_INLINED 36
addr_954: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_955: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_956: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_957: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_958: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_959: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_960: ;;// std/std.porth:81:17: OP_INLINED 161
addr_961: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_962: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_963: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_964: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_965: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_966: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_967: ;;// std/std.porth:103:3: OP_END_WHILE 70
    jmp addr_897
addr_968: ;;// std/std.porth:104:3: OP_INTRINSIC drop
    pop rax
addr_969: ;;// std/std.porth:105:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_970: ;;// std/std.porth:107:6: OP_PREP_PROC 8
    sub rsp, 8
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_971: ;;// std/std.porth:113:3: OP_INTRINSIC rot
    pop rax
    pop rbx
    pop rcx
    push rbx
    push rax
    push rcx
addr_972: ;;// std/std.porth:113:7: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_973: ;;// std/std.porth:113:17: OP_INLINED 33
addr_974: ;;// std/core.porth:29:31: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_975: ;;// std/std.porth:114:3: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_976: ;;// std/std.porth:114:8: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_977: ;;// std/std.porth:114:13: OP_INLINED 716
addr_978: ;;// std/std.porth:59:37: OP_INLINED 694
addr_979: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_980: ;;// std/std.porth:57:55: OP_INLINED 36
addr_981: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_982: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_983: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_984: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_985: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_986: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_987: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_988: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_989: ;;// std/std.porth:114:23: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_990: ;;// std/std.porth:114:28: OP_INLINED 741
addr_991: ;;// std/std.porth:61:34: OP_INLINED 694
addr_992: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_993: ;;// std/std.porth:57:55: OP_INLINED 36
addr_994: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_995: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_996: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_997: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_998: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_999: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_1000: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_1001: ;;// std/std.porth:115:3: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_1002: ;;// std/std.porth:115:8: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_1003: ;;// std/std.porth:115:10: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1004: ;;// std/std.porth:115:15: OP_INLINED 729
addr_1005: ;;// std/std.porth:60:35: OP_INLINED 684
addr_1006: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_1007: ;;// std/std.porth:56:57: OP_INLINED 36
addr_1008: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1009: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_1010: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1011: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_1012: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1013: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_1014: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_1015: ;;// std/std.porth:116:3: OP_WHILE 101
addr_1016: ;;// std/std.porth:117:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_1017: ;;// std/std.porth:117:9: OP_INLINED 704
addr_1018: ;;// std/std.porth:58:38: OP_INLINED 684
addr_1019: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_1020: ;;// std/std.porth:56:57: OP_INLINED 36
addr_1021: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1022: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_1023: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1024: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_1025: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1026: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_1027: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1028: ;;// std/std.porth:117:20: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_1029: ;;// std/std.porth:117:22: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_1030: ;;// std/std.porth:117:24: OP_IF 28
    pop rax
    test rax, rax
    jz addr_1058
addr_1031: ;;// std/std.porth:118:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_1032: ;;// std/std.porth:118:12: OP_INLINED 716
addr_1033: ;;// std/std.porth:59:37: OP_INLINED 694
addr_1034: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_1035: ;;// std/std.porth:57:55: OP_INLINED 36
addr_1036: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1037: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_1038: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1039: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_1040: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1041: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_1042: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1043: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_1044: ;;// std/std.porth:118:22: OP_INTRINSIC @8
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_1045: ;;// std/std.porth:118:25: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_1046: ;;// std/std.porth:118:35: OP_INLINED 19
addr_1047: ;;// std/core.porth:24:34: OP_INLINED 16
addr_1048: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1049: ;;// std/core.porth:24:39: OP_INTRINSIC cast(addr)
addr_1050: ;;// std/std.porth:118:41: OP_CALL_LIKE 101
    pop rbx
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call rbx
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_1051: ;;// std/std.porth:118:58: OP_INLINED 131
addr_1052: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_1053: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_1054: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1055: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_1056: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_1057: ;;// std/std.porth:119:5: OP_ELSE 2
    jmp addr_1059
addr_1058: ;;// std/std.porth:119:10: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_1059: ;;// std/std.porth:119:16: OP_END_IF 0
addr_1060: ;;// std/std.porth:120:3: OP_DO 56
    pop rax
    test rax, rax
    jz addr_1116
addr_1061: ;;// std/std.porth:121:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_1062: ;;// std/std.porth:121:9: OP_INLINED 816
addr_1063: ;;// std/std.porth:80:4: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_1064: ;;// std/std.porth:80:8: OP_INLINED 684
addr_1065: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_1066: ;;// std/std.porth:56:57: OP_INLINED 36
addr_1067: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1068: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_1069: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1070: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_1071: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1072: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_1073: ;;// std/std.porth:80:18: OP_INLINED 169
addr_1074: ;;// std/core.porth:108:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_1075: ;;// std/core.porth:108:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1076: ;;// std/core.porth:108:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_1077: ;;// std/core.porth:108:36: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_1078: ;;// std/core.porth:108:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1079: ;;// std/core.porth:108:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_1080: ;;// std/std.porth:81:8: OP_INLINED 694
addr_1081: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_1082: ;;// std/std.porth:57:55: OP_INLINED 36
addr_1083: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1084: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_1085: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1086: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_1087: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1088: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_1089: ;;// std/std.porth:81:17: OP_INLINED 161
addr_1090: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_1091: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1092: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_1093: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1094: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1095: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_1096: ;;// std/std.porth:122:5: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1097: ;;// std/std.porth:122:10: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_1098: ;;// std/std.porth:122:14: OP_INLINED 684
addr_1099: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_1100: ;;// std/std.porth:56:57: OP_INLINED 36
addr_1101: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1102: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_1103: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1104: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_1105: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1106: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_1107: ;;// std/std.porth:122:24: OP_INLINED 161
addr_1108: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_1109: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1110: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_1111: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1112: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1113: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_1114: ;;// std/std.porth:122:30: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1115: ;;// std/std.porth:123:3: OP_END_WHILE 100
    jmp addr_1015
addr_1116: ;;// std/std.porth:124:3: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_1117: ;;// std/std.porth:124:7: OP_INLINED 704
addr_1118: ;;// std/std.porth:58:38: OP_INLINED 684
addr_1119: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_1120: ;;// std/std.porth:56:57: OP_INLINED 36
addr_1121: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1122: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_1123: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1124: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_1125: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1126: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_1127: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1128: ;;// std/std.porth:124:18: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_1129: ;;// std/std.porth:124:20: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_1130: ;;// std/std.porth:124:22: OP_IF 36
    pop rax
    test rax, rax
    jz addr_1166
addr_1131: ;;// std/std.porth:125:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_1132: ;;// std/std.porth:125:9: OP_INLINED 816
addr_1133: ;;// std/std.porth:80:4: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_1134: ;;// std/std.porth:80:8: OP_INLINED 684
addr_1135: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_1136: ;;// std/std.porth:56:57: OP_INLINED 36
addr_1137: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1138: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_1139: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1140: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_1141: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1142: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_1143: ;;// std/std.porth:80:18: OP_INLINED 169
addr_1144: ;;// std/core.porth:108:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_1145: ;;// std/core.porth:108:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1146: ;;// std/core.porth:108:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_1147: ;;// std/core.porth:108:36: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_1148: ;;// std/core.porth:108:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1149: ;;// std/core.porth:108:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_1150: ;;// std/std.porth:81:8: OP_INLINED 694
addr_1151: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_1152: ;;// std/std.porth:57:55: OP_INLINED 36
addr_1153: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1154: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_1155: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1156: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_1157: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1158: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_1159: ;;// std/std.porth:81:17: OP_INLINED 161
addr_1160: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_1161: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1162: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_1163: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1164: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1165: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_1166: ;;// std/std.porth:126:3: OP_END_IF 0
addr_1167: ;;// std/std.porth:127:3: OP_INTRINSIC drop
    pop rax
addr_1168: ;;// std/std.porth:127:8: OP_INTRINSIC drop
    pop rax
addr_1169: ;;// std/std.porth:128:1: OP_RET 8
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 8
    ret
addr_1170: ;;// std/std.porth:130:6: OP_PREP_PROC 8
    sub rsp, 8
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_1171: ;;// std/std.porth:136:3: OP_INTRINSIC rot
    pop rax
    pop rbx
    pop rcx
    push rbx
    push rax
    push rcx
addr_1172: ;;// std/std.porth:136:7: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_1173: ;;// std/std.porth:136:13: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_1174: ;;// std/std.porth:137:3: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_1175: ;;// std/std.porth:137:8: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_1176: ;;// std/std.porth:137:13: OP_INLINED 716
addr_1177: ;;// std/std.porth:59:37: OP_INLINED 694
addr_1178: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_1179: ;;// std/std.porth:57:55: OP_INLINED 36
addr_1180: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1181: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_1182: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1183: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_1184: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1185: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_1186: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1187: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_1188: ;;// std/std.porth:137:23: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1189: ;;// std/std.porth:137:28: OP_INLINED 741
addr_1190: ;;// std/std.porth:61:34: OP_INLINED 694
addr_1191: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_1192: ;;// std/std.porth:57:55: OP_INLINED 36
addr_1193: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1194: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_1195: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1196: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_1197: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1198: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_1199: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_1200: ;;// std/std.porth:138:3: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_1201: ;;// std/std.porth:138:8: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_1202: ;;// std/std.porth:138:10: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1203: ;;// std/std.porth:138:15: OP_INLINED 729
addr_1204: ;;// std/std.porth:60:35: OP_INLINED 684
addr_1205: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_1206: ;;// std/std.porth:56:57: OP_INLINED 36
addr_1207: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1208: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_1209: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1210: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_1211: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1212: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_1213: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_1214: ;;// std/std.porth:139:3: OP_WHILE 92
addr_1215: ;;// std/std.porth:140:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_1216: ;;// std/std.porth:140:9: OP_INLINED 704
addr_1217: ;;// std/std.porth:58:38: OP_INLINED 684
addr_1218: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_1219: ;;// std/std.porth:56:57: OP_INLINED 36
addr_1220: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1221: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_1222: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1223: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_1224: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1225: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_1226: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1227: ;;// std/std.porth:140:20: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_1228: ;;// std/std.porth:140:22: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_1229: ;;// std/std.porth:140:24: OP_IF 19
    pop rax
    test rax, rax
    jz addr_1248
addr_1230: ;;// std/std.porth:141:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_1231: ;;// std/std.porth:141:12: OP_INLINED 716
addr_1232: ;;// std/std.porth:59:37: OP_INLINED 694
addr_1233: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_1234: ;;// std/std.porth:57:55: OP_INLINED 36
addr_1235: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1236: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_1237: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1238: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_1239: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1240: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_1241: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1242: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_1243: ;;// std/std.porth:141:22: OP_INTRINSIC @8
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_1244: ;;// std/std.porth:141:25: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_1245: ;;// std/std.porth:141:31: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1246: ;;// std/std.porth:141:35: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_1247: ;;// std/std.porth:142:5: OP_ELSE 2
    jmp addr_1249
addr_1248: ;;// std/std.porth:142:10: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_1249: ;;// std/std.porth:142:16: OP_END_IF 0
addr_1250: ;;// std/std.porth:143:3: OP_DO 56
    pop rax
    test rax, rax
    jz addr_1306
addr_1251: ;;// std/std.porth:144:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_1252: ;;// std/std.porth:144:9: OP_INLINED 816
addr_1253: ;;// std/std.porth:80:4: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_1254: ;;// std/std.porth:80:8: OP_INLINED 684
addr_1255: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_1256: ;;// std/std.porth:56:57: OP_INLINED 36
addr_1257: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1258: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_1259: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1260: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_1261: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1262: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_1263: ;;// std/std.porth:80:18: OP_INLINED 169
addr_1264: ;;// std/core.porth:108:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_1265: ;;// std/core.porth:108:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1266: ;;// std/core.porth:108:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_1267: ;;// std/core.porth:108:36: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_1268: ;;// std/core.porth:108:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1269: ;;// std/core.porth:108:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_1270: ;;// std/std.porth:81:8: OP_INLINED 694
addr_1271: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_1272: ;;// std/std.porth:57:55: OP_INLINED 36
addr_1273: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1274: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_1275: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1276: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_1277: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1278: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_1279: ;;// std/std.porth:81:17: OP_INLINED 161
addr_1280: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_1281: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1282: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_1283: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1284: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1285: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_1286: ;;// std/std.porth:145:5: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1287: ;;// std/std.porth:145:10: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_1288: ;;// std/std.porth:145:14: OP_INLINED 684
addr_1289: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_1290: ;;// std/std.porth:56:57: OP_INLINED 36
addr_1291: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1292: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_1293: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1294: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_1295: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1296: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_1297: ;;// std/std.porth:145:24: OP_INLINED 161
addr_1298: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_1299: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1300: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_1301: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1302: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1303: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_1304: ;;// std/std.porth:145:30: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1305: ;;// std/std.porth:146:3: OP_END_WHILE 91
    jmp addr_1214
addr_1306: ;;// std/std.porth:147:3: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_1307: ;;// std/std.porth:147:7: OP_INLINED 704
addr_1308: ;;// std/std.porth:58:38: OP_INLINED 684
addr_1309: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_1310: ;;// std/std.porth:56:57: OP_INLINED 36
addr_1311: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1312: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_1313: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1314: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_1315: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1316: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_1317: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1318: ;;// std/std.porth:147:18: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_1319: ;;// std/std.porth:147:20: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_1320: ;;// std/std.porth:147:22: OP_IF 36
    pop rax
    test rax, rax
    jz addr_1356
addr_1321: ;;// std/std.porth:148:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_1322: ;;// std/std.porth:148:9: OP_INLINED 816
addr_1323: ;;// std/std.porth:80:4: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_1324: ;;// std/std.porth:80:8: OP_INLINED 684
addr_1325: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_1326: ;;// std/std.porth:56:57: OP_INLINED 36
addr_1327: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1328: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_1329: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1330: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_1331: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1332: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_1333: ;;// std/std.porth:80:18: OP_INLINED 169
addr_1334: ;;// std/core.porth:108:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_1335: ;;// std/core.porth:108:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1336: ;;// std/core.porth:108:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_1337: ;;// std/core.porth:108:36: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_1338: ;;// std/core.porth:108:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1339: ;;// std/core.porth:108:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_1340: ;;// std/std.porth:81:8: OP_INLINED 694
addr_1341: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_1342: ;;// std/std.porth:57:55: OP_INLINED 36
addr_1343: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1344: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_1345: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1346: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_1347: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1348: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_1349: ;;// std/std.porth:81:17: OP_INLINED 161
addr_1350: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_1351: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1352: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_1353: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1354: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1355: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_1356: ;;// std/std.porth:149:3: OP_END_IF 0
addr_1357: ;;// std/std.porth:150:3: OP_INTRINSIC drop
    pop rax
addr_1358: ;;// std/std.porth:150:8: OP_INTRINSIC drop
    pop rax
addr_1359: ;;// std/std.porth:151:1: OP_RET 8
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 8
    ret
addr_1360: ;;// std/std.porth:153:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_1361: ;;// std/std.porth:160:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_1362: ;;// std/std.porth:161:5: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_1363: ;;// std/std.porth:161:7: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_1364: ;;// std/std.porth:162:5: OP_WHILE 30
addr_1365: ;;// std/std.porth:163:7: OP_BIND_PEEK 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    mov rbx, [rsp+0]
    mov [rax+8], rbx
    mov rbx, [rsp+8]
    mov [rax+0], rbx
addr_1366: ;;// std/std.porth:164:9: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1367: ;;// std/std.porth:164:11: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_1368: ;;// std/std.porth:164:13: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_1369: ;;// std/std.porth:164:15: OP_IF 6
    pop rax
    test rax, rax
    jz addr_1375
addr_1370: ;;// std/std.porth:165:11: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_1371: ;;// std/std.porth:165:14: OP_INTRINSIC @8
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_1372: ;;// std/std.porth:165:17: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_1373: ;;// std/std.porth:165:23: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_1374: ;;// std/std.porth:166:9: OP_ELSE 2
    jmp addr_1376
addr_1375: ;;// std/std.porth:166:14: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_1376: ;;// std/std.porth:166:20: OP_END_IF 0
addr_1377: ;;// std/std.porth:167:7: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_1378: ;;// std/std.porth:168:5: OP_DO 16
    pop rax
    test rax, rax
    jz addr_1394
addr_1379: ;;// std/std.porth:169:7: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_1380: ;;// std/std.porth:170:9: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1381: ;;// std/std.porth:170:12: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_1382: ;;// std/std.porth:170:14: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1383: ;;// std/std.porth:171:9: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_1384: ;;// std/std.porth:171:12: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_1385: ;;// std/std.porth:171:14: OP_INLINED 36
addr_1386: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1387: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_1388: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1389: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_1390: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1391: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_1392: ;;// std/std.porth:172:7: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_1393: ;;// std/std.porth:173:5: OP_END_WHILE 29
    jmp addr_1364
addr_1394: ;;// std/std.porth:175:5: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_1395: ;;// std/std.porth:176:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1396: ;;// std/std.porth:176:9: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_1397: ;;// std/std.porth:176:11: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_1398: ;;// std/std.porth:176:13: OP_IF 16
    pop rax
    test rax, rax
    jz addr_1414
addr_1399: ;;// std/std.porth:177:9: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_1400: ;;// std/std.porth:177:11: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1401: ;;// std/std.porth:177:13: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_1402: ;;// std/std.porth:177:15: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_1403: ;;// std/std.porth:177:17: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_1404: ;;// std/std.porth:178:9: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_1405: ;;// std/std.porth:178:15: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_1406: ;;// std/std.porth:178:17: OP_INLINED 36
addr_1407: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1408: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_1409: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1410: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_1411: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1412: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_1413: ;;// std/std.porth:179:7: OP_ELSE 5
    jmp addr_1418
addr_1414: ;;// std/std.porth:180:9: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_1415: ;;// std/std.porth:180:11: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1416: ;;// std/std.porth:180:13: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_1417: ;;// std/std.porth:181:9: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_1418: ;;// std/std.porth:182:7: OP_END_IF 0
addr_1419: ;;// std/std.porth:183:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1420: ;;// std/std.porth:183:9: OP_PUSH_BIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov rbx, [rax]
    push rbx
addr_1421: ;;// std/std.porth:184:5: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_1422: ;;// std/std.porth:185:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_1423: ;;// std/std.porth:186:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_1424: ;;// std/std.porth:188:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_1425: ;;// std/std.porth:194:3: OP_BIND_LET 4
    mov rax, [ret_stack_rsp]
    sub rax, 32
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+24], rbx
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_1426: ;;// std/std.porth:195:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1427: ;;// std/std.porth:195:8: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_1428: ;;// std/std.porth:195:10: OP_INTRINSIC <=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovle rcx, rdx
    push rcx
addr_1429: ;;// std/std.porth:195:13: OP_IF 50
    pop rax
    test rax, rax
    jz addr_1479
addr_1430: ;;// std/std.porth:196:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1431: ;;// std/std.porth:196:10: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_1432: ;;// std/std.porth:196:13: OP_PUSH_BIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov rbx, [rax]
    push rbx
addr_1433: ;;// std/std.porth:197:7: OP_WHILE 40
addr_1434: ;;// std/std.porth:198:9: OP_BIND_PEEK 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    mov rbx, [rsp+0]
    mov [rax+16], rbx
    mov rbx, [rsp+8]
    mov [rax+8], rbx
    mov rbx, [rsp+16]
    mov [rax+0], rbx
addr_1435: ;;// std/std.porth:199:11: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1436: ;;// std/std.porth:199:14: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_1437: ;;// std/std.porth:199:16: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_1438: ;;// std/std.porth:199:18: OP_IF 7
    pop rax
    test rax, rax
    jz addr_1445
addr_1439: ;;// std/std.porth:199:21: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_1440: ;;// std/std.porth:199:24: OP_INTRINSIC @8
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_1441: ;;// std/std.porth:199:27: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_1442: ;;// std/std.porth:199:29: OP_INTRINSIC @8
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_1443: ;;// std/std.porth:199:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_1444: ;;// std/std.porth:199:34: OP_ELSE 2
    jmp addr_1446
addr_1445: ;;// std/std.porth:199:39: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_1446: ;;// std/std.porth:199:45: OP_END_IF 0
addr_1447: ;;// std/std.porth:200:9: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_1448: ;;// std/std.porth:201:7: OP_DO 25
    pop rax
    test rax, rax
    jz addr_1473
addr_1449: ;;// std/std.porth:202:9: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_1450: ;;// std/std.porth:203:11: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1451: ;;// std/std.porth:203:14: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_1452: ;;// std/std.porth:203:16: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_1453: ;;// std/std.porth:204:11: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_1454: ;;// std/std.porth:204:14: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_1455: ;;// std/std.porth:204:16: OP_INLINED 36
addr_1456: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1457: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_1458: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1459: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_1460: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1461: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_1462: ;;// std/std.porth:205:11: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_1463: ;;// std/std.porth:205:14: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_1464: ;;// std/std.porth:205:16: OP_INLINED 36
addr_1465: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1466: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_1467: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1468: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_1469: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1470: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_1471: ;;// std/std.porth:206:9: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_1472: ;;// std/std.porth:207:7: OP_END_WHILE 39
    jmp addr_1433
addr_1473: ;;// std/std.porth:208:7: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_1474: ;;// std/std.porth:208:21: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1475: ;;// std/std.porth:208:24: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_1476: ;;// std/std.porth:208:26: OP_INTRINSIC <=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovle rcx, rdx
    push rcx
addr_1477: ;;// std/std.porth:208:29: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_1478: ;;// std/std.porth:209:5: OP_ELSE 2
    jmp addr_1480
addr_1479: ;;// std/std.porth:209:10: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_1480: ;;// std/std.porth:209:16: OP_END_IF 0
addr_1481: ;;// std/std.porth:210:3: OP_UNBIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov [ret_stack_rsp], rax
addr_1482: ;;// std/std.porth:211:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_1483: ;;// std/std.porth:213:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_1484: ;;// std/std.porth:214:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_1485: ;;// std/std.porth:214:23: OP_INLINED 36
addr_1486: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1487: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_1488: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1489: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_1490: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1491: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_1492: ;;// std/std.porth:215:3: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1493: ;;// std/std.porth:216:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_1494: ;;// std/std.porth:216:5: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_1495: ;;// std/std.porth:217:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_1496: ;;// std/std.porth:219:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_1497: ;;// std/std.porth:225:3: OP_BIND_LET 4
    mov rax, [ret_stack_rsp]
    sub rax, 32
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+24], rbx
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_1498: ;;// std/std.porth:226:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1499: ;;// std/std.porth:226:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_1500: ;;// std/std.porth:226:9: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_1501: ;;// std/std.porth:226:11: OP_IF 50
    pop rax
    test rax, rax
    jz addr_1551
addr_1502: ;;// std/std.porth:227:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1503: ;;// std/std.porth:227:9: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_1504: ;;// std/std.porth:227:12: OP_PUSH_BIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov rbx, [rax]
    push rbx
addr_1505: ;;// std/std.porth:228:7: OP_WHILE 40
addr_1506: ;;// std/std.porth:229:9: OP_BIND_PEEK 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    mov rbx, [rsp+0]
    mov [rax+16], rbx
    mov rbx, [rsp+8]
    mov [rax+8], rbx
    mov rbx, [rsp+16]
    mov [rax+0], rbx
addr_1507: ;;// std/std.porth:230:11: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1508: ;;// std/std.porth:230:13: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_1509: ;;// std/std.porth:230:15: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_1510: ;;// std/std.porth:230:17: OP_IF 7
    pop rax
    test rax, rax
    jz addr_1517
addr_1511: ;;// std/std.porth:231:13: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_1512: ;;// std/std.porth:231:16: OP_INTRINSIC @8
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_1513: ;;// std/std.porth:231:19: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_1514: ;;// std/std.porth:231:22: OP_INTRINSIC @8
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_1515: ;;// std/std.porth:231:25: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_1516: ;;// std/std.porth:232:11: OP_ELSE 2
    jmp addr_1518
addr_1517: ;;// std/std.porth:232:16: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_1518: ;;// std/std.porth:232:22: OP_END_IF 0
addr_1519: ;;// std/std.porth:233:9: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_1520: ;;// std/std.porth:234:7: OP_DO 25
    pop rax
    test rax, rax
    jz addr_1545
addr_1521: ;;// std/std.porth:235:9: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_1522: ;;// std/std.porth:236:11: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1523: ;;// std/std.porth:236:14: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_1524: ;;// std/std.porth:236:16: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_1525: ;;// std/std.porth:237:11: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_1526: ;;// std/std.porth:237:14: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_1527: ;;// std/std.porth:237:16: OP_INLINED 36
addr_1528: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1529: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_1530: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1531: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_1532: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1533: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_1534: ;;// std/std.porth:238:11: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_1535: ;;// std/std.porth:238:14: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_1536: ;;// std/std.porth:238:16: OP_INLINED 36
addr_1537: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1538: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_1539: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1540: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_1541: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1542: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_1543: ;;// std/std.porth:239:9: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_1544: ;;// std/std.porth:240:7: OP_END_WHILE 39
    jmp addr_1505
addr_1545: ;;// std/std.porth:242:7: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_1546: ;;// std/std.porth:242:20: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1547: ;;// std/std.porth:242:22: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_1548: ;;// std/std.porth:242:24: OP_INTRINSIC <=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovle rcx, rdx
    push rcx
addr_1549: ;;// std/std.porth:242:27: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_1550: ;;// std/std.porth:243:5: OP_ELSE 2
    jmp addr_1552
addr_1551: ;;// std/std.porth:243:10: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_1552: ;;// std/std.porth:243:16: OP_END_IF 0
addr_1553: ;;// std/std.porth:244:3: OP_UNBIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov [ret_stack_rsp], rax
addr_1554: ;;// std/std.porth:245:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_1555: ;;// std/std.porth:247:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_1556: ;;// std/std.porth:248:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_1557: ;;// std/std.porth:249:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1558: ;;// std/std.porth:249:7: OP_PUSH_INT 48
    mov rax, 48
    push rax
addr_1559: ;;// std/std.porth:249:11: OP_INTRINSIC >=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovge rcx, rdx
    push rcx
addr_1560: ;;// std/std.porth:250:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1561: ;;// std/std.porth:250:7: OP_PUSH_INT 57
    mov rax, 57
    push rax
addr_1562: ;;// std/std.porth:250:11: OP_INTRINSIC <=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovle rcx, rdx
    push rcx
addr_1563: ;;// std/std.porth:251:5: OP_INLINED 138
addr_1564: ;;// std/core.porth:93:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1565: ;;// std/core.porth:93:8: OP_INTRINSIC cast(int)
addr_1566: ;;// std/core.porth:94:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1567: ;;// std/core.porth:94:8: OP_INTRINSIC cast(int)
addr_1568: ;;// std/core.porth:95:3: OP_INTRINSIC and
    pop rax
    pop rbx
    and rbx, rax
    push rbx
addr_1569: ;;// std/core.porth:96:3: OP_INTRINSIC cast(bool)
addr_1570: ;;// std/std.porth:252:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_1571: ;;// std/std.porth:253:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_1572: ;;// std/std.porth:254:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_1573: ;;// std/std.porth:254:36: OP_INLINED 1555
addr_1574: ;;// std/std.porth:248:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_1575: ;;// std/std.porth:249:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1576: ;;// std/std.porth:249:7: OP_PUSH_INT 48
    mov rax, 48
    push rax
addr_1577: ;;// std/std.porth:249:11: OP_INTRINSIC >=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovge rcx, rdx
    push rcx
addr_1578: ;;// std/std.porth:250:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1579: ;;// std/std.porth:250:7: OP_PUSH_INT 57
    mov rax, 57
    push rax
addr_1580: ;;// std/std.porth:250:11: OP_INTRINSIC <=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovle rcx, rdx
    push rcx
addr_1581: ;;// std/std.porth:251:5: OP_INLINED 138
addr_1582: ;;// std/core.porth:93:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1583: ;;// std/core.porth:93:8: OP_INTRINSIC cast(int)
addr_1584: ;;// std/core.porth:94:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1585: ;;// std/core.porth:94:8: OP_INTRINSIC cast(int)
addr_1586: ;;// std/core.porth:95:3: OP_INTRINSIC and
    pop rax
    pop rbx
    and rbx, rax
    push rbx
addr_1587: ;;// std/core.porth:96:3: OP_INTRINSIC cast(bool)
addr_1588: ;;// std/std.porth:252:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_1589: ;;// std/std.porth:254:43: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_1590: ;;// std/std.porth:256:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_1591: ;;// std/std.porth:257:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_1592: ;;// std/std.porth:258:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1593: ;;// std/std.porth:258:7: OP_PUSH_INT 97
    mov rax, 97
    push rax
addr_1594: ;;// std/std.porth:258:11: OP_INTRINSIC >=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovge rcx, rdx
    push rcx
addr_1595: ;;// std/std.porth:259:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1596: ;;// std/std.porth:259:7: OP_PUSH_INT 122
    mov rax, 122
    push rax
addr_1597: ;;// std/std.porth:259:11: OP_INTRINSIC <=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovle rcx, rdx
    push rcx
addr_1598: ;;// std/std.porth:260:5: OP_INLINED 138
addr_1599: ;;// std/core.porth:93:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1600: ;;// std/core.porth:93:8: OP_INTRINSIC cast(int)
addr_1601: ;;// std/core.porth:94:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1602: ;;// std/core.porth:94:8: OP_INTRINSIC cast(int)
addr_1603: ;;// std/core.porth:95:3: OP_INTRINSIC and
    pop rax
    pop rbx
    and rbx, rax
    push rbx
addr_1604: ;;// std/core.porth:96:3: OP_INTRINSIC cast(bool)
addr_1605: ;;// std/std.porth:262:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1606: ;;// std/std.porth:262:7: OP_PUSH_INT 65
    mov rax, 65
    push rax
addr_1607: ;;// std/std.porth:262:11: OP_INTRINSIC >=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovge rcx, rdx
    push rcx
addr_1608: ;;// std/std.porth:263:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1609: ;;// std/std.porth:263:7: OP_PUSH_INT 90
    mov rax, 90
    push rax
addr_1610: ;;// std/std.porth:263:11: OP_INTRINSIC <=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovle rcx, rdx
    push rcx
addr_1611: ;;// std/std.porth:264:5: OP_INLINED 138
addr_1612: ;;// std/core.porth:93:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1613: ;;// std/core.porth:93:8: OP_INTRINSIC cast(int)
addr_1614: ;;// std/core.porth:94:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1615: ;;// std/core.porth:94:8: OP_INTRINSIC cast(int)
addr_1616: ;;// std/core.porth:95:3: OP_INTRINSIC and
    pop rax
    pop rbx
    and rbx, rax
    push rbx
addr_1617: ;;// std/core.porth:96:3: OP_INTRINSIC cast(bool)
addr_1618: ;;// std/std.porth:266:5: OP_INLINED 146
addr_1619: ;;// std/core.porth:100:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1620: ;;// std/core.porth:100:8: OP_INTRINSIC cast(int)
addr_1621: ;;// std/core.porth:101:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1622: ;;// std/core.porth:101:8: OP_INTRINSIC cast(int)
addr_1623: ;;// std/core.porth:102:3: OP_INTRINSIC or
    pop rax
    pop rbx
    or rbx, rax
    push rbx
addr_1624: ;;// std/core.porth:103:3: OP_INTRINSIC cast(bool)
addr_1625: ;;// std/std.porth:267:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_1626: ;;// std/std.porth:268:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_1627: ;;// std/std.porth:269:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_1628: ;;// std/std.porth:269:36: OP_INLINED 1590
addr_1629: ;;// std/std.porth:257:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_1630: ;;// std/std.porth:258:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1631: ;;// std/std.porth:258:7: OP_PUSH_INT 97
    mov rax, 97
    push rax
addr_1632: ;;// std/std.porth:258:11: OP_INTRINSIC >=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovge rcx, rdx
    push rcx
addr_1633: ;;// std/std.porth:259:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1634: ;;// std/std.porth:259:7: OP_PUSH_INT 122
    mov rax, 122
    push rax
addr_1635: ;;// std/std.porth:259:11: OP_INTRINSIC <=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovle rcx, rdx
    push rcx
addr_1636: ;;// std/std.porth:260:5: OP_INLINED 138
addr_1637: ;;// std/core.porth:93:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1638: ;;// std/core.porth:93:8: OP_INTRINSIC cast(int)
addr_1639: ;;// std/core.porth:94:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1640: ;;// std/core.porth:94:8: OP_INTRINSIC cast(int)
addr_1641: ;;// std/core.porth:95:3: OP_INTRINSIC and
    pop rax
    pop rbx
    and rbx, rax
    push rbx
addr_1642: ;;// std/core.porth:96:3: OP_INTRINSIC cast(bool)
addr_1643: ;;// std/std.porth:262:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1644: ;;// std/std.porth:262:7: OP_PUSH_INT 65
    mov rax, 65
    push rax
addr_1645: ;;// std/std.porth:262:11: OP_INTRINSIC >=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovge rcx, rdx
    push rcx
addr_1646: ;;// std/std.porth:263:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1647: ;;// std/std.porth:263:7: OP_PUSH_INT 90
    mov rax, 90
    push rax
addr_1648: ;;// std/std.porth:263:11: OP_INTRINSIC <=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovle rcx, rdx
    push rcx
addr_1649: ;;// std/std.porth:264:5: OP_INLINED 138
addr_1650: ;;// std/core.porth:93:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1651: ;;// std/core.porth:93:8: OP_INTRINSIC cast(int)
addr_1652: ;;// std/core.porth:94:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1653: ;;// std/core.porth:94:8: OP_INTRINSIC cast(int)
addr_1654: ;;// std/core.porth:95:3: OP_INTRINSIC and
    pop rax
    pop rbx
    and rbx, rax
    push rbx
addr_1655: ;;// std/core.porth:96:3: OP_INTRINSIC cast(bool)
addr_1656: ;;// std/std.porth:266:5: OP_INLINED 146
addr_1657: ;;// std/core.porth:100:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1658: ;;// std/core.porth:100:8: OP_INTRINSIC cast(int)
addr_1659: ;;// std/core.porth:101:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1660: ;;// std/core.porth:101:8: OP_INTRINSIC cast(int)
addr_1661: ;;// std/core.porth:102:3: OP_INTRINSIC or
    pop rax
    pop rbx
    or rbx, rax
    push rbx
addr_1662: ;;// std/core.porth:103:3: OP_INTRINSIC cast(bool)
addr_1663: ;;// std/std.porth:267:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_1664: ;;// std/std.porth:269:43: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_1665: ;;// std/std.porth:271:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_1666: ;;// std/std.porth:272:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_1667: ;;// std/std.porth:273:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1668: ;;// std/std.porth:273:7: OP_INLINED 1555
addr_1669: ;;// std/std.porth:248:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_1670: ;;// std/std.porth:249:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1671: ;;// std/std.porth:249:7: OP_PUSH_INT 48
    mov rax, 48
    push rax
addr_1672: ;;// std/std.porth:249:11: OP_INTRINSIC >=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovge rcx, rdx
    push rcx
addr_1673: ;;// std/std.porth:250:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1674: ;;// std/std.porth:250:7: OP_PUSH_INT 57
    mov rax, 57
    push rax
addr_1675: ;;// std/std.porth:250:11: OP_INTRINSIC <=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovle rcx, rdx
    push rcx
addr_1676: ;;// std/std.porth:251:5: OP_INLINED 138
addr_1677: ;;// std/core.porth:93:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1678: ;;// std/core.porth:93:8: OP_INTRINSIC cast(int)
addr_1679: ;;// std/core.porth:94:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1680: ;;// std/core.porth:94:8: OP_INTRINSIC cast(int)
addr_1681: ;;// std/core.porth:95:3: OP_INTRINSIC and
    pop rax
    pop rbx
    and rbx, rax
    push rbx
addr_1682: ;;// std/core.porth:96:3: OP_INTRINSIC cast(bool)
addr_1683: ;;// std/std.porth:252:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_1684: ;;// std/std.porth:274:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1685: ;;// std/std.porth:274:7: OP_INLINED 1590
addr_1686: ;;// std/std.porth:257:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_1687: ;;// std/std.porth:258:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1688: ;;// std/std.porth:258:7: OP_PUSH_INT 97
    mov rax, 97
    push rax
addr_1689: ;;// std/std.porth:258:11: OP_INTRINSIC >=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovge rcx, rdx
    push rcx
addr_1690: ;;// std/std.porth:259:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1691: ;;// std/std.porth:259:7: OP_PUSH_INT 122
    mov rax, 122
    push rax
addr_1692: ;;// std/std.porth:259:11: OP_INTRINSIC <=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovle rcx, rdx
    push rcx
addr_1693: ;;// std/std.porth:260:5: OP_INLINED 138
addr_1694: ;;// std/core.porth:93:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1695: ;;// std/core.porth:93:8: OP_INTRINSIC cast(int)
addr_1696: ;;// std/core.porth:94:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1697: ;;// std/core.porth:94:8: OP_INTRINSIC cast(int)
addr_1698: ;;// std/core.porth:95:3: OP_INTRINSIC and
    pop rax
    pop rbx
    and rbx, rax
    push rbx
addr_1699: ;;// std/core.porth:96:3: OP_INTRINSIC cast(bool)
addr_1700: ;;// std/std.porth:262:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1701: ;;// std/std.porth:262:7: OP_PUSH_INT 65
    mov rax, 65
    push rax
addr_1702: ;;// std/std.porth:262:11: OP_INTRINSIC >=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovge rcx, rdx
    push rcx
addr_1703: ;;// std/std.porth:263:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1704: ;;// std/std.porth:263:7: OP_PUSH_INT 90
    mov rax, 90
    push rax
addr_1705: ;;// std/std.porth:263:11: OP_INTRINSIC <=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovle rcx, rdx
    push rcx
addr_1706: ;;// std/std.porth:264:5: OP_INLINED 138
addr_1707: ;;// std/core.porth:93:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1708: ;;// std/core.porth:93:8: OP_INTRINSIC cast(int)
addr_1709: ;;// std/core.porth:94:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1710: ;;// std/core.porth:94:8: OP_INTRINSIC cast(int)
addr_1711: ;;// std/core.porth:95:3: OP_INTRINSIC and
    pop rax
    pop rbx
    and rbx, rax
    push rbx
addr_1712: ;;// std/core.porth:96:3: OP_INTRINSIC cast(bool)
addr_1713: ;;// std/std.porth:266:5: OP_INLINED 146
addr_1714: ;;// std/core.porth:100:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1715: ;;// std/core.porth:100:8: OP_INTRINSIC cast(int)
addr_1716: ;;// std/core.porth:101:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1717: ;;// std/core.porth:101:8: OP_INTRINSIC cast(int)
addr_1718: ;;// std/core.porth:102:3: OP_INTRINSIC or
    pop rax
    pop rbx
    or rbx, rax
    push rbx
addr_1719: ;;// std/core.porth:103:3: OP_INTRINSIC cast(bool)
addr_1720: ;;// std/std.porth:267:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_1721: ;;// std/std.porth:275:5: OP_INLINED 146
addr_1722: ;;// std/core.porth:100:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1723: ;;// std/core.porth:100:8: OP_INTRINSIC cast(int)
addr_1724: ;;// std/core.porth:101:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1725: ;;// std/core.porth:101:8: OP_INTRINSIC cast(int)
addr_1726: ;;// std/core.porth:102:3: OP_INTRINSIC or
    pop rax
    pop rbx
    or rbx, rax
    push rbx
addr_1727: ;;// std/core.porth:103:3: OP_INTRINSIC cast(bool)
addr_1728: ;;// std/std.porth:276:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_1729: ;;// std/std.porth:277:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_1730: ;;// std/std.porth:278:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_1731: ;;// std/std.porth:278:36: OP_INLINED 1665
addr_1732: ;;// std/std.porth:272:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_1733: ;;// std/std.porth:273:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1734: ;;// std/std.porth:273:7: OP_INLINED 1555
addr_1735: ;;// std/std.porth:248:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_1736: ;;// std/std.porth:249:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1737: ;;// std/std.porth:249:7: OP_PUSH_INT 48
    mov rax, 48
    push rax
addr_1738: ;;// std/std.porth:249:11: OP_INTRINSIC >=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovge rcx, rdx
    push rcx
addr_1739: ;;// std/std.porth:250:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1740: ;;// std/std.porth:250:7: OP_PUSH_INT 57
    mov rax, 57
    push rax
addr_1741: ;;// std/std.porth:250:11: OP_INTRINSIC <=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovle rcx, rdx
    push rcx
addr_1742: ;;// std/std.porth:251:5: OP_INLINED 138
addr_1743: ;;// std/core.porth:93:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1744: ;;// std/core.porth:93:8: OP_INTRINSIC cast(int)
addr_1745: ;;// std/core.porth:94:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1746: ;;// std/core.porth:94:8: OP_INTRINSIC cast(int)
addr_1747: ;;// std/core.porth:95:3: OP_INTRINSIC and
    pop rax
    pop rbx
    and rbx, rax
    push rbx
addr_1748: ;;// std/core.porth:96:3: OP_INTRINSIC cast(bool)
addr_1749: ;;// std/std.porth:252:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_1750: ;;// std/std.porth:274:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1751: ;;// std/std.porth:274:7: OP_INLINED 1590
addr_1752: ;;// std/std.porth:257:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_1753: ;;// std/std.porth:258:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1754: ;;// std/std.porth:258:7: OP_PUSH_INT 97
    mov rax, 97
    push rax
addr_1755: ;;// std/std.porth:258:11: OP_INTRINSIC >=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovge rcx, rdx
    push rcx
addr_1756: ;;// std/std.porth:259:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1757: ;;// std/std.porth:259:7: OP_PUSH_INT 122
    mov rax, 122
    push rax
addr_1758: ;;// std/std.porth:259:11: OP_INTRINSIC <=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovle rcx, rdx
    push rcx
addr_1759: ;;// std/std.porth:260:5: OP_INLINED 138
addr_1760: ;;// std/core.porth:93:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1761: ;;// std/core.porth:93:8: OP_INTRINSIC cast(int)
addr_1762: ;;// std/core.porth:94:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1763: ;;// std/core.porth:94:8: OP_INTRINSIC cast(int)
addr_1764: ;;// std/core.porth:95:3: OP_INTRINSIC and
    pop rax
    pop rbx
    and rbx, rax
    push rbx
addr_1765: ;;// std/core.porth:96:3: OP_INTRINSIC cast(bool)
addr_1766: ;;// std/std.porth:262:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1767: ;;// std/std.porth:262:7: OP_PUSH_INT 65
    mov rax, 65
    push rax
addr_1768: ;;// std/std.porth:262:11: OP_INTRINSIC >=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovge rcx, rdx
    push rcx
addr_1769: ;;// std/std.porth:263:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1770: ;;// std/std.porth:263:7: OP_PUSH_INT 90
    mov rax, 90
    push rax
addr_1771: ;;// std/std.porth:263:11: OP_INTRINSIC <=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovle rcx, rdx
    push rcx
addr_1772: ;;// std/std.porth:264:5: OP_INLINED 138
addr_1773: ;;// std/core.porth:93:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1774: ;;// std/core.porth:93:8: OP_INTRINSIC cast(int)
addr_1775: ;;// std/core.porth:94:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1776: ;;// std/core.porth:94:8: OP_INTRINSIC cast(int)
addr_1777: ;;// std/core.porth:95:3: OP_INTRINSIC and
    pop rax
    pop rbx
    and rbx, rax
    push rbx
addr_1778: ;;// std/core.porth:96:3: OP_INTRINSIC cast(bool)
addr_1779: ;;// std/std.porth:266:5: OP_INLINED 146
addr_1780: ;;// std/core.porth:100:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1781: ;;// std/core.porth:100:8: OP_INTRINSIC cast(int)
addr_1782: ;;// std/core.porth:101:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1783: ;;// std/core.porth:101:8: OP_INTRINSIC cast(int)
addr_1784: ;;// std/core.porth:102:3: OP_INTRINSIC or
    pop rax
    pop rbx
    or rbx, rax
    push rbx
addr_1785: ;;// std/core.porth:103:3: OP_INTRINSIC cast(bool)
addr_1786: ;;// std/std.porth:267:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_1787: ;;// std/std.porth:275:5: OP_INLINED 146
addr_1788: ;;// std/core.porth:100:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1789: ;;// std/core.porth:100:8: OP_INTRINSIC cast(int)
addr_1790: ;;// std/core.porth:101:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1791: ;;// std/core.porth:101:8: OP_INTRINSIC cast(int)
addr_1792: ;;// std/core.porth:102:3: OP_INTRINSIC or
    pop rax
    pop rbx
    or rbx, rax
    push rbx
addr_1793: ;;// std/core.porth:103:3: OP_INTRINSIC cast(bool)
addr_1794: ;;// std/std.porth:276:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_1795: ;;// std/std.porth:278:43: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_1796: ;;// std/std.porth:280:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_1797: ;;// std/std.porth:285:3: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_1798: ;;// std/std.porth:285:8: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_1799: ;;// std/std.porth:285:10: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_1800: ;;// std/std.porth:285:12: OP_IF 101
    pop rax
    test rax, rax
    jz addr_1901
addr_1801: ;;// std/std.porth:286:5: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_1802: ;;// std/std.porth:287:7: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_1803: ;;// std/std.porth:287:9: OP_INTRINSIC @8
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_1804: ;;// std/std.porth:287:12: OP_PUSH_INT 45
    mov rax, 45
    push rax
addr_1805: ;;// std/std.porth:287:16: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_1806: ;;// std/std.porth:289:7: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_1807: ;;// std/std.porth:289:11: OP_IF 14
    pop rax
    test rax, rax
    jz addr_1821
addr_1808: ;;// std/std.porth:290:9: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1809: ;;// std/std.porth:290:11: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_1810: ;;// std/std.porth:290:13: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_1811: ;;// std/std.porth:291:9: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_1812: ;;// std/std.porth:291:11: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_1813: ;;// std/std.porth:291:13: OP_INLINED 36
addr_1814: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1815: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_1816: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1817: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_1818: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1819: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_1820: ;;// std/std.porth:292:7: OP_ELSE 3
    jmp addr_1823
addr_1821: ;;// std/std.porth:292:12: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1822: ;;// std/std.porth:292:14: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_1823: ;;// std/std.porth:292:16: OP_END_IF 0
addr_1824: ;;// std/std.porth:293:5: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_1825: ;;// std/std.porth:295:5: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_1826: ;;// std/std.porth:295:10: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_1827: ;;// std/std.porth:295:12: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_1828: ;;// std/std.porth:295:14: OP_IF 67
    pop rax
    test rax, rax
    jz addr_1895
addr_1829: ;;// std/std.porth:296:7: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_1830: ;;// std/std.porth:297:7: OP_WHILE 52
addr_1831: ;;// std/std.porth:298:9: OP_BIND_PEEK 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    mov rbx, [rsp+0]
    mov [rax+16], rbx
    mov rbx, [rsp+8]
    mov [rax+8], rbx
    mov rbx, [rsp+16]
    mov [rax+0], rbx
addr_1832: ;;// std/std.porth:299:11: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1833: ;;// std/std.porth:299:13: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_1834: ;;// std/std.porth:299:15: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_1835: ;;// std/std.porth:299:17: OP_IF 20
    pop rax
    test rax, rax
    jz addr_1855
addr_1836: ;;// std/std.porth:299:20: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_1837: ;;// std/std.porth:299:22: OP_INTRINSIC @8
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_1838: ;;// std/std.porth:299:25: OP_INLINED 1555
addr_1839: ;;// std/std.porth:248:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_1840: ;;// std/std.porth:249:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1841: ;;// std/std.porth:249:7: OP_PUSH_INT 48
    mov rax, 48
    push rax
addr_1842: ;;// std/std.porth:249:11: OP_INTRINSIC >=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovge rcx, rdx
    push rcx
addr_1843: ;;// std/std.porth:250:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1844: ;;// std/std.porth:250:7: OP_PUSH_INT 57
    mov rax, 57
    push rax
addr_1845: ;;// std/std.porth:250:11: OP_INTRINSIC <=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovle rcx, rdx
    push rcx
addr_1846: ;;// std/std.porth:251:5: OP_INLINED 138
addr_1847: ;;// std/core.porth:93:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1848: ;;// std/core.porth:93:8: OP_INTRINSIC cast(int)
addr_1849: ;;// std/core.porth:94:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1850: ;;// std/core.porth:94:8: OP_INTRINSIC cast(int)
addr_1851: ;;// std/core.porth:95:3: OP_INTRINSIC and
    pop rax
    pop rbx
    and rbx, rax
    push rbx
addr_1852: ;;// std/core.porth:96:3: OP_INTRINSIC cast(bool)
addr_1853: ;;// std/std.porth:252:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_1854: ;;// std/std.porth:299:32: OP_ELSE 2
    jmp addr_1856
addr_1855: ;;// std/std.porth:299:37: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_1856: ;;// std/std.porth:299:43: OP_END_IF 0
addr_1857: ;;// std/std.porth:300:9: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_1858: ;;// std/std.porth:301:7: OP_DO 24
    pop rax
    test rax, rax
    jz addr_1882
addr_1859: ;;// std/std.porth:302:9: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_1860: ;;// std/std.porth:303:11: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1861: ;;// std/std.porth:303:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_1862: ;;// std/std.porth:303:15: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_1863: ;;// std/std.porth:304:11: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_1864: ;;// std/std.porth:304:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_1865: ;;// std/std.porth:304:15: OP_INLINED 36
addr_1866: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1867: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_1868: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1869: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_1870: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1871: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_1872: ;;// std/std.porth:306:11: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_1873: ;;// std/std.porth:306:18: OP_PUSH_INT 10
    mov rax, 10
    push rax
addr_1874: ;;// std/std.porth:306:21: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_1875: ;;// std/std.porth:307:11: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_1876: ;;// std/std.porth:307:13: OP_INTRINSIC @8
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_1877: ;;// std/std.porth:307:16: OP_PUSH_INT 48
    mov rax, 48
    push rax
addr_1878: ;;// std/std.porth:307:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_1879: ;;// std/std.porth:308:11: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1880: ;;// std/std.porth:309:9: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_1881: ;;// std/std.porth:310:7: OP_END_WHILE 51
    jmp addr_1830
addr_1882: ;;// std/std.porth:312:7: OP_BIND_LET 4
    mov rax, [ret_stack_rsp]
    sub rax, 32
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+24], rbx
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_1883: ;;// std/std.porth:313:9: OP_PUSH_BIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov rbx, [rax]
    push rbx
addr_1884: ;;// std/std.porth:314:9: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1885: ;;// std/std.porth:314:15: OP_IF 4
    pop rax
    test rax, rax
    jz addr_1889
addr_1886: ;;// std/std.porth:314:18: OP_INTRINSIC not
    pop rax
    not rax
    push rax
addr_1887: ;;// std/std.porth:314:22: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_1888: ;;// std/std.porth:314:24: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1889: ;;// std/std.porth:314:26: OP_END_IF 0
addr_1890: ;;// std/std.porth:315:9: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_1891: ;;// std/std.porth:315:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_1892: ;;// std/std.porth:315:13: OP_INTRINSIC <=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovle rcx, rdx
    push rcx
addr_1893: ;;// std/std.porth:316:7: OP_UNBIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov [ret_stack_rsp], rax
addr_1894: ;;// std/std.porth:317:5: OP_ELSE 5
    jmp addr_1899
addr_1895: ;;// std/std.porth:318:7: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_1896: ;;// std/std.porth:318:20: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_1897: ;;// std/std.porth:318:22: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_1898: ;;// std/std.porth:318:28: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_1899: ;;// std/std.porth:319:5: OP_END_IF 0
addr_1900: ;;// std/std.porth:320:3: OP_ELSE 5
    jmp addr_1905
addr_1901: ;;// std/std.porth:321:5: OP_INTRINSIC drop
    pop rax
addr_1902: ;;// std/std.porth:321:10: OP_INTRINSIC drop
    pop rax
addr_1903: ;;// std/std.porth:322:5: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_1904: ;;// std/std.porth:322:7: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_1905: ;;// std/std.porth:323:3: OP_END_IF 0
addr_1906: ;;// std/std.porth:324:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_1907: ;;// std/std.porth:328:6: OP_PREP_PROC 40
    sub rsp, 40
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_1908: ;;// std/std.porth:334:3: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_1909: ;;// std/std.porth:334:6: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_1910: ;;// std/std.porth:336:3: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_1911: ;;// std/std.porth:336:7: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_1912: ;;// std/std.porth:336:9: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_1913: ;;// std/std.porth:336:11: OP_IF 10
    pop rax
    test rax, rax
    jz addr_1923
addr_1914: ;;// std/std.porth:337:5: OP_PUSH_STR 0
    mov rax, 1
    push rax
    lea rax, [str_0]
    push rax
addr_1915: ;;// std/std.porth:337:9: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_1916: ;;// std/std.porth:337:12: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1917: ;;// std/std.porth:337:16: OP_INLINED 662
addr_1918: ;;// std/std.porth:48:34: OP_INLINED 394
addr_1919: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_1920: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_1921: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_1922: ;;// std/std.porth:338:3: OP_ELSE 60
    jmp addr_1982
addr_1923: ;;// std/std.porth:339:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_1924: ;;// std/std.porth:339:12: OP_PUSH_INT 32
    mov rax, 32
    push rax
addr_1925: ;;// std/std.porth:339:28: OP_INLINED 36
addr_1926: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1927: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_1928: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1929: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_1930: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1931: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_1932: ;;// std/std.porth:340:5: OP_WHILE 25
addr_1933: ;;// std/std.porth:340:11: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_1934: ;;// std/std.porth:340:16: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_1935: ;;// std/std.porth:340:18: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_1936: ;;// std/std.porth:340:21: OP_DO 21
    pop rax
    test rax, rax
    jz addr_1957
addr_1937: ;;// std/std.porth:341:7: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_1938: ;;// std/std.porth:341:9: OP_INLINED 44
addr_1939: ;;// std/core.porth:39:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1940: ;;// std/core.porth:39:8: OP_INTRINSIC cast(int)
addr_1941: ;;// std/core.porth:40:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1942: ;;// std/core.porth:40:8: OP_INTRINSIC cast(int)
addr_1943: ;;// std/core.porth:41:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_1944: ;;// std/core.porth:42:3: OP_INTRINSIC cast(ptr)
addr_1945: ;;// std/std.porth:341:14: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_1946: ;;// std/std.porth:341:18: OP_INTRINSIC rot
    pop rax
    pop rbx
    pop rcx
    push rbx
    push rax
    push rcx
addr_1947: ;;// std/std.porth:342:7: OP_PUSH_INT 10
    mov rax, 10
    push rax
addr_1948: ;;// std/std.porth:342:10: OP_INTRINSIC divmod
    xor rdx, rdx
    pop rbx
    pop rax
    div rbx
    push rax
    push rdx
addr_1949: ;;// std/std.porth:343:7: OP_INTRINSIC rot
    pop rax
    pop rbx
    pop rcx
    push rbx
    push rax
    push rcx
addr_1950: ;;// std/std.porth:343:11: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1951: ;;// std/std.porth:343:16: OP_PUSH_INT 48
    mov rax, 48
    push rax
addr_1952: ;;// std/std.porth:343:20: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1953: ;;// std/std.porth:343:22: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1954: ;;// std/std.porth:343:27: OP_INTRINSIC !8
    pop rax
    pop rbx
    mov [rax], bl
addr_1955: ;;// std/std.porth:343:30: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1956: ;;// std/std.porth:344:5: OP_END_WHILE 24
    jmp addr_1932
addr_1957: ;;// std/std.porth:346:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_1958: ;;// std/std.porth:347:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_1959: ;;// std/std.porth:347:12: OP_PUSH_INT 32
    mov rax, 32
    push rax
addr_1960: ;;// std/std.porth:347:28: OP_INLINED 36
addr_1961: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1962: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_1963: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1964: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_1965: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1966: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_1967: ;;// std/std.porth:347:33: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1968: ;;// std/std.porth:347:38: OP_INLINED 78
addr_1969: ;;// std/core.porth:68:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1970: ;;// std/core.porth:68:8: OP_INTRINSIC cast(int)
addr_1971: ;;// std/core.porth:69:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1972: ;;// std/core.porth:69:8: OP_INTRINSIC cast(int)
addr_1973: ;;// std/core.porth:70:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_1974: ;;// std/std.porth:347:47: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_1975: ;;// std/std.porth:347:52: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_1976: ;;// std/std.porth:347:55: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1977: ;;// std/std.porth:347:59: OP_INLINED 662
addr_1978: ;;// std/std.porth:48:34: OP_INLINED 394
addr_1979: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_1980: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_1981: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_1982: ;;// std/std.porth:348:3: OP_END_IF 0
addr_1983: ;;// std/std.porth:349:3: OP_INTRINSIC drop
    pop rax
addr_1984: ;;// std/std.porth:350:1: OP_RET 40
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 40
    ret
addr_1985: ;;// std/std.porth:352:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_1986: ;;// std/std.porth:356:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_1987: ;;// std/std.porth:357:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1988: ;;// std/std.porth:357:12: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_1989: ;;// std/std.porth:357:14: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_1990: ;;// std/std.porth:357:16: OP_IF 13
    pop rax
    test rax, rax
    jz addr_2003
addr_1991: ;;// std/std.porth:358:7: OP_PUSH_STR 1
    mov rax, 1
    push rax
    lea rax, [str_1]
    push rax
addr_1992: ;;// std/std.porth:358:11: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_1993: ;;// std/std.porth:358:14: OP_INLINED 662
addr_1994: ;;// std/std.porth:48:34: OP_INLINED 394
addr_1995: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_1996: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_1997: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_1998: ;;// std/std.porth:359:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_1999: ;;// std/std.porth:359:14: OP_INTRINSIC not
    pop rax
    not rax
    push rax
addr_2000: ;;// std/std.porth:359:18: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_2001: ;;// std/std.porth:359:20: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2002: ;;// std/std.porth:360:5: OP_ELSE 2
    jmp addr_2004
addr_2003: ;;// std/std.porth:361:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_2004: ;;// std/std.porth:362:5: OP_END_IF 0
addr_2005: ;;// std/std.porth:363:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_2006: ;;// std/std.porth:363:8: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2007: ;;// std/std.porth:364:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_2008: ;;// std/std.porth:365:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_2009: ;;// std/std.porth:367:6: OP_PREP_PROC 56
    sub rsp, 56
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2010: ;;// std/std.porth:374:3: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_2011: ;;// std/std.porth:374:6: OP_INLINED 30
addr_2012: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_2013: ;;// std/std.porth:376:3: OP_PUSH_LOCAL_MEM 40
    mov rax, [ret_stack_rsp]
    add rax, 40
    push rax
addr_2014: ;;// std/std.porth:376:11: OP_INLINED 30
addr_2015: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_2016: ;;// std/std.porth:378:3: OP_PUSH_LOCAL_MEM 48
    mov rax, [ret_stack_rsp]
    add rax, 48
    push rax
addr_2017: ;;// std/std.porth:378:10: OP_INLINED 30
addr_2018: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_2019: ;;// std/std.porth:383:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_2020: ;;// std/std.porth:383:10: OP_PUSH_INT 32
    mov rax, 32
    push rax
addr_2021: ;;// std/std.porth:383:26: OP_INLINED 36
addr_2022: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2023: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_2024: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2025: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_2026: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2027: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_2028: ;;// std/std.porth:384:3: OP_WHILE 53
addr_2029: ;;// std/std.porth:385:5: OP_PUSH_LOCAL_MEM 40
    mov rax, [ret_stack_rsp]
    add rax, 40
    push rax
addr_2030: ;;// std/std.porth:385:13: OP_INLINED 16
addr_2031: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2032: ;;// std/std.porth:385:18: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_2033: ;;// std/std.porth:385:20: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_2034: ;;// std/std.porth:386:5: OP_PUSH_LOCAL_MEM 48
    mov rax, [ret_stack_rsp]
    add rax, 48
    push rax
addr_2035: ;;// std/std.porth:386:13: OP_INLINED 16
addr_2036: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2037: ;;// std/std.porth:386:18: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_2038: ;;// std/std.porth:386:20: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_2039: ;;// std/std.porth:387:5: OP_INLINED 146
addr_2040: ;;// std/core.porth:100:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2041: ;;// std/core.porth:100:8: OP_INTRINSIC cast(int)
addr_2042: ;;// std/core.porth:101:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2043: ;;// std/core.porth:101:8: OP_INTRINSIC cast(int)
addr_2044: ;;// std/core.porth:102:3: OP_INTRINSIC or
    pop rax
    pop rbx
    or rbx, rax
    push rbx
addr_2045: ;;// std/core.porth:103:3: OP_INTRINSIC cast(bool)
addr_2046: ;;// std/std.porth:388:3: OP_DO 35
    pop rax
    test rax, rax
    jz addr_2081
addr_2047: ;;// std/std.porth:389:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_2048: ;;// std/std.porth:389:7: OP_INLINED 44
addr_2049: ;;// std/core.porth:39:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2050: ;;// std/core.porth:39:8: OP_INTRINSIC cast(int)
addr_2051: ;;// std/core.porth:40:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2052: ;;// std/core.porth:40:8: OP_INTRINSIC cast(int)
addr_2053: ;;// std/core.porth:41:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_2054: ;;// std/core.porth:42:3: OP_INTRINSIC cast(ptr)
addr_2055: ;;// std/std.porth:391:5: OP_PUSH_LOCAL_MEM 48
    mov rax, [ret_stack_rsp]
    add rax, 48
    push rax
addr_2056: ;;// std/std.porth:391:12: OP_INLINED 16
addr_2057: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2058: ;;// std/std.porth:392:5: OP_PUSH_INT 10
    mov rax, 10
    push rax
addr_2059: ;;// std/std.porth:392:8: OP_INTRINSIC divmod
    xor rdx, rdx
    pop rbx
    pop rax
    div rbx
    push rax
    push rdx
addr_2060: ;;// std/std.porth:393:5: OP_PUSH_INT 48
    mov rax, 48
    push rax
addr_2061: ;;// std/std.porth:393:9: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2062: ;;// std/std.porth:394:5: OP_INTRINSIC rot
    pop rax
    pop rbx
    pop rcx
    push rbx
    push rax
    push rcx
addr_2063: ;;// std/std.porth:394:9: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2064: ;;// std/std.porth:394:14: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2065: ;;// std/std.porth:394:19: OP_INTRINSIC !8
    pop rax
    pop rbx
    mov [rax], bl
addr_2066: ;;// std/std.porth:395:5: OP_INTRINSIC rot
    pop rax
    pop rbx
    pop rcx
    push rbx
    push rax
    push rcx
addr_2067: ;;// std/std.porth:395:9: OP_PUSH_LOCAL_MEM 48
    mov rax, [ret_stack_rsp]
    add rax, 48
    push rax
addr_2068: ;;// std/std.porth:395:16: OP_INLINED 30
addr_2069: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_2070: ;;// std/std.porth:396:5: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2071: ;;// std/std.porth:396:10: OP_INTRINSIC drop
    pop rax
addr_2072: ;;// std/std.porth:398:5: OP_PUSH_LOCAL_MEM 40
    mov rax, [ret_stack_rsp]
    add rax, 40
    push rax
addr_2073: ;;// std/std.porth:398:13: OP_INLINED 169
addr_2074: ;;// std/core.porth:108:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_2075: ;;// std/core.porth:108:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2076: ;;// std/core.porth:108:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_2077: ;;// std/core.porth:108:36: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_2078: ;;// std/core.porth:108:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2079: ;;// std/core.porth:108:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_2080: ;;// std/std.porth:399:3: OP_END_WHILE 52
    jmp addr_2028
addr_2081: ;;// std/std.porth:401:3: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_2082: ;;// std/std.porth:401:7: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_2083: ;;// std/std.porth:401:14: OP_PUSH_INT 32
    mov rax, 32
    push rax
addr_2084: ;;// std/std.porth:401:30: OP_INLINED 36
addr_2085: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2086: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_2087: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2088: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_2089: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2090: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_2091: ;;// std/std.porth:401:35: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2092: ;;// std/std.porth:401:40: OP_INLINED 78
addr_2093: ;;// std/core.porth:68:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2094: ;;// std/core.porth:68:8: OP_INTRINSIC cast(int)
addr_2095: ;;// std/core.porth:69:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2096: ;;// std/core.porth:69:8: OP_INTRINSIC cast(int)
addr_2097: ;;// std/core.porth:70:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_2098: ;;// std/std.porth:401:49: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2099: ;;// std/std.porth:401:54: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_2100: ;;// std/std.porth:401:57: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2101: ;;// std/std.porth:401:61: OP_INLINED 662
addr_2102: ;;// std/std.porth:48:34: OP_INLINED 394
addr_2103: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_2104: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_2105: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_2106: ;;// std/std.porth:402:1: OP_RET 56
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 56
    ret
addr_2107: ;;// std/std.porth:406:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2108: ;;// std/std.porth:406:25: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_2109: ;;// std/std.porth:406:32: OP_CALL 1985
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1985
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2110: ;;// std/std.porth:406:38: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_2111: ;;// std/std.porth:408:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2112: ;;// std/std.porth:408:25: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_2113: ;;// std/std.porth:408:32: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2114: ;;// std/std.porth:408:38: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_2115: ;;// std/std.porth:409:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2116: ;;// std/std.porth:409:30: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_2117: ;;// std/std.porth:409:37: OP_CALL 2009
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2009
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2118: ;;// std/std.porth:409:44: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_2119: ;;// std/std.porth:410:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2120: ;;// std/std.porth:410:26: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_2121: ;;// std/std.porth:410:33: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2122: ;;// std/std.porth:410:39: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_2123: ;;// std/std.porth:412:6: OP_PREP_PROC 24
    sub rsp, 24
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2124: ;;// std/std.porth:422:3: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_2125: ;;// std/std.porth:422:7: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_2126: ;;// std/std.porth:423:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_2127: ;;// std/std.porth:423:7: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_2128: ;;// std/std.porth:424:3: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_2129: ;;// std/std.porth:424:7: OP_INLINED 0
addr_2130: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2131: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_2132: ;;// std/std.porth:424:12: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2133: ;;// std/std.porth:425:3: OP_WHILE 34
addr_2134: ;;// std/std.porth:425:9: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_2135: ;;// std/std.porth:425:13: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_2136: ;;// std/std.porth:425:15: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_2137: ;;// std/std.porth:425:17: OP_DO 30
    pop rax
    test rax, rax
    jz addr_2167
addr_2138: ;;// std/std.porth:426:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_2139: ;;// std/std.porth:426:9: OP_INLINED 0
addr_2140: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2141: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_2142: ;;// std/std.porth:426:14: OP_INTRINSIC @8
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_2143: ;;// std/std.porth:427:5: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_2144: ;;// std/std.porth:427:9: OP_INLINED 0
addr_2145: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2146: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_2147: ;;// std/std.porth:427:14: OP_INTRINSIC !8
    pop rax
    pop rbx
    mov [rax], bl
addr_2148: ;;// std/std.porth:428:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_2149: ;;// std/std.porth:428:9: OP_INLINED 161
addr_2150: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_2151: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2152: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_2153: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2154: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2155: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_2156: ;;// std/std.porth:429:5: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_2157: ;;// std/std.porth:429:9: OP_INLINED 161
addr_2158: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_2159: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2160: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_2161: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2162: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2163: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_2164: ;;// std/std.porth:430:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_2165: ;;// std/std.porth:430:7: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_2166: ;;// std/std.porth:431:3: OP_END_WHILE 33
    jmp addr_2133
addr_2167: ;;// std/std.porth:431:7: OP_INTRINSIC drop
    pop rax
addr_2168: ;;// std/std.porth:432:1: OP_RET 24
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 24
    ret
addr_2169: ;;// std/std.porth:434:6: OP_PREP_PROC 16
    sub rsp, 16
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2170: ;;// std/std.porth:442:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_2171: ;;// std/std.porth:442:8: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_2172: ;;// std/std.porth:444:3: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_2173: ;;// std/std.porth:444:8: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_2174: ;;// std/std.porth:445:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_2175: ;;// std/std.porth:445:8: OP_INLINED 0
addr_2176: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2177: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_2178: ;;// std/std.porth:445:13: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2179: ;;// std/std.porth:446:3: OP_WHILE 23
addr_2180: ;;// std/std.porth:446:9: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_2181: ;;// std/std.porth:446:13: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_2182: ;;// std/std.porth:446:15: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_2183: ;;// std/std.porth:446:17: OP_DO 19
    pop rax
    test rax, rax
    jz addr_2202
addr_2184: ;;// std/std.porth:447:5: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_2185: ;;// std/std.porth:447:10: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2186: ;;// std/std.porth:447:14: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_2187: ;;// std/std.porth:447:19: OP_INLINED 0
addr_2188: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2189: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_2190: ;;// std/std.porth:447:24: OP_INTRINSIC !8
    pop rax
    pop rbx
    mov [rax], bl
addr_2191: ;;// std/std.porth:448:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_2192: ;;// std/std.porth:448:10: OP_INLINED 161
addr_2193: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_2194: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2195: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_2196: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2197: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2198: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_2199: ;;// std/std.porth:449:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_2200: ;;// std/std.porth:449:7: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_2201: ;;// std/std.porth:450:3: OP_END_WHILE 22
    jmp addr_2179
addr_2202: ;;// std/std.porth:451:3: OP_INTRINSIC drop
    pop rax
addr_2203: ;;// std/std.porth:452:1: OP_RET 16
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 16
    ret
addr_2204: ;;// std/std.porth:456:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2205: ;;// std/std.porth:457:3: OP_PUSH_GLOBAL_MEM 0
    lea rax, [mem+0]
    push rax
addr_2206: ;;// std/std.porth:457:14: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_2207: ;;// std/std.porth:458:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_2208: ;;// std/std.porth:465:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2209: ;;// std/std.porth:466:3: OP_PUSH_GLOBAL_MEM 0
    lea rax, [mem+0]
    push rax
addr_2210: ;;// std/std.porth:466:14: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2211: ;;// std/std.porth:467:3: OP_PUSH_INT 6364136223846793005
    mov rax, 6364136223846793005
    push rax
addr_2212: ;;// std/std.porth:467:10: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_2213: ;;// std/std.porth:468:3: OP_PUSH_INT 1442695040888963407
    mov rax, 1442695040888963407
    push rax
addr_2214: ;;// std/std.porth:468:10: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2215: ;;// std/std.porth:469:3: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_2216: ;;// std/std.porth:470:3: OP_PUSH_GLOBAL_MEM 0
    lea rax, [mem+0]
    push rax
addr_2217: ;;// std/std.porth:470:14: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_2218: ;;// std/std.porth:471:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_2219: ;;// std/std.porth:473:6: OP_PREP_PROC 48
    sub rsp, 48
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2220: ;;// std/std.porth:479:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_2221: ;;// std/std.porth:479:8: OP_INLINED 782
addr_2222: ;;// std/std.porth:71:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_2223: ;;// std/std.porth:72:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_2224: ;;// std/std.porth:72:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_2225: ;;// std/std.porth:72:9: OP_INLINED 729
addr_2226: ;;// std/std.porth:60:35: OP_INLINED 684
addr_2227: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_2228: ;;// std/std.porth:56:57: OP_INLINED 36
addr_2229: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2230: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_2231: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2232: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_2233: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2234: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_2235: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_2236: ;;// std/std.porth:73:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_2237: ;;// std/std.porth:73:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_2238: ;;// std/std.porth:73:9: OP_INLINED 741
addr_2239: ;;// std/std.porth:61:34: OP_INLINED 694
addr_2240: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_2241: ;;// std/std.porth:57:55: OP_INLINED 36
addr_2242: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2243: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_2244: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2245: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_2246: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2247: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_2248: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_2249: ;;// std/std.porth:74:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_2250: ;;// std/std.porth:484:3: OP_INTRINSIC envp
    mov rax, [args_ptr]
    mov rax, [rax]
    add rax, 2
    shl rax, 3
    mov rbx, [args_ptr]
    add rbx, rax
    push rbx
addr_2251: ;;// std/std.porth:485:3: OP_WHILE 133
addr_2252: ;;// std/std.porth:486:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_2253: ;;// std/std.porth:486:9: OP_INLINED 0
addr_2254: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2255: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_2256: ;;// std/std.porth:486:14: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_2257: ;;// std/std.porth:486:19: OP_INLINED 52
addr_2258: ;;// std/core.porth:46:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2259: ;;// std/core.porth:46:8: OP_INTRINSIC cast(int)
addr_2260: ;;// std/core.porth:47:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2261: ;;// std/core.porth:47:8: OP_INTRINSIC cast(int)
addr_2262: ;;// std/core.porth:48:3: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_2263: ;;// std/std.porth:486:25: OP_IF 109
    pop rax
    test rax, rax
    jz addr_2372
addr_2264: ;;// std/std.porth:487:7: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_2265: ;;// std/std.porth:487:11: OP_INLINED 0
addr_2266: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2267: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_2268: ;;// std/std.porth:487:16: OP_INLINED 657
addr_2269: ;;// std/std.porth:45:43: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_2270: ;;// std/std.porth:45:47: OP_CALL 564
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_564
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2271: ;;// std/std.porth:45:55: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2272: ;;// std/std.porth:487:28: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_2273: ;;// std/std.porth:487:38: OP_INLINED 782
addr_2274: ;;// std/std.porth:71:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_2275: ;;// std/std.porth:72:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_2276: ;;// std/std.porth:72:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_2277: ;;// std/std.porth:72:9: OP_INLINED 729
addr_2278: ;;// std/std.porth:60:35: OP_INLINED 684
addr_2279: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_2280: ;;// std/std.porth:56:57: OP_INLINED 36
addr_2281: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2282: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_2283: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2284: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_2285: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2286: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_2287: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_2288: ;;// std/std.porth:73:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_2289: ;;// std/std.porth:73:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_2290: ;;// std/std.porth:73:9: OP_INLINED 741
addr_2291: ;;// std/std.porth:61:34: OP_INLINED 694
addr_2292: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_2293: ;;// std/std.porth:57:55: OP_INLINED 36
addr_2294: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2295: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_2296: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2297: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_2298: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2299: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_2300: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_2301: ;;// std/std.porth:74:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_2302: ;;// std/std.porth:488:7: OP_PUSH_INT 61
    mov rax, 61
    push rax
addr_2303: ;;// std/std.porth:488:11: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_2304: ;;// std/std.porth:488:20: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_2305: ;;// std/std.porth:488:30: OP_CALL 1170
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1170
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2306: ;;// std/std.porth:489:7: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_2307: ;;// std/std.porth:489:16: OP_INLINED 753
addr_2308: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_2309: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_2310: ;;// std/std.porth:65:7: OP_INLINED 704
addr_2311: ;;// std/std.porth:58:38: OP_INLINED 684
addr_2312: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_2313: ;;// std/std.porth:56:57: OP_INLINED 36
addr_2314: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2315: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_2316: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2317: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_2318: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2319: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_2320: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2321: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_2322: ;;// std/std.porth:66:7: OP_INLINED 716
addr_2323: ;;// std/std.porth:59:37: OP_INLINED 694
addr_2324: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_2325: ;;// std/std.porth:57:55: OP_INLINED 36
addr_2326: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2327: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_2328: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2329: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_2330: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2331: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_2332: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2333: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_2334: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_2335: ;;// std/std.porth:489:21: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_2336: ;;// std/std.porth:489:26: OP_INLINED 753
addr_2337: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_2338: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_2339: ;;// std/std.porth:65:7: OP_INLINED 704
addr_2340: ;;// std/std.porth:58:38: OP_INLINED 684
addr_2341: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_2342: ;;// std/std.porth:56:57: OP_INLINED 36
addr_2343: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2344: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_2345: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2346: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_2347: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2348: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_2349: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2350: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_2351: ;;// std/std.porth:66:7: OP_INLINED 716
addr_2352: ;;// std/std.porth:59:37: OP_INLINED 694
addr_2353: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_2354: ;;// std/std.porth:57:55: OP_INLINED 36
addr_2355: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2356: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_2357: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2358: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_2359: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2360: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_2361: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2362: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_2363: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_2364: ;;// std/std.porth:489:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2365: ;;// std/std.porth:489:37: OP_INLINED 131
addr_2366: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_2367: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_2368: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2369: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_2370: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_2371: ;;// std/std.porth:490:5: OP_ELSE 2
    jmp addr_2373
addr_2372: ;;// std/std.porth:490:10: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_2373: ;;// std/std.porth:490:16: OP_END_IF 0
addr_2374: ;;// std/std.porth:491:3: OP_DO 10
    pop rax
    test rax, rax
    jz addr_2384
addr_2375: ;;// std/std.porth:491:6: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_2376: ;;// std/std.porth:491:8: OP_INLINED 36
addr_2377: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2378: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_2379: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2380: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_2381: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2382: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_2383: ;;// std/std.porth:491:13: OP_END_WHILE 132
    jmp addr_2251
addr_2384: ;;// std/std.porth:493:3: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_2385: ;;// std/std.porth:493:8: OP_INLINED 52
addr_2386: ;;// std/core.porth:46:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2387: ;;// std/core.porth:46:8: OP_INTRINSIC cast(int)
addr_2388: ;;// std/core.porth:47:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2389: ;;// std/core.porth:47:8: OP_INTRINSIC cast(int)
addr_2390: ;;// std/core.porth:48:3: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_2391: ;;// std/std.porth:493:14: OP_IF 15
    pop rax
    test rax, rax
    jz addr_2406
addr_2392: ;;// std/std.porth:494:5: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_2393: ;;// std/std.porth:494:15: OP_INLINED 716
addr_2394: ;;// std/std.porth:59:37: OP_INLINED 694
addr_2395: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_2396: ;;// std/std.porth:57:55: OP_INLINED 36
addr_2397: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2398: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_2399: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2400: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_2401: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2402: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_2403: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2404: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_2405: ;;// std/std.porth:495:3: OP_ELSE 2
    jmp addr_2407
addr_2406: ;;// std/std.porth:496:5: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_2407: ;;// std/std.porth:497:3: OP_END_IF 0
addr_2408: ;;// std/std.porth:498:1: OP_RET 48
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 48
    ret
addr_2409: ;;// std/std.porth:505:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2410: ;;// std/std.porth:505:26: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_2411: ;;// std/std.porth:505:28: OP_PUSH_GLOBAL_MEM 8388616
    lea rax, [mem+8388616]
    push rax
addr_2412: ;;// std/std.porth:505:37: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_2413: ;;// std/std.porth:505:41: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_2414: ;;// std/std.porth:506:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2415: ;;// std/std.porth:506:31: OP_PUSH_GLOBAL_MEM 8
    lea rax, [mem+8]
    push rax
addr_2416: ;;// std/std.porth:506:41: OP_PUSH_GLOBAL_MEM 8388616
    lea rax, [mem+8388616]
    push rax
addr_2417: ;;// std/std.porth:506:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2418: ;;// std/std.porth:506:54: OP_INLINED 36
addr_2419: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2420: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_2421: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2422: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_2423: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2424: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_2425: ;;// std/std.porth:506:59: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_2426: ;;// std/std.porth:509:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2427: ;;// std/std.porth:509:31: OP_PUSH_GLOBAL_MEM 8
    lea rax, [mem+8]
    push rax
addr_2428: ;;// std/std.porth:509:41: OP_INLINED 78
addr_2429: ;;// std/core.porth:68:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2430: ;;// std/core.porth:68:8: OP_INTRINSIC cast(int)
addr_2431: ;;// std/core.porth:69:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2432: ;;// std/core.porth:69:8: OP_INTRINSIC cast(int)
addr_2433: ;;// std/core.porth:70:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_2434: ;;// std/std.porth:509:50: OP_PUSH_GLOBAL_MEM 8388616
    lea rax, [mem+8388616]
    push rax
addr_2435: ;;// std/std.porth:509:59: OP_INLINED 30
addr_2436: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_2437: ;;// std/std.porth:509:64: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_2438: ;;// std/std.porth:511:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2439: ;;// std/std.porth:516:3: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_2440: ;;// std/std.porth:516:7: OP_PUSH_GLOBAL_MEM 8388616
    lea rax, [mem+8388616]
    push rax
addr_2441: ;;// std/std.porth:516:16: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2442: ;;// std/std.porth:516:20: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2443: ;;// std/std.porth:516:22: OP_PUSH_INT 8388608
    mov rax, 8388608
    push rax
addr_2444: ;;// std/std.porth:516:30: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_2445: ;;// std/std.porth:516:32: OP_IF 22
    pop rax
    test rax, rax
    jz addr_2467
addr_2446: ;;// std/std.porth:517:5: OP_PUSH_STR 2
    mov rax, 19
    push rax
    lea rax, [str_2]
    push rax
addr_2447: ;;// std/std.porth:517:10: OP_INLINED 676
addr_2448: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_2449: ;;// std/std.porth:50:37: OP_INLINED 662
addr_2450: ;;// std/std.porth:48:34: OP_INLINED 394
addr_2451: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_2452: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_2453: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_2454: ;;// std/std.porth:517:16: OP_PUSH_STR 3
    mov rax, 79
    push rax
    lea rax, [str_3]
    push rax
addr_2455: ;;// std/std.porth:517:99: OP_INLINED 676
addr_2456: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_2457: ;;// std/std.porth:50:37: OP_INLINED 662
addr_2458: ;;// std/std.porth:48:34: OP_INLINED 394
addr_2459: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_2460: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_2461: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_2462: ;;// std/std.porth:518:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_2463: ;;// std/std.porth:518:7: OP_INLINED 418
addr_2464: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_2465: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_2466: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_2467: ;;// std/std.porth:519:3: OP_END_IF 0
addr_2468: ;;// std/std.porth:521:3: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_2469: ;;// std/std.porth:521:7: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_2470: ;;// std/std.porth:521:9: OP_INLINED 2414
addr_2471: ;;// std/std.porth:506:31: OP_PUSH_GLOBAL_MEM 8
    lea rax, [mem+8]
    push rax
addr_2472: ;;// std/std.porth:506:41: OP_PUSH_GLOBAL_MEM 8388616
    lea rax, [mem+8388616]
    push rax
addr_2473: ;;// std/std.porth:506:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2474: ;;// std/std.porth:506:54: OP_INLINED 36
addr_2475: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2476: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_2477: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2478: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_2479: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2480: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_2481: ;;// std/std.porth:521:17: OP_CALL 2169
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2169
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2482: ;;// std/std.porth:522:3: OP_PUSH_GLOBAL_MEM 8388616
    lea rax, [mem+8388616]
    push rax
addr_2483: ;;// std/std.porth:522:12: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2484: ;;// std/std.porth:522:16: OP_INTRINSIC rot
    pop rax
    pop rbx
    pop rcx
    push rbx
    push rax
    push rcx
addr_2485: ;;// std/std.porth:522:20: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2486: ;;// std/std.porth:522:22: OP_PUSH_GLOBAL_MEM 8388616
    lea rax, [mem+8388616]
    push rax
addr_2487: ;;// std/std.porth:522:31: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_2488: ;;// std/std.porth:523:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_2489: ;;// std/std.porth:525:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2490: ;;// std/std.porth:525:47: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2491: ;;// std/std.porth:525:52: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_2492: ;;// std/std.porth:525:54: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2493: ;;// std/std.porth:525:56: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2494: ;;// std/std.porth:525:66: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2495: ;;// std/std.porth:525:73: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_2496: ;;// std/std.porth:526:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2497: ;;// std/std.porth:526:42: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2498: ;;// std/std.porth:526:47: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2499: ;;// std/std.porth:526:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2500: ;;// std/std.porth:526:64: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_2501: ;;// std/std.porth:527:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2502: ;;// std/std.porth:528:3: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_2503: ;;// std/std.porth:528:15: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2504: ;;// std/std.porth:528:25: OP_INLINED 27
addr_2505: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_2506: ;;// std/std.porth:529:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_2507: ;;// std/std.porth:531:6: OP_PREP_PROC 48
    sub rsp, 48
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2508: ;;// std/std.porth:536:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_2509: ;;// std/std.porth:536:9: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_2510: ;;// std/std.porth:539:3: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_2511: ;;// std/std.porth:539:13: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_2512: ;;// std/std.porth:541:3: OP_INTRINSIC envp
    mov rax, [args_ptr]
    mov rax, [rax]
    add rax, 2
    shl rax, 3
    mov rbx, [args_ptr]
    add rbx, rax
    push rbx
addr_2513: ;;// std/std.porth:542:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_2514: ;;// std/std.porth:542:9: OP_INLINED 0
addr_2515: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2516: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_2517: ;;// std/std.porth:543:3: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_2518: ;;// std/std.porth:543:13: OP_INLINED 0
addr_2519: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2520: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_2521: ;;// std/std.porth:544:3: OP_INLINED 443
addr_2522: ;;// std/linux.porth:426:42: OP_PUSH_INT 59
    mov rax, 59
    push rax
addr_2523: ;;// std/linux.porth:426:53: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_2524: ;;// std/std.porth:544:10: OP_INTRINSIC drop
    pop rax
addr_2525: ;;// std/std.porth:549:3: OP_PUSH_STR 4
    mov rax, 4
    push rax
    lea rax, [str_4]
    push rax
addr_2526: ;;// std/std.porth:549:10: OP_CALL 2219
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2219
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2527: ;;// std/std.porth:551:3: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_2528: ;;// std/std.porth:551:7: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_2529: ;;// std/std.porth:551:12: OP_INLINED 59
addr_2530: ;;// std/core.porth:52:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2531: ;;// std/core.porth:52:8: OP_INTRINSIC cast(int)
addr_2532: ;;// std/core.porth:53:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2533: ;;// std/core.porth:53:8: OP_INTRINSIC cast(int)
addr_2534: ;;// std/core.porth:54:3: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_2535: ;;// std/std.porth:551:17: OP_IF 15
    pop rax
    test rax, rax
    jz addr_2550
addr_2536: ;;// std/std.porth:552:5: OP_PUSH_STR 5
    mov rax, 21
    push rax
    lea rax, [str_5]
    push rax
addr_2537: ;;// std/std.porth:552:30: OP_INLINED 676
addr_2538: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_2539: ;;// std/std.porth:50:37: OP_INLINED 662
addr_2540: ;;// std/std.porth:48:34: OP_INLINED 394
addr_2541: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_2542: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_2543: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_2544: ;;// std/std.porth:553:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_2545: ;;// std/std.porth:553:7: OP_INLINED 418
addr_2546: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_2547: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_2548: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_2549: ;;// std/std.porth:554:3: OP_ELSE 135
    jmp addr_2684
addr_2550: ;;// std/std.porth:555:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_2551: ;;// std/std.porth:555:9: OP_INLINED 657
addr_2552: ;;// std/std.porth:45:43: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_2553: ;;// std/std.porth:45:47: OP_CALL 564
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_564
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2554: ;;// std/std.porth:45:55: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2555: ;;// std/std.porth:555:21: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_2556: ;;// std/std.porth:555:27: OP_INLINED 782
addr_2557: ;;// std/std.porth:71:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_2558: ;;// std/std.porth:72:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_2559: ;;// std/std.porth:72:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_2560: ;;// std/std.porth:72:9: OP_INLINED 729
addr_2561: ;;// std/std.porth:60:35: OP_INLINED 684
addr_2562: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_2563: ;;// std/std.porth:56:57: OP_INLINED 36
addr_2564: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2565: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_2566: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2567: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_2568: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2569: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_2570: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_2571: ;;// std/std.porth:73:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_2572: ;;// std/std.porth:73:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_2573: ;;// std/std.porth:73:9: OP_INLINED 741
addr_2574: ;;// std/std.porth:61:34: OP_INLINED 694
addr_2575: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_2576: ;;// std/std.porth:57:55: OP_INLINED 36
addr_2577: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2578: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_2579: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2580: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_2581: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2582: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_2583: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_2584: ;;// std/std.porth:74:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_2585: ;;// std/std.porth:556:5: OP_WHILE 99
addr_2586: ;;// std/std.porth:556:11: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_2587: ;;// std/std.porth:556:17: OP_INLINED 704
addr_2588: ;;// std/std.porth:58:38: OP_INLINED 684
addr_2589: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_2590: ;;// std/std.porth:56:57: OP_INLINED 36
addr_2591: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2592: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_2593: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2594: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_2595: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2596: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_2597: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2598: ;;// std/std.porth:556:28: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_2599: ;;// std/std.porth:556:30: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_2600: ;;// std/std.porth:556:32: OP_DO 84
    pop rax
    test rax, rax
    jz addr_2684
addr_2601: ;;// std/std.porth:557:7: OP_PUSH_INT 58
    mov rax, 58
    push rax
addr_2602: ;;// std/std.porth:557:11: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_2603: ;;// std/std.porth:557:16: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_2604: ;;// std/std.porth:557:22: OP_CALL 1170
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1170
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2605: ;;// std/std.porth:559:7: OP_INLINED 2414
addr_2606: ;;// std/std.porth:506:31: OP_PUSH_GLOBAL_MEM 8
    lea rax, [mem+8]
    push rax
addr_2607: ;;// std/std.porth:506:41: OP_PUSH_GLOBAL_MEM 8388616
    lea rax, [mem+8388616]
    push rax
addr_2608: ;;// std/std.porth:506:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2609: ;;// std/std.porth:506:54: OP_INLINED 36
addr_2610: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2611: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_2612: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2613: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_2614: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2615: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_2616: ;;// std/std.porth:560:7: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_2617: ;;// std/std.porth:560:12: OP_INLINED 753
addr_2618: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_2619: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_2620: ;;// std/std.porth:65:7: OP_INLINED 704
addr_2621: ;;// std/std.porth:58:38: OP_INLINED 684
addr_2622: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_2623: ;;// std/std.porth:56:57: OP_INLINED 36
addr_2624: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2625: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_2626: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2627: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_2628: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2629: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_2630: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2631: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_2632: ;;// std/std.porth:66:7: OP_INLINED 716
addr_2633: ;;// std/std.porth:59:37: OP_INLINED 694
addr_2634: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_2635: ;;// std/std.porth:57:55: OP_INLINED 36
addr_2636: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2637: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_2638: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2639: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_2640: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2641: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_2642: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2643: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_2644: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_2645: ;;// std/std.porth:560:34: OP_INLINED 2496
addr_2646: ;;// std/std.porth:526:42: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2647: ;;// std/std.porth:526:47: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2648: ;;// std/std.porth:526:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2649: ;;// std/std.porth:560:45: OP_INTRINSIC drop
    pop rax
addr_2650: ;;// std/std.porth:561:7: OP_PUSH_STR 6
    mov rax, 1
    push rax
    lea rax, [str_6]
    push rax
addr_2651: ;;// std/std.porth:561:34: OP_INLINED 2496
addr_2652: ;;// std/std.porth:526:42: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2653: ;;// std/std.porth:526:47: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2654: ;;// std/std.porth:526:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2655: ;;// std/std.porth:561:45: OP_INTRINSIC drop
    pop rax
addr_2656: ;;// std/std.porth:562:7: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_2657: ;;// std/std.porth:562:17: OP_INLINED 0
addr_2658: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2659: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_2660: ;;// std/std.porth:562:22: OP_INLINED 657
addr_2661: ;;// std/std.porth:45:43: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_2662: ;;// std/std.porth:45:47: OP_CALL 564
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_564
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2663: ;;// std/std.porth:45:55: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2664: ;;// std/std.porth:562:34: OP_INLINED 2496
addr_2665: ;;// std/std.porth:526:42: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2666: ;;// std/std.porth:526:47: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2667: ;;// std/std.porth:526:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2668: ;;// std/std.porth:562:45: OP_INTRINSIC drop
    pop rax
addr_2669: ;;// std/std.porth:563:7: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_2670: ;;// std/std.porth:563:34: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2671: ;;// std/std.porth:563:45: OP_INTRINSIC drop
    pop rax
addr_2672: ;;// std/std.porth:565:7: OP_INTRINSIC envp
    mov rax, [args_ptr]
    mov rax, [rax]
    add rax, 2
    shl rax, 3
    mov rbx, [args_ptr]
    add rbx, rax
    push rbx
addr_2673: ;;// std/std.porth:565:12: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2674: ;;// std/std.porth:566:7: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_2675: ;;// std/std.porth:566:13: OP_INLINED 0
addr_2676: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2677: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_2678: ;;// std/std.porth:566:18: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2679: ;;// std/std.porth:567:7: OP_INLINED 443
addr_2680: ;;// std/linux.porth:426:42: OP_PUSH_INT 59
    mov rax, 59
    push rax
addr_2681: ;;// std/linux.porth:426:53: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_2682: ;;// std/std.porth:567:14: OP_INTRINSIC drop
    pop rax
addr_2683: ;;// std/std.porth:568:5: OP_END_WHILE 98
    jmp addr_2585
addr_2684: ;;// std/std.porth:569:3: OP_END_IF 0
addr_2685: ;;// std/std.porth:570:3: OP_INTRINSIC drop
    pop rax
addr_2686: ;;// std/std.porth:572:3: OP_PUSH_STR 7
    mov rax, 19
    push rax
    lea rax, [str_7]
    push rax
addr_2687: ;;// std/std.porth:572:8: OP_INLINED 676
addr_2688: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_2689: ;;// std/std.porth:50:37: OP_INLINED 662
addr_2690: ;;// std/std.porth:48:34: OP_INLINED 394
addr_2691: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_2692: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_2693: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_2694: ;;// std/std.porth:572:14: OP_PUSH_STR 8
    mov rax, 36
    push rax
    lea rax, [str_8]
    push rax
addr_2695: ;;// std/std.porth:572:53: OP_INLINED 676
addr_2696: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_2697: ;;// std/std.porth:50:37: OP_INLINED 662
addr_2698: ;;// std/std.porth:48:34: OP_INLINED 394
addr_2699: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_2700: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_2701: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_2702: ;;// std/std.porth:572:59: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_2703: ;;// std/std.porth:572:69: OP_INLINED 0
addr_2704: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2705: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_2706: ;;// std/std.porth:572:74: OP_INLINED 657
addr_2707: ;;// std/std.porth:45:43: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_2708: ;;// std/std.porth:45:47: OP_CALL 564
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_564
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2709: ;;// std/std.porth:45:55: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2710: ;;// std/std.porth:572:86: OP_INLINED 676
addr_2711: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_2712: ;;// std/std.porth:50:37: OP_INLINED 662
addr_2713: ;;// std/std.porth:48:34: OP_INLINED 394
addr_2714: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_2715: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_2716: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_2717: ;;// std/std.porth:572:92: OP_PUSH_STR 9
    mov rax, 2
    push rax
    lea rax, [str_9]
    push rax
addr_2718: ;;// std/std.porth:572:98: OP_INLINED 676
addr_2719: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_2720: ;;// std/std.porth:50:37: OP_INLINED 662
addr_2721: ;;// std/std.porth:48:34: OP_INLINED 394
addr_2722: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_2723: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_2724: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_2725: ;;// std/std.porth:573:3: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_2726: ;;// std/std.porth:573:5: OP_INLINED 418
addr_2727: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_2728: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_2729: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_2730: ;;// std/std.porth:574:1: OP_RET 48
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 48
    ret
addr_2731: ;;// std/std.porth:578:6: OP_PREP_PROC 16
    sub rsp, 16
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2732: ;;// std/std.porth:589:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_2733: ;;// std/std.porth:589:9: OP_INLINED 27
addr_2734: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_2735: ;;// std/std.porth:591:3: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_2736: ;;// std/std.porth:591:9: OP_INLINED 27
addr_2737: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_2738: ;;// std/std.porth:593:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_2739: ;;// std/std.porth:593:9: OP_INLINED 0
addr_2740: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2741: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_2742: ;;// std/std.porth:593:14: OP_INLINED 16
addr_2743: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2744: ;;// std/std.porth:593:19: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_2745: ;;// std/std.porth:593:21: OP_IF 38
    pop rax
    test rax, rax
    jz addr_2783
addr_2746: ;;// std/std.porth:594:5: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2747: ;;// std/std.porth:595:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_2748: ;;// std/std.porth:595:11: OP_INLINED 0
addr_2749: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2750: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_2751: ;;// std/std.porth:595:16: OP_INLINED 16
addr_2752: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2753: ;;// std/std.porth:595:21: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_2754: ;;// std/std.porth:596:5: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_2755: ;;// std/std.porth:596:11: OP_INLINED 0
addr_2756: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2757: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_2758: ;;// std/std.porth:596:16: OP_INLINED 73
addr_2759: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_2760: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2761: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_2762: ;;// std/std.porth:597:5: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2763: ;;// std/std.porth:597:12: OP_INTRINSIC drop
    pop rax
addr_2764: ;;// std/std.porth:599:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_2765: ;;// std/std.porth:599:11: OP_INLINED 0
addr_2766: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2767: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_2768: ;;// std/std.porth:599:16: OP_INLINED 16
addr_2769: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2770: ;;// std/std.porth:600:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_2771: ;;// std/std.porth:600:11: OP_INLINED 0
addr_2772: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2773: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_2774: ;;// std/std.porth:600:16: OP_INLINED 161
addr_2775: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_2776: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2777: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_2778: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2779: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2780: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_2781: ;;// std/std.porth:602:5: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_2782: ;;// std/std.porth:603:3: OP_ELSE 5
    jmp addr_2787
addr_2783: ;;// std/std.porth:604:5: OP_INTRINSIC drop
    pop rax
addr_2784: ;;// std/std.porth:604:10: OP_INTRINSIC drop
    pop rax
addr_2785: ;;// std/std.porth:605:5: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_2786: ;;// std/std.porth:605:7: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_2787: ;;// std/std.porth:606:3: OP_END_IF 0
addr_2788: ;;// std/std.porth:607:1: OP_RET 16
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 16
    ret
addr_2789: ;;// std/std.porth:610:6: OP_PREP_PROC 8
    sub rsp, 8
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2790: ;;// std/std.porth:616:3: OP_PUSH_INT 32
    mov rax, 32
    push rax
addr_2791: ;;// std/std.porth:616:19: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2792: ;;// std/std.porth:616:29: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_2793: ;;// std/std.porth:616:36: OP_INLINED 27
addr_2794: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_2795: ;;// std/std.porth:618:3: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_2796: ;;// std/std.porth:618:7: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_2797: ;;// std/std.porth:618:9: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_2798: ;;// std/std.porth:618:11: OP_IF 28
    pop rax
    test rax, rax
    jz addr_2826
addr_2799: ;;// std/std.porth:619:5: OP_INTRINSIC drop
    pop rax
addr_2800: ;;// std/std.porth:620:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_2801: ;;// std/std.porth:620:12: OP_INLINED 0
addr_2802: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2803: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_2804: ;;// std/std.porth:620:17: OP_PUSH_INT 32
    mov rax, 32
    push rax
addr_2805: ;;// std/std.porth:620:33: OP_INLINED 36
addr_2806: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2807: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_2808: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2809: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_2810: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2811: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_2812: ;;// std/std.porth:620:38: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_2813: ;;// std/std.porth:620:40: OP_INLINED 44
addr_2814: ;;// std/core.porth:39:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2815: ;;// std/core.porth:39:8: OP_INTRINSIC cast(int)
addr_2816: ;;// std/core.porth:40:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2817: ;;// std/core.porth:40:8: OP_INTRINSIC cast(int)
addr_2818: ;;// std/core.porth:41:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_2819: ;;// std/core.porth:42:3: OP_INTRINSIC cast(ptr)
addr_2820: ;;// std/std.porth:621:5: OP_PUSH_INT 48
    mov rax, 48
    push rax
addr_2821: ;;// std/std.porth:621:9: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2822: ;;// std/std.porth:621:14: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_2823: ;;// std/std.porth:622:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_2824: ;;// std/std.porth:622:7: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2825: ;;// std/std.porth:623:3: OP_ELSE 61
    jmp addr_2886
addr_2826: ;;// std/std.porth:624:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_2827: ;;// std/std.porth:624:12: OP_INLINED 0
addr_2828: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2829: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_2830: ;;// std/std.porth:624:17: OP_PUSH_INT 32
    mov rax, 32
    push rax
addr_2831: ;;// std/std.porth:624:33: OP_INLINED 36
addr_2832: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2833: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_2834: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2835: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_2836: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2837: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_2838: ;;// std/std.porth:625:5: OP_WHILE 25
addr_2839: ;;// std/std.porth:625:11: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2840: ;;// std/std.porth:625:16: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_2841: ;;// std/std.porth:625:18: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_2842: ;;// std/std.porth:625:21: OP_DO 21
    pop rax
    test rax, rax
    jz addr_2863
addr_2843: ;;// std/std.porth:626:7: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_2844: ;;// std/std.porth:626:9: OP_INLINED 44
addr_2845: ;;// std/core.porth:39:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2846: ;;// std/core.porth:39:8: OP_INTRINSIC cast(int)
addr_2847: ;;// std/core.porth:40:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2848: ;;// std/core.porth:40:8: OP_INTRINSIC cast(int)
addr_2849: ;;// std/core.porth:41:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_2850: ;;// std/core.porth:42:3: OP_INTRINSIC cast(ptr)
addr_2851: ;;// std/std.porth:626:14: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_2852: ;;// std/std.porth:626:18: OP_INTRINSIC rot
    pop rax
    pop rbx
    pop rcx
    push rbx
    push rax
    push rcx
addr_2853: ;;// std/std.porth:627:7: OP_PUSH_INT 10
    mov rax, 10
    push rax
addr_2854: ;;// std/std.porth:627:10: OP_INTRINSIC divmod
    xor rdx, rdx
    pop rbx
    pop rax
    div rbx
    push rax
    push rdx
addr_2855: ;;// std/std.porth:628:7: OP_INTRINSIC rot
    pop rax
    pop rbx
    pop rcx
    push rbx
    push rax
    push rcx
addr_2856: ;;// std/std.porth:628:11: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2857: ;;// std/std.porth:628:16: OP_PUSH_INT 48
    mov rax, 48
    push rax
addr_2858: ;;// std/std.porth:628:20: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2859: ;;// std/std.porth:628:22: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2860: ;;// std/std.porth:628:27: OP_INTRINSIC !8
    pop rax
    pop rbx
    mov [rax], bl
addr_2861: ;;// std/std.porth:628:30: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2862: ;;// std/std.porth:629:5: OP_END_WHILE 24
    jmp addr_2838
addr_2863: ;;// std/std.porth:631:5: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2864: ;;// std/std.porth:631:10: OP_INTRINSIC drop
    pop rax
addr_2865: ;;// std/std.porth:633:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_2866: ;;// std/std.porth:633:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_2867: ;;// std/std.porth:633:16: OP_INLINED 0
addr_2868: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2869: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_2870: ;;// std/std.porth:633:21: OP_PUSH_INT 32
    mov rax, 32
    push rax
addr_2871: ;;// std/std.porth:633:37: OP_INLINED 36
addr_2872: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2873: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_2874: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2875: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_2876: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2877: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_2878: ;;// std/std.porth:633:42: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2879: ;;// std/std.porth:633:47: OP_INLINED 78
addr_2880: ;;// std/core.porth:68:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2881: ;;// std/core.porth:68:8: OP_INTRINSIC cast(int)
addr_2882: ;;// std/core.porth:69:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2883: ;;// std/core.porth:69:8: OP_INTRINSIC cast(int)
addr_2884: ;;// std/core.porth:70:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_2885: ;;// std/std.porth:633:56: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2886: ;;// std/std.porth:634:3: OP_END_IF 0
addr_2887: ;;// std/std.porth:635:1: OP_RET 8
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 8
    ret
addr_2888: ;;// std/std.porth:638:6: OP_PREP_PROC 176
    sub rsp, 176
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2889: ;;// std/std.porth:644:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_2890: ;;// std/std.porth:644:18: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_2891: ;;// std/std.porth:646:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_2892: ;;// std/std.porth:647:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_2893: ;;// std/std.porth:648:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_2894: ;;// std/std.porth:648:18: OP_INLINED 0
addr_2895: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2896: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_2897: ;;// std/std.porth:649:3: OP_PUSH_INT 18446744073709551516
    mov rax, 18446744073709551516
    push rax
addr_2898: ;;// std/std.porth:650:3: OP_INLINED 402
addr_2899: ;;// std/linux.porth:416:46: OP_PUSH_INT 257
    mov rax, 257
    push rax
addr_2900: ;;// std/linux.porth:416:57: OP_INTRINSIC syscall4
    pop rax
    pop rdi
    pop rsi
    pop rdx
    pop r10
    syscall
    push rax
addr_2901: ;;// std/std.porth:652:3: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_2902: ;;// std/std.porth:652:7: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_2903: ;;// std/std.porth:652:9: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_2904: ;;// std/std.porth:652:11: OP_IF 37
    pop rax
    test rax, rax
    jz addr_2941
addr_2905: ;;// std/std.porth:653:5: OP_PUSH_STR 10
    mov rax, 27
    push rax
    lea rax, [str_10]
    push rax
addr_2906: ;;// std/std.porth:653:35: OP_INLINED 676
addr_2907: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_2908: ;;// std/std.porth:50:37: OP_INLINED 662
addr_2909: ;;// std/std.porth:48:34: OP_INLINED 394
addr_2910: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_2911: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_2912: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_2913: ;;// std/std.porth:653:41: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_2914: ;;// std/std.porth:653:56: OP_INLINED 0
addr_2915: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2916: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_2917: ;;// std/std.porth:653:61: OP_INLINED 657
addr_2918: ;;// std/std.porth:45:43: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_2919: ;;// std/std.porth:45:47: OP_CALL 564
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_564
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2920: ;;// std/std.porth:45:55: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2921: ;;// std/std.porth:653:73: OP_INLINED 676
addr_2922: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_2923: ;;// std/std.porth:50:37: OP_INLINED 662
addr_2924: ;;// std/std.porth:48:34: OP_INLINED 394
addr_2925: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_2926: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_2927: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_2928: ;;// std/std.porth:653:79: OP_PUSH_STR 11
    mov rax, 1
    push rax
    lea rax, [str_11]
    push rax
addr_2929: ;;// std/std.porth:653:84: OP_INLINED 676
addr_2930: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_2931: ;;// std/std.porth:50:37: OP_INLINED 662
addr_2932: ;;// std/std.porth:48:34: OP_INLINED 394
addr_2933: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_2934: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_2935: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_2936: ;;// std/std.porth:654:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_2937: ;;// std/std.porth:654:7: OP_INLINED 418
addr_2938: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_2939: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_2940: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_2941: ;;// std/std.porth:655:3: OP_END_IF 0
addr_2942: ;;// std/std.porth:658:3: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_2943: ;;// std/std.porth:658:6: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_2944: ;;// std/std.porth:661:3: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_2945: ;;// std/std.porth:661:11: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_2946: ;;// std/std.porth:661:14: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2947: ;;// std/std.porth:661:18: OP_INLINED 406
addr_2948: ;;// std/linux.porth:417:37: OP_PUSH_INT 5
    mov rax, 5
    push rax
addr_2949: ;;// std/linux.porth:417:47: OP_INTRINSIC syscall2
    pop rax
    pop rdi
    pop rsi
    syscall
    push rax
addr_2950: ;;// std/std.porth:661:24: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_2951: ;;// std/std.porth:661:26: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_2952: ;;// std/std.porth:661:28: OP_IF 37
    pop rax
    test rax, rax
    jz addr_2989
addr_2953: ;;// std/std.porth:662:5: OP_PUSH_STR 12
    mov rax, 44
    push rax
    lea rax, [str_12]
    push rax
addr_2954: ;;// std/std.porth:662:52: OP_INLINED 676
addr_2955: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_2956: ;;// std/std.porth:50:37: OP_INLINED 662
addr_2957: ;;// std/std.porth:48:34: OP_INLINED 394
addr_2958: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_2959: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_2960: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_2961: ;;// std/std.porth:662:58: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_2962: ;;// std/std.porth:662:73: OP_INLINED 0
addr_2963: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2964: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_2965: ;;// std/std.porth:662:78: OP_INLINED 657
addr_2966: ;;// std/std.porth:45:43: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_2967: ;;// std/std.porth:45:47: OP_CALL 564
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_564
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_2968: ;;// std/std.porth:45:55: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2969: ;;// std/std.porth:662:90: OP_INLINED 676
addr_2970: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_2971: ;;// std/std.porth:50:37: OP_INLINED 662
addr_2972: ;;// std/std.porth:48:34: OP_INLINED 394
addr_2973: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_2974: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_2975: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_2976: ;;// std/std.porth:662:96: OP_PUSH_STR 13
    mov rax, 1
    push rax
    lea rax, [str_13]
    push rax
addr_2977: ;;// std/std.porth:662:101: OP_INLINED 676
addr_2978: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_2979: ;;// std/std.porth:50:37: OP_INLINED 662
addr_2980: ;;// std/std.porth:48:34: OP_INLINED 394
addr_2981: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_2982: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_2983: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_2984: ;;// std/std.porth:663:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_2985: ;;// std/std.porth:663:7: OP_INLINED 418
addr_2986: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_2987: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_2988: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_2989: ;;// std/std.porth:664:3: OP_END_IF 0
addr_2990: ;;// std/std.porth:667:3: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_2991: ;;// std/std.porth:667:11: OP_INLINED 317
addr_2992: ;;// std/linux.porth:372:43: OP_INLINED 307
addr_2993: ;;// std/linux.porth:371:43: OP_PUSH_INT 48
    mov rax, 48
    push rax
addr_2994: ;;// std/linux.porth:371:47: OP_INLINED 36
addr_2995: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2996: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_2997: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_2998: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_2999: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3000: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_3001: ;;// std/linux.porth:372:56: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_3002: ;;// std/std.porth:667:25: OP_PUSH_LOCAL_MEM 160
    mov rax, [ret_stack_rsp]
    add rax, 160
    push rax
addr_3003: ;;// std/std.porth:667:33: OP_INLINED 729
addr_3004: ;;// std/std.porth:60:35: OP_INLINED 684
addr_3005: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_3006: ;;// std/std.porth:56:57: OP_INLINED 36
addr_3007: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3008: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_3009: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3010: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_3011: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3012: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_3013: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_3014: ;;// std/std.porth:669:3: OP_PUSH_LOCAL_MEM 160
    mov rax, [ret_stack_rsp]
    add rax, 160
    push rax
addr_3015: ;;// std/std.porth:669:11: OP_INLINED 704
addr_3016: ;;// std/std.porth:58:38: OP_INLINED 684
addr_3017: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_3018: ;;// std/std.porth:56:57: OP_INLINED 36
addr_3019: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3020: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_3021: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3022: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_3023: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3024: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_3025: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_3026: ;;// std/std.porth:669:22: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_3027: ;;// std/std.porth:669:24: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_3028: ;;// std/std.porth:669:26: OP_IF 119
    pop rax
    test rax, rax
    jz addr_3147
addr_3029: ;;// std/std.porth:670:5: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_3030: ;;// std/std.porth:671:5: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_3031: ;;// std/std.porth:671:8: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_3032: ;;// std/std.porth:672:5: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_3033: ;;// std/std.porth:673:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3034: ;;// std/std.porth:674:5: OP_PUSH_LOCAL_MEM 160
    mov rax, [ret_stack_rsp]
    add rax, 160
    push rax
addr_3035: ;;// std/std.porth:674:13: OP_INLINED 704
addr_3036: ;;// std/std.porth:58:38: OP_INLINED 684
addr_3037: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_3038: ;;// std/std.porth:56:57: OP_INLINED 36
addr_3039: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3040: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_3041: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3042: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_3043: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3044: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_3045: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_3046: ;;// std/std.porth:675:5: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_3047: ;;// std/std.porth:676:5: OP_INLINED 423
addr_3048: ;;// std/linux.porth:421:52: OP_PUSH_INT 9
    mov rax, 9
    push rax
addr_3049: ;;// std/linux.porth:421:61: OP_INTRINSIC syscall6
    pop rax
    pop rdi
    pop rsi
    pop rdx
    pop r10
    pop r8
    pop r9
    syscall
    push rax
addr_3050: ;;// std/std.porth:677:5: OP_INTRINSIC cast(ptr)
addr_3051: ;;// std/std.porth:678:5: OP_PUSH_LOCAL_MEM 160
    mov rax, [ret_stack_rsp]
    add rax, 160
    push rax
addr_3052: ;;// std/std.porth:678:13: OP_INLINED 741
addr_3053: ;;// std/std.porth:61:34: OP_INLINED 694
addr_3054: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_3055: ;;// std/std.porth:57:55: OP_INLINED 36
addr_3056: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3057: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_3058: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3059: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_3060: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3061: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_3062: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_3063: ;;// std/std.porth:680:5: OP_PUSH_LOCAL_MEM 160
    mov rax, [ret_stack_rsp]
    add rax, 160
    push rax
addr_3064: ;;// std/std.porth:680:13: OP_INLINED 716
addr_3065: ;;// std/std.porth:59:37: OP_INLINED 694
addr_3066: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_3067: ;;// std/std.porth:57:55: OP_INLINED 36
addr_3068: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3069: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_3070: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3071: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_3072: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3073: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_3074: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_3075: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_3076: ;;// std/std.porth:680:23: OP_INTRINSIC cast(int)
addr_3077: ;;// std/std.porth:680:33: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_3078: ;;// std/std.porth:680:35: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_3079: ;;// std/std.porth:680:37: OP_IF 37
    pop rax
    test rax, rax
    jz addr_3116
addr_3080: ;;// std/std.porth:681:7: OP_PUSH_STR 14
    mov rax, 33
    push rax
    lea rax, [str_14]
    push rax
addr_3081: ;;// std/std.porth:681:43: OP_INLINED 676
addr_3082: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_3083: ;;// std/std.porth:50:37: OP_INLINED 662
addr_3084: ;;// std/std.porth:48:34: OP_INLINED 394
addr_3085: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3086: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_3087: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_3088: ;;// std/std.porth:681:49: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_3089: ;;// std/std.porth:681:64: OP_INLINED 0
addr_3090: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_3091: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_3092: ;;// std/std.porth:681:69: OP_INLINED 657
addr_3093: ;;// std/std.porth:45:43: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_3094: ;;// std/std.porth:45:47: OP_CALL 564
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_564
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_3095: ;;// std/std.porth:45:55: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3096: ;;// std/std.porth:681:81: OP_INLINED 676
addr_3097: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_3098: ;;// std/std.porth:50:37: OP_INLINED 662
addr_3099: ;;// std/std.porth:48:34: OP_INLINED 394
addr_3100: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3101: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_3102: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_3103: ;;// std/std.porth:681:87: OP_PUSH_STR 15
    mov rax, 1
    push rax
    lea rax, [str_15]
    push rax
addr_3104: ;;// std/std.porth:681:92: OP_INLINED 676
addr_3105: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_3106: ;;// std/std.porth:50:37: OP_INLINED 662
addr_3107: ;;// std/std.porth:48:34: OP_INLINED 394
addr_3108: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3109: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_3110: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_3111: ;;// std/std.porth:682:7: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3112: ;;// std/std.porth:682:9: OP_INLINED 418
addr_3113: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_3114: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_3115: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_3116: ;;// std/std.porth:683:5: OP_END_IF 0
addr_3117: ;;// std/std.porth:685:5: OP_PUSH_LOCAL_MEM 160
    mov rax, [ret_stack_rsp]
    add rax, 160
    push rax
addr_3118: ;;// std/std.porth:685:13: OP_INLINED 753
addr_3119: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_3120: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_3121: ;;// std/std.porth:65:7: OP_INLINED 704
addr_3122: ;;// std/std.porth:58:38: OP_INLINED 684
addr_3123: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_3124: ;;// std/std.porth:56:57: OP_INLINED 36
addr_3125: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3126: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_3127: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3128: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_3129: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3130: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_3131: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_3132: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_3133: ;;// std/std.porth:66:7: OP_INLINED 716
addr_3134: ;;// std/std.porth:59:37: OP_INLINED 694
addr_3135: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_3136: ;;// std/std.porth:57:55: OP_INLINED 36
addr_3137: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3138: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_3139: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3140: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_3141: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3142: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_3143: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_3144: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_3145: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_3146: ;;// std/std.porth:686:3: OP_ELSE 3
    jmp addr_3149
addr_3147: ;;// std/std.porth:687:5: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_3148: ;;// std/std.porth:687:7: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_3149: ;;// std/std.porth:688:3: OP_END_IF 0
addr_3150: ;;// std/std.porth:689:1: OP_RET 176
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 176
    ret
addr_3151: ;;// std/std.porth:691:6: OP_PREP_PROC 144
    sub rsp, 144
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_3152: ;;// std/std.porth:694:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_3153: ;;// std/std.porth:694:11: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3154: ;;// std/std.porth:694:16: OP_INLINED 410
addr_3155: ;;// std/linux.porth:418:36: OP_PUSH_INT 4
    mov rax, 4
    push rax
addr_3156: ;;// std/linux.porth:418:45: OP_INTRINSIC syscall2
    pop rax
    pop rdi
    pop rsi
    syscall
    push rax
addr_3157: ;;// std/std.porth:696:3: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_3158: ;;// std/std.porth:696:7: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_3159: ;;// std/std.porth:696:9: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_3160: ;;// std/std.porth:696:11: OP_IF 4
    pop rax
    test rax, rax
    jz addr_3164
addr_3161: ;;// std/std.porth:697:5: OP_INTRINSIC drop
    pop rax
addr_3162: ;;// std/std.porth:697:10: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_3163: ;;// std/std.porth:698:3: OP_ELSE 11
    jmp addr_3174
addr_3164: ;;// std/std.porth:698:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_3165: ;;// std/std.porth:698:12: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_3166: ;;// std/std.porth:698:19: OP_INLINED 209
addr_3167: ;;// std/core.porth:114:31: OP_INTRINSIC not
    pop rax
    not rax
    push rax
addr_3168: ;;// std/core.porth:114:35: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3169: ;;// std/core.porth:114:37: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3170: ;;// std/std.porth:698:23: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_3171: ;;// std/std.porth:698:25: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_3175
addr_3172: ;;// std/std.porth:699:5: OP_INTRINSIC drop
    pop rax
addr_3173: ;;// std/std.porth:699:10: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_3174: ;;// std/std.porth:700:3: OP_ELSE 24
    jmp addr_3198
addr_3175: ;;// std/std.porth:701:5: OP_INTRINSIC drop
    pop rax
addr_3176: ;;// std/std.porth:701:10: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_3177: ;;// std/std.porth:702:5: OP_PUSH_STR 16
    mov rax, 19
    push rax
    lea rax, [str_16]
    push rax
addr_3178: ;;// std/std.porth:702:10: OP_INLINED 676
addr_3179: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_3180: ;;// std/std.porth:50:37: OP_INLINED 662
addr_3181: ;;// std/std.porth:48:34: OP_INLINED 394
addr_3182: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3183: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_3184: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_3185: ;;// std/std.porth:702:16: OP_PUSH_STR 17
    mov rax, 28
    push rax
    lea rax, [str_17]
    push rax
addr_3186: ;;// std/std.porth:702:48: OP_INLINED 676
addr_3187: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_3188: ;;// std/std.porth:50:37: OP_INLINED 662
addr_3189: ;;// std/std.porth:48:34: OP_INLINED 394
addr_3190: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3191: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_3192: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_3193: ;;// std/std.porth:703:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3194: ;;// std/std.porth:703:7: OP_INLINED 418
addr_3195: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_3196: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_3197: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_3198: ;;// std/std.porth:704:3: OP_END_IF 0
addr_3199: ;;// std/std.porth:705:1: OP_RET 144
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 144
    ret
addr_3200: ;;// std/std.porth:707:6: OP_PREP_PROC 8
    sub rsp, 8
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_3201: ;;// std/std.porth:713:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_3202: ;;// std/std.porth:713:6: OP_INLINED 30
addr_3203: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_3204: ;;// std/std.porth:714:3: OP_PUSH_STR 18
    mov rax, 10
    push rax
    lea rax, [str_18]
    push rax
addr_3205: ;;// std/std.porth:715:3: OP_WHILE 28
addr_3206: ;;// std/std.porth:716:5: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_3207: ;;// std/std.porth:716:10: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_3208: ;;// std/std.porth:716:12: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_3209: ;;// std/std.porth:716:14: OP_IF 8
    pop rax
    test rax, rax
    jz addr_3217
addr_3210: ;;// std/std.porth:717:7: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_3211: ;;// std/std.porth:717:11: OP_INTRINSIC @8
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_3212: ;;// std/std.porth:717:14: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_3213: ;;// std/std.porth:717:17: OP_INLINED 16
addr_3214: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_3215: ;;// std/std.porth:717:22: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_3216: ;;// std/std.porth:718:5: OP_ELSE 2
    jmp addr_3218
addr_3217: ;;// std/std.porth:718:10: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_3218: ;;// std/std.porth:718:16: OP_END_IF 0
addr_3219: ;;// std/std.porth:719:3: OP_DO 14
    pop rax
    test rax, rax
    jz addr_3233
addr_3220: ;;// std/std.porth:720:5: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3221: ;;// std/std.porth:720:10: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3222: ;;// std/std.porth:720:12: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_3223: ;;// std/std.porth:721:5: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3224: ;;// std/std.porth:721:10: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3225: ;;// std/std.porth:721:12: OP_INLINED 36
addr_3226: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3227: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_3228: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3229: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_3230: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3231: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_3232: ;;// std/std.porth:722:3: OP_END_WHILE 27
    jmp addr_3205
addr_3233: ;;// std/std.porth:723:3: OP_INTRINSIC drop
    pop rax
addr_3234: ;;// std/std.porth:723:8: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_3235: ;;// std/std.porth:723:10: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_3236: ;;// std/std.porth:724:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_3237: ;;// std/std.porth:724:6: OP_INLINED 16
addr_3238: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_3239: ;;// std/std.porth:724:11: OP_INLINED 1665
addr_3240: ;;// std/std.porth:272:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_3241: ;;// std/std.porth:273:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_3242: ;;// std/std.porth:273:7: OP_INLINED 1555
addr_3243: ;;// std/std.porth:248:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_3244: ;;// std/std.porth:249:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_3245: ;;// std/std.porth:249:7: OP_PUSH_INT 48
    mov rax, 48
    push rax
addr_3246: ;;// std/std.porth:249:11: OP_INTRINSIC >=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovge rcx, rdx
    push rcx
addr_3247: ;;// std/std.porth:250:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_3248: ;;// std/std.porth:250:7: OP_PUSH_INT 57
    mov rax, 57
    push rax
addr_3249: ;;// std/std.porth:250:11: OP_INTRINSIC <=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovle rcx, rdx
    push rcx
addr_3250: ;;// std/std.porth:251:5: OP_INLINED 138
addr_3251: ;;// std/core.porth:93:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3252: ;;// std/core.porth:93:8: OP_INTRINSIC cast(int)
addr_3253: ;;// std/core.porth:94:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3254: ;;// std/core.porth:94:8: OP_INTRINSIC cast(int)
addr_3255: ;;// std/core.porth:95:3: OP_INTRINSIC and
    pop rax
    pop rbx
    and rbx, rax
    push rbx
addr_3256: ;;// std/core.porth:96:3: OP_INTRINSIC cast(bool)
addr_3257: ;;// std/std.porth:252:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_3258: ;;// std/std.porth:274:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_3259: ;;// std/std.porth:274:7: OP_INLINED 1590
addr_3260: ;;// std/std.porth:257:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_3261: ;;// std/std.porth:258:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_3262: ;;// std/std.porth:258:7: OP_PUSH_INT 97
    mov rax, 97
    push rax
addr_3263: ;;// std/std.porth:258:11: OP_INTRINSIC >=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovge rcx, rdx
    push rcx
addr_3264: ;;// std/std.porth:259:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_3265: ;;// std/std.porth:259:7: OP_PUSH_INT 122
    mov rax, 122
    push rax
addr_3266: ;;// std/std.porth:259:11: OP_INTRINSIC <=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovle rcx, rdx
    push rcx
addr_3267: ;;// std/std.porth:260:5: OP_INLINED 138
addr_3268: ;;// std/core.porth:93:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3269: ;;// std/core.porth:93:8: OP_INTRINSIC cast(int)
addr_3270: ;;// std/core.porth:94:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3271: ;;// std/core.porth:94:8: OP_INTRINSIC cast(int)
addr_3272: ;;// std/core.porth:95:3: OP_INTRINSIC and
    pop rax
    pop rbx
    and rbx, rax
    push rbx
addr_3273: ;;// std/core.porth:96:3: OP_INTRINSIC cast(bool)
addr_3274: ;;// std/std.porth:262:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_3275: ;;// std/std.porth:262:7: OP_PUSH_INT 65
    mov rax, 65
    push rax
addr_3276: ;;// std/std.porth:262:11: OP_INTRINSIC >=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovge rcx, rdx
    push rcx
addr_3277: ;;// std/std.porth:263:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_3278: ;;// std/std.porth:263:7: OP_PUSH_INT 90
    mov rax, 90
    push rax
addr_3279: ;;// std/std.porth:263:11: OP_INTRINSIC <=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovle rcx, rdx
    push rcx
addr_3280: ;;// std/std.porth:264:5: OP_INLINED 138
addr_3281: ;;// std/core.porth:93:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3282: ;;// std/core.porth:93:8: OP_INTRINSIC cast(int)
addr_3283: ;;// std/core.porth:94:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3284: ;;// std/core.porth:94:8: OP_INTRINSIC cast(int)
addr_3285: ;;// std/core.porth:95:3: OP_INTRINSIC and
    pop rax
    pop rbx
    and rbx, rax
    push rbx
addr_3286: ;;// std/core.porth:96:3: OP_INTRINSIC cast(bool)
addr_3287: ;;// std/std.porth:266:5: OP_INLINED 146
addr_3288: ;;// std/core.porth:100:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3289: ;;// std/core.porth:100:8: OP_INTRINSIC cast(int)
addr_3290: ;;// std/core.porth:101:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3291: ;;// std/core.porth:101:8: OP_INTRINSIC cast(int)
addr_3292: ;;// std/core.porth:102:3: OP_INTRINSIC or
    pop rax
    pop rbx
    or rbx, rax
    push rbx
addr_3293: ;;// std/core.porth:103:3: OP_INTRINSIC cast(bool)
addr_3294: ;;// std/std.porth:267:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_3295: ;;// std/std.porth:275:5: OP_INLINED 146
addr_3296: ;;// std/core.porth:100:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3297: ;;// std/core.porth:100:8: OP_INTRINSIC cast(int)
addr_3298: ;;// std/core.porth:101:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3299: ;;// std/core.porth:101:8: OP_INTRINSIC cast(int)
addr_3300: ;;// std/core.porth:102:3: OP_INTRINSIC or
    pop rax
    pop rbx
    or rbx, rax
    push rbx
addr_3301: ;;// std/core.porth:103:3: OP_INTRINSIC cast(bool)
addr_3302: ;;// std/std.porth:276:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_3303: ;;// std/std.porth:725:3: OP_INLINED 146
addr_3304: ;;// std/core.porth:100:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3305: ;;// std/core.porth:100:8: OP_INTRINSIC cast(int)
addr_3306: ;;// std/core.porth:101:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3307: ;;// std/core.porth:101:8: OP_INTRINSIC cast(int)
addr_3308: ;;// std/core.porth:102:3: OP_INTRINSIC or
    pop rax
    pop rbx
    or rbx, rax
    push rbx
addr_3309: ;;// std/core.porth:103:3: OP_INTRINSIC cast(bool)
addr_3310: ;;// std/std.porth:726:1: OP_RET 8
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 8
    ret
addr_3311: ;;// std/std.porth:728:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_3312: ;;// std/std.porth:733:3: OP_WHILE 25
addr_3313: ;;// std/std.porth:734:5: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_3314: ;;// std/std.porth:734:10: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_3315: ;;// std/std.porth:734:12: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_3316: ;;// std/std.porth:734:14: OP_IF 5
    pop rax
    test rax, rax
    jz addr_3321
addr_3317: ;;// std/std.porth:735:7: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_3318: ;;// std/std.porth:735:11: OP_INTRINSIC @8
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_3319: ;;// std/std.porth:735:14: OP_CALL 3200
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_3200
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_3320: ;;// std/std.porth:736:5: OP_ELSE 2
    jmp addr_3322
addr_3321: ;;// std/std.porth:736:10: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_3322: ;;// std/std.porth:736:16: OP_END_IF 0
addr_3323: ;;// std/std.porth:737:3: OP_DO 14
    pop rax
    test rax, rax
    jz addr_3337
addr_3324: ;;// std/std.porth:738:5: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3325: ;;// std/std.porth:738:10: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3326: ;;// std/std.porth:738:12: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_3327: ;;// std/std.porth:739:5: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3328: ;;// std/std.porth:739:10: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3329: ;;// std/std.porth:739:12: OP_INLINED 36
addr_3330: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3331: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_3332: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3333: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_3334: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3335: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_3336: ;;// std/std.porth:740:3: OP_END_WHILE 24
    jmp addr_3312
addr_3337: ;;// std/std.porth:741:3: OP_INTRINSIC drop
    pop rax
addr_3338: ;;// std/std.porth:741:8: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_3339: ;;// std/std.porth:741:10: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_3340: ;;// std/std.porth:742:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_3341: ;;// std/std.porth:744:6: OP_PREP_PROC 8
    sub rsp, 8
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_3342: ;;// std/std.porth:750:3: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_3343: ;;// std/std.porth:750:8: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_3344: ;;// std/std.porth:750:13: OP_CALL 3311
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_3311
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_3345: ;;// std/std.porth:750:29: OP_INLINED 131
addr_3346: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_3347: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3348: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3349: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_3350: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_3351: ;;// std/std.porth:750:34: OP_IF 90
    pop rax
    test rax, rax
    jz addr_3441
addr_3352: ;;// std/std.porth:751:5: OP_INLINED 2414
addr_3353: ;;// std/std.porth:506:31: OP_PUSH_GLOBAL_MEM 8
    lea rax, [mem+8]
    push rax
addr_3354: ;;// std/std.porth:506:41: OP_PUSH_GLOBAL_MEM 8388616
    lea rax, [mem+8388616]
    push rax
addr_3355: ;;// std/std.porth:506:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_3356: ;;// std/std.porth:506:54: OP_INLINED 36
addr_3357: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3358: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_3359: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3360: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_3361: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3362: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_3363: ;;// std/std.porth:751:13: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_3364: ;;// std/std.porth:751:20: OP_INLINED 27
addr_3365: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_3366: ;;// std/std.porth:752:5: OP_PUSH_STR 19
    mov rax, 1
    push rax
    lea rax, [str_19]
    push rax
addr_3367: ;;// std/std.porth:752:9: OP_INLINED 2496
addr_3368: ;;// std/std.porth:526:42: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_3369: ;;// std/std.porth:526:47: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_3370: ;;// std/std.porth:526:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_3371: ;;// std/std.porth:752:20: OP_INTRINSIC drop
    pop rax
addr_3372: ;;// std/std.porth:753:7: OP_WHILE 36
addr_3373: ;;// std/std.porth:753:13: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_3374: ;;// std/std.porth:753:18: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_3375: ;;// std/std.porth:753:20: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_3376: ;;// std/std.porth:753:22: OP_DO 32
    pop rax
    test rax, rax
    jz addr_3408
addr_3377: ;;// std/std.porth:754:9: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_3378: ;;// std/std.porth:754:13: OP_INTRINSIC @8
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_3379: ;;// std/std.porth:756:9: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_3380: ;;// std/std.porth:756:13: OP_PUSH_INT 39
    mov rax, 39
    push rax
addr_3381: ;;// std/std.porth:756:18: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_3382: ;;// std/std.porth:756:20: OP_IF 9
    pop rax
    test rax, rax
    jz addr_3391
addr_3383: ;;// std/std.porth:757:11: OP_INTRINSIC drop
    pop rax
addr_3384: ;;// std/std.porth:758:11: OP_PUSH_STR 20
    mov rax, 5
    push rax
    lea rax, [str_20]
    push rax
addr_3385: ;;// std/std.porth:758:21: OP_INLINED 2496
addr_3386: ;;// std/std.porth:526:42: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_3387: ;;// std/std.porth:526:47: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_3388: ;;// std/std.porth:526:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_3389: ;;// std/std.porth:758:32: OP_INTRINSIC drop
    pop rax
addr_3390: ;;// std/std.porth:759:9: OP_ELSE 4
    jmp addr_3394
addr_3391: ;;// std/std.porth:760:11: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3392: ;;// std/std.porth:760:13: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_3393: ;;// std/std.porth:760:23: OP_INTRINSIC !8
    pop rax
    pop rbx
    mov [rax], bl
addr_3394: ;;// std/std.porth:761:9: OP_END_IF 0
addr_3395: ;;// std/std.porth:763:9: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3396: ;;// std/std.porth:763:14: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3397: ;;// std/std.porth:763:16: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_3398: ;;// std/std.porth:764:9: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3399: ;;// std/std.porth:764:14: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3400: ;;// std/std.porth:764:16: OP_INLINED 36
addr_3401: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3402: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_3403: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3404: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_3405: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3406: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_3407: ;;// std/std.porth:765:7: OP_END_WHILE 35
    jmp addr_3372
addr_3408: ;;// std/std.porth:765:11: OP_INTRINSIC drop
    pop rax
addr_3409: ;;// std/std.porth:765:16: OP_INTRINSIC drop
    pop rax
addr_3410: ;;// std/std.porth:766:5: OP_PUSH_STR 21
    mov rax, 1
    push rax
    lea rax, [str_21]
    push rax
addr_3411: ;;// std/std.porth:766:9: OP_INLINED 2496
addr_3412: ;;// std/std.porth:526:42: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_3413: ;;// std/std.porth:526:47: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_3414: ;;// std/std.porth:526:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_3415: ;;// std/std.porth:766:20: OP_INTRINSIC drop
    pop rax
addr_3416: ;;// std/std.porth:768:5: OP_INLINED 2414
addr_3417: ;;// std/std.porth:506:31: OP_PUSH_GLOBAL_MEM 8
    lea rax, [mem+8]
    push rax
addr_3418: ;;// std/std.porth:506:41: OP_PUSH_GLOBAL_MEM 8388616
    lea rax, [mem+8388616]
    push rax
addr_3419: ;;// std/std.porth:506:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_3420: ;;// std/std.porth:506:54: OP_INLINED 36
addr_3421: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3422: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_3423: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3424: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_3425: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3426: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_3427: ;;// std/std.porth:768:13: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_3428: ;;// std/std.porth:768:20: OP_INLINED 0
addr_3429: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_3430: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_3431: ;;// std/std.porth:768:25: OP_INLINED 78
addr_3432: ;;// std/core.porth:68:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3433: ;;// std/core.porth:68:8: OP_INTRINSIC cast(int)
addr_3434: ;;// std/core.porth:69:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3435: ;;// std/core.porth:69:8: OP_INTRINSIC cast(int)
addr_3436: ;;// std/core.porth:70:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_3437: ;;// std/std.porth:769:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_3438: ;;// std/std.porth:769:12: OP_INLINED 0
addr_3439: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_3440: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_3441: ;;// std/std.porth:770:3: OP_END_IF 0
addr_3442: ;;// std/std.porth:771:1: OP_RET 8
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 8
    ret
addr_3443: ;;// std/std.porth:775:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_3444: ;;// std/std.porth:776:3: OP_PUSH_GLOBAL_MEM 8388624
    lea rax, [mem+8388624]
    push rax
addr_3445: ;;// std/std.porth:776:16: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3446: ;;// std/std.porth:776:32: OP_INLINED 431
addr_3447: ;;// std/linux.porth:423:45: OP_PUSH_INT 228
    mov rax, 228
    push rax
addr_3448: ;;// std/linux.porth:423:63: OP_INTRINSIC syscall2
    pop rax
    pop rdi
    pop rsi
    syscall
    push rax
addr_3449: ;;// std/std.porth:776:46: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_3450: ;;// std/std.porth:776:48: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_3451: ;;// std/std.porth:776:50: OP_IF 14
    pop rax
    test rax, rax
    jz addr_3465
addr_3452: ;;// std/std.porth:777:5: OP_PUSH_STR 22
    mov rax, 64
    push rax
    lea rax, [str_22]
    push rax
addr_3453: ;;// std/std.porth:777:73: OP_INLINED 676
addr_3454: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_3455: ;;// std/std.porth:50:37: OP_INLINED 662
addr_3456: ;;// std/std.porth:48:34: OP_INLINED 394
addr_3457: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3458: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_3459: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_3460: ;;// std/std.porth:778:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3461: ;;// std/std.porth:778:7: OP_INLINED 418
addr_3462: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_3463: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_3464: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_3465: ;;// std/std.porth:779:3: OP_END_IF 0
addr_3466: ;;// std/std.porth:780:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_3467: ;;// std/std.porth:786:6: OP_PREP_PROC 16
    sub rsp, 16
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_3468: ;;// std/std.porth:791:3: OP_INLINED 131
addr_3469: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_3470: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3471: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3472: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_3473: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_3474: ;;// std/std.porth:791:8: OP_IF 123
    pop rax
    test rax, rax
    jz addr_3597
addr_3475: ;;// std/std.porth:792:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_3476: ;;// std/std.porth:792:16: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3477: ;;// std/std.porth:792:32: OP_INLINED 431
addr_3478: ;;// std/linux.porth:423:45: OP_PUSH_INT 228
    mov rax, 228
    push rax
addr_3479: ;;// std/linux.porth:423:63: OP_INTRINSIC syscall2
    pop rax
    pop rdi
    pop rsi
    syscall
    push rax
addr_3480: ;;// std/std.porth:792:46: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_3481: ;;// std/std.porth:792:48: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_3482: ;;// std/std.porth:792:50: OP_IF 14
    pop rax
    test rax, rax
    jz addr_3496
addr_3483: ;;// std/std.porth:793:7: OP_PUSH_STR 23
    mov rax, 62
    push rax
    lea rax, [str_23]
    push rax
addr_3484: ;;// std/std.porth:793:73: OP_INLINED 676
addr_3485: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_3486: ;;// std/std.porth:50:37: OP_INLINED 662
addr_3487: ;;// std/std.porth:48:34: OP_INLINED 394
addr_3488: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3489: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_3490: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_3491: ;;// std/std.porth:794:7: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3492: ;;// std/std.porth:794:9: OP_INLINED 418
addr_3493: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_3494: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_3495: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_3496: ;;// std/std.porth:795:5: OP_END_IF 0
addr_3497: ;;// std/std.porth:796:5: OP_INLINED 668
addr_3498: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3499: ;;// std/std.porth:49:36: OP_INLINED 662
addr_3500: ;;// std/std.porth:48:34: OP_INLINED 394
addr_3501: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3502: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_3503: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_3504: ;;// std/std.porth:796:10: OP_PUSH_STR 24
    mov rax, 6
    push rax
    lea rax, [str_24]
    push rax
addr_3505: ;;// std/std.porth:796:19: OP_INLINED 668
addr_3506: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3507: ;;// std/std.porth:49:36: OP_INLINED 662
addr_3508: ;;// std/std.porth:48:34: OP_INLINED 394
addr_3509: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3510: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_3511: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_3512: ;;// std/std.porth:798:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_3513: ;;// std/std.porth:798:18: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_3514: ;;// std/std.porth:798:34: OP_INLINED 36
addr_3515: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3516: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_3517: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3518: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_3519: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3520: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_3521: ;;// std/std.porth:798:39: OP_INLINED 16
addr_3522: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_3523: ;;// std/std.porth:799:5: OP_PUSH_GLOBAL_MEM 8388624
    lea rax, [mem+8388624]
    push rax
addr_3524: ;;// std/std.porth:799:18: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_3525: ;;// std/std.porth:799:34: OP_INLINED 36
addr_3526: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3527: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_3528: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3529: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_3530: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3531: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_3532: ;;// std/std.porth:799:39: OP_INLINED 16
addr_3533: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_3534: ;;// std/std.porth:800:5: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_3535: ;;// std/std.porth:801:5: OP_PUSH_INT 1000000000
    mov rax, 1000000000
    push rax
addr_3536: ;;// std/std.porth:801:9: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_3537: ;;// std/std.porth:802:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_3538: ;;// std/std.porth:802:18: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_3539: ;;// std/std.porth:802:35: OP_INLINED 36
addr_3540: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3541: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_3542: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3543: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_3544: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3545: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_3546: ;;// std/std.porth:802:40: OP_INLINED 16
addr_3547: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_3548: ;;// std/std.porth:803:5: OP_PUSH_GLOBAL_MEM 8388624
    lea rax, [mem+8388624]
    push rax
addr_3549: ;;// std/std.porth:803:18: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_3550: ;;// std/std.porth:803:35: OP_INLINED 36
addr_3551: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3552: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_3553: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3554: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_3555: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3556: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_3557: ;;// std/std.porth:803:40: OP_INLINED 16
addr_3558: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_3559: ;;// std/std.porth:804:5: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_3560: ;;// std/std.porth:805:5: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3561: ;;// std/std.porth:806:7: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_3562: ;;// std/std.porth:806:11: OP_PUSH_INT 1000000000
    mov rax, 1000000000
    push rax
addr_3563: ;;// std/std.porth:806:15: OP_INLINED 85
addr_3564: ;;// std/core.porth:73:36: OP_INTRINSIC divmod
    xor rdx, rdx
    pop rbx
    pop rax
    div rbx
    push rax
    push rdx
addr_3565: ;;// std/core.porth:73:43: OP_INTRINSIC drop
    pop rax
addr_3566: ;;// std/std.porth:806:24: OP_INLINED 2111
addr_3567: ;;// std/std.porth:408:25: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3568: ;;// std/std.porth:408:32: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_3569: ;;// std/std.porth:807:7: OP_PUSH_STR 25
    mov rax, 1
    push rax
    lea rax, [str_25]
    push rax
addr_3570: ;;// std/std.porth:807:24: OP_INLINED 668
addr_3571: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3572: ;;// std/std.porth:49:36: OP_INLINED 662
addr_3573: ;;// std/std.porth:48:34: OP_INLINED 394
addr_3574: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3575: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_3576: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_3577: ;;// std/std.porth:808:7: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_3578: ;;// std/std.porth:808:11: OP_PUSH_INT 1000000000
    mov rax, 1000000000
    push rax
addr_3579: ;;// std/std.porth:808:15: OP_INLINED 89
addr_3580: ;;// std/core.porth:74:36: OP_INTRINSIC divmod
    xor rdx, rdx
    pop rbx
    pop rax
    div rbx
    push rax
    push rdx
addr_3581: ;;// std/core.porth:74:43: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3582: ;;// std/core.porth:74:48: OP_INTRINSIC drop
    pop rax
addr_3583: ;;// std/std.porth:808:17: OP_PUSH_INT 9
    mov rax, 9
    push rax
addr_3584: ;;// std/std.porth:808:24: OP_INLINED 2115
addr_3585: ;;// std/std.porth:409:30: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3586: ;;// std/std.porth:409:37: OP_CALL 2009
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2009
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_3587: ;;// std/std.porth:809:7: OP_PUSH_STR 26
    mov rax, 6
    push rax
    lea rax, [str_26]
    push rax
addr_3588: ;;// std/std.porth:809:24: OP_INLINED 668
addr_3589: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3590: ;;// std/std.porth:49:36: OP_INLINED 662
addr_3591: ;;// std/std.porth:48:34: OP_INLINED 394
addr_3592: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3593: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_3594: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_3595: ;;// std/std.porth:810:5: OP_INTRINSIC drop
    pop rax
addr_3596: ;;// std/std.porth:811:3: OP_ELSE 3
    jmp addr_3599
addr_3597: ;;// std/std.porth:812:5: OP_INTRINSIC drop
    pop rax
addr_3598: ;;// std/std.porth:812:10: OP_INTRINSIC drop
    pop rax
addr_3599: ;;// std/std.porth:813:3: OP_END_IF 0
addr_3600: ;;// std/std.porth:814:1: OP_RET 16
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 16
    ret
addr_3601: ;;// std/std.porth:816:6: OP_PREP_PROC 24
    sub rsp, 24
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_3602: ;;// std/std.porth:823:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_3603: ;;// std/std.porth:823:10: OP_INLINED 30
addr_3604: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_3605: ;;// std/std.porth:826:3: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_3606: ;;// std/std.porth:826:7: OP_INLINED 782
addr_3607: ;;// std/std.porth:71:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_3608: ;;// std/std.porth:72:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_3609: ;;// std/std.porth:72:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_3610: ;;// std/std.porth:72:9: OP_INLINED 729
addr_3611: ;;// std/std.porth:60:35: OP_INLINED 684
addr_3612: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_3613: ;;// std/std.porth:56:57: OP_INLINED 36
addr_3614: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3615: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_3616: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3617: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_3618: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3619: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_3620: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_3621: ;;// std/std.porth:73:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_3622: ;;// std/std.porth:73:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_3623: ;;// std/std.porth:73:9: OP_INLINED 741
addr_3624: ;;// std/std.porth:61:34: OP_INLINED 694
addr_3625: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_3626: ;;// std/std.porth:57:55: OP_INLINED 36
addr_3627: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3628: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_3629: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3630: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_3631: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3632: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_3633: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_3634: ;;// std/std.porth:74:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_3635: ;;// std/std.porth:828:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_3636: ;;// std/std.porth:829:3: OP_WHILE 65
addr_3637: ;;// std/std.porth:830:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_3638: ;;// std/std.porth:830:9: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_3639: ;;// std/std.porth:830:13: OP_INLINED 704
addr_3640: ;;// std/std.porth:58:38: OP_INLINED 684
addr_3641: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_3642: ;;// std/std.porth:56:57: OP_INLINED 36
addr_3643: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3644: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_3645: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3646: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_3647: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3648: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_3649: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_3650: ;;// std/std.porth:830:24: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_3651: ;;// std/std.porth:830:26: OP_IF 44
    pop rax
    test rax, rax
    jz addr_3695
addr_3652: ;;// std/std.porth:831:7: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_3653: ;;// std/std.porth:831:11: OP_INLINED 704
addr_3654: ;;// std/std.porth:58:38: OP_INLINED 684
addr_3655: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_3656: ;;// std/std.porth:56:57: OP_INLINED 36
addr_3657: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3658: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_3659: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3660: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_3661: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3662: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_3663: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_3664: ;;// std/std.porth:831:22: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_3665: ;;// std/std.porth:831:27: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_3666: ;;// std/std.porth:831:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3667: ;;// std/std.porth:831:31: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_3668: ;;// std/std.porth:832:7: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_3669: ;;// std/std.porth:832:11: OP_INLINED 716
addr_3670: ;;// std/std.porth:59:37: OP_INLINED 694
addr_3671: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_3672: ;;// std/std.porth:57:55: OP_INLINED 36
addr_3673: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3674: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_3675: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3676: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_3677: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3678: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_3679: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_3680: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_3681: ;;// std/std.porth:832:21: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3682: ;;// std/std.porth:832:26: OP_INLINED 36
addr_3683: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3684: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_3685: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3686: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_3687: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3688: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_3689: ;;// std/std.porth:833:7: OP_INTRINSIC @8
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_3690: ;;// std/std.porth:833:10: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_3691: ;;// std/std.porth:833:17: OP_INLINED 16
addr_3692: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_3693: ;;// std/std.porth:833:22: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_3694: ;;// std/std.porth:834:5: OP_ELSE 2
    jmp addr_3696
addr_3695: ;;// std/std.porth:834:10: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_3696: ;;// std/std.porth:834:16: OP_END_IF 0
addr_3697: ;;// std/std.porth:835:3: OP_DO 4
    pop rax
    test rax, rax
    jz addr_3701
addr_3698: ;;// std/std.porth:836:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3699: ;;// std/std.porth:836:7: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3700: ;;// std/std.porth:837:3: OP_END_WHILE 64
    jmp addr_3636
addr_3701: ;;// std/std.porth:839:3: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_3702: ;;// std/std.porth:839:7: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_3703: ;;// std/std.porth:839:11: OP_INLINED 704
addr_3704: ;;// std/std.porth:58:38: OP_INLINED 684
addr_3705: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_3706: ;;// std/std.porth:56:57: OP_INLINED 36
addr_3707: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3708: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_3709: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3710: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_3711: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3712: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_3713: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_3714: ;;// std/std.porth:839:22: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_3715: ;;// std/std.porth:839:24: OP_IF 18
    pop rax
    test rax, rax
    jz addr_3733
addr_3716: ;;// std/std.porth:840:5: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_3717: ;;// std/std.porth:840:9: OP_INLINED 704
addr_3718: ;;// std/std.porth:58:38: OP_INLINED 684
addr_3719: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_3720: ;;// std/std.porth:56:57: OP_INLINED 36
addr_3721: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3722: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_3723: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3724: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_3725: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3726: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_3727: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_3728: ;;// std/std.porth:840:20: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3729: ;;// std/std.porth:840:25: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_3730: ;;// std/std.porth:840:27: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3731: ;;// std/std.porth:840:29: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_3732: ;;// std/std.porth:841:3: OP_ELSE 5
    jmp addr_3737
addr_3733: ;;// std/std.porth:842:5: OP_INTRINSIC drop
    pop rax
addr_3734: ;;// std/std.porth:842:10: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_3735: ;;// std/std.porth:842:12: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3736: ;;// std/std.porth:842:14: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_3737: ;;// std/std.porth:843:3: OP_END_IF 0
addr_3738: ;;// std/std.porth:844:1: OP_RET 24
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 24
    ret
addr_3739: ;;// std/std.porth:847:6: OP_PREP_PROC 16
    sub rsp, 16
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_3740: ;;// std/std.porth:853:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_3741: ;;// std/std.porth:853:8: OP_INLINED 782
addr_3742: ;;// std/std.porth:71:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_3743: ;;// std/std.porth:72:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_3744: ;;// std/std.porth:72:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_3745: ;;// std/std.porth:72:9: OP_INLINED 729
addr_3746: ;;// std/std.porth:60:35: OP_INLINED 684
addr_3747: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_3748: ;;// std/std.porth:56:57: OP_INLINED 36
addr_3749: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3750: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_3751: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3752: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_3753: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3754: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_3755: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_3756: ;;// std/std.porth:73:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_3757: ;;// std/std.porth:73:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_3758: ;;// std/std.porth:73:9: OP_INLINED 741
addr_3759: ;;// std/std.porth:61:34: OP_INLINED 694
addr_3760: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_3761: ;;// std/std.porth:57:55: OP_INLINED 36
addr_3762: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3763: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_3764: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3765: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_3766: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3767: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_3768: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_3769: ;;// std/std.porth:74:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_3770: ;;// std/std.porth:855:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_3771: ;;// std/std.porth:855:8: OP_INLINED 753
addr_3772: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_3773: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_3774: ;;// std/std.porth:65:7: OP_INLINED 704
addr_3775: ;;// std/std.porth:58:38: OP_INLINED 684
addr_3776: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_3777: ;;// std/std.porth:56:57: OP_INLINED 36
addr_3778: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3779: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_3780: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3781: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_3782: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3783: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_3784: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_3785: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_3786: ;;// std/std.porth:66:7: OP_INLINED 716
addr_3787: ;;// std/std.porth:59:37: OP_INLINED 694
addr_3788: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_3789: ;;// std/std.porth:57:55: OP_INLINED 36
addr_3790: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3791: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_3792: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3793: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_3794: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3795: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_3796: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_3797: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_3798: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_3799: ;;// std/std.porth:855:13: OP_PUSH_INT 47
    mov rax, 47
    push rax
addr_3800: ;;// std/std.porth:855:17: OP_CALL 3601
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_3601
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_3801: ;;// std/std.porth:855:27: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3802: ;;// std/std.porth:855:29: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3803: ;;// std/std.porth:856:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_3804: ;;// std/std.porth:856:8: OP_INLINED 729
addr_3805: ;;// std/std.porth:60:35: OP_INLINED 684
addr_3806: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_3807: ;;// std/std.porth:56:57: OP_INLINED 36
addr_3808: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3809: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_3810: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3811: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_3812: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3813: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_3814: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_3815: ;;// std/std.porth:858:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_3816: ;;// std/std.porth:858:8: OP_INLINED 1483
addr_3817: ;;// std/std.porth:214:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_3818: ;;// std/std.porth:214:23: OP_INLINED 36
addr_3819: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3820: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_3821: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3822: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_3823: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3824: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_3825: ;;// std/std.porth:215:3: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_3826: ;;// std/std.porth:216:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_3827: ;;// std/std.porth:216:5: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_3828: ;;// std/std.porth:858:19: OP_IF 33
    pop rax
    test rax, rax
    jz addr_3861
addr_3829: ;;// std/std.porth:859:5: OP_PUSH_STR 27
    mov rax, 1
    push rax
    lea rax, [str_27]
    push rax
addr_3830: ;;// std/std.porth:859:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_3831: ;;// std/std.porth:859:14: OP_INLINED 782
addr_3832: ;;// std/std.porth:71:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_3833: ;;// std/std.porth:72:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_3834: ;;// std/std.porth:72:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_3835: ;;// std/std.porth:72:9: OP_INLINED 729
addr_3836: ;;// std/std.porth:60:35: OP_INLINED 684
addr_3837: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_3838: ;;// std/std.porth:56:57: OP_INLINED 36
addr_3839: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3840: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_3841: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3842: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_3843: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3844: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_3845: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_3846: ;;// std/std.porth:73:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_3847: ;;// std/std.porth:73:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_3848: ;;// std/std.porth:73:9: OP_INLINED 741
addr_3849: ;;// std/std.porth:61:34: OP_INLINED 694
addr_3850: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_3851: ;;// std/std.porth:57:55: OP_INLINED 36
addr_3852: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3853: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_3854: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3855: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_3856: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3857: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_3858: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_3859: ;;// std/std.porth:74:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_3860: ;;// std/std.porth:860:3: OP_ELSE 57
    jmp addr_3917
addr_3861: ;;// std/std.porth:860:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_3862: ;;// std/std.porth:860:13: OP_INLINED 753
addr_3863: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_3864: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_3865: ;;// std/std.porth:65:7: OP_INLINED 704
addr_3866: ;;// std/std.porth:58:38: OP_INLINED 684
addr_3867: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_3868: ;;// std/std.porth:56:57: OP_INLINED 36
addr_3869: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3870: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_3871: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3872: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_3873: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3874: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_3875: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_3876: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_3877: ;;// std/std.porth:66:7: OP_INLINED 716
addr_3878: ;;// std/std.porth:59:37: OP_INLINED 694
addr_3879: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_3880: ;;// std/std.porth:57:55: OP_INLINED 36
addr_3881: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3882: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_3883: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3884: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_3885: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3886: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_3887: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_3888: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_3889: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_3890: ;;// std/std.porth:860:18: OP_PUSH_STR 28
    mov rax, 1
    push rax
    lea rax, [str_28]
    push rax
addr_3891: ;;// std/std.porth:860:22: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_3892: ;;// std/std.porth:860:28: OP_INLINED 131
addr_3893: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_3894: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3895: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3896: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_3897: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_3898: ;;// std/std.porth:860:33: OP_IFSTAR 20
    pop rax
    test rax, rax
    jz addr_3918
addr_3899: ;;// std/std.porth:861:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_3900: ;;// std/std.porth:861:10: OP_INLINED 851
addr_3901: ;;// std/std.porth:85:3: OP_INLINED 684
addr_3902: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_3903: ;;// std/std.porth:56:57: OP_INLINED 36
addr_3904: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3905: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_3906: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3907: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_3908: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3909: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_3910: ;;// std/std.porth:85:13: OP_INLINED 169
addr_3911: ;;// std/core.porth:108:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_3912: ;;// std/core.porth:108:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_3913: ;;// std/core.porth:108:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3914: ;;// std/core.porth:108:36: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_3915: ;;// std/core.porth:108:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3916: ;;// std/core.porth:108:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_3917: ;;// std/std.porth:862:3: OP_END_IF 0
addr_3918: ;;// std/std.porth:864:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_3919: ;;// std/std.porth:864:8: OP_INLINED 753
addr_3920: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_3921: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_3922: ;;// std/std.porth:65:7: OP_INLINED 704
addr_3923: ;;// std/std.porth:58:38: OP_INLINED 684
addr_3924: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_3925: ;;// std/std.porth:56:57: OP_INLINED 36
addr_3926: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3927: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_3928: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3929: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_3930: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3931: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_3932: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_3933: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_3934: ;;// std/std.porth:66:7: OP_INLINED 716
addr_3935: ;;// std/std.porth:59:37: OP_INLINED 694
addr_3936: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_3937: ;;// std/std.porth:57:55: OP_INLINED 36
addr_3938: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3939: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_3940: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3941: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_3942: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3943: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_3944: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_3945: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_3946: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_3947: ;;// std/std.porth:865:1: OP_RET 16
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 16
    ret
addr_3948: ;;// std/std.porth:867:6: OP_PREP_PROC 8
    sub rsp, 8
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_3949: ;;// std/std.porth:871:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_3950: ;;// std/std.porth:871:7: OP_INTRINSIC !8
    pop rax
    pop rbx
    mov [rax], bl
addr_3951: ;;// std/std.porth:872:3: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3952: ;;// std/std.porth:872:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_3953: ;;// std/std.porth:872:9: OP_INLINED 668
addr_3954: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3955: ;;// std/std.porth:49:36: OP_INLINED 662
addr_3956: ;;// std/std.porth:48:34: OP_INLINED 394
addr_3957: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_3958: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_3959: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_3960: ;;// std/std.porth:873:1: OP_RET 8
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 8
    ret
addr_3961: ;;// std/std.porth:875:6: OP_PREP_PROC 16
    sub rsp, 16
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_3962: ;;// std/std.porth:881:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_3963: ;;// std/std.porth:881:8: OP_INLINED 782
addr_3964: ;;// std/std.porth:71:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_3965: ;;// std/std.porth:72:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_3966: ;;// std/std.porth:72:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_3967: ;;// std/std.porth:72:9: OP_INLINED 729
addr_3968: ;;// std/std.porth:60:35: OP_INLINED 684
addr_3969: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_3970: ;;// std/std.porth:56:57: OP_INLINED 36
addr_3971: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3972: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_3973: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3974: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_3975: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3976: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_3977: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_3978: ;;// std/std.porth:73:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_3979: ;;// std/std.porth:73:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_3980: ;;// std/std.porth:73:9: OP_INLINED 741
addr_3981: ;;// std/std.porth:61:34: OP_INLINED 694
addr_3982: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_3983: ;;// std/std.porth:57:55: OP_INLINED 36
addr_3984: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3985: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_3986: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_3987: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_3988: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_3989: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_3990: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_3991: ;;// std/std.porth:74:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_3992: ;;// std/std.porth:883:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_3993: ;;// std/std.porth:883:8: OP_INLINED 753
addr_3994: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_3995: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_3996: ;;// std/std.porth:65:7: OP_INLINED 704
addr_3997: ;;// std/std.porth:58:38: OP_INLINED 684
addr_3998: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_3999: ;;// std/std.porth:56:57: OP_INLINED 36
addr_4000: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4001: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_4002: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4003: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_4004: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_4005: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_4006: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_4007: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_4008: ;;// std/std.porth:66:7: OP_INLINED 716
addr_4009: ;;// std/std.porth:59:37: OP_INLINED 694
addr_4010: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_4011: ;;// std/std.porth:57:55: OP_INLINED 36
addr_4012: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4013: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_4014: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4015: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_4016: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_4017: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_4018: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_4019: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_4020: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_4021: ;;// std/std.porth:883:13: OP_PUSH_INT 47
    mov rax, 47
    push rax
addr_4022: ;;// std/std.porth:883:17: OP_CALL 3601
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_3601
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_4023: ;;// std/std.porth:884:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_4024: ;;// std/std.porth:884:8: OP_INLINED 753
addr_4025: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_4026: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_4027: ;;// std/std.porth:65:7: OP_INLINED 704
addr_4028: ;;// std/std.porth:58:38: OP_INLINED 684
addr_4029: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_4030: ;;// std/std.porth:56:57: OP_INLINED 36
addr_4031: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4032: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_4033: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4034: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_4035: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_4036: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_4037: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_4038: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_4039: ;;// std/std.porth:66:7: OP_INLINED 716
addr_4040: ;;// std/std.porth:59:37: OP_INLINED 694
addr_4041: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_4042: ;;// std/std.porth:57:55: OP_INLINED 36
addr_4043: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4044: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_4045: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4046: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_4047: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_4048: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_4049: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_4050: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_4051: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_4052: ;;// std/std.porth:884:13: OP_PUSH_INT 46
    mov rax, 46
    push rax
addr_4053: ;;// std/std.porth:884:17: OP_CALL 3601
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_3601
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_4054: ;;// std/std.porth:886:3: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_4055: ;;// std/std.porth:886:8: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_4056: ;;// std/std.porth:886:13: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_4057: ;;// std/std.porth:886:15: OP_IF 17
    pop rax
    test rax, rax
    jz addr_4074
addr_4058: ;;// std/std.porth:887:5: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4059: ;;// std/std.porth:887:10: OP_INTRINSIC drop
    pop rax
addr_4060: ;;// std/std.porth:887:15: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_4061: ;;// std/std.porth:887:20: OP_INLINED 716
addr_4062: ;;// std/std.porth:59:37: OP_INLINED 694
addr_4063: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_4064: ;;// std/std.porth:57:55: OP_INLINED 36
addr_4065: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4066: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_4067: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4068: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_4069: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_4070: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_4071: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_4072: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_4073: ;;// std/std.porth:888:3: OP_ELSE 32
    jmp addr_4105
addr_4074: ;;// std/std.porth:889:5: OP_INTRINSIC drop
    pop rax
addr_4075: ;;// std/std.porth:889:10: OP_INTRINSIC drop
    pop rax
addr_4076: ;;// std/std.porth:889:15: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_4077: ;;// std/std.porth:889:20: OP_INLINED 753
addr_4078: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_4079: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_4080: ;;// std/std.porth:65:7: OP_INLINED 704
addr_4081: ;;// std/std.porth:58:38: OP_INLINED 684
addr_4082: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_4083: ;;// std/std.porth:56:57: OP_INLINED 36
addr_4084: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4085: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_4086: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4087: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_4088: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_4089: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_4090: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_4091: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_4092: ;;// std/std.porth:66:7: OP_INLINED 716
addr_4093: ;;// std/std.porth:59:37: OP_INLINED 694
addr_4094: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_4095: ;;// std/std.porth:57:55: OP_INLINED 36
addr_4096: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4097: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_4098: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4099: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_4100: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_4101: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_4102: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_4103: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_4104: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_4105: ;;// std/std.porth:890:3: OP_END_IF 0
addr_4106: ;;// std/std.porth:891:1: OP_RET 16
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 16
    ret
addr_4107: ;;// std/std.porth:909:6: OP_PREP_PROC 8
    sub rsp, 8
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_4108: ;;// std/std.porth:913:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_4109: ;;// std/std.porth:914:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_4110: ;;// std/std.porth:914:10: OP_IF 65
    pop rax
    test rax, rax
    jz addr_4175
addr_4111: ;;// std/std.porth:915:7: OP_PUSH_STR 29
    mov rax, 5
    push rax
    lea rax, [str_29]
    push rax
addr_4112: ;;// std/std.porth:915:15: OP_INLINED 668
addr_4113: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_4114: ;;// std/std.porth:49:36: OP_INLINED 662
addr_4115: ;;// std/std.porth:48:34: OP_INLINED 394
addr_4116: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_4117: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_4118: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_4119: ;;// std/std.porth:916:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_4120: ;;// std/std.porth:916:11: OP_WHILE 46
addr_4121: ;;// std/std.porth:916:17: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_4122: ;;// std/std.porth:916:21: OP_INLINED 0
addr_4123: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_4124: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_4125: ;;// std/std.porth:916:26: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_4126: ;;// std/std.porth:916:31: OP_INLINED 52
addr_4127: ;;// std/core.porth:46:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4128: ;;// std/core.porth:46:8: OP_INTRINSIC cast(int)
addr_4129: ;;// std/core.porth:47:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4130: ;;// std/core.porth:47:8: OP_INTRINSIC cast(int)
addr_4131: ;;// std/core.porth:48:3: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_4132: ;;// std/std.porth:916:37: OP_DO 34
    pop rax
    test rax, rax
    jz addr_4166
addr_4133: ;;// std/std.porth:917:9: OP_PUSH_STR 30
    mov rax, 1
    push rax
    lea rax, [str_30]
    push rax
addr_4134: ;;// std/std.porth:917:13: OP_INLINED 668
addr_4135: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_4136: ;;// std/std.porth:49:36: OP_INLINED 662
addr_4137: ;;// std/std.porth:48:34: OP_INLINED 394
addr_4138: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_4139: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_4140: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_4141: ;;// std/std.porth:918:9: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_4142: ;;// std/std.porth:918:13: OP_INLINED 0
addr_4143: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_4144: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_4145: ;;// std/std.porth:918:18: OP_INLINED 657
addr_4146: ;;// std/std.porth:45:43: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_4147: ;;// std/std.porth:45:47: OP_CALL 564
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_564
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_4148: ;;// std/std.porth:45:55: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4149: ;;// std/std.porth:918:30: OP_CALL 3341
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_3341
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_4150: ;;// std/std.porth:918:43: OP_INLINED 668
addr_4151: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_4152: ;;// std/std.porth:49:36: OP_INLINED 662
addr_4153: ;;// std/std.porth:48:34: OP_INLINED 394
addr_4154: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_4155: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_4156: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_4157: ;;// std/std.porth:919:9: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_4158: ;;// std/std.porth:919:11: OP_INLINED 36
addr_4159: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4160: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_4161: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4162: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_4163: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_4164: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_4165: ;;// std/std.porth:920:7: OP_END_WHILE 45
    jmp addr_4120
addr_4166: ;;// std/std.porth:920:11: OP_INTRINSIC drop
    pop rax
addr_4167: ;;// std/std.porth:921:7: OP_PUSH_STR 31
    mov rax, 1
    push rax
    lea rax, [str_31]
    push rax
addr_4168: ;;// std/std.porth:921:12: OP_INLINED 668
addr_4169: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_4170: ;;// std/std.porth:49:36: OP_INLINED 662
addr_4171: ;;// std/std.porth:48:34: OP_INLINED 394
addr_4172: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_4173: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_4174: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_4175: ;;// std/std.porth:922:5: OP_END_IF 0
addr_4176: ;;// std/std.porth:926:5: OP_INLINED 435
addr_4177: ;;// std/linux.porth:424:28: OP_PUSH_INT 57
    mov rax, 57
    push rax
addr_4178: ;;// std/linux.porth:424:37: OP_INTRINSIC syscall0
    pop rax
    syscall
    push rax
addr_4179: ;;// std/std.porth:928:5: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_4180: ;;// std/std.porth:929:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_4181: ;;// std/std.porth:929:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_4182: ;;// std/std.porth:929:13: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_4183: ;;// std/std.porth:929:15: OP_IF 76
    pop rax
    test rax, rax
    jz addr_4259
addr_4184: ;;// std/std.porth:931:9: OP_PUSH_GLOBAL_MEM 8388640
    lea rax, [mem+8388640]
    push rax
addr_4185: ;;// std/std.porth:931:29: OP_INLINED 12
addr_4186: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_4187: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_4188: ;;// std/std.porth:931:35: OP_IF 63
    pop rax
    test rax, rax
    jz addr_4251
addr_4189: ;;// std/std.porth:933:11: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_4190: ;;// std/std.porth:936:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_4191: ;;// std/std.porth:937:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_4192: ;;// std/std.porth:938:11: OP_PUSH_CSTR 32
    lea rax, [str_32]
    push rax
addr_4193: ;;// std/std.porth:939:11: OP_PUSH_INT 18446744073709551516
    mov rax, 18446744073709551516
    push rax
addr_4194: ;;// std/std.porth:940:11: OP_INLINED 402
addr_4195: ;;// std/linux.porth:416:46: OP_PUSH_INT 257
    mov rax, 257
    push rax
addr_4196: ;;// std/linux.porth:416:57: OP_INTRINSIC syscall4
    pop rax
    pop rdi
    pop rsi
    pop rdx
    pop r10
    syscall
    push rax
addr_4197: ;;// std/std.porth:942:11: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_4198: ;;// std/std.porth:942:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_4199: ;;// std/std.porth:942:17: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_4200: ;;// std/std.porth:942:19: OP_IF 22
    pop rax
    test rax, rax
    jz addr_4222
addr_4201: ;;// std/std.porth:943:13: OP_PUSH_STR 33
    mov rax, 20
    push rax
    lea rax, [str_33]
    push rax
addr_4202: ;;// std/std.porth:943:18: OP_INLINED 676
addr_4203: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_4204: ;;// std/std.porth:50:37: OP_INLINED 662
addr_4205: ;;// std/std.porth:48:34: OP_INLINED 394
addr_4206: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_4207: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_4208: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_4209: ;;// std/std.porth:943:24: OP_PUSH_STR 34
    mov rax, 71
    push rax
    lea rax, [str_34]
    push rax
addr_4210: ;;// std/std.porth:943:99: OP_INLINED 676
addr_4211: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_4212: ;;// std/std.porth:50:37: OP_INLINED 662
addr_4213: ;;// std/std.porth:48:34: OP_INLINED 394
addr_4214: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_4215: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_4216: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_4217: ;;// std/std.porth:944:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_4218: ;;// std/std.porth:944:15: OP_INLINED 418
addr_4219: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_4220: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_4221: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_4222: ;;// std/std.porth:945:11: OP_END_IF 0
addr_4223: ;;// std/std.porth:947:11: OP_INLINED 463
addr_4224: ;;// std/linux.porth:432:36: OP_PUSH_INT 33
    mov rax, 33
    push rax
addr_4225: ;;// std/linux.porth:432:45: OP_INTRINSIC syscall2
    pop rax
    pop rdi
    pop rsi
    syscall
    push rax
addr_4226: ;;// std/std.porth:947:16: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_4227: ;;// std/std.porth:947:18: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_4228: ;;// std/std.porth:947:20: OP_IF 22
    pop rax
    test rax, rax
    jz addr_4250
addr_4229: ;;// std/std.porth:948:13: OP_PUSH_STR 35
    mov rax, 20
    push rax
    lea rax, [str_35]
    push rax
addr_4230: ;;// std/std.porth:948:18: OP_INLINED 676
addr_4231: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_4232: ;;// std/std.porth:50:37: OP_INLINED 662
addr_4233: ;;// std/std.porth:48:34: OP_INLINED 394
addr_4234: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_4235: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_4236: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_4237: ;;// std/std.porth:948:24: OP_PUSH_STR 36
    mov rax, 78
    push rax
    lea rax, [str_36]
    push rax
addr_4238: ;;// std/std.porth:948:106: OP_INLINED 676
addr_4239: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_4240: ;;// std/std.porth:50:37: OP_INLINED 662
addr_4241: ;;// std/std.porth:48:34: OP_INLINED 394
addr_4242: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_4243: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_4244: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_4245: ;;// std/std.porth:949:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_4246: ;;// std/std.porth:949:15: OP_INLINED 418
addr_4247: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_4248: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_4249: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_4250: ;;// std/std.porth:950:11: OP_END_IF 0
addr_4251: ;;// std/std.porth:951:9: OP_END_IF 0
addr_4252: ;;// std/std.porth:953:9: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_4253: ;;// std/std.porth:953:13: OP_INLINED 0
addr_4254: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_4255: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_4256: ;;// std/std.porth:954:9: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_4257: ;;// std/std.porth:955:9: OP_CALL 2507
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2507
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_4258: ;;// std/std.porth:956:7: OP_ELSE 143
    jmp addr_4401
addr_4259: ;;// std/std.porth:956:12: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_4260: ;;// std/std.porth:956:16: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_4261: ;;// std/std.porth:956:18: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_4262: ;;// std/std.porth:956:20: OP_IFSTAR 140
    pop rax
    test rax, rax
    jz addr_4402
addr_4263: ;;// std/std.porth:958:9: OP_WHILE 138
addr_4264: ;;// std/std.porth:959:11: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_4265: ;;// std/std.porth:960:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_4266: ;;// std/std.porth:961:11: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_4267: ;;// std/std.porth:962:11: OP_PUSH_INT 18446744073709551615
    mov rax, 18446744073709551615
    push rax
addr_4268: ;;// std/std.porth:963:11: OP_INLINED 447
addr_4269: ;;// std/linux.porth:427:45: OP_PUSH_INT 61
    mov rax, 61
    push rax
addr_4270: ;;// std/linux.porth:427:55: OP_INTRINSIC syscall4
    pop rax
    pop rdi
    pop rsi
    pop rdx
    pop r10
    syscall
    push rax
addr_4271: ;;// std/std.porth:963:17: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_4272: ;;// std/std.porth:963:19: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_4273: ;;// std/std.porth:963:21: OP_IF 14
    pop rax
    test rax, rax
    jz addr_4287
addr_4274: ;;// std/std.porth:964:13: OP_PUSH_STR 37
    mov rax, 70
    push rax
    lea rax, [str_37]
    push rax
addr_4275: ;;// std/std.porth:964:87: OP_INLINED 676
addr_4276: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_4277: ;;// std/std.porth:50:37: OP_INLINED 662
addr_4278: ;;// std/std.porth:48:34: OP_INLINED 394
addr_4279: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_4280: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_4281: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_4282: ;;// std/std.porth:965:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_4283: ;;// std/std.porth:965:15: OP_INLINED 418
addr_4284: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_4285: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_4286: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_4287: ;;// std/std.porth:966:11: OP_END_IF 0
addr_4288: ;;// std/std.porth:968:11: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_4289: ;;// std/std.porth:968:19: OP_INLINED 16
addr_4290: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_4291: ;;// std/std.porth:969:13: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_4292: ;;// std/std.porth:969:17: OP_INLINED 519
addr_4293: ;;// std/linux.porth:467:3: OP_PUSH_INT 127
    mov rax, 127
    push rax
addr_4294: ;;// std/linux.porth:467:7: OP_INTRINSIC and
    pop rax
    pop rbx
    and rbx, rax
    push rbx
addr_4295: ;;// std/linux.porth:468:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_4296: ;;// std/linux.porth:468:5: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_4297: ;;// std/std.porth:969:27: OP_IF 20
    pop rax
    test rax, rax
    jz addr_4317
addr_4298: ;;// std/std.porth:970:15: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_4299: ;;// std/std.porth:970:19: OP_INLINED 525
addr_4300: ;;// std/linux.porth:473:3: OP_PUSH_INT 65280
    mov rax, 65280
    push rax
addr_4301: ;;// std/linux.porth:473:9: OP_INTRINSIC and
    pop rax
    pop rbx
    and rbx, rax
    push rbx
addr_4302: ;;// std/linux.porth:474:3: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_4303: ;;// std/linux.porth:474:5: OP_INTRINSIC shr
    pop rcx
    pop rbx
    shr rbx, cl
    push rbx
addr_4304: ;;// std/std.porth:971:17: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_4305: ;;// std/std.porth:971:21: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_4306: ;;// std/std.porth:971:23: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_4307: ;;// std/std.porth:971:25: OP_IF 6
    pop rax
    test rax, rax
    jz addr_4313
addr_4308: ;;// std/std.porth:972:19: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_4309: ;;// std/std.porth:972:23: OP_INLINED 418
addr_4310: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_4311: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_4312: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_4313: ;;// std/std.porth:973:17: OP_END_IF 0
addr_4314: ;;// std/std.porth:974:15: OP_INTRINSIC drop
    pop rax
addr_4315: ;;// std/std.porth:976:15: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_4316: ;;// std/std.porth:977:13: OP_ELSE 41
    jmp addr_4357
addr_4317: ;;// std/std.porth:977:18: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_4318: ;;// std/std.porth:977:22: OP_INLINED 505
addr_4319: ;;// std/linux.porth:454:3: OP_PUSH_INT 127
    mov rax, 127
    push rax
addr_4320: ;;// std/linux.porth:454:7: OP_INTRINSIC and
    pop rax
    pop rbx
    and rbx, rax
    push rbx
addr_4321: ;;// std/linux.porth:455:3: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_4322: ;;// std/linux.porth:455:5: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_4323: ;;// std/linux.porth:456:3: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_4324: ;;// std/linux.porth:456:5: OP_INTRINSIC shr
    pop rcx
    pop rbx
    shr rbx, cl
    push rbx
addr_4325: ;;// std/linux.porth:457:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_4326: ;;// std/linux.porth:457:5: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_4327: ;;// std/std.porth:977:34: OP_IFSTAR 31
    pop rax
    test rax, rax
    jz addr_4358
addr_4328: ;;// std/std.porth:978:15: OP_PUSH_STR 38
    mov rax, 52
    push rax
    lea rax, [str_38]
    push rax
addr_4329: ;;// std/std.porth:978:70: OP_INLINED 676
addr_4330: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_4331: ;;// std/std.porth:50:37: OP_INLINED 662
addr_4332: ;;// std/std.porth:48:34: OP_INLINED 394
addr_4333: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_4334: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_4335: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_4336: ;;// std/std.porth:979:15: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_4337: ;;// std/std.porth:979:19: OP_INLINED 515
addr_4338: ;;// std/linux.porth:462:3: OP_PUSH_INT 127
    mov rax, 127
    push rax
addr_4339: ;;// std/linux.porth:462:7: OP_INTRINSIC and
    pop rax
    pop rbx
    and rbx, rax
    push rbx
addr_4340: ;;// std/std.porth:979:70: OP_INLINED 2119
addr_4341: ;;// std/std.porth:410:26: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_4342: ;;// std/std.porth:410:33: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_4343: ;;// std/std.porth:980:15: OP_PUSH_STR 39
    mov rax, 1
    push rax
    lea rax, [str_39]
    push rax
addr_4344: ;;// std/std.porth:980:70: OP_INLINED 676
addr_4345: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_4346: ;;// std/std.porth:50:37: OP_INLINED 662
addr_4347: ;;// std/std.porth:48:34: OP_INLINED 394
addr_4348: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_4349: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_4350: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_4351: ;;// std/std.porth:981:15: OP_PUSH_INT 255
    mov rax, 255
    push rax
addr_4352: ;;// std/std.porth:981:19: OP_INLINED 418
addr_4353: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_4354: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_4355: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_4356: ;;// std/std.porth:983:15: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_4357: ;;// std/std.porth:984:13: OP_ELSE 9
    jmp addr_4366
addr_4358: ;;// std/std.porth:984:18: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_4359: ;;// std/std.porth:984:22: OP_INLINED 495
addr_4360: ;;// std/linux.porth:443:3: OP_PUSH_INT 255
    mov rax, 255
    push rax
addr_4361: ;;// std/linux.porth:443:7: OP_INTRINSIC and
    pop rax
    pop rbx
    and rbx, rax
    push rbx
addr_4362: ;;// std/linux.porth:444:3: OP_PUSH_INT 127
    mov rax, 127
    push rax
addr_4363: ;;// std/linux.porth:444:7: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_4364: ;;// std/std.porth:984:33: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_4367
addr_4365: ;;// std/std.porth:985:15: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_4366: ;;// std/std.porth:986:13: OP_ELSE 7
    jmp addr_4373
addr_4367: ;;// std/std.porth:986:18: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_4368: ;;// std/std.porth:986:22: OP_INLINED 501
addr_4369: ;;// std/linux.porth:449:3: OP_PUSH_INT 65535
    mov rax, 65535
    push rax
addr_4370: ;;// std/linux.porth:449:9: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_4371: ;;// std/std.porth:986:35: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_4374
addr_4372: ;;// std/std.porth:987:15: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_4373: ;;// std/std.porth:988:13: OP_ELSE 23
    jmp addr_4396
addr_4374: ;;// std/std.porth:989:15: OP_PUSH_STR 40
    mov rax, 20
    push rax
    lea rax, [str_40]
    push rax
addr_4375: ;;// std/std.porth:989:20: OP_INLINED 676
addr_4376: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_4377: ;;// std/std.porth:50:37: OP_INLINED 662
addr_4378: ;;// std/std.porth:48:34: OP_INLINED 394
addr_4379: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_4380: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_4381: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_4382: ;;// std/std.porth:989:26: OP_PUSH_STR 41
    mov rax, 14
    push rax
    lea rax, [str_41]
    push rax
addr_4383: ;;// std/std.porth:989:44: OP_INLINED 676
addr_4384: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_4385: ;;// std/std.porth:50:37: OP_INLINED 662
addr_4386: ;;// std/std.porth:48:34: OP_INLINED 394
addr_4387: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_4388: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_4389: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_4390: ;;// std/std.porth:990:15: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_4391: ;;// std/std.porth:990:17: OP_INLINED 418
addr_4392: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_4393: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_4394: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_4395: ;;// std/std.porth:991:15: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_4396: ;;// std/std.porth:992:13: OP_END_IF 0
addr_4397: ;;// std/std.porth:993:11: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4398: ;;// std/std.porth:993:16: OP_INTRINSIC drop
    pop rax
addr_4399: ;;// std/std.porth:994:9: OP_DO 2
    pop rax
    test rax, rax
    jz addr_4401
addr_4400: ;;// std/std.porth:994:12: OP_END_WHILE 137
    jmp addr_4263
addr_4401: ;;// std/std.porth:995:7: OP_ELSE 14
    jmp addr_4415
addr_4402: ;;// std/std.porth:996:9: OP_PUSH_STR 42
    mov rax, 31
    push rax
    lea rax, [str_42]
    push rax
addr_4403: ;;// std/std.porth:996:44: OP_INLINED 676
addr_4404: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_4405: ;;// std/std.porth:50:37: OP_INLINED 662
addr_4406: ;;// std/std.porth:48:34: OP_INLINED 394
addr_4407: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_4408: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_4409: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_4410: ;;// std/std.porth:997:9: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_4411: ;;// std/std.porth:997:11: OP_INLINED 418
addr_4412: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_4413: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_4414: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_4415: ;;// std/std.porth:998:7: OP_END_IF 0
addr_4416: ;;// std/std.porth:999:5: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_4417: ;;// std/std.porth:1000:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_4418: ;;// std/std.porth:1001:1: OP_RET 8
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 8
    ret
addr_4419: ;;// std/std.porth:1004:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_4420: ;;// std/std.porth:1005:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_4421: ;;// std/std.porth:1006:5: OP_INLINED 2414
addr_4422: ;;// std/std.porth:506:31: OP_PUSH_GLOBAL_MEM 8
    lea rax, [mem+8]
    push rax
addr_4423: ;;// std/std.porth:506:41: OP_PUSH_GLOBAL_MEM 8388616
    lea rax, [mem+8388616]
    push rax
addr_4424: ;;// std/std.porth:506:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_4425: ;;// std/std.porth:506:54: OP_INLINED 36
addr_4426: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4427: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_4428: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4429: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_4430: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_4431: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_4432: ;;// std/std.porth:1007:5: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_4433: ;;// std/std.porth:1008:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_4434: ;;// std/std.porth:1008:7: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_4435: ;;// std/std.porth:1011:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_4436: ;;// std/std.porth:1011:7: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_4437: ;;// std/std.porth:1011:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_4438: ;;// std/std.porth:1012:5: OP_WHILE 33
addr_4439: ;;// std/std.porth:1013:7: OP_BIND_PEEK 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    mov rbx, [rsp+0]
    mov [rax+16], rbx
    mov rbx, [rsp+8]
    mov [rax+8], rbx
    mov rbx, [rsp+16]
    mov [rax+0], rbx
addr_4440: ;;// std/std.porth:1014:9: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_4441: ;;// std/std.porth:1014:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_4442: ;;// std/std.porth:1014:13: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_4443: ;;// std/std.porth:1014:15: OP_IF 6
    pop rax
    test rax, rax
    jz addr_4449
addr_4444: ;;// std/std.porth:1014:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_4445: ;;// std/std.porth:1014:20: OP_INTRINSIC @8
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_4446: ;;// std/std.porth:1014:23: OP_PUSH_INT 47
    mov rax, 47
    push rax
addr_4447: ;;// std/std.porth:1014:27: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_4448: ;;// std/std.porth:1014:29: OP_ELSE 2
    jmp addr_4450
addr_4449: ;;// std/std.porth:1014:34: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_4450: ;;// std/std.porth:1014:40: OP_END_IF 0
addr_4451: ;;// std/std.porth:1015:7: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_4452: ;;// std/std.porth:1016:5: OP_DO 19
    pop rax
    test rax, rax
    jz addr_4471
addr_4453: ;;// std/std.porth:1017:7: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_4454: ;;// std/std.porth:1018:9: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_4455: ;;// std/std.porth:1018:11: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_4456: ;;// std/std.porth:1018:13: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_4457: ;;// std/std.porth:1019:9: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_4458: ;;// std/std.porth:1019:11: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_4459: ;;// std/std.porth:1019:13: OP_INLINED 36
addr_4460: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4461: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_4462: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4463: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_4464: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_4465: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_4466: ;;// std/std.porth:1020:9: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_4467: ;;// std/std.porth:1020:15: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_4468: ;;// std/std.porth:1020:17: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_4469: ;;// std/std.porth:1021:7: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_4470: ;;// std/std.porth:1022:5: OP_END_WHILE 32
    jmp addr_4438
addr_4471: ;;// std/std.porth:1023:5: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_4472: ;;// std/std.porth:1023:22: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_4473: ;;// std/std.porth:1023:28: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_4474: ;;// std/std.porth:1024:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_4475: ;;// std/std.porth:1026:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_4476: ;;// std/std.porth:1027:5: OP_WHILE 233
addr_4477: ;;// std/std.porth:1027:11: OP_BIND_PEEK 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    mov rbx, [rsp+0]
    mov [rax+8], rbx
    mov rbx, [rsp+8]
    mov [rax+0], rbx
addr_4478: ;;// std/std.porth:1027:23: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_4479: ;;// std/std.porth:1027:25: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_4480: ;;// std/std.porth:1027:27: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_4481: ;;// std/std.porth:1027:29: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_4482: ;;// std/std.porth:1027:33: OP_DO 227
    pop rax
    test rax, rax
    jz addr_4709
addr_4483: ;;// std/std.porth:1028:7: OP_PUSH_INT 47
    mov rax, 47
    push rax
addr_4484: ;;// std/std.porth:1028:11: OP_CALL 1360
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1360
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_4485: ;;// std/std.porth:1029:7: OP_BIND_LET 5
    mov rax, [ret_stack_rsp]
    sub rax, 40
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+32], rbx
    pop rbx
    mov [rax+24], rbx
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_4486: ;;// std/std.porth:1030:9: OP_PUSH_BIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov rbx, [rax]
    push rbx
addr_4487: ;;// std/std.porth:1030:12: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_4488: ;;// std/std.porth:1030:15: OP_PUSH_STR 43
    mov rax, 2
    push rax
    lea rax, [str_43]
    push rax
addr_4489: ;;// std/std.porth:1030:20: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_4490: ;;// std/std.porth:1030:26: OP_IF 157
    pop rax
    test rax, rax
    jz addr_4647
addr_4491: ;;// std/std.porth:1031:11: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_4492: ;;// std/std.porth:1031:13: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_4493: ;;// std/std.porth:1031:15: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_4494: ;;// std/std.porth:1031:17: OP_IF 108
    pop rax
    test rax, rax
    jz addr_4602
addr_4495: ;;// std/std.porth:1032:13: OP_INLINED 2414
addr_4496: ;;// std/std.porth:506:31: OP_PUSH_GLOBAL_MEM 8
    lea rax, [mem+8]
    push rax
addr_4497: ;;// std/std.porth:506:41: OP_PUSH_GLOBAL_MEM 8388616
    lea rax, [mem+8388616]
    push rax
addr_4498: ;;// std/std.porth:506:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_4499: ;;// std/std.porth:506:54: OP_INLINED 36
addr_4500: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4501: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_4502: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4503: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_4504: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_4505: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_4506: ;;// std/std.porth:1032:21: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_4507: ;;// std/std.porth:1032:33: OP_INLINED 44
addr_4508: ;;// std/core.porth:39:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4509: ;;// std/core.porth:39:8: OP_INTRINSIC cast(int)
addr_4510: ;;// std/core.porth:40:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4511: ;;// std/core.porth:40:8: OP_INTRINSIC cast(int)
addr_4512: ;;// std/core.porth:41:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_4513: ;;// std/core.porth:42:3: OP_INTRINSIC cast(ptr)
addr_4514: ;;// std/std.porth:1033:13: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_4515: ;;// std/std.porth:1034:15: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_4516: ;;// std/std.porth:1034:17: OP_INLINED 753
addr_4517: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_4518: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_4519: ;;// std/std.porth:65:7: OP_INLINED 704
addr_4520: ;;// std/std.porth:58:38: OP_INLINED 684
addr_4521: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_4522: ;;// std/std.porth:56:57: OP_INLINED 36
addr_4523: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4524: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_4525: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4526: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_4527: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_4528: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_4529: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_4530: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_4531: ;;// std/std.porth:66:7: OP_INLINED 716
addr_4532: ;;// std/std.porth:59:37: OP_INLINED 694
addr_4533: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_4534: ;;// std/std.porth:57:55: OP_INLINED 36
addr_4535: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4536: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_4537: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4538: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_4539: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_4540: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_4541: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_4542: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_4543: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_4544: ;;// std/std.porth:1034:22: OP_PUSH_STR 44
    mov rax, 2
    push rax
    lea rax, [str_44]
    push rax
addr_4545: ;;// std/std.porth:1034:27: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_4546: ;;// std/std.porth:1034:33: OP_IF 38
    pop rax
    test rax, rax
    jz addr_4584
addr_4547: ;;// std/std.porth:1035:17: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_4548: ;;// std/std.porth:1035:20: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_4549: ;;// std/std.porth:1035:23: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_4550: ;;// std/std.porth:1035:35: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_4551: ;;// std/std.porth:1035:45: OP_INLINED 782
addr_4552: ;;// std/std.porth:71:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_4553: ;;// std/std.porth:72:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_4554: ;;// std/std.porth:72:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_4555: ;;// std/std.porth:72:9: OP_INLINED 729
addr_4556: ;;// std/std.porth:60:35: OP_INLINED 684
addr_4557: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_4558: ;;// std/std.porth:56:57: OP_INLINED 36
addr_4559: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4560: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_4561: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4562: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_4563: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_4564: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_4565: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_4566: ;;// std/std.porth:73:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_4567: ;;// std/std.porth:73:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_4568: ;;// std/std.porth:73:9: OP_INLINED 741
addr_4569: ;;// std/std.porth:61:34: OP_INLINED 694
addr_4570: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_4571: ;;// std/std.porth:57:55: OP_INLINED 36
addr_4572: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4573: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_4574: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4575: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_4576: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_4577: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_4578: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_4579: ;;// std/std.porth:74:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_4580: ;;// std/std.porth:1036:17: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_4581: ;;// std/std.porth:1036:19: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_4582: ;;// std/std.porth:1036:21: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_4583: ;;// std/std.porth:1037:15: OP_ELSE 16
    jmp addr_4599
addr_4584: ;;// std/std.porth:1038:17: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_4585: ;;// std/std.porth:1038:19: OP_INLINED 2426
addr_4586: ;;// std/std.porth:509:31: OP_PUSH_GLOBAL_MEM 8
    lea rax, [mem+8]
    push rax
addr_4587: ;;// std/std.porth:509:41: OP_INLINED 78
addr_4588: ;;// std/core.porth:68:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4589: ;;// std/core.porth:68:8: OP_INTRINSIC cast(int)
addr_4590: ;;// std/core.porth:69:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4591: ;;// std/core.porth:69:8: OP_INTRINSIC cast(int)
addr_4592: ;;// std/core.porth:70:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_4593: ;;// std/std.porth:509:50: OP_PUSH_GLOBAL_MEM 8388616
    lea rax, [mem+8388616]
    push rax
addr_4594: ;;// std/std.porth:509:59: OP_INLINED 30
addr_4595: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_4596: ;;// std/std.porth:1039:17: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_4597: ;;// std/std.porth:1039:19: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_4598: ;;// std/std.porth:1039:21: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_4599: ;;// std/std.porth:1040:15: OP_END_IF 0
addr_4600: ;;// std/std.porth:1041:13: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_4601: ;;// std/std.porth:1042:11: OP_ELSE 44
    jmp addr_4645
addr_4602: ;;// std/std.porth:1043:13: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_4603: ;;// std/std.porth:1043:29: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_4604: ;;// std/std.porth:1043:31: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_4605: ;;// std/std.porth:1043:33: OP_IF 3
    pop rax
    test rax, rax
    jz addr_4608
addr_4606: ;;// std/std.porth:1044:15: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_4607: ;;// std/std.porth:1045:13: OP_ELSE 37
    jmp addr_4644
addr_4608: ;;// std/std.porth:1046:15: OP_PUSH_BIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov rbx, [rax]
    push rbx
addr_4609: ;;// std/std.porth:1046:18: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_4610: ;;// std/std.porth:1046:21: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_4611: ;;// std/std.porth:1046:33: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_4612: ;;// std/std.porth:1046:43: OP_INLINED 782
addr_4613: ;;// std/std.porth:71:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_4614: ;;// std/std.porth:72:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_4615: ;;// std/std.porth:72:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_4616: ;;// std/std.porth:72:9: OP_INLINED 729
addr_4617: ;;// std/std.porth:60:35: OP_INLINED 684
addr_4618: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_4619: ;;// std/std.porth:56:57: OP_INLINED 36
addr_4620: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4621: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_4622: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4623: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_4624: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_4625: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_4626: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_4627: ;;// std/std.porth:73:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_4628: ;;// std/std.porth:73:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_4629: ;;// std/std.porth:73:9: OP_INLINED 741
addr_4630: ;;// std/std.porth:61:34: OP_INLINED 694
addr_4631: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_4632: ;;// std/std.porth:57:55: OP_INLINED 36
addr_4633: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4634: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_4635: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4636: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_4637: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_4638: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_4639: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_4640: ;;// std/std.porth:74:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_4641: ;;// std/std.porth:1047:15: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_4642: ;;// std/std.porth:1047:17: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_4643: ;;// std/std.porth:1047:19: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_4644: ;;// std/std.porth:1048:13: OP_END_IF 0
addr_4645: ;;// std/std.porth:1049:11: OP_END_IF 0
addr_4646: ;;// std/std.porth:1050:9: OP_ELSE 21
    jmp addr_4667
addr_4647: ;;// std/std.porth:1050:14: OP_PUSH_BIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov rbx, [rax]
    push rbx
addr_4648: ;;// std/std.porth:1050:17: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_4649: ;;// std/std.porth:1050:20: OP_PUSH_STR 45
    mov rax, 1
    push rax
    lea rax, [str_45]
    push rax
addr_4650: ;;// std/std.porth:1050:24: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_4651: ;;// std/std.porth:1050:30: OP_INLINED 131
addr_4652: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_4653: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_4654: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4655: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_4656: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_4657: ;;// std/std.porth:1050:35: OP_IF 6
    pop rax
    test rax, rax
    jz addr_4663
addr_4658: ;;// std/std.porth:1050:38: OP_PUSH_BIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov rbx, [rax]
    push rbx
addr_4659: ;;// std/std.porth:1050:41: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_4660: ;;// std/std.porth:1050:44: OP_PUSH_STR 46
    mov rax, 0
    push rax
    lea rax, [str_46]
    push rax
addr_4661: ;;// std/std.porth:1050:47: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_4662: ;;// std/std.porth:1050:53: OP_ELSE 2
    jmp addr_4664
addr_4663: ;;// std/std.porth:1050:58: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_4664: ;;// std/std.porth:1050:63: OP_END_IF 0
addr_4665: ;;// std/std.porth:1050:67: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_4668
addr_4666: ;;// std/std.porth:1051:11: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_4667: ;;// std/std.porth:1052:9: OP_ELSE 37
    jmp addr_4704
addr_4668: ;;// std/std.porth:1053:11: OP_PUSH_BIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov rbx, [rax]
    push rbx
addr_4669: ;;// std/std.porth:1053:14: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_4670: ;;// std/std.porth:1053:17: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_4671: ;;// std/std.porth:1053:29: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_4672: ;;// std/std.porth:1053:39: OP_INLINED 782
addr_4673: ;;// std/std.porth:71:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_4674: ;;// std/std.porth:72:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_4675: ;;// std/std.porth:72:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_4676: ;;// std/std.porth:72:9: OP_INLINED 729
addr_4677: ;;// std/std.porth:60:35: OP_INLINED 684
addr_4678: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_4679: ;;// std/std.porth:56:57: OP_INLINED 36
addr_4680: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4681: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_4682: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4683: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_4684: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_4685: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_4686: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_4687: ;;// std/std.porth:73:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_4688: ;;// std/std.porth:73:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_4689: ;;// std/std.porth:73:9: OP_INLINED 741
addr_4690: ;;// std/std.porth:61:34: OP_INLINED 694
addr_4691: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_4692: ;;// std/std.porth:57:55: OP_INLINED 36
addr_4693: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4694: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_4695: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4696: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_4697: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_4698: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_4699: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_4700: ;;// std/std.porth:74:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_4701: ;;// std/std.porth:1054:11: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_4702: ;;// std/std.porth:1054:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_4703: ;;// std/std.porth:1054:15: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_4704: ;;// std/std.porth:1055:9: OP_END_IF 0
addr_4705: ;;// std/std.porth:1056:9: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_4706: ;;// std/std.porth:1056:12: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_4707: ;;// std/std.porth:1057:7: OP_UNBIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov [ret_stack_rsp], rax
addr_4708: ;;// std/std.porth:1058:5: OP_END_WHILE 232
    jmp addr_4476
addr_4709: ;;// std/std.porth:1060:5: OP_BIND_LET 4
    mov rax, [ret_stack_rsp]
    sub rax, 32
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+24], rbx
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_4710: ;;// std/std.porth:1061:7: OP_INLINED 2414
addr_4711: ;;// std/std.porth:506:31: OP_PUSH_GLOBAL_MEM 8
    lea rax, [mem+8]
    push rax
addr_4712: ;;// std/std.porth:506:41: OP_PUSH_GLOBAL_MEM 8388616
    lea rax, [mem+8388616]
    push rax
addr_4713: ;;// std/std.porth:506:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_4714: ;;// std/std.porth:506:54: OP_INLINED 36
addr_4715: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4716: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_4717: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4718: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_4719: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_4720: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_4721: ;;// std/std.porth:1062:7: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_4722: ;;// std/std.porth:1063:9: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_4723: ;;// std/std.porth:1063:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_4724: ;;// std/std.porth:1063:13: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_4725: ;;// std/std.porth:1063:15: OP_IF 86
    pop rax
    test rax, rax
    jz addr_4811
addr_4726: ;;// std/std.porth:1064:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_4727: ;;// std/std.porth:1064:13: OP_WHILE 82
addr_4728: ;;// std/std.porth:1064:19: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_4729: ;;// std/std.porth:1064:23: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_4730: ;;// std/std.porth:1064:25: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_4731: ;;// std/std.porth:1064:27: OP_DO 78
    pop rax
    test rax, rax
    jz addr_4809
addr_4732: ;;// std/std.porth:1067:13: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_4733: ;;// std/std.porth:1067:17: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_4734: ;;// std/std.porth:1067:19: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_4735: ;;// std/std.porth:1067:21: OP_IF 8
    pop rax
    test rax, rax
    jz addr_4743
addr_4736: ;;// std/std.porth:1068:15: OP_PUSH_STR 47
    mov rax, 1
    push rax
    lea rax, [str_47]
    push rax
addr_4737: ;;// std/std.porth:1068:19: OP_INLINED 2496
addr_4738: ;;// std/std.porth:526:42: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_4739: ;;// std/std.porth:526:47: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_4740: ;;// std/std.porth:526:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_4741: ;;// std/std.porth:1068:30: OP_INTRINSIC drop
    pop rax
addr_4742: ;;// std/std.porth:1069:13: OP_ELSE 11
    jmp addr_4753
addr_4743: ;;// std/std.porth:1069:18: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_4744: ;;// std/std.porth:1069:34: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_4745: ;;// std/std.porth:1069:36: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_4746: ;;// std/std.porth:1069:38: OP_IFSTAR 8
    pop rax
    test rax, rax
    jz addr_4754
addr_4747: ;;// std/std.porth:1070:15: OP_PUSH_STR 48
    mov rax, 2
    push rax
    lea rax, [str_48]
    push rax
addr_4748: ;;// std/std.porth:1070:20: OP_INLINED 2496
addr_4749: ;;// std/std.porth:526:42: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_4750: ;;// std/std.porth:526:47: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_4751: ;;// std/std.porth:526:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_4752: ;;// std/std.porth:1070:31: OP_INTRINSIC drop
    pop rax
addr_4753: ;;// std/std.porth:1071:13: OP_ELSE 11
    jmp addr_4764
addr_4754: ;;// std/std.porth:1071:18: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_4755: ;;// std/std.porth:1071:34: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_4756: ;;// std/std.porth:1071:36: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_4757: ;;// std/std.porth:1071:38: OP_IFSTAR 8
    pop rax
    test rax, rax
    jz addr_4765
addr_4758: ;;// std/std.porth:1072:15: OP_PUSH_STR 49
    mov rax, 1
    push rax
    lea rax, [str_49]
    push rax
addr_4759: ;;// std/std.porth:1072:19: OP_INLINED 2496
addr_4760: ;;// std/std.porth:526:42: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_4761: ;;// std/std.porth:526:47: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_4762: ;;// std/std.porth:526:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_4763: ;;// std/std.porth:1072:30: OP_INTRINSIC drop
    pop rax
addr_4764: ;;// std/std.porth:1073:13: OP_END_IF 0
addr_4765: ;;// std/std.porth:1074:13: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_4766: ;;// std/std.porth:1074:17: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_4767: ;;// std/std.porth:1074:29: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_4768: ;;// std/std.porth:1074:31: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_4769: ;;// std/std.porth:1074:37: OP_INLINED 73
addr_4770: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_4771: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_4772: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_4773: ;;// std/std.porth:1074:42: OP_INLINED 753
addr_4774: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_4775: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_4776: ;;// std/std.porth:65:7: OP_INLINED 704
addr_4777: ;;// std/std.porth:58:38: OP_INLINED 684
addr_4778: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_4779: ;;// std/std.porth:56:57: OP_INLINED 36
addr_4780: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4781: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_4782: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4783: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_4784: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_4785: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_4786: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_4787: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_4788: ;;// std/std.porth:66:7: OP_INLINED 716
addr_4789: ;;// std/std.porth:59:37: OP_INLINED 694
addr_4790: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_4791: ;;// std/std.porth:57:55: OP_INLINED 36
addr_4792: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4793: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_4794: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4795: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_4796: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_4797: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_4798: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_4799: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_4800: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_4801: ;;// std/std.porth:1074:47: OP_INLINED 2496
addr_4802: ;;// std/std.porth:526:42: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_4803: ;;// std/std.porth:526:47: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_4804: ;;// std/std.porth:526:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_4805: ;;// std/std.porth:1074:58: OP_INTRINSIC drop
    pop rax
addr_4806: ;;// std/std.porth:1075:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_4807: ;;// std/std.porth:1075:15: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_4808: ;;// std/std.porth:1076:11: OP_END_WHILE 81
    jmp addr_4727
addr_4809: ;;// std/std.porth:1076:15: OP_INTRINSIC drop
    pop rax
addr_4810: ;;// std/std.porth:1077:9: OP_ELSE 7
    jmp addr_4817
addr_4811: ;;// std/std.porth:1078:11: OP_PUSH_STR 50
    mov rax, 1
    push rax
    lea rax, [str_50]
    push rax
addr_4812: ;;// std/std.porth:1078:15: OP_INLINED 2496
addr_4813: ;;// std/std.porth:526:42: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_4814: ;;// std/std.porth:526:47: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_4815: ;;// std/std.porth:526:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_4816: ;;// std/std.porth:1078:26: OP_INTRINSIC drop
    pop rax
addr_4817: ;;// std/std.porth:1079:9: OP_END_IF 0
addr_4818: ;;// std/std.porth:1080:9: OP_INLINED 2414
addr_4819: ;;// std/std.porth:506:31: OP_PUSH_GLOBAL_MEM 8
    lea rax, [mem+8]
    push rax
addr_4820: ;;// std/std.porth:506:41: OP_PUSH_GLOBAL_MEM 8388616
    lea rax, [mem+8388616]
    push rax
addr_4821: ;;// std/std.porth:506:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_4822: ;;// std/std.porth:506:54: OP_INLINED 36
addr_4823: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4824: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_4825: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4826: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_4827: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_4828: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_4829: ;;// std/std.porth:1080:17: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_4830: ;;// std/std.porth:1080:19: OP_INLINED 78
addr_4831: ;;// std/core.porth:68:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4832: ;;// std/core.porth:68:8: OP_INTRINSIC cast(int)
addr_4833: ;;// std/core.porth:69:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4834: ;;// std/core.porth:69:8: OP_INTRINSIC cast(int)
addr_4835: ;;// std/core.porth:70:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_4836: ;;// std/std.porth:1080:28: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_4837: ;;// std/std.porth:1081:7: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_4838: ;;// std/std.porth:1082:5: OP_UNBIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov [ret_stack_rsp], rax
addr_4839: ;;// std/std.porth:1083:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_4840: ;;// std/std.porth:1084:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_4841: ;;// std/std.porth:1086:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_4842: ;;// std/std.porth:1087:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_4843: ;;// std/std.porth:1088:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_4844: ;;// std/std.porth:1088:7: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_4845: ;;// std/std.porth:1088:9: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_4846: ;;// std/std.porth:1088:11: OP_IF 6
    pop rax
    test rax, rax
    jz addr_4852
addr_4847: ;;// std/std.porth:1088:14: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_4848: ;;// std/std.porth:1088:16: OP_INTRINSIC @8
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_4849: ;;// std/std.porth:1088:19: OP_PUSH_INT 47
    mov rax, 47
    push rax
addr_4850: ;;// std/std.porth:1088:23: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_4851: ;;// std/std.porth:1088:25: OP_ELSE 2
    jmp addr_4853
addr_4852: ;;// std/std.porth:1088:30: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_4853: ;;// std/std.porth:1088:36: OP_END_IF 0
addr_4854: ;;// std/std.porth:1089:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_4855: ;;// std/std.porth:1090:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_4856: ;;// std/std.porth:1092:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_4857: ;;// std/std.porth:1093:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_4858: ;;// std/std.porth:1094:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_4859: ;;// std/std.porth:1094:7: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_4860: ;;// std/std.porth:1094:9: OP_CALL 4841
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_4841
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_4861: ;;// std/std.porth:1094:15: OP_IF 5
    pop rax
    test rax, rax
    jz addr_4866
addr_4862: ;;// std/std.porth:1095:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_4863: ;;// std/std.porth:1095:9: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_4864: ;;// std/std.porth:1095:11: OP_CALL 4419
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_4419
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_4865: ;;// std/std.porth:1096:5: OP_ELSE 83
    jmp addr_4948
addr_4866: ;;// std/std.porth:1097:7: OP_PUSH_INT 4096
    mov rax, 4096
    push rax
addr_4867: ;;// std/std.porth:1097:16: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_4868: ;;// std/std.porth:1098:7: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_4869: ;;// std/std.porth:1099:9: OP_PUSH_INT 4096
    mov rax, 4096
    push rax
addr_4870: ;;// std/std.porth:1099:18: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_4871: ;;// std/std.porth:1099:22: OP_INLINED 483
addr_4872: ;;// std/linux.porth:437:38: OP_PUSH_INT 79
    mov rax, 79
    push rax
addr_4873: ;;// std/linux.porth:437:49: OP_INTRINSIC syscall2
    pop rax
    pop rdi
    pop rsi
    syscall
    push rax
addr_4874: ;;// std/std.porth:1099:29: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_4875: ;;// std/std.porth:1099:31: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_4876: ;;// std/std.porth:1099:33: OP_IF 14
    pop rax
    test rax, rax
    jz addr_4890
addr_4877: ;;// std/std.porth:1100:11: OP_PUSH_STR 51
    mov rax, 21
    push rax
    lea rax, [str_51]
    push rax
addr_4878: ;;// std/std.porth:1100:36: OP_INLINED 676
addr_4879: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_4880: ;;// std/std.porth:50:37: OP_INLINED 662
addr_4881: ;;// std/std.porth:48:34: OP_INLINED 394
addr_4882: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_4883: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_4884: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_4885: ;;// std/std.porth:1101:11: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_4886: ;;// std/std.porth:1101:13: OP_INLINED 418
addr_4887: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_4888: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_4889: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_4890: ;;// std/std.porth:1102:9: OP_END_IF 0
addr_4891: ;;// std/std.porth:1103:9: OP_INLINED 2414
addr_4892: ;;// std/std.porth:506:31: OP_PUSH_GLOBAL_MEM 8
    lea rax, [mem+8]
    push rax
addr_4893: ;;// std/std.porth:506:41: OP_PUSH_GLOBAL_MEM 8388616
    lea rax, [mem+8388616]
    push rax
addr_4894: ;;// std/std.porth:506:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_4895: ;;// std/std.porth:506:54: OP_INLINED 36
addr_4896: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4897: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_4898: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4899: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_4900: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_4901: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_4902: ;;// std/std.porth:1104:9: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_4903: ;;// std/std.porth:1104:13: OP_INLINED 657
addr_4904: ;;// std/std.porth:45:43: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_4905: ;;// std/std.porth:45:47: OP_CALL 564
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_564
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_4906: ;;// std/std.porth:45:55: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4907: ;;// std/std.porth:1104:25: OP_INLINED 2496
addr_4908: ;;// std/std.porth:526:42: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_4909: ;;// std/std.porth:526:47: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_4910: ;;// std/std.porth:526:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_4911: ;;// std/std.porth:1104:36: OP_INTRINSIC drop
    pop rax
addr_4912: ;;// std/std.porth:1105:9: OP_PUSH_STR 52
    mov rax, 1
    push rax
    lea rax, [str_52]
    push rax
addr_4913: ;;// std/std.porth:1105:25: OP_INLINED 2496
addr_4914: ;;// std/std.porth:526:42: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_4915: ;;// std/std.porth:526:47: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_4916: ;;// std/std.porth:526:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_4917: ;;// std/std.porth:1105:36: OP_INTRINSIC drop
    pop rax
addr_4918: ;;// std/std.porth:1106:9: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_4919: ;;// std/std.porth:1106:11: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_4920: ;;// std/std.porth:1106:25: OP_INLINED 2496
addr_4921: ;;// std/std.porth:526:42: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_4922: ;;// std/std.porth:526:47: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_4923: ;;// std/std.porth:526:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_4924: ;;// std/std.porth:1106:36: OP_INTRINSIC drop
    pop rax
addr_4925: ;;// std/std.porth:1107:9: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_4926: ;;// std/std.porth:1107:18: OP_INLINED 2414
addr_4927: ;;// std/std.porth:506:31: OP_PUSH_GLOBAL_MEM 8
    lea rax, [mem+8]
    push rax
addr_4928: ;;// std/std.porth:506:41: OP_PUSH_GLOBAL_MEM 8388616
    lea rax, [mem+8388616]
    push rax
addr_4929: ;;// std/std.porth:506:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_4930: ;;// std/std.porth:506:54: OP_INLINED 36
addr_4931: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4932: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_4933: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4934: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_4935: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_4936: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_4937: ;;// std/std.porth:1107:26: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_4938: ;;// std/std.porth:1107:28: OP_INLINED 78
addr_4939: ;;// std/core.porth:68:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4940: ;;// std/core.porth:68:8: OP_INTRINSIC cast(int)
addr_4941: ;;// std/core.porth:69:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4942: ;;// std/core.porth:69:8: OP_INTRINSIC cast(int)
addr_4943: ;;// std/core.porth:70:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_4944: ;;// std/std.porth:1107:37: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_4945: ;;// std/std.porth:1107:39: OP_CALL 4419
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_4419
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_4946: ;;// std/std.porth:1107:48: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_4947: ;;// std/std.porth:1108:7: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_4948: ;;// std/std.porth:1109:5: OP_END_IF 0
addr_4949: ;;// std/std.porth:1110:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_4950: ;;// std/std.porth:1111:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_4951: ;;// std/std.porth:1119:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_4952: ;;// std/std.porth:1120:3: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_4953: ;;// std/std.porth:1120:7: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_4954: ;;// std/std.porth:1120:16: OP_INLINED 36
addr_4955: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4956: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_4957: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4958: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_4959: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_4960: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_4961: ;;// std/std.porth:1120:27: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4962: ;;// std/std.porth:1121:3: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_4963: ;;// std/std.porth:1121:7: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_4964: ;;// std/std.porth:1121:14: OP_INLINED 36
addr_4965: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4966: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_4967: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4968: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_4969: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_4970: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_4971: ;;// std/std.porth:1121:19: OP_INLINED 16
addr_4972: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_4973: ;;// std/std.porth:1121:27: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4974: ;;// std/std.porth:1122:7: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_4975: ;;// std/std.porth:1122:16: OP_INLINED 36
addr_4976: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4977: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_4978: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_4979: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_4980: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_4981: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_4982: ;;// std/std.porth:1122:21: OP_INLINED 0
addr_4983: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_4984: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_4985: ;;// std/std.porth:1123:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_4986: ;;// std/std.porth:1124:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_4987: ;;// std/std.porth:1124:11: OP_INLINED 16
addr_4988: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_4989: ;;// std/std.porth:1124:16: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_4990: ;;// std/std.porth:1124:21: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_4991: ;;// std/std.porth:1124:24: OP_INLINED 662
addr_4992: ;;// std/std.porth:48:34: OP_INLINED 394
addr_4993: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_4994: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_4995: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_4996: ;;// std/std.porth:1125:5: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_4997: ;;// std/std.porth:1125:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_4998: ;;// std/std.porth:1125:13: OP_INLINED 30
addr_4999: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_5000: ;;// std/std.porth:1126:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_5001: ;;// std/std.porth:1127:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_5002: ;;// std/std.porth:1129:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_5003: ;;// std/std.porth:1133:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_5004: ;;// std/std.porth:1134:5: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_5005: ;;// std/std.porth:1134:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_5006: ;;// std/std.porth:1134:18: OP_INLINED 36
addr_5007: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5008: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5009: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5010: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5011: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5012: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5013: ;;// std/std.porth:1135:5: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_5014: ;;// std/std.porth:1135:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_5015: ;;// std/std.porth:1135:16: OP_INLINED 36
addr_5016: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5017: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5018: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5019: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5020: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5021: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5022: ;;// std/std.porth:1135:21: OP_INLINED 16
addr_5023: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5024: ;;// std/std.porth:1136:5: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_5025: ;;// std/std.porth:1136:9: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_5026: ;;// std/std.porth:1136:18: OP_INLINED 36
addr_5027: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5028: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5029: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5030: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5031: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5032: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5033: ;;// std/std.porth:1136:23: OP_INLINED 0
addr_5034: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5035: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_5036: ;;// std/std.porth:1137:5: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_5037: ;;// std/std.porth:1138:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5038: ;;// std/std.porth:1138:13: OP_INLINED 16
addr_5039: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5040: ;;// std/std.porth:1138:18: OP_PUSH_BIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov rbx, [rax]
    push rbx
addr_5041: ;;// std/std.porth:1138:20: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5042: ;;// std/std.porth:1138:22: OP_PUSH_INT 65536
    mov rax, 65536
    push rax
addr_5043: ;;// std/std.porth:1138:30: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_5044: ;;// std/std.porth:1138:32: OP_IF 3
    pop rax
    test rax, rax
    jz addr_5047
addr_5045: ;;// std/std.porth:1138:35: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_5046: ;;// std/std.porth:1138:39: OP_CALL 4951
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_4951
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_5047: ;;// std/std.porth:1138:46: OP_END_IF 0
addr_5048: ;;// std/std.porth:1139:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5049: ;;// std/std.porth:1139:13: OP_INLINED 16
addr_5050: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5051: ;;// std/std.porth:1139:18: OP_PUSH_BIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov rbx, [rax]
    push rbx
addr_5052: ;;// std/std.porth:1139:20: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5053: ;;// std/std.porth:1139:22: OP_PUSH_INT 65536
    mov rax, 65536
    push rax
addr_5054: ;;// std/std.porth:1139:30: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_5055: ;;// std/std.porth:1139:32: OP_IF 10
    pop rax
    test rax, rax
    jz addr_5065
addr_5056: ;;// std/std.porth:1140:9: OP_PUSH_BIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov rbx, [rax]
    push rbx
addr_5057: ;;// std/std.porth:1140:11: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_5058: ;;// std/std.porth:1140:13: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_5059: ;;// std/std.porth:1140:16: OP_INLINED 662
addr_5060: ;;// std/std.porth:48:34: OP_INLINED 394
addr_5061: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_5062: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_5063: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_5064: ;;// std/std.porth:1141:7: OP_ELSE 24
    jmp addr_5088
addr_5065: ;;// std/std.porth:1142:9: OP_PUSH_BIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov rbx, [rax]
    push rbx
addr_5066: ;;// std/std.porth:1142:11: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_5067: ;;// std/std.porth:1142:13: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_5068: ;;// std/std.porth:1142:18: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5069: ;;// std/std.porth:1142:24: OP_INLINED 16
addr_5070: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5071: ;;// std/std.porth:1142:29: OP_INLINED 36
addr_5072: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5073: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5074: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5075: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5076: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5077: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5078: ;;// std/std.porth:1142:34: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_5079: ;;// std/std.porth:1142:41: OP_INTRINSIC drop
    pop rax
addr_5080: ;;// std/std.porth:1143:9: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5081: ;;// std/std.porth:1143:15: OP_PUSH_BIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov rbx, [rax]
    push rbx
addr_5082: ;;// std/std.porth:1143:17: OP_INLINED 154
addr_5083: ;;// std/core.porth:106:33: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_5084: ;;// std/core.porth:106:38: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5085: ;;// std/core.porth:106:42: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5086: ;;// std/core.porth:106:44: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5087: ;;// std/core.porth:106:49: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_5088: ;;// std/std.porth:1144:7: OP_END_IF 0
addr_5089: ;;// std/std.porth:1145:5: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_5090: ;;// std/std.porth:1146:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_5091: ;;// std/std.porth:1147:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_5092: ;;// std/std.porth:1149:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_5093: ;;// std/std.porth:1153:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_5094: ;;// std/std.porth:1154:5: OP_INLINED 2414
addr_5095: ;;// std/std.porth:506:31: OP_PUSH_GLOBAL_MEM 8
    lea rax, [mem+8]
    push rax
addr_5096: ;;// std/std.porth:506:41: OP_PUSH_GLOBAL_MEM 8388616
    lea rax, [mem+8388616]
    push rax
addr_5097: ;;// std/std.porth:506:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5098: ;;// std/std.porth:506:54: OP_INLINED 36
addr_5099: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5100: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5101: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5102: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5103: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5104: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5105: ;;// std/std.porth:1155:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5106: ;;// std/std.porth:1155:9: OP_CALL 2789
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2789
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_5107: ;;// std/std.porth:1155:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_5108: ;;// std/std.porth:1155:22: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_5109: ;;// std/std.porth:1156:5: OP_INLINED 2426
addr_5110: ;;// std/std.porth:509:31: OP_PUSH_GLOBAL_MEM 8
    lea rax, [mem+8]
    push rax
addr_5111: ;;// std/std.porth:509:41: OP_INLINED 78
addr_5112: ;;// std/core.porth:68:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5113: ;;// std/core.porth:68:8: OP_INTRINSIC cast(int)
addr_5114: ;;// std/core.porth:69:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5115: ;;// std/core.porth:69:8: OP_INTRINSIC cast(int)
addr_5116: ;;// std/core.porth:70:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_5117: ;;// std/std.porth:509:50: OP_PUSH_GLOBAL_MEM 8388616
    lea rax, [mem+8388616]
    push rax
addr_5118: ;;// std/std.porth:509:59: OP_INLINED 30
addr_5119: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_5120: ;;// std/std.porth:1157:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_5121: ;;// std/std.porth:1158:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_5122: ;;// porth.porth:12:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_5123: ;;// porth.porth:13:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_5124: ;;// porth.porth:14:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5125: ;;// porth.porth:14:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_5126: ;;// porth.porth:14:23: OP_INLINED 36
addr_5127: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5128: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5129: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5130: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5131: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5132: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5133: ;;// porth.porth:14:28: OP_INLINED 753
addr_5134: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_5135: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5136: ;;// std/std.porth:65:7: OP_INLINED 704
addr_5137: ;;// std/std.porth:58:38: OP_INLINED 684
addr_5138: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_5139: ;;// std/std.porth:56:57: OP_INLINED 36
addr_5140: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5141: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5142: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5143: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5144: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5145: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5146: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5147: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5148: ;;// std/std.porth:66:7: OP_INLINED 716
addr_5149: ;;// std/std.porth:59:37: OP_INLINED 694
addr_5150: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_5151: ;;// std/std.porth:57:55: OP_INLINED 36
addr_5152: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5153: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5154: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5155: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5156: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5157: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5158: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5159: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_5160: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_5161: ;;// porth.porth:14:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_5162: ;;// porth.porth:14:37: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_5163: ;;// porth.porth:15:5: OP_PUSH_STR 53
    mov rax, 1
    push rax
    lea rax, [str_53]
    push rax
addr_5164: ;;// porth.porth:15:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_5165: ;;// porth.porth:15:37: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_5166: ;;// porth.porth:16:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5167: ;;// porth.porth:16:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_5168: ;;// porth.porth:16:17: OP_INLINED 36
addr_5169: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5170: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5171: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5172: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5173: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5174: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5175: ;;// porth.porth:16:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5176: ;;// porth.porth:16:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_5177: ;;// porth.porth:16:37: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_5178: ;;// porth.porth:17:5: OP_PUSH_STR 54
    mov rax, 1
    push rax
    lea rax, [str_54]
    push rax
addr_5179: ;;// porth.porth:17:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_5180: ;;// porth.porth:17:37: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_5181: ;;// porth.porth:18:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5182: ;;// porth.porth:18:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_5183: ;;// porth.porth:18:17: OP_INLINED 36
addr_5184: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5185: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5186: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5187: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5188: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5189: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5190: ;;// porth.porth:18:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5191: ;;// porth.porth:18:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_5192: ;;// porth.porth:18:37: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_5193: ;;// porth.porth:19:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_5194: ;;// porth.porth:20:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_5195: ;;// porth.porth:22:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_5196: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_5197: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5198: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_5199: ;;// porth.porth:24:23: OP_INLINED 36
addr_5200: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5201: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5202: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5203: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5204: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5205: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5206: ;;// porth.porth:24:28: OP_INLINED 753
addr_5207: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_5208: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5209: ;;// std/std.porth:65:7: OP_INLINED 704
addr_5210: ;;// std/std.porth:58:38: OP_INLINED 684
addr_5211: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_5212: ;;// std/std.porth:56:57: OP_INLINED 36
addr_5213: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5214: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5215: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5216: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5217: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5218: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5219: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5220: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5221: ;;// std/std.porth:66:7: OP_INLINED 716
addr_5222: ;;// std/std.porth:59:37: OP_INLINED 694
addr_5223: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_5224: ;;// std/std.porth:57:55: OP_INLINED 36
addr_5225: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5226: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5227: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5228: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5229: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5230: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5231: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5232: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_5233: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_5234: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_5235: ;;// porth.porth:24:36: OP_INLINED 662
addr_5236: ;;// std/std.porth:48:34: OP_INLINED 394
addr_5237: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_5238: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_5239: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_5240: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_5241: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_5242: ;;// porth.porth:25:36: OP_INLINED 662
addr_5243: ;;// std/std.porth:48:34: OP_INLINED 394
addr_5244: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_5245: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_5246: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_5247: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5248: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_5249: ;;// porth.porth:26:17: OP_INLINED 36
addr_5250: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5251: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5252: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5253: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5254: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5255: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5256: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5257: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_5258: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_5259: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_5260: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_5261: ;;// porth.porth:27:36: OP_INLINED 662
addr_5262: ;;// std/std.porth:48:34: OP_INLINED 394
addr_5263: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_5264: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_5265: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_5266: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5267: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_5268: ;;// porth.porth:28:17: OP_INLINED 36
addr_5269: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5270: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5271: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5272: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5273: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5274: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5275: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5276: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_5277: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_5278: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_5279: ;;// porth.porth:30:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_5280: ;;// porth.porth:31:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_5281: ;;// porth.porth:31:27: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_5282: ;;// porth.porth:31:34: OP_INLINED 5195
addr_5283: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_5284: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5285: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_5286: ;;// porth.porth:24:23: OP_INLINED 36
addr_5287: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5288: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5289: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5290: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5291: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5292: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5293: ;;// porth.porth:24:28: OP_INLINED 753
addr_5294: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_5295: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5296: ;;// std/std.porth:65:7: OP_INLINED 704
addr_5297: ;;// std/std.porth:58:38: OP_INLINED 684
addr_5298: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_5299: ;;// std/std.porth:56:57: OP_INLINED 36
addr_5300: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5301: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5302: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5303: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5304: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5305: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5306: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5307: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5308: ;;// std/std.porth:66:7: OP_INLINED 716
addr_5309: ;;// std/std.porth:59:37: OP_INLINED 694
addr_5310: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_5311: ;;// std/std.porth:57:55: OP_INLINED 36
addr_5312: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5313: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5314: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5315: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5316: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5317: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5318: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5319: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_5320: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_5321: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_5322: ;;// porth.porth:24:36: OP_INLINED 662
addr_5323: ;;// std/std.porth:48:34: OP_INLINED 394
addr_5324: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_5325: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_5326: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_5327: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_5328: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_5329: ;;// porth.porth:25:36: OP_INLINED 662
addr_5330: ;;// std/std.porth:48:34: OP_INLINED 394
addr_5331: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_5332: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_5333: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_5334: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5335: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_5336: ;;// porth.porth:26:17: OP_INLINED 36
addr_5337: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5338: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5339: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5340: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5341: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5342: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5343: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5344: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_5345: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_5346: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_5347: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_5348: ;;// porth.porth:27:36: OP_INLINED 662
addr_5349: ;;// std/std.porth:48:34: OP_INLINED 394
addr_5350: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_5351: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_5352: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_5353: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5354: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_5355: ;;// porth.porth:28:17: OP_INLINED 36
addr_5356: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5357: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5358: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5359: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5360: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5361: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5362: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5363: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_5364: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_5365: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_5366: ;;// porth.porth:31:42: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_5367: ;;// porth.porth:32:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_5368: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_5369: ;;// porth.porth:32:35: OP_INLINED 5195
addr_5370: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_5371: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5372: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_5373: ;;// porth.porth:24:23: OP_INLINED 36
addr_5374: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5375: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5376: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5377: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5378: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5379: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5380: ;;// porth.porth:24:28: OP_INLINED 753
addr_5381: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_5382: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5383: ;;// std/std.porth:65:7: OP_INLINED 704
addr_5384: ;;// std/std.porth:58:38: OP_INLINED 684
addr_5385: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_5386: ;;// std/std.porth:56:57: OP_INLINED 36
addr_5387: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5388: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5389: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5390: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5391: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5392: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5393: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5394: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5395: ;;// std/std.porth:66:7: OP_INLINED 716
addr_5396: ;;// std/std.porth:59:37: OP_INLINED 694
addr_5397: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_5398: ;;// std/std.porth:57:55: OP_INLINED 36
addr_5399: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5400: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5401: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5402: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5403: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5404: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5405: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5406: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_5407: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_5408: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_5409: ;;// porth.porth:24:36: OP_INLINED 662
addr_5410: ;;// std/std.porth:48:34: OP_INLINED 394
addr_5411: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_5412: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_5413: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_5414: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_5415: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_5416: ;;// porth.porth:25:36: OP_INLINED 662
addr_5417: ;;// std/std.porth:48:34: OP_INLINED 394
addr_5418: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_5419: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_5420: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_5421: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5422: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_5423: ;;// porth.porth:26:17: OP_INLINED 36
addr_5424: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5425: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5426: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5427: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5428: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5429: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5430: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5431: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_5432: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_5433: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_5434: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_5435: ;;// porth.porth:27:36: OP_INLINED 662
addr_5436: ;;// std/std.porth:48:34: OP_INLINED 394
addr_5437: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_5438: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_5439: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_5440: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5441: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_5442: ;;// porth.porth:28:17: OP_INLINED 36
addr_5443: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5444: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5445: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5446: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5447: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5448: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5449: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5450: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_5451: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_5452: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_5453: ;;// porth.porth:32:43: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_5454: ;;// porth.porth:71:6: OP_PREP_PROC 16
    sub rsp, 16
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_5455: ;;// porth.porth:77:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_5456: ;;// porth.porth:77:8: OP_INLINED 782
addr_5457: ;;// std/std.porth:71:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_5458: ;;// std/std.porth:72:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5459: ;;// std/std.porth:72:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_5460: ;;// std/std.porth:72:9: OP_INLINED 729
addr_5461: ;;// std/std.porth:60:35: OP_INLINED 684
addr_5462: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_5463: ;;// std/std.porth:56:57: OP_INLINED 36
addr_5464: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5465: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5466: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5467: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5468: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5469: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5470: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_5471: ;;// std/std.porth:73:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_5472: ;;// std/std.porth:73:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_5473: ;;// std/std.porth:73:9: OP_INLINED 741
addr_5474: ;;// std/std.porth:61:34: OP_INLINED 694
addr_5475: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_5476: ;;// std/std.porth:57:55: OP_INLINED 36
addr_5477: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5478: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5479: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5480: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5481: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5482: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5483: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_5484: ;;// std/std.porth:74:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_5485: ;;// porth.porth:78:3: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_5486: ;;// porth.porth:80:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_5487: ;;// porth.porth:80:13: OP_INLINED 753
addr_5488: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_5489: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5490: ;;// std/std.porth:65:7: OP_INLINED 704
addr_5491: ;;// std/std.porth:58:38: OP_INLINED 684
addr_5492: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_5493: ;;// std/std.porth:56:57: OP_INLINED 36
addr_5494: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5495: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5496: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5497: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5498: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5499: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5500: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5501: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5502: ;;// std/std.porth:66:7: OP_INLINED 716
addr_5503: ;;// std/std.porth:59:37: OP_INLINED 694
addr_5504: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_5505: ;;// std/std.porth:57:55: OP_INLINED 36
addr_5506: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5507: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5508: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5509: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5510: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5511: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5512: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5513: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_5514: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_5515: ;;// porth.porth:80:18: OP_PUSH_STR 57
    mov rax, 2
    push rax
    lea rax, [str_57]
    push rax
addr_5516: ;;// porth.porth:80:30: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_5517: ;;// porth.porth:80:36: OP_IF 3
    pop rax
    test rax, rax
    jz addr_5520
addr_5518: ;;// porth.porth:80:40: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_5519: ;;// porth.porth:81:3: OP_ELSE 34
    jmp addr_5553
addr_5520: ;;// porth.porth:81:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_5521: ;;// porth.porth:81:13: OP_INLINED 753
addr_5522: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_5523: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5524: ;;// std/std.porth:65:7: OP_INLINED 704
addr_5525: ;;// std/std.porth:58:38: OP_INLINED 684
addr_5526: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_5527: ;;// std/std.porth:56:57: OP_INLINED 36
addr_5528: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5529: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5530: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5531: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5532: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5533: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5534: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5535: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5536: ;;// std/std.porth:66:7: OP_INLINED 716
addr_5537: ;;// std/std.porth:59:37: OP_INLINED 694
addr_5538: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_5539: ;;// std/std.porth:57:55: OP_INLINED 36
addr_5540: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5541: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5542: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5543: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5544: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5545: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5546: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5547: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_5548: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_5549: ;;// porth.porth:81:18: OP_PUSH_STR 58
    mov rax, 3
    push rax
    lea rax, [str_58]
    push rax
addr_5550: ;;// porth.porth:81:30: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_5551: ;;// porth.porth:81:36: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_5554
addr_5552: ;;// porth.porth:81:40: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_5553: ;;// porth.porth:82:3: OP_ELSE 34
    jmp addr_5587
addr_5554: ;;// porth.porth:82:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_5555: ;;// porth.porth:82:13: OP_INLINED 753
addr_5556: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_5557: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5558: ;;// std/std.porth:65:7: OP_INLINED 704
addr_5559: ;;// std/std.porth:58:38: OP_INLINED 684
addr_5560: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_5561: ;;// std/std.porth:56:57: OP_INLINED 36
addr_5562: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5563: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5564: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5565: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5566: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5567: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5568: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5569: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5570: ;;// std/std.porth:66:7: OP_INLINED 716
addr_5571: ;;// std/std.porth:59:37: OP_INLINED 694
addr_5572: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_5573: ;;// std/std.porth:57:55: OP_INLINED 36
addr_5574: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5575: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5576: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5577: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5578: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5579: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5580: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5581: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_5582: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_5583: ;;// porth.porth:82:18: OP_PUSH_STR 59
    mov rax, 4
    push rax
    lea rax, [str_59]
    push rax
addr_5584: ;;// porth.porth:82:30: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_5585: ;;// porth.porth:82:36: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_5588
addr_5586: ;;// porth.porth:82:40: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_5587: ;;// porth.porth:83:3: OP_ELSE 34
    jmp addr_5621
addr_5588: ;;// porth.porth:83:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_5589: ;;// porth.porth:83:13: OP_INLINED 753
addr_5590: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_5591: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5592: ;;// std/std.porth:65:7: OP_INLINED 704
addr_5593: ;;// std/std.porth:58:38: OP_INLINED 684
addr_5594: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_5595: ;;// std/std.porth:56:57: OP_INLINED 36
addr_5596: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5597: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5598: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5599: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5600: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5601: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5602: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5603: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5604: ;;// std/std.porth:66:7: OP_INLINED 716
addr_5605: ;;// std/std.porth:59:37: OP_INLINED 694
addr_5606: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_5607: ;;// std/std.porth:57:55: OP_INLINED 36
addr_5608: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5609: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5610: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5611: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5612: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5613: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5614: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5615: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_5616: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_5617: ;;// porth.porth:83:18: OP_PUSH_STR 60
    mov rax, 3
    push rax
    lea rax, [str_60]
    push rax
addr_5618: ;;// porth.porth:83:30: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_5619: ;;// porth.porth:83:36: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_5622
addr_5620: ;;// porth.porth:83:40: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_5621: ;;// porth.porth:84:3: OP_ELSE 34
    jmp addr_5655
addr_5622: ;;// porth.porth:84:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_5623: ;;// porth.porth:84:13: OP_INLINED 753
addr_5624: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_5625: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5626: ;;// std/std.porth:65:7: OP_INLINED 704
addr_5627: ;;// std/std.porth:58:38: OP_INLINED 684
addr_5628: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_5629: ;;// std/std.porth:56:57: OP_INLINED 36
addr_5630: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5631: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5632: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5633: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5634: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5635: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5636: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5637: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5638: ;;// std/std.porth:66:7: OP_INLINED 716
addr_5639: ;;// std/std.porth:59:37: OP_INLINED 694
addr_5640: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_5641: ;;// std/std.porth:57:55: OP_INLINED 36
addr_5642: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5643: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5644: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5645: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5646: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5647: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5648: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5649: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_5650: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_5651: ;;// porth.porth:84:18: OP_PUSH_STR 61
    mov rax, 5
    push rax
    lea rax, [str_61]
    push rax
addr_5652: ;;// porth.porth:84:30: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_5653: ;;// porth.porth:84:36: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_5656
addr_5654: ;;// porth.porth:84:40: OP_PUSH_INT 4
    mov rax, 4
    push rax
addr_5655: ;;// porth.porth:85:3: OP_ELSE 34
    jmp addr_5689
addr_5656: ;;// porth.porth:85:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_5657: ;;// porth.porth:85:13: OP_INLINED 753
addr_5658: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_5659: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5660: ;;// std/std.porth:65:7: OP_INLINED 704
addr_5661: ;;// std/std.porth:58:38: OP_INLINED 684
addr_5662: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_5663: ;;// std/std.porth:56:57: OP_INLINED 36
addr_5664: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5665: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5666: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5667: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5668: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5669: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5670: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5671: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5672: ;;// std/std.porth:66:7: OP_INLINED 716
addr_5673: ;;// std/std.porth:59:37: OP_INLINED 694
addr_5674: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_5675: ;;// std/std.porth:57:55: OP_INLINED 36
addr_5676: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5677: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5678: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5679: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5680: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5681: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5682: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5683: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_5684: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_5685: ;;// porth.porth:85:18: OP_PUSH_STR 62
    mov rax, 2
    push rax
    lea rax, [str_62]
    push rax
addr_5686: ;;// porth.porth:85:30: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_5687: ;;// porth.porth:85:36: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_5690
addr_5688: ;;// porth.porth:85:40: OP_PUSH_INT 5
    mov rax, 5
    push rax
addr_5689: ;;// porth.porth:86:3: OP_ELSE 34
    jmp addr_5723
addr_5690: ;;// porth.porth:86:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_5691: ;;// porth.porth:86:13: OP_INLINED 753
addr_5692: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_5693: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5694: ;;// std/std.porth:65:7: OP_INLINED 704
addr_5695: ;;// std/std.porth:58:38: OP_INLINED 684
addr_5696: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_5697: ;;// std/std.porth:56:57: OP_INLINED 36
addr_5698: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5699: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5700: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5701: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5702: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5703: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5704: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5705: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5706: ;;// std/std.porth:66:7: OP_INLINED 716
addr_5707: ;;// std/std.porth:59:37: OP_INLINED 694
addr_5708: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_5709: ;;// std/std.porth:57:55: OP_INLINED 36
addr_5710: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5711: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5712: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5713: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5714: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5715: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5716: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5717: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_5718: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_5719: ;;// porth.porth:86:18: OP_PUSH_STR 63
    mov rax, 7
    push rax
    lea rax, [str_63]
    push rax
addr_5720: ;;// porth.porth:86:30: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_5721: ;;// porth.porth:86:36: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_5724
addr_5722: ;;// porth.porth:86:40: OP_PUSH_INT 6
    mov rax, 6
    push rax
addr_5723: ;;// porth.porth:87:3: OP_ELSE 34
    jmp addr_5757
addr_5724: ;;// porth.porth:87:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_5725: ;;// porth.porth:87:13: OP_INLINED 753
addr_5726: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_5727: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5728: ;;// std/std.porth:65:7: OP_INLINED 704
addr_5729: ;;// std/std.porth:58:38: OP_INLINED 684
addr_5730: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_5731: ;;// std/std.porth:56:57: OP_INLINED 36
addr_5732: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5733: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5734: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5735: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5736: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5737: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5738: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5739: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5740: ;;// std/std.porth:66:7: OP_INLINED 716
addr_5741: ;;// std/std.porth:59:37: OP_INLINED 694
addr_5742: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_5743: ;;// std/std.porth:57:55: OP_INLINED 36
addr_5744: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5745: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5746: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5747: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5748: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5749: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5750: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5751: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_5752: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_5753: ;;// porth.porth:87:18: OP_PUSH_STR 64
    mov rax, 6
    push rax
    lea rax, [str_64]
    push rax
addr_5754: ;;// porth.porth:87:30: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_5755: ;;// porth.porth:87:36: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_5758
addr_5756: ;;// porth.porth:87:40: OP_PUSH_INT 7
    mov rax, 7
    push rax
addr_5757: ;;// porth.porth:88:3: OP_ELSE 34
    jmp addr_5791
addr_5758: ;;// porth.porth:88:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_5759: ;;// porth.porth:88:13: OP_INLINED 753
addr_5760: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_5761: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5762: ;;// std/std.porth:65:7: OP_INLINED 704
addr_5763: ;;// std/std.porth:58:38: OP_INLINED 684
addr_5764: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_5765: ;;// std/std.porth:56:57: OP_INLINED 36
addr_5766: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5767: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5768: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5769: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5770: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5771: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5772: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5773: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5774: ;;// std/std.porth:66:7: OP_INLINED 716
addr_5775: ;;// std/std.porth:59:37: OP_INLINED 694
addr_5776: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_5777: ;;// std/std.porth:57:55: OP_INLINED 36
addr_5778: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5779: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5780: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5781: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5782: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5783: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5784: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5785: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_5786: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_5787: ;;// porth.porth:88:18: OP_PUSH_STR 65
    mov rax, 4
    push rax
    lea rax, [str_65]
    push rax
addr_5788: ;;// porth.porth:88:30: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_5789: ;;// porth.porth:88:36: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_5792
addr_5790: ;;// porth.porth:88:40: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_5791: ;;// porth.porth:89:3: OP_ELSE 34
    jmp addr_5825
addr_5792: ;;// porth.porth:89:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_5793: ;;// porth.porth:89:13: OP_INLINED 753
addr_5794: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_5795: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5796: ;;// std/std.porth:65:7: OP_INLINED 704
addr_5797: ;;// std/std.porth:58:38: OP_INLINED 684
addr_5798: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_5799: ;;// std/std.porth:56:57: OP_INLINED 36
addr_5800: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5801: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5802: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5803: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5804: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5805: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5806: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5807: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5808: ;;// std/std.porth:66:7: OP_INLINED 716
addr_5809: ;;// std/std.porth:59:37: OP_INLINED 694
addr_5810: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_5811: ;;// std/std.porth:57:55: OP_INLINED 36
addr_5812: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5813: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5814: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5815: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5816: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5817: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5818: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5819: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_5820: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_5821: ;;// porth.porth:89:18: OP_PUSH_STR 66
    mov rax, 5
    push rax
    lea rax, [str_66]
    push rax
addr_5822: ;;// porth.porth:89:30: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_5823: ;;// porth.porth:89:36: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_5826
addr_5824: ;;// porth.porth:89:40: OP_PUSH_INT 9
    mov rax, 9
    push rax
addr_5825: ;;// porth.porth:90:3: OP_ELSE 34
    jmp addr_5859
addr_5826: ;;// porth.porth:90:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_5827: ;;// porth.porth:90:13: OP_INLINED 753
addr_5828: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_5829: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5830: ;;// std/std.porth:65:7: OP_INLINED 704
addr_5831: ;;// std/std.porth:58:38: OP_INLINED 684
addr_5832: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_5833: ;;// std/std.porth:56:57: OP_INLINED 36
addr_5834: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5835: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5836: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5837: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5838: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5839: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5840: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5841: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5842: ;;// std/std.porth:66:7: OP_INLINED 716
addr_5843: ;;// std/std.porth:59:37: OP_INLINED 694
addr_5844: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_5845: ;;// std/std.porth:57:55: OP_INLINED 36
addr_5846: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5847: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5848: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5849: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5850: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5851: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5852: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5853: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_5854: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_5855: ;;// porth.porth:90:18: OP_PUSH_STR 67
    mov rax, 6
    push rax
    lea rax, [str_67]
    push rax
addr_5856: ;;// porth.porth:90:30: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_5857: ;;// porth.porth:90:36: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_5860
addr_5858: ;;// porth.porth:90:40: OP_PUSH_INT 10
    mov rax, 10
    push rax
addr_5859: ;;// porth.porth:91:3: OP_ELSE 34
    jmp addr_5893
addr_5860: ;;// porth.porth:91:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_5861: ;;// porth.porth:91:13: OP_INLINED 753
addr_5862: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_5863: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5864: ;;// std/std.porth:65:7: OP_INLINED 704
addr_5865: ;;// std/std.porth:58:38: OP_INLINED 684
addr_5866: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_5867: ;;// std/std.porth:56:57: OP_INLINED 36
addr_5868: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5869: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5870: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5871: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5872: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5873: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5874: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5875: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5876: ;;// std/std.porth:66:7: OP_INLINED 716
addr_5877: ;;// std/std.porth:59:37: OP_INLINED 694
addr_5878: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_5879: ;;// std/std.porth:57:55: OP_INLINED 36
addr_5880: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5881: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5882: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5883: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5884: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5885: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5886: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5887: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_5888: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_5889: ;;// porth.porth:91:18: OP_PUSH_STR 68
    mov rax, 5
    push rax
    lea rax, [str_68]
    push rax
addr_5890: ;;// porth.porth:91:30: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_5891: ;;// porth.porth:91:36: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_5894
addr_5892: ;;// porth.porth:91:40: OP_PUSH_INT 11
    mov rax, 11
    push rax
addr_5893: ;;// porth.porth:92:3: OP_ELSE 34
    jmp addr_5927
addr_5894: ;;// porth.porth:92:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_5895: ;;// porth.porth:92:13: OP_INLINED 753
addr_5896: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_5897: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5898: ;;// std/std.porth:65:7: OP_INLINED 704
addr_5899: ;;// std/std.porth:58:38: OP_INLINED 684
addr_5900: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_5901: ;;// std/std.porth:56:57: OP_INLINED 36
addr_5902: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5903: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5904: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5905: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5906: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5907: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5908: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5909: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5910: ;;// std/std.porth:66:7: OP_INLINED 716
addr_5911: ;;// std/std.porth:59:37: OP_INLINED 694
addr_5912: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_5913: ;;// std/std.porth:57:55: OP_INLINED 36
addr_5914: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5915: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5916: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5917: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5918: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5919: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5920: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5921: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_5922: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_5923: ;;// porth.porth:92:18: OP_PUSH_STR 69
    mov rax, 6
    push rax
    lea rax, [str_69]
    push rax
addr_5924: ;;// porth.porth:92:30: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_5925: ;;// porth.porth:92:36: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_5928
addr_5926: ;;// porth.porth:92:40: OP_PUSH_INT 12
    mov rax, 12
    push rax
addr_5927: ;;// porth.porth:93:3: OP_ELSE 34
    jmp addr_5961
addr_5928: ;;// porth.porth:93:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_5929: ;;// porth.porth:93:13: OP_INLINED 753
addr_5930: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_5931: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5932: ;;// std/std.porth:65:7: OP_INLINED 704
addr_5933: ;;// std/std.porth:58:38: OP_INLINED 684
addr_5934: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_5935: ;;// std/std.porth:56:57: OP_INLINED 36
addr_5936: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5937: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5938: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5939: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5940: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5941: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5942: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5943: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5944: ;;// std/std.porth:66:7: OP_INLINED 716
addr_5945: ;;// std/std.porth:59:37: OP_INLINED 694
addr_5946: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_5947: ;;// std/std.porth:57:55: OP_INLINED 36
addr_5948: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5949: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5950: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5951: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5952: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5953: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5954: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5955: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_5956: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_5957: ;;// porth.porth:93:18: OP_PUSH_STR 70
    mov rax, 2
    push rax
    lea rax, [str_70]
    push rax
addr_5958: ;;// porth.porth:93:30: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_5959: ;;// porth.porth:93:36: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_5962
addr_5960: ;;// porth.porth:93:40: OP_PUSH_INT 13
    mov rax, 13
    push rax
addr_5961: ;;// porth.porth:94:3: OP_ELSE 34
    jmp addr_5995
addr_5962: ;;// porth.porth:94:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_5963: ;;// porth.porth:94:13: OP_INLINED 753
addr_5964: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_5965: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5966: ;;// std/std.porth:65:7: OP_INLINED 704
addr_5967: ;;// std/std.porth:58:38: OP_INLINED 684
addr_5968: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_5969: ;;// std/std.porth:56:57: OP_INLINED 36
addr_5970: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5971: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5972: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5973: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5974: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5975: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5976: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5977: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_5978: ;;// std/std.porth:66:7: OP_INLINED 716
addr_5979: ;;// std/std.porth:59:37: OP_INLINED 694
addr_5980: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_5981: ;;// std/std.porth:57:55: OP_INLINED 36
addr_5982: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5983: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_5984: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_5985: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_5986: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_5987: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_5988: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_5989: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_5990: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_5991: ;;// porth.porth:94:18: OP_PUSH_STR 71
    mov rax, 2
    push rax
    lea rax, [str_71]
    push rax
addr_5992: ;;// porth.porth:94:30: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_5993: ;;// porth.porth:94:36: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_5996
addr_5994: ;;// porth.porth:94:40: OP_PUSH_INT 14
    mov rax, 14
    push rax
addr_5995: ;;// porth.porth:95:3: OP_ELSE 34
    jmp addr_6029
addr_5996: ;;// porth.porth:95:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_5997: ;;// porth.porth:95:13: OP_INLINED 753
addr_5998: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_5999: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_6000: ;;// std/std.porth:65:7: OP_INLINED 704
addr_6001: ;;// std/std.porth:58:38: OP_INLINED 684
addr_6002: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_6003: ;;// std/std.porth:56:57: OP_INLINED 36
addr_6004: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6005: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6006: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6007: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6008: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6009: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6010: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6011: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_6012: ;;// std/std.porth:66:7: OP_INLINED 716
addr_6013: ;;// std/std.porth:59:37: OP_INLINED 694
addr_6014: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_6015: ;;// std/std.porth:57:55: OP_INLINED 36
addr_6016: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6017: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6018: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6019: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6020: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6021: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6022: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6023: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_6024: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_6025: ;;// porth.porth:95:18: OP_PUSH_STR 72
    mov rax, 6
    push rax
    lea rax, [str_72]
    push rax
addr_6026: ;;// porth.porth:95:30: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_6027: ;;// porth.porth:95:36: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_6030
addr_6028: ;;// porth.porth:95:40: OP_PUSH_INT 15
    mov rax, 15
    push rax
addr_6029: ;;// porth.porth:96:3: OP_ELSE 34
    jmp addr_6063
addr_6030: ;;// porth.porth:96:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_6031: ;;// porth.porth:96:13: OP_INLINED 753
addr_6032: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_6033: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_6034: ;;// std/std.porth:65:7: OP_INLINED 704
addr_6035: ;;// std/std.porth:58:38: OP_INLINED 684
addr_6036: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_6037: ;;// std/std.porth:56:57: OP_INLINED 36
addr_6038: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6039: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6040: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6041: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6042: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6043: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6044: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6045: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_6046: ;;// std/std.porth:66:7: OP_INLINED 716
addr_6047: ;;// std/std.porth:59:37: OP_INLINED 694
addr_6048: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_6049: ;;// std/std.porth:57:55: OP_INLINED 36
addr_6050: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6051: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6052: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6053: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6054: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6055: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6056: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6057: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_6058: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_6059: ;;// porth.porth:96:18: OP_PUSH_STR 73
    mov rax, 4
    push rax
    lea rax, [str_73]
    push rax
addr_6060: ;;// porth.porth:96:30: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_6061: ;;// porth.porth:96:36: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_6064
addr_6062: ;;// porth.porth:96:40: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_6063: ;;// porth.porth:97:3: OP_ELSE 34
    jmp addr_6097
addr_6064: ;;// porth.porth:97:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_6065: ;;// porth.porth:97:13: OP_INLINED 753
addr_6066: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_6067: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_6068: ;;// std/std.porth:65:7: OP_INLINED 704
addr_6069: ;;// std/std.porth:58:38: OP_INLINED 684
addr_6070: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_6071: ;;// std/std.porth:56:57: OP_INLINED 36
addr_6072: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6073: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6074: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6075: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6076: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6077: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6078: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6079: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_6080: ;;// std/std.porth:66:7: OP_INLINED 716
addr_6081: ;;// std/std.porth:59:37: OP_INLINED 694
addr_6082: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_6083: ;;// std/std.porth:57:55: OP_INLINED 36
addr_6084: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6085: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6086: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6087: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6088: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6089: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6090: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6091: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_6092: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_6093: ;;// porth.porth:97:18: OP_PUSH_STR 74
    mov rax, 7
    push rax
    lea rax, [str_74]
    push rax
addr_6094: ;;// porth.porth:97:30: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_6095: ;;// porth.porth:97:36: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_6098
addr_6096: ;;// porth.porth:97:40: OP_PUSH_INT 17
    mov rax, 17
    push rax
addr_6097: ;;// porth.porth:98:3: OP_ELSE 34
    jmp addr_6131
addr_6098: ;;// porth.porth:98:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_6099: ;;// porth.porth:98:13: OP_INLINED 753
addr_6100: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_6101: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_6102: ;;// std/std.porth:65:7: OP_INLINED 704
addr_6103: ;;// std/std.porth:58:38: OP_INLINED 684
addr_6104: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_6105: ;;// std/std.porth:56:57: OP_INLINED 36
addr_6106: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6107: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6108: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6109: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6110: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6111: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6112: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6113: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_6114: ;;// std/std.porth:66:7: OP_INLINED 716
addr_6115: ;;// std/std.porth:59:37: OP_INLINED 694
addr_6116: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_6117: ;;// std/std.porth:57:55: OP_INLINED 36
addr_6118: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6119: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6120: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6121: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6122: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6123: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6124: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6125: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_6126: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_6127: ;;// porth.porth:98:18: OP_PUSH_STR 75
    mov rax, 9
    push rax
    lea rax, [str_75]
    push rax
addr_6128: ;;// porth.porth:98:30: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_6129: ;;// porth.porth:98:36: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_6132
addr_6130: ;;// porth.porth:98:40: OP_PUSH_INT 18
    mov rax, 18
    push rax
addr_6131: ;;// porth.porth:99:3: OP_ELSE 34
    jmp addr_6165
addr_6132: ;;// porth.porth:99:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_6133: ;;// porth.porth:99:13: OP_INLINED 753
addr_6134: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_6135: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_6136: ;;// std/std.porth:65:7: OP_INLINED 704
addr_6137: ;;// std/std.porth:58:38: OP_INLINED 684
addr_6138: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_6139: ;;// std/std.porth:56:57: OP_INLINED 36
addr_6140: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6141: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6142: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6143: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6144: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6145: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6146: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6147: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_6148: ;;// std/std.porth:66:7: OP_INLINED 716
addr_6149: ;;// std/std.porth:59:37: OP_INLINED 694
addr_6150: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_6151: ;;// std/std.porth:57:55: OP_INLINED 36
addr_6152: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6153: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6154: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6155: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6156: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6157: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6158: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6159: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_6160: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_6161: ;;// porth.porth:99:18: OP_PUSH_STR 76
    mov rax, 3
    push rax
    lea rax, [str_76]
    push rax
addr_6162: ;;// porth.porth:99:30: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_6163: ;;// porth.porth:99:36: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_6166
addr_6164: ;;// porth.porth:99:40: OP_PUSH_INT 19
    mov rax, 19
    push rax
addr_6165: ;;// porth.porth:100:3: OP_ELSE 34
    jmp addr_6199
addr_6166: ;;// porth.porth:100:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_6167: ;;// porth.porth:100:13: OP_INLINED 753
addr_6168: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_6169: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_6170: ;;// std/std.porth:65:7: OP_INLINED 704
addr_6171: ;;// std/std.porth:58:38: OP_INLINED 684
addr_6172: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_6173: ;;// std/std.porth:56:57: OP_INLINED 36
addr_6174: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6175: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6176: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6177: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6178: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6179: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6180: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6181: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_6182: ;;// std/std.porth:66:7: OP_INLINED 716
addr_6183: ;;// std/std.porth:59:37: OP_INLINED 694
addr_6184: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_6185: ;;// std/std.porth:57:55: OP_INLINED 36
addr_6186: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6187: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6188: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6189: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6190: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6191: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6192: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6193: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_6194: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_6195: ;;// porth.porth:100:18: OP_PUSH_STR 77
    mov rax, 4
    push rax
    lea rax, [str_77]
    push rax
addr_6196: ;;// porth.porth:100:30: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_6197: ;;// porth.porth:100:36: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_6200
addr_6198: ;;// porth.porth:100:40: OP_PUSH_INT 20
    mov rax, 20
    push rax
addr_6199: ;;// porth.porth:101:3: OP_ELSE 34
    jmp addr_6233
addr_6200: ;;// porth.porth:101:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_6201: ;;// porth.porth:101:13: OP_INLINED 753
addr_6202: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_6203: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_6204: ;;// std/std.porth:65:7: OP_INLINED 704
addr_6205: ;;// std/std.porth:58:38: OP_INLINED 684
addr_6206: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_6207: ;;// std/std.porth:56:57: OP_INLINED 36
addr_6208: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6209: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6210: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6211: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6212: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6213: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6214: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6215: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_6216: ;;// std/std.porth:66:7: OP_INLINED 716
addr_6217: ;;// std/std.porth:59:37: OP_INLINED 694
addr_6218: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_6219: ;;// std/std.porth:57:55: OP_INLINED 36
addr_6220: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6221: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6222: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6223: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6224: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6225: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6226: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6227: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_6228: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_6229: ;;// porth.porth:101:18: OP_PUSH_STR 78
    mov rax, 8
    push rax
    lea rax, [str_78]
    push rax
addr_6230: ;;// porth.porth:101:30: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_6231: ;;// porth.porth:101:36: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_6234
addr_6232: ;;// porth.porth:101:40: OP_PUSH_INT 21
    mov rax, 21
    push rax
addr_6233: ;;// porth.porth:102:3: OP_ELSE 34
    jmp addr_6267
addr_6234: ;;// porth.porth:102:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_6235: ;;// porth.porth:102:13: OP_INLINED 753
addr_6236: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_6237: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_6238: ;;// std/std.porth:65:7: OP_INLINED 704
addr_6239: ;;// std/std.porth:58:38: OP_INLINED 684
addr_6240: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_6241: ;;// std/std.porth:56:57: OP_INLINED 36
addr_6242: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6243: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6244: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6245: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6246: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6247: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6248: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6249: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_6250: ;;// std/std.porth:66:7: OP_INLINED 716
addr_6251: ;;// std/std.porth:59:37: OP_INLINED 694
addr_6252: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_6253: ;;// std/std.porth:57:55: OP_INLINED 36
addr_6254: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6255: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6256: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6257: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6258: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6259: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6260: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6261: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_6262: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_6263: ;;// porth.porth:102:18: OP_PUSH_STR 79
    mov rax, 6
    push rax
    lea rax, [str_79]
    push rax
addr_6264: ;;// porth.porth:102:32: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_6265: ;;// porth.porth:102:38: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_6268
addr_6266: ;;// porth.porth:102:42: OP_PUSH_INT 22
    mov rax, 22
    push rax
addr_6267: ;;// porth.porth:103:3: OP_ELSE 4
    jmp addr_6271
addr_6268: ;;// porth.porth:104:5: OP_INTRINSIC drop
    pop rax
addr_6269: ;;// porth.porth:104:10: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_6270: ;;// porth.porth:104:16: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_6271: ;;// porth.porth:105:3: OP_END_IF 0
addr_6272: ;;// porth.porth:107:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6273: ;;// porth.porth:108:1: OP_RET 16
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 16
    ret
addr_6274: ;;// porth.porth:110:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_6275: ;;// porth.porth:116:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_6276: ;;// porth.porth:116:12: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_6277: ;;// porth.porth:116:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_6278: ;;// porth.porth:116:34: OP_IF 3
    pop rax
    test rax, rax
    jz addr_6281
addr_6279: ;;// porth.porth:116:38: OP_PUSH_STR 80
    mov rax, 2
    push rax
    lea rax, [str_80]
    push rax
addr_6280: ;;// porth.porth:117:3: OP_ELSE 6
    jmp addr_6286
addr_6281: ;;// porth.porth:117:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_6282: ;;// porth.porth:117:12: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_6283: ;;// porth.porth:117:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_6284: ;;// porth.porth:117:34: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_6287
addr_6285: ;;// porth.porth:117:38: OP_PUSH_STR 81
    mov rax, 3
    push rax
    lea rax, [str_81]
    push rax
addr_6286: ;;// porth.porth:118:3: OP_ELSE 6
    jmp addr_6292
addr_6287: ;;// porth.porth:118:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_6288: ;;// porth.porth:118:12: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_6289: ;;// porth.porth:118:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_6290: ;;// porth.porth:118:34: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_6293
addr_6291: ;;// porth.porth:118:38: OP_PUSH_STR 82
    mov rax, 4
    push rax
    lea rax, [str_82]
    push rax
addr_6292: ;;// porth.porth:119:3: OP_ELSE 6
    jmp addr_6298
addr_6293: ;;// porth.porth:119:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_6294: ;;// porth.porth:119:12: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_6295: ;;// porth.porth:119:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_6296: ;;// porth.porth:119:34: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_6299
addr_6297: ;;// porth.porth:119:38: OP_PUSH_STR 83
    mov rax, 3
    push rax
    lea rax, [str_83]
    push rax
addr_6298: ;;// porth.porth:120:3: OP_ELSE 6
    jmp addr_6304
addr_6299: ;;// porth.porth:120:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_6300: ;;// porth.porth:120:12: OP_PUSH_INT 4
    mov rax, 4
    push rax
addr_6301: ;;// porth.porth:120:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_6302: ;;// porth.porth:120:34: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_6305
addr_6303: ;;// porth.porth:120:38: OP_PUSH_STR 84
    mov rax, 5
    push rax
    lea rax, [str_84]
    push rax
addr_6304: ;;// porth.porth:121:3: OP_ELSE 6
    jmp addr_6310
addr_6305: ;;// porth.porth:121:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_6306: ;;// porth.porth:121:12: OP_PUSH_INT 5
    mov rax, 5
    push rax
addr_6307: ;;// porth.porth:121:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_6308: ;;// porth.porth:121:34: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_6311
addr_6309: ;;// porth.porth:121:38: OP_PUSH_STR 85
    mov rax, 2
    push rax
    lea rax, [str_85]
    push rax
addr_6310: ;;// porth.porth:122:3: OP_ELSE 6
    jmp addr_6316
addr_6311: ;;// porth.porth:122:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_6312: ;;// porth.porth:122:12: OP_PUSH_INT 6
    mov rax, 6
    push rax
addr_6313: ;;// porth.porth:122:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_6314: ;;// porth.porth:122:34: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_6317
addr_6315: ;;// porth.porth:122:38: OP_PUSH_STR 86
    mov rax, 7
    push rax
    lea rax, [str_86]
    push rax
addr_6316: ;;// porth.porth:123:3: OP_ELSE 6
    jmp addr_6322
addr_6317: ;;// porth.porth:123:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_6318: ;;// porth.porth:123:12: OP_PUSH_INT 7
    mov rax, 7
    push rax
addr_6319: ;;// porth.porth:123:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_6320: ;;// porth.porth:123:34: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_6323
addr_6321: ;;// porth.porth:123:38: OP_PUSH_STR 87
    mov rax, 6
    push rax
    lea rax, [str_87]
    push rax
addr_6322: ;;// porth.porth:124:3: OP_ELSE 6
    jmp addr_6328
addr_6323: ;;// porth.porth:124:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_6324: ;;// porth.porth:124:12: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_6325: ;;// porth.porth:124:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_6326: ;;// porth.porth:124:34: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_6329
addr_6327: ;;// porth.porth:124:38: OP_PUSH_STR 88
    mov rax, 4
    push rax
    lea rax, [str_88]
    push rax
addr_6328: ;;// porth.porth:125:3: OP_ELSE 6
    jmp addr_6334
addr_6329: ;;// porth.porth:125:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_6330: ;;// porth.porth:125:12: OP_PUSH_INT 9
    mov rax, 9
    push rax
addr_6331: ;;// porth.porth:125:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_6332: ;;// porth.porth:125:34: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_6335
addr_6333: ;;// porth.porth:125:38: OP_PUSH_STR 89
    mov rax, 5
    push rax
    lea rax, [str_89]
    push rax
addr_6334: ;;// porth.porth:126:3: OP_ELSE 6
    jmp addr_6340
addr_6335: ;;// porth.porth:126:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_6336: ;;// porth.porth:126:12: OP_PUSH_INT 10
    mov rax, 10
    push rax
addr_6337: ;;// porth.porth:126:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_6338: ;;// porth.porth:126:34: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_6341
addr_6339: ;;// porth.porth:126:38: OP_PUSH_STR 90
    mov rax, 6
    push rax
    lea rax, [str_90]
    push rax
addr_6340: ;;// porth.porth:127:3: OP_ELSE 6
    jmp addr_6346
addr_6341: ;;// porth.porth:127:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_6342: ;;// porth.porth:127:12: OP_PUSH_INT 11
    mov rax, 11
    push rax
addr_6343: ;;// porth.porth:127:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_6344: ;;// porth.porth:127:34: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_6347
addr_6345: ;;// porth.porth:127:38: OP_PUSH_STR 91
    mov rax, 5
    push rax
    lea rax, [str_91]
    push rax
addr_6346: ;;// porth.porth:128:3: OP_ELSE 6
    jmp addr_6352
addr_6347: ;;// porth.porth:128:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_6348: ;;// porth.porth:128:12: OP_PUSH_INT 12
    mov rax, 12
    push rax
addr_6349: ;;// porth.porth:128:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_6350: ;;// porth.porth:128:34: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_6353
addr_6351: ;;// porth.porth:128:38: OP_PUSH_STR 92
    mov rax, 6
    push rax
    lea rax, [str_92]
    push rax
addr_6352: ;;// porth.porth:129:3: OP_ELSE 6
    jmp addr_6358
addr_6353: ;;// porth.porth:129:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_6354: ;;// porth.porth:129:12: OP_PUSH_INT 13
    mov rax, 13
    push rax
addr_6355: ;;// porth.porth:129:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_6356: ;;// porth.porth:129:34: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_6359
addr_6357: ;;// porth.porth:129:38: OP_PUSH_STR 93
    mov rax, 2
    push rax
    lea rax, [str_93]
    push rax
addr_6358: ;;// porth.porth:130:3: OP_ELSE 6
    jmp addr_6364
addr_6359: ;;// porth.porth:130:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_6360: ;;// porth.porth:130:12: OP_PUSH_INT 14
    mov rax, 14
    push rax
addr_6361: ;;// porth.porth:130:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_6362: ;;// porth.porth:130:34: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_6365
addr_6363: ;;// porth.porth:130:38: OP_PUSH_STR 94
    mov rax, 2
    push rax
    lea rax, [str_94]
    push rax
addr_6364: ;;// porth.porth:131:3: OP_ELSE 6
    jmp addr_6370
addr_6365: ;;// porth.porth:131:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_6366: ;;// porth.porth:131:12: OP_PUSH_INT 15
    mov rax, 15
    push rax
addr_6367: ;;// porth.porth:131:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_6368: ;;// porth.porth:131:34: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_6371
addr_6369: ;;// porth.porth:131:38: OP_PUSH_STR 95
    mov rax, 6
    push rax
    lea rax, [str_95]
    push rax
addr_6370: ;;// porth.porth:132:3: OP_ELSE 6
    jmp addr_6376
addr_6371: ;;// porth.porth:132:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_6372: ;;// porth.porth:132:12: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_6373: ;;// porth.porth:132:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_6374: ;;// porth.porth:132:34: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_6377
addr_6375: ;;// porth.porth:132:38: OP_PUSH_STR 96
    mov rax, 4
    push rax
    lea rax, [str_96]
    push rax
addr_6376: ;;// porth.porth:133:3: OP_ELSE 6
    jmp addr_6382
addr_6377: ;;// porth.porth:133:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_6378: ;;// porth.porth:133:12: OP_PUSH_INT 17
    mov rax, 17
    push rax
addr_6379: ;;// porth.porth:133:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_6380: ;;// porth.porth:133:34: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_6383
addr_6381: ;;// porth.porth:133:38: OP_PUSH_STR 97
    mov rax, 7
    push rax
    lea rax, [str_97]
    push rax
addr_6382: ;;// porth.porth:134:3: OP_ELSE 6
    jmp addr_6388
addr_6383: ;;// porth.porth:134:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_6384: ;;// porth.porth:134:12: OP_PUSH_INT 18
    mov rax, 18
    push rax
addr_6385: ;;// porth.porth:134:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_6386: ;;// porth.porth:134:34: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_6389
addr_6387: ;;// porth.porth:134:38: OP_PUSH_STR 98
    mov rax, 9
    push rax
    lea rax, [str_98]
    push rax
addr_6388: ;;// porth.porth:135:3: OP_ELSE 6
    jmp addr_6394
addr_6389: ;;// porth.porth:135:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_6390: ;;// porth.porth:135:12: OP_PUSH_INT 19
    mov rax, 19
    push rax
addr_6391: ;;// porth.porth:135:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_6392: ;;// porth.porth:135:34: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_6395
addr_6393: ;;// porth.porth:135:38: OP_PUSH_STR 99
    mov rax, 3
    push rax
    lea rax, [str_99]
    push rax
addr_6394: ;;// porth.porth:136:3: OP_ELSE 6
    jmp addr_6400
addr_6395: ;;// porth.porth:136:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_6396: ;;// porth.porth:136:12: OP_PUSH_INT 20
    mov rax, 20
    push rax
addr_6397: ;;// porth.porth:136:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_6398: ;;// porth.porth:136:34: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_6401
addr_6399: ;;// porth.porth:136:38: OP_PUSH_STR 100
    mov rax, 4
    push rax
    lea rax, [str_100]
    push rax
addr_6400: ;;// porth.porth:137:3: OP_ELSE 6
    jmp addr_6406
addr_6401: ;;// porth.porth:137:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_6402: ;;// porth.porth:137:12: OP_PUSH_INT 21
    mov rax, 21
    push rax
addr_6403: ;;// porth.porth:137:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_6404: ;;// porth.porth:137:34: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_6407
addr_6405: ;;// porth.porth:137:38: OP_PUSH_STR 101
    mov rax, 8
    push rax
    lea rax, [str_101]
    push rax
addr_6406: ;;// porth.porth:138:3: OP_ELSE 6
    jmp addr_6412
addr_6407: ;;// porth.porth:138:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_6408: ;;// porth.porth:138:12: OP_PUSH_INT 22
    mov rax, 22
    push rax
addr_6409: ;;// porth.porth:138:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_6410: ;;// porth.porth:138:34: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_6413
addr_6411: ;;// porth.porth:138:38: OP_PUSH_STR 102
    mov rax, 6
    push rax
    lea rax, [str_102]
    push rax
addr_6412: ;;// porth.porth:139:3: OP_ELSE 24
    jmp addr_6436
addr_6413: ;;// porth.porth:140:5: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_6414: ;;// porth.porth:140:7: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_6415: ;;// porth.porth:141:5: OP_PUSH_STR 103
    mov rax, 17
    push rax
    lea rax, [str_103]
    push rax
addr_6416: ;;// porth.porth:141:10: OP_INLINED 676
addr_6417: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_6418: ;;// std/std.porth:50:37: OP_INLINED 662
addr_6419: ;;// std/std.porth:48:34: OP_INLINED 394
addr_6420: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_6421: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_6422: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_6423: ;;// porth.porth:141:16: OP_PUSH_STR 104
    mov rax, 14
    push rax
    lea rax, [str_104]
    push rax
addr_6424: ;;// porth.porth:141:34: OP_INLINED 676
addr_6425: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_6426: ;;// std/std.porth:50:37: OP_INLINED 662
addr_6427: ;;// std/std.porth:48:34: OP_INLINED 394
addr_6428: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_6429: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_6430: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_6431: ;;// porth.porth:142:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_6432: ;;// porth.porth:142:7: OP_INLINED 418
addr_6433: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_6434: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_6435: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_6436: ;;// porth.porth:143:3: OP_END_IF 0
addr_6437: ;;// porth.porth:144:3: OP_INTRINSIC rot
    pop rax
    pop rbx
    pop rcx
    push rbx
    push rax
    push rcx
addr_6438: ;;// porth.porth:144:7: OP_INTRINSIC drop
    pop rax
addr_6439: ;;// porth.porth:145:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_6440: ;;// porth.porth:166:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_6441: ;;// porth.porth:166:34: OP_PUSH_GLOBAL_MEM 8388656
    lea rax, [mem+8388656]
    push rax
addr_6442: ;;// porth.porth:166:47: OP_PUSH_GLOBAL_MEM 8388648
    lea rax, [mem+8388648]
    push rax
addr_6443: ;;// porth.porth:166:59: OP_INLINED 16
addr_6444: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6445: ;;// porth.porth:166:64: OP_INLINED 36
addr_6446: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6447: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6448: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6449: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6450: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6451: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6452: ;;// porth.porth:166:69: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_6453: ;;// porth.porth:167:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_6454: ;;// porth.porth:168:3: OP_PUSH_GLOBAL_MEM 8388648
    lea rax, [mem+8388648]
    push rax
addr_6455: ;;// porth.porth:168:15: OP_INLINED 16
addr_6456: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6457: ;;// porth.porth:168:20: OP_PUSH_INT 32768
    mov rax, 32768
    push rax
addr_6458: ;;// porth.porth:168:31: OP_INTRINSIC >=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovge rcx, rdx
    push rcx
addr_6459: ;;// porth.porth:168:34: OP_IF 22
    pop rax
    test rax, rax
    jz addr_6481
addr_6460: ;;// porth.porth:169:5: OP_PUSH_STR 105
    mov rax, 17
    push rax
    lea rax, [str_105]
    push rax
addr_6461: ;;// porth.porth:169:10: OP_INLINED 676
addr_6462: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_6463: ;;// std/std.porth:50:37: OP_INLINED 662
addr_6464: ;;// std/std.porth:48:34: OP_INLINED 394
addr_6465: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_6466: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_6467: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_6468: ;;// porth.porth:169:16: OP_PUSH_STR 106
    mov rax, 51
    push rax
    lea rax, [str_106]
    push rax
addr_6469: ;;// porth.porth:169:71: OP_INLINED 676
addr_6470: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_6471: ;;// std/std.porth:50:37: OP_INLINED 662
addr_6472: ;;// std/std.porth:48:34: OP_INLINED 394
addr_6473: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_6474: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_6475: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_6476: ;;// porth.porth:170:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_6477: ;;// porth.porth:170:7: OP_INLINED 418
addr_6478: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_6479: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_6480: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_6481: ;;// porth.porth:171:3: OP_END_IF 0
addr_6482: ;;// porth.porth:173:3: OP_INLINED 6440
addr_6483: ;;// porth.porth:166:34: OP_PUSH_GLOBAL_MEM 8388656
    lea rax, [mem+8388656]
    push rax
addr_6484: ;;// porth.porth:166:47: OP_PUSH_GLOBAL_MEM 8388648
    lea rax, [mem+8388648]
    push rax
addr_6485: ;;// porth.porth:166:59: OP_INLINED 16
addr_6486: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6487: ;;// porth.porth:166:64: OP_INLINED 36
addr_6488: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6489: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6490: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6491: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6492: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6493: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6494: ;;// porth.porth:173:14: OP_INTRINSIC !8
    pop rax
    pop rbx
    mov [rax], bl
addr_6495: ;;// porth.porth:174:3: OP_PUSH_GLOBAL_MEM 8388648
    lea rax, [mem+8388648]
    push rax
addr_6496: ;;// porth.porth:174:15: OP_INLINED 161
addr_6497: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_6498: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6499: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_6500: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6501: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6502: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_6503: ;;// porth.porth:175:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_6504: ;;// porth.porth:177:6: OP_PREP_PROC 16
    sub rsp, 16
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_6505: ;;// porth.porth:179:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_6506: ;;// porth.porth:179:7: OP_INLINED 782
addr_6507: ;;// std/std.porth:71:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_6508: ;;// std/std.porth:72:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_6509: ;;// std/std.porth:72:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_6510: ;;// std/std.porth:72:9: OP_INLINED 729
addr_6511: ;;// std/std.porth:60:35: OP_INLINED 684
addr_6512: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_6513: ;;// std/std.porth:56:57: OP_INLINED 36
addr_6514: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6515: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6516: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6517: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6518: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6519: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6520: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_6521: ;;// std/std.porth:73:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_6522: ;;// std/std.porth:73:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_6523: ;;// std/std.porth:73:9: OP_INLINED 741
addr_6524: ;;// std/std.porth:61:34: OP_INLINED 694
addr_6525: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_6526: ;;// std/std.porth:57:55: OP_INLINED 36
addr_6527: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6528: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6529: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6530: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6531: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6532: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6533: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_6534: ;;// std/std.porth:74:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_6535: ;;// porth.porth:181:3: OP_WHILE 67
addr_6536: ;;// porth.porth:181:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_6537: ;;// porth.porth:181:13: OP_INLINED 704
addr_6538: ;;// std/std.porth:58:38: OP_INLINED 684
addr_6539: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_6540: ;;// std/std.porth:56:57: OP_INLINED 36
addr_6541: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6542: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6543: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6544: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6545: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6546: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6547: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6548: ;;// porth.porth:181:24: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_6549: ;;// porth.porth:181:26: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_6550: ;;// porth.porth:181:28: OP_DO 52
    pop rax
    test rax, rax
    jz addr_6602
addr_6551: ;;// porth.porth:182:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_6552: ;;// porth.porth:182:9: OP_INLINED 716
addr_6553: ;;// std/std.porth:59:37: OP_INLINED 694
addr_6554: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_6555: ;;// std/std.porth:57:55: OP_INLINED 36
addr_6556: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6557: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6558: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6559: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6560: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6561: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6562: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6563: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_6564: ;;// porth.porth:182:19: OP_INTRINSIC @8
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_6565: ;;// porth.porth:182:22: OP_CALL 6453
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_6453
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_6566: ;;// porth.porth:183:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_6567: ;;// porth.porth:183:9: OP_INLINED 816
addr_6568: ;;// std/std.porth:80:4: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_6569: ;;// std/std.porth:80:8: OP_INLINED 684
addr_6570: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_6571: ;;// std/std.porth:56:57: OP_INLINED 36
addr_6572: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6573: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6574: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6575: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6576: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6577: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6578: ;;// std/std.porth:80:18: OP_INLINED 169
addr_6579: ;;// std/core.porth:108:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_6580: ;;// std/core.porth:108:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6581: ;;// std/core.porth:108:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_6582: ;;// std/core.porth:108:36: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_6583: ;;// std/core.porth:108:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6584: ;;// std/core.porth:108:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_6585: ;;// std/std.porth:81:8: OP_INLINED 694
addr_6586: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_6587: ;;// std/std.porth:57:55: OP_INLINED 36
addr_6588: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6589: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6590: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6591: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6592: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6593: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6594: ;;// std/std.porth:81:17: OP_INLINED 161
addr_6595: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_6596: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6597: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_6598: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6599: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6600: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_6601: ;;// porth.porth:184:3: OP_END_WHILE 66
    jmp addr_6535
addr_6602: ;;// porth.porth:185:1: OP_RET 16
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 16
    ret
addr_6603: ;;// porth.porth:187:6: OP_PREP_PROC 8
    sub rsp, 8
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_6604: ;;// porth.porth:193:3: OP_INLINED 6440
addr_6605: ;;// porth.porth:166:34: OP_PUSH_GLOBAL_MEM 8388656
    lea rax, [mem+8388656]
    push rax
addr_6606: ;;// porth.porth:166:47: OP_PUSH_GLOBAL_MEM 8388648
    lea rax, [mem+8388648]
    push rax
addr_6607: ;;// porth.porth:166:59: OP_INLINED 16
addr_6608: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6609: ;;// porth.porth:166:64: OP_INLINED 36
addr_6610: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6611: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6612: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6613: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6614: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6615: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6616: ;;// porth.porth:193:14: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_6617: ;;// porth.porth:193:20: OP_INLINED 27
addr_6618: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_6619: ;;// porth.porth:195:3: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_6620: ;;// porth.porth:195:7: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_6621: ;;// porth.porth:195:21: OP_INLINED 36
addr_6622: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6623: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6624: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6625: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6626: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6627: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6628: ;;// porth.porth:195:26: OP_INLINED 753
addr_6629: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_6630: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_6631: ;;// std/std.porth:65:7: OP_INLINED 704
addr_6632: ;;// std/std.porth:58:38: OP_INLINED 684
addr_6633: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_6634: ;;// std/std.porth:56:57: OP_INLINED 36
addr_6635: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6636: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6637: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6638: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6639: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6640: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6641: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6642: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_6643: ;;// std/std.porth:66:7: OP_INLINED 716
addr_6644: ;;// std/std.porth:59:37: OP_INLINED 694
addr_6645: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_6646: ;;// std/std.porth:57:55: OP_INLINED 36
addr_6647: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6648: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6649: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6650: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6651: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6652: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6653: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6654: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_6655: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_6656: ;;// porth.porth:195:33: OP_CALL 6504
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_6504
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_6657: ;;// porth.porth:196:3: OP_PUSH_STR 107
    mov rax, 1
    push rax
    lea rax, [str_107]
    push rax
addr_6658: ;;// porth.porth:196:33: OP_CALL 6504
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_6504
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_6659: ;;// porth.porth:197:3: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_6660: ;;// porth.porth:197:7: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_6661: ;;// porth.porth:197:15: OP_INLINED 36
addr_6662: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6663: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6664: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6665: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6666: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6667: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6668: ;;// porth.porth:197:20: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6669: ;;// porth.porth:197:24: OP_CALL 2789
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2789
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_6670: ;;// porth.porth:197:33: OP_CALL 6504
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_6504
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_6671: ;;// porth.porth:198:3: OP_PUSH_STR 108
    mov rax, 1
    push rax
    lea rax, [str_108]
    push rax
addr_6672: ;;// porth.porth:198:33: OP_CALL 6504
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_6504
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_6673: ;;// porth.porth:199:3: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_6674: ;;// porth.porth:199:7: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_6675: ;;// porth.porth:199:15: OP_INLINED 36
addr_6676: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6677: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6678: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6679: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6680: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6681: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6682: ;;// porth.porth:199:20: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6683: ;;// porth.porth:199:24: OP_CALL 2789
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2789
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_6684: ;;// porth.porth:199:33: OP_CALL 6504
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_6504
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_6685: ;;// porth.porth:200:3: OP_INTRINSIC drop
    pop rax
addr_6686: ;;// porth.porth:202:3: OP_INLINED 6440
addr_6687: ;;// porth.porth:166:34: OP_PUSH_GLOBAL_MEM 8388656
    lea rax, [mem+8388656]
    push rax
addr_6688: ;;// porth.porth:166:47: OP_PUSH_GLOBAL_MEM 8388648
    lea rax, [mem+8388648]
    push rax
addr_6689: ;;// porth.porth:166:59: OP_INLINED 16
addr_6690: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6691: ;;// porth.porth:166:64: OP_INLINED 36
addr_6692: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6693: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6694: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6695: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6696: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6697: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6698: ;;// porth.porth:202:14: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_6699: ;;// porth.porth:202:20: OP_INLINED 0
addr_6700: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6701: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_6702: ;;// porth.porth:202:25: OP_INLINED 78
addr_6703: ;;// std/core.porth:68:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6704: ;;// std/core.porth:68:8: OP_INTRINSIC cast(int)
addr_6705: ;;// std/core.porth:69:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6706: ;;// std/core.porth:69:8: OP_INTRINSIC cast(int)
addr_6707: ;;// std/core.porth:70:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_6708: ;;// porth.porth:203:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_6709: ;;// porth.porth:203:9: OP_INLINED 0
addr_6710: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6711: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_6712: ;;// porth.porth:204:1: OP_RET 8
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 8
    ret
addr_6713: ;;// porth.porth:216:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_6714: ;;// porth.porth:217:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_6715: ;;// porth.porth:218:5: OP_PUSH_INT 10
    mov rax, 10
    push rax
addr_6716: ;;// porth.porth:219:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_6717: ;;// porth.porth:219:11: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_6718: ;;// porth.porth:219:22: OP_INLINED 36
addr_6719: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6720: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6721: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6722: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6723: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6724: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6725: ;;// porth.porth:220:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_6726: ;;// porth.porth:220:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_6727: ;;// porth.porth:220:25: OP_INLINED 36
addr_6728: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6729: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6730: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6731: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6732: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6733: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6734: ;;// porth.porth:221:5: OP_CALL 1170
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1170
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_6735: ;;// porth.porth:223:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_6736: ;;// porth.porth:223:11: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_6737: ;;// porth.porth:223:22: OP_INLINED 36
addr_6738: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6739: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6740: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6741: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6742: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6743: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6744: ;;// porth.porth:223:27: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_6745: ;;// porth.porth:223:46: OP_INLINED 36
addr_6746: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6747: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6748: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6749: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6750: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6751: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6752: ;;// porth.porth:223:51: OP_INLINED 0
addr_6753: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6754: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_6755: ;;// porth.porth:224:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_6756: ;;// porth.porth:224:11: OP_PUSH_INT 32
    mov rax, 32
    push rax
addr_6757: ;;// porth.porth:224:28: OP_INLINED 36
addr_6758: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6759: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6760: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6761: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6762: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6763: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6764: ;;// porth.porth:225:5: OP_INLINED 27
addr_6765: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_6766: ;;// porth.porth:227:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_6767: ;;// porth.porth:227:11: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_6768: ;;// porth.porth:227:21: OP_INLINED 36
addr_6769: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6770: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6771: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6772: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6773: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6774: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6775: ;;// porth.porth:227:26: OP_INLINED 161
addr_6776: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_6777: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6778: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_6779: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6780: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6781: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_6782: ;;// porth.porth:228:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_6783: ;;// porth.porth:229:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_6784: ;;// porth.porth:231:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_6785: ;;// porth.porth:235:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_6786: ;;// porth.porth:237:5: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_6787: ;;// porth.porth:238:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_6788: ;;// porth.porth:238:11: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_6789: ;;// porth.porth:238:27: OP_INLINED 36
addr_6790: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6791: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6792: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6793: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6794: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6795: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6796: ;;// porth.porth:239:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_6797: ;;// porth.porth:239:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_6798: ;;// porth.porth:239:27: OP_INLINED 36
addr_6799: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6800: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6801: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6802: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6803: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6804: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6805: ;;// porth.porth:240:5: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_6806: ;;// porth.porth:241:5: OP_INTRINSIC drop
    pop rax
addr_6807: ;;// porth.porth:244:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_6808: ;;// porth.porth:244:11: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_6809: ;;// porth.porth:244:21: OP_INLINED 36
addr_6810: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6811: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6812: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6813: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6814: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6815: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6816: ;;// porth.porth:244:26: OP_INLINED 16
addr_6817: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6818: ;;// porth.porth:245:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_6819: ;;// porth.porth:245:11: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_6820: ;;// porth.porth:245:21: OP_INLINED 36
addr_6821: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6822: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6823: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6824: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6825: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6826: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6827: ;;// porth.porth:245:26: OP_INLINED 30
addr_6828: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_6829: ;;// porth.porth:248:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_6830: ;;// porth.porth:248:11: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_6831: ;;// porth.porth:248:22: OP_INLINED 36
addr_6832: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6833: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6834: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6835: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6836: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6837: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6838: ;;// porth.porth:248:27: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_6839: ;;// porth.porth:248:46: OP_INLINED 36
addr_6840: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6841: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6842: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6843: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6844: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6845: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6846: ;;// porth.porth:248:51: OP_INLINED 0
addr_6847: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6848: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_6849: ;;// porth.porth:249:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_6850: ;;// porth.porth:249:11: OP_PUSH_INT 32
    mov rax, 32
    push rax
addr_6851: ;;// porth.porth:249:28: OP_INLINED 36
addr_6852: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6853: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6854: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6855: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6856: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6857: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6858: ;;// porth.porth:249:33: OP_INLINED 0
addr_6859: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6860: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_6861: ;;// porth.porth:250:5: OP_INLINED 78
addr_6862: ;;// std/core.porth:68:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6863: ;;// std/core.porth:68:8: OP_INTRINSIC cast(int)
addr_6864: ;;// std/core.porth:69:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6865: ;;// std/core.porth:69:8: OP_INTRINSIC cast(int)
addr_6866: ;;// std/core.porth:70:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_6867: ;;// porth.porth:251:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_6868: ;;// porth.porth:251:7: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6869: ;;// porth.porth:252:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_6870: ;;// porth.porth:252:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_6871: ;;// porth.porth:252:17: OP_INLINED 36
addr_6872: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6873: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6874: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6875: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6876: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6877: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6878: ;;// porth.porth:253:5: OP_INLINED 30
addr_6879: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_6880: ;;// porth.porth:254:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_6881: ;;// porth.porth:255:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_6882: ;;// porth.porth:257:6: OP_PREP_PROC 72
    sub rsp, 72
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_6883: ;;// porth.porth:265:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_6884: ;;// porth.porth:265:9: OP_INLINED 30
addr_6885: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_6886: ;;// porth.porth:268:3: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_6887: ;;// porth.porth:268:9: OP_INLINED 27
addr_6888: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_6889: ;;// porth.porth:271:3: OP_INLINED 6440
addr_6890: ;;// porth.porth:166:34: OP_PUSH_GLOBAL_MEM 8388656
    lea rax, [mem+8388656]
    push rax
addr_6891: ;;// porth.porth:166:47: OP_PUSH_GLOBAL_MEM 8388648
    lea rax, [mem+8388648]
    push rax
addr_6892: ;;// porth.porth:166:59: OP_INLINED 16
addr_6893: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6894: ;;// porth.porth:166:64: OP_INLINED 36
addr_6895: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6896: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6897: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6898: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6899: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6900: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6901: ;;// porth.porth:271:14: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_6902: ;;// porth.porth:271:20: OP_INLINED 27
addr_6903: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_6904: ;;// porth.porth:274:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_6905: ;;// porth.porth:274:5: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_6906: ;;// porth.porth:274:11: OP_INLINED 30
addr_6907: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_6908: ;;// porth.porth:279:3: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_6909: ;;// porth.porth:279:9: OP_PUSH_LOCAL_MEM 64
    mov rax, [ret_stack_rsp]
    add rax, 64
    push rax
addr_6910: ;;// porth.porth:279:16: OP_INLINED 24
addr_6911: ;;// std/core.porth:26:31: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_6912: ;;// porth.porth:281:3: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_6913: ;;// porth.porth:281:9: OP_INLINED 0
addr_6914: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6915: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_6916: ;;// porth.porth:281:14: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_6917: ;;// porth.porth:281:25: OP_INLINED 36
addr_6918: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6919: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6920: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6921: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6922: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6923: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6924: ;;// porth.porth:282:5: OP_WHILE 969
addr_6925: ;;// porth.porth:283:7: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_6926: ;;// porth.porth:283:11: OP_INLINED 1483
addr_6927: ;;// std/std.porth:214:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_6928: ;;// std/std.porth:214:23: OP_INLINED 36
addr_6929: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6930: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6931: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6932: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6933: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6934: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6935: ;;// std/std.porth:215:3: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6936: ;;// std/std.porth:216:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_6937: ;;// std/std.porth:216:5: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_6938: ;;// porth.porth:283:22: OP_INLINED 131
addr_6939: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_6940: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_6941: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6942: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_6943: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_6944: ;;// porth.porth:283:27: OP_IF 945
    pop rax
    test rax, rax
    jz addr_7889
addr_6945: ;;// porth.porth:284:9: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_6946: ;;// porth.porth:284:13: OP_INLINED 716
addr_6947: ;;// std/std.porth:59:37: OP_INLINED 694
addr_6948: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_6949: ;;// std/std.porth:57:55: OP_INLINED 36
addr_6950: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6951: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6952: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6953: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6954: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6955: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6956: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6957: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_6958: ;;// porth.porth:284:23: OP_INTRINSIC @8
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_6959: ;;// porth.porth:284:26: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_6960: ;;// porth.porth:284:32: OP_INLINED 16
addr_6961: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6962: ;;// porth.porth:284:37: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_6963: ;;// porth.porth:284:39: OP_IF 42
    pop rax
    test rax, rax
    jz addr_7005
addr_6964: ;;// porth.porth:285:11: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_6965: ;;// porth.porth:285:15: OP_INLINED 816
addr_6966: ;;// std/std.porth:80:4: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_6967: ;;// std/std.porth:80:8: OP_INLINED 684
addr_6968: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_6969: ;;// std/std.porth:56:57: OP_INLINED 36
addr_6970: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6971: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6972: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6973: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6974: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6975: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6976: ;;// std/std.porth:80:18: OP_INLINED 169
addr_6977: ;;// std/core.porth:108:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_6978: ;;// std/core.porth:108:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6979: ;;// std/core.porth:108:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_6980: ;;// std/core.porth:108:36: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_6981: ;;// std/core.porth:108:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6982: ;;// std/core.porth:108:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_6983: ;;// std/std.porth:81:8: OP_INLINED 694
addr_6984: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_6985: ;;// std/std.porth:57:55: OP_INLINED 36
addr_6986: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6987: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_6988: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6989: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_6990: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6991: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_6992: ;;// std/std.porth:81:17: OP_INLINED 161
addr_6993: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_6994: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_6995: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_6996: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_6997: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_6998: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_6999: ;;// porth.porth:286:11: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_7000: ;;// porth.porth:286:16: OP_PUSH_LOCAL_MEM 64
    mov rax, [ret_stack_rsp]
    add rax, 64
    push rax
addr_7001: ;;// porth.porth:286:23: OP_INLINED 24
addr_7002: ;;// std/core.porth:26:31: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_7003: ;;// porth.porth:287:11: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_7004: ;;// porth.porth:288:9: OP_ELSE 823
    jmp addr_7827
addr_7005: ;;// porth.porth:288:14: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7006: ;;// porth.porth:288:18: OP_INLINED 716
addr_7007: ;;// std/std.porth:59:37: OP_INLINED 694
addr_7008: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_7009: ;;// std/std.porth:57:55: OP_INLINED 36
addr_7010: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7011: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7012: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7013: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7014: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7015: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7016: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7017: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_7018: ;;// porth.porth:288:28: OP_INTRINSIC @8
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_7019: ;;// porth.porth:288:31: OP_PUSH_INT 92
    mov rax, 92
    push rax
addr_7020: ;;// porth.porth:288:36: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_7021: ;;// porth.porth:288:38: OP_IFSTAR 807
    pop rax
    test rax, rax
    jz addr_7828
addr_7022: ;;// porth.porth:289:11: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7023: ;;// porth.porth:289:15: OP_INLINED 816
addr_7024: ;;// std/std.porth:80:4: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7025: ;;// std/std.porth:80:8: OP_INLINED 684
addr_7026: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_7027: ;;// std/std.porth:56:57: OP_INLINED 36
addr_7028: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7029: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7030: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7031: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7032: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7033: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7034: ;;// std/std.porth:80:18: OP_INLINED 169
addr_7035: ;;// std/core.porth:108:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7036: ;;// std/core.porth:108:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7037: ;;// std/core.porth:108:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_7038: ;;// std/core.porth:108:36: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_7039: ;;// std/core.porth:108:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7040: ;;// std/core.porth:108:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_7041: ;;// std/std.porth:81:8: OP_INLINED 694
addr_7042: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_7043: ;;// std/std.porth:57:55: OP_INLINED 36
addr_7044: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7045: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7046: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7047: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7048: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7049: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7050: ;;// std/std.porth:81:17: OP_INLINED 161
addr_7051: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7052: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7053: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_7054: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7055: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7056: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_7057: ;;// porth.porth:291:11: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7058: ;;// porth.porth:291:15: OP_INLINED 1483
addr_7059: ;;// std/std.porth:214:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_7060: ;;// std/std.porth:214:23: OP_INLINED 36
addr_7061: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7062: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7063: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7064: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7065: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7066: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7067: ;;// std/std.porth:215:3: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7068: ;;// std/std.porth:216:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_7069: ;;// std/std.porth:216:5: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_7070: ;;// porth.porth:291:26: OP_IF 203
    pop rax
    test rax, rax
    jz addr_7273
addr_7071: ;;// porth.porth:292:13: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_7072: ;;// porth.porth:292:17: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_7073: ;;// porth.porth:292:23: OP_INLINED 0
addr_7074: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7075: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_7076: ;;// porth.porth:292:28: OP_INLINED 6784
addr_7077: ;;// porth.porth:235:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_7078: ;;// porth.porth:237:5: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_7079: ;;// porth.porth:238:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_7080: ;;// porth.porth:238:11: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_7081: ;;// porth.porth:238:27: OP_INLINED 36
addr_7082: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7083: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7084: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7085: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7086: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7087: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7088: ;;// porth.porth:239:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_7089: ;;// porth.porth:239:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_7090: ;;// porth.porth:239:27: OP_INLINED 36
addr_7091: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7092: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7093: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7094: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7095: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7096: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7097: ;;// porth.porth:240:5: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_7098: ;;// porth.porth:241:5: OP_INTRINSIC drop
    pop rax
addr_7099: ;;// porth.porth:244:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_7100: ;;// porth.porth:244:11: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_7101: ;;// porth.porth:244:21: OP_INLINED 36
addr_7102: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7103: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7104: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7105: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7106: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7107: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7108: ;;// porth.porth:244:26: OP_INLINED 16
addr_7109: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7110: ;;// porth.porth:245:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_7111: ;;// porth.porth:245:11: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_7112: ;;// porth.porth:245:21: OP_INLINED 36
addr_7113: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7114: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7115: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7116: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7117: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7118: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7119: ;;// porth.porth:245:26: OP_INLINED 30
addr_7120: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_7121: ;;// porth.porth:248:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_7122: ;;// porth.porth:248:11: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_7123: ;;// porth.porth:248:22: OP_INLINED 36
addr_7124: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7125: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7126: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7127: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7128: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7129: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7130: ;;// porth.porth:248:27: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_7131: ;;// porth.porth:248:46: OP_INLINED 36
addr_7132: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7133: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7134: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7135: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7136: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7137: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7138: ;;// porth.porth:248:51: OP_INLINED 0
addr_7139: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7140: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_7141: ;;// porth.porth:249:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_7142: ;;// porth.porth:249:11: OP_PUSH_INT 32
    mov rax, 32
    push rax
addr_7143: ;;// porth.porth:249:28: OP_INLINED 36
addr_7144: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7145: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7146: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7147: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7148: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7149: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7150: ;;// porth.porth:249:33: OP_INLINED 0
addr_7151: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7152: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_7153: ;;// porth.porth:250:5: OP_INLINED 78
addr_7154: ;;// std/core.porth:68:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7155: ;;// std/core.porth:68:8: OP_INTRINSIC cast(int)
addr_7156: ;;// std/core.porth:69:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7157: ;;// std/core.porth:69:8: OP_INTRINSIC cast(int)
addr_7158: ;;// std/core.porth:70:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_7159: ;;// porth.porth:251:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_7160: ;;// porth.porth:251:7: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7161: ;;// porth.porth:252:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_7162: ;;// porth.porth:252:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_7163: ;;// porth.porth:252:17: OP_INLINED 36
addr_7164: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7165: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7166: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7167: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7168: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7169: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7170: ;;// porth.porth:253:5: OP_INLINED 30
addr_7171: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_7172: ;;// porth.porth:254:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_7173: ;;// porth.porth:293:13: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_7174: ;;// porth.porth:293:17: OP_INLINED 5367
addr_7175: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_7176: ;;// porth.porth:32:35: OP_INLINED 5195
addr_7177: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_7178: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_7179: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_7180: ;;// porth.porth:24:23: OP_INLINED 36
addr_7181: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7182: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7183: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7184: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7185: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7186: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7187: ;;// porth.porth:24:28: OP_INLINED 753
addr_7188: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_7189: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_7190: ;;// std/std.porth:65:7: OP_INLINED 704
addr_7191: ;;// std/std.porth:58:38: OP_INLINED 684
addr_7192: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_7193: ;;// std/std.porth:56:57: OP_INLINED 36
addr_7194: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7195: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7196: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7197: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7198: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7199: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7200: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7201: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_7202: ;;// std/std.porth:66:7: OP_INLINED 716
addr_7203: ;;// std/std.porth:59:37: OP_INLINED 694
addr_7204: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_7205: ;;// std/std.porth:57:55: OP_INLINED 36
addr_7206: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7207: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7208: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7209: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7210: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7211: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7212: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7213: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_7214: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_7215: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_7216: ;;// porth.porth:24:36: OP_INLINED 662
addr_7217: ;;// std/std.porth:48:34: OP_INLINED 394
addr_7218: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_7219: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_7220: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_7221: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_7222: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_7223: ;;// porth.porth:25:36: OP_INLINED 662
addr_7224: ;;// std/std.porth:48:34: OP_INLINED 394
addr_7225: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_7226: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_7227: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_7228: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_7229: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_7230: ;;// porth.porth:26:17: OP_INLINED 36
addr_7231: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7232: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7233: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7234: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7235: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7236: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7237: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7238: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_7239: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_7240: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_7241: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_7242: ;;// porth.porth:27:36: OP_INLINED 662
addr_7243: ;;// std/std.porth:48:34: OP_INLINED 394
addr_7244: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_7245: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_7246: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_7247: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_7248: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_7249: ;;// porth.porth:28:17: OP_INLINED 36
addr_7250: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7251: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7252: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7253: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7254: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7255: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7256: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7257: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_7258: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_7259: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_7260: ;;// porth.porth:293:25: OP_PUSH_STR 109
    mov rax, 36
    push rax
    lea rax, [str_109]
    push rax
addr_7261: ;;// porth.porth:293:65: OP_INLINED 676
addr_7262: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_7263: ;;// std/std.porth:50:37: OP_INLINED 662
addr_7264: ;;// std/std.porth:48:34: OP_INLINED 394
addr_7265: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_7266: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_7267: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_7268: ;;// porth.porth:294:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_7269: ;;// porth.porth:294:15: OP_INLINED 418
addr_7270: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_7271: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_7272: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_7273: ;;// porth.porth:295:11: OP_END_IF 0
addr_7274: ;;// porth.porth:297:11: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7275: ;;// porth.porth:297:15: OP_INLINED 716
addr_7276: ;;// std/std.porth:59:37: OP_INLINED 694
addr_7277: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_7278: ;;// std/std.porth:57:55: OP_INLINED 36
addr_7279: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7280: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7281: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7282: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7283: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7284: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7285: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7286: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_7287: ;;// porth.porth:297:25: OP_INTRINSIC @8
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_7288: ;;// porth.porth:297:28: OP_PUSH_INT 110
    mov rax, 110
    push rax
addr_7289: ;;// porth.porth:297:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_7290: ;;// porth.porth:297:34: OP_IF 48
    pop rax
    test rax, rax
    jz addr_7338
addr_7291: ;;// porth.porth:298:13: OP_PUSH_INT 10
    mov rax, 10
    push rax
addr_7292: ;;// porth.porth:298:18: OP_CALL 6453
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_6453
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_7293: ;;// porth.porth:299:13: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7294: ;;// porth.porth:299:17: OP_INLINED 816
addr_7295: ;;// std/std.porth:80:4: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7296: ;;// std/std.porth:80:8: OP_INLINED 684
addr_7297: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_7298: ;;// std/std.porth:56:57: OP_INLINED 36
addr_7299: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7300: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7301: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7302: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7303: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7304: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7305: ;;// std/std.porth:80:18: OP_INLINED 169
addr_7306: ;;// std/core.porth:108:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7307: ;;// std/core.porth:108:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7308: ;;// std/core.porth:108:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_7309: ;;// std/core.porth:108:36: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_7310: ;;// std/core.porth:108:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7311: ;;// std/core.porth:108:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_7312: ;;// std/std.porth:81:8: OP_INLINED 694
addr_7313: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_7314: ;;// std/std.porth:57:55: OP_INLINED 36
addr_7315: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7316: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7317: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7318: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7319: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7320: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7321: ;;// std/std.porth:81:17: OP_INLINED 161
addr_7322: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7323: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7324: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_7325: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7326: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7327: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_7328: ;;// porth.porth:300:13: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_7329: ;;// porth.porth:300:19: OP_INLINED 161
addr_7330: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7331: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7332: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_7333: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7334: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7335: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_7336: ;;// porth.porth:301:13: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_7337: ;;// porth.porth:302:11: OP_ELSE 64
    jmp addr_7401
addr_7338: ;;// porth.porth:302:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7339: ;;// porth.porth:302:20: OP_INLINED 716
addr_7340: ;;// std/std.porth:59:37: OP_INLINED 694
addr_7341: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_7342: ;;// std/std.porth:57:55: OP_INLINED 36
addr_7343: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7344: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7345: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7346: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7347: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7348: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7349: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7350: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_7351: ;;// porth.porth:302:30: OP_INTRINSIC @8
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_7352: ;;// porth.porth:302:33: OP_PUSH_INT 114
    mov rax, 114
    push rax
addr_7353: ;;// porth.porth:302:37: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_7354: ;;// porth.porth:302:39: OP_IFSTAR 48
    pop rax
    test rax, rax
    jz addr_7402
addr_7355: ;;// porth.porth:303:13: OP_PUSH_INT 13
    mov rax, 13
    push rax
addr_7356: ;;// porth.porth:303:18: OP_CALL 6453
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_6453
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_7357: ;;// porth.porth:304:13: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7358: ;;// porth.porth:304:17: OP_INLINED 816
addr_7359: ;;// std/std.porth:80:4: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7360: ;;// std/std.porth:80:8: OP_INLINED 684
addr_7361: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_7362: ;;// std/std.porth:56:57: OP_INLINED 36
addr_7363: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7364: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7365: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7366: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7367: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7368: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7369: ;;// std/std.porth:80:18: OP_INLINED 169
addr_7370: ;;// std/core.porth:108:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7371: ;;// std/core.porth:108:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7372: ;;// std/core.porth:108:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_7373: ;;// std/core.porth:108:36: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_7374: ;;// std/core.porth:108:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7375: ;;// std/core.porth:108:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_7376: ;;// std/std.porth:81:8: OP_INLINED 694
addr_7377: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_7378: ;;// std/std.porth:57:55: OP_INLINED 36
addr_7379: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7380: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7381: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7382: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7383: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7384: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7385: ;;// std/std.porth:81:17: OP_INLINED 161
addr_7386: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7387: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7388: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_7389: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7390: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7391: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_7392: ;;// porth.porth:305:13: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_7393: ;;// porth.porth:305:19: OP_INLINED 161
addr_7394: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7395: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7396: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_7397: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7398: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7399: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_7400: ;;// porth.porth:306:13: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_7401: ;;// porth.porth:307:11: OP_ELSE 64
    jmp addr_7465
addr_7402: ;;// porth.porth:307:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7403: ;;// porth.porth:307:20: OP_INLINED 716
addr_7404: ;;// std/std.porth:59:37: OP_INLINED 694
addr_7405: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_7406: ;;// std/std.porth:57:55: OP_INLINED 36
addr_7407: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7408: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7409: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7410: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7411: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7412: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7413: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7414: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_7415: ;;// porth.porth:307:30: OP_INTRINSIC @8
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_7416: ;;// porth.porth:307:33: OP_PUSH_INT 92
    mov rax, 92
    push rax
addr_7417: ;;// porth.porth:307:38: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_7418: ;;// porth.porth:307:40: OP_IFSTAR 48
    pop rax
    test rax, rax
    jz addr_7466
addr_7419: ;;// porth.porth:308:13: OP_PUSH_INT 92
    mov rax, 92
    push rax
addr_7420: ;;// porth.porth:308:18: OP_CALL 6453
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_6453
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_7421: ;;// porth.porth:309:13: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7422: ;;// porth.porth:309:17: OP_INLINED 816
addr_7423: ;;// std/std.porth:80:4: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7424: ;;// std/std.porth:80:8: OP_INLINED 684
addr_7425: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_7426: ;;// std/std.porth:56:57: OP_INLINED 36
addr_7427: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7428: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7429: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7430: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7431: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7432: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7433: ;;// std/std.porth:80:18: OP_INLINED 169
addr_7434: ;;// std/core.porth:108:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7435: ;;// std/core.porth:108:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7436: ;;// std/core.porth:108:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_7437: ;;// std/core.porth:108:36: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_7438: ;;// std/core.porth:108:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7439: ;;// std/core.porth:108:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_7440: ;;// std/std.porth:81:8: OP_INLINED 694
addr_7441: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_7442: ;;// std/std.porth:57:55: OP_INLINED 36
addr_7443: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7444: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7445: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7446: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7447: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7448: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7449: ;;// std/std.porth:81:17: OP_INLINED 161
addr_7450: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7451: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7452: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_7453: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7454: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7455: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_7456: ;;// porth.porth:310:13: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_7457: ;;// porth.porth:310:19: OP_INLINED 161
addr_7458: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7459: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7460: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_7461: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7462: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7463: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_7464: ;;// porth.porth:311:13: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_7465: ;;// porth.porth:312:11: OP_ELSE 64
    jmp addr_7529
addr_7466: ;;// porth.porth:312:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7467: ;;// porth.porth:312:20: OP_INLINED 716
addr_7468: ;;// std/std.porth:59:37: OP_INLINED 694
addr_7469: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_7470: ;;// std/std.porth:57:55: OP_INLINED 36
addr_7471: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7472: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7473: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7474: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7475: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7476: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7477: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7478: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_7479: ;;// porth.porth:312:30: OP_INTRINSIC @8
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_7480: ;;// porth.porth:312:33: OP_PUSH_INT 34
    mov rax, 34
    push rax
addr_7481: ;;// porth.porth:312:38: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_7482: ;;// porth.porth:312:40: OP_IFSTAR 48
    pop rax
    test rax, rax
    jz addr_7530
addr_7483: ;;// porth.porth:313:13: OP_PUSH_INT 34
    mov rax, 34
    push rax
addr_7484: ;;// porth.porth:313:18: OP_CALL 6453
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_6453
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_7485: ;;// porth.porth:314:13: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7486: ;;// porth.porth:314:17: OP_INLINED 816
addr_7487: ;;// std/std.porth:80:4: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7488: ;;// std/std.porth:80:8: OP_INLINED 684
addr_7489: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_7490: ;;// std/std.porth:56:57: OP_INLINED 36
addr_7491: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7492: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7493: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7494: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7495: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7496: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7497: ;;// std/std.porth:80:18: OP_INLINED 169
addr_7498: ;;// std/core.porth:108:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7499: ;;// std/core.porth:108:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7500: ;;// std/core.porth:108:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_7501: ;;// std/core.porth:108:36: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_7502: ;;// std/core.porth:108:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7503: ;;// std/core.porth:108:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_7504: ;;// std/std.porth:81:8: OP_INLINED 694
addr_7505: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_7506: ;;// std/std.porth:57:55: OP_INLINED 36
addr_7507: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7508: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7509: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7510: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7511: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7512: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7513: ;;// std/std.porth:81:17: OP_INLINED 161
addr_7514: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7515: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7516: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_7517: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7518: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7519: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_7520: ;;// porth.porth:315:13: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_7521: ;;// porth.porth:315:19: OP_INLINED 161
addr_7522: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7523: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7524: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_7525: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7526: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7527: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_7528: ;;// porth.porth:316:13: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_7529: ;;// porth.porth:317:11: OP_ELSE 64
    jmp addr_7593
addr_7530: ;;// porth.porth:317:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7531: ;;// porth.porth:317:20: OP_INLINED 716
addr_7532: ;;// std/std.porth:59:37: OP_INLINED 694
addr_7533: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_7534: ;;// std/std.porth:57:55: OP_INLINED 36
addr_7535: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7536: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7537: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7538: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7539: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7540: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7541: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7542: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_7543: ;;// porth.porth:317:30: OP_INTRINSIC @8
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_7544: ;;// porth.porth:317:33: OP_PUSH_INT 39
    mov rax, 39
    push rax
addr_7545: ;;// porth.porth:317:38: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_7546: ;;// porth.porth:317:40: OP_IFSTAR 48
    pop rax
    test rax, rax
    jz addr_7594
addr_7547: ;;// porth.porth:318:13: OP_PUSH_INT 39
    mov rax, 39
    push rax
addr_7548: ;;// porth.porth:318:18: OP_CALL 6453
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_6453
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_7549: ;;// porth.porth:319:13: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7550: ;;// porth.porth:319:17: OP_INLINED 816
addr_7551: ;;// std/std.porth:80:4: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7552: ;;// std/std.porth:80:8: OP_INLINED 684
addr_7553: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_7554: ;;// std/std.porth:56:57: OP_INLINED 36
addr_7555: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7556: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7557: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7558: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7559: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7560: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7561: ;;// std/std.porth:80:18: OP_INLINED 169
addr_7562: ;;// std/core.porth:108:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7563: ;;// std/core.porth:108:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7564: ;;// std/core.porth:108:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_7565: ;;// std/core.porth:108:36: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_7566: ;;// std/core.porth:108:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7567: ;;// std/core.porth:108:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_7568: ;;// std/std.porth:81:8: OP_INLINED 694
addr_7569: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_7570: ;;// std/std.porth:57:55: OP_INLINED 36
addr_7571: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7572: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7573: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7574: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7575: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7576: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7577: ;;// std/std.porth:81:17: OP_INLINED 161
addr_7578: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7579: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7580: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_7581: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7582: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7583: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_7584: ;;// porth.porth:320:13: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_7585: ;;// porth.porth:320:19: OP_INLINED 161
addr_7586: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7587: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7588: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_7589: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7590: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7591: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_7592: ;;// porth.porth:321:13: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_7593: ;;// porth.porth:322:11: OP_ELSE 233
    jmp addr_7826
addr_7594: ;;// porth.porth:323:13: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_7595: ;;// porth.porth:323:17: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_7596: ;;// porth.porth:323:23: OP_INLINED 0
addr_7597: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7598: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_7599: ;;// porth.porth:323:28: OP_INLINED 6784
addr_7600: ;;// porth.porth:235:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_7601: ;;// porth.porth:237:5: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_7602: ;;// porth.porth:238:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_7603: ;;// porth.porth:238:11: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_7604: ;;// porth.porth:238:27: OP_INLINED 36
addr_7605: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7606: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7607: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7608: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7609: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7610: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7611: ;;// porth.porth:239:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_7612: ;;// porth.porth:239:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_7613: ;;// porth.porth:239:27: OP_INLINED 36
addr_7614: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7615: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7616: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7617: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7618: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7619: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7620: ;;// porth.porth:240:5: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_7621: ;;// porth.porth:241:5: OP_INTRINSIC drop
    pop rax
addr_7622: ;;// porth.porth:244:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_7623: ;;// porth.porth:244:11: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_7624: ;;// porth.porth:244:21: OP_INLINED 36
addr_7625: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7626: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7627: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7628: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7629: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7630: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7631: ;;// porth.porth:244:26: OP_INLINED 16
addr_7632: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7633: ;;// porth.porth:245:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_7634: ;;// porth.porth:245:11: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_7635: ;;// porth.porth:245:21: OP_INLINED 36
addr_7636: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7637: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7638: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7639: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7640: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7641: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7642: ;;// porth.porth:245:26: OP_INLINED 30
addr_7643: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_7644: ;;// porth.porth:248:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_7645: ;;// porth.porth:248:11: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_7646: ;;// porth.porth:248:22: OP_INLINED 36
addr_7647: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7648: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7649: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7650: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7651: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7652: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7653: ;;// porth.porth:248:27: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_7654: ;;// porth.porth:248:46: OP_INLINED 36
addr_7655: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7656: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7657: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7658: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7659: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7660: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7661: ;;// porth.porth:248:51: OP_INLINED 0
addr_7662: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7663: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_7664: ;;// porth.porth:249:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_7665: ;;// porth.porth:249:11: OP_PUSH_INT 32
    mov rax, 32
    push rax
addr_7666: ;;// porth.porth:249:28: OP_INLINED 36
addr_7667: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7668: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7669: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7670: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7671: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7672: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7673: ;;// porth.porth:249:33: OP_INLINED 0
addr_7674: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7675: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_7676: ;;// porth.porth:250:5: OP_INLINED 78
addr_7677: ;;// std/core.porth:68:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7678: ;;// std/core.porth:68:8: OP_INTRINSIC cast(int)
addr_7679: ;;// std/core.porth:69:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7680: ;;// std/core.porth:69:8: OP_INTRINSIC cast(int)
addr_7681: ;;// std/core.porth:70:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_7682: ;;// porth.porth:251:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_7683: ;;// porth.porth:251:7: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7684: ;;// porth.porth:252:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_7685: ;;// porth.porth:252:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_7686: ;;// porth.porth:252:17: OP_INLINED 36
addr_7687: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7688: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7689: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7690: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7691: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7692: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7693: ;;// porth.porth:253:5: OP_INLINED 30
addr_7694: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_7695: ;;// porth.porth:254:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_7696: ;;// porth.porth:324:13: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_7697: ;;// porth.porth:324:17: OP_INLINED 5367
addr_7698: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_7699: ;;// porth.porth:32:35: OP_INLINED 5195
addr_7700: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_7701: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_7702: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_7703: ;;// porth.porth:24:23: OP_INLINED 36
addr_7704: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7705: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7706: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7707: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7708: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7709: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7710: ;;// porth.porth:24:28: OP_INLINED 753
addr_7711: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_7712: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_7713: ;;// std/std.porth:65:7: OP_INLINED 704
addr_7714: ;;// std/std.porth:58:38: OP_INLINED 684
addr_7715: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_7716: ;;// std/std.porth:56:57: OP_INLINED 36
addr_7717: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7718: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7719: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7720: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7721: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7722: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7723: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7724: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_7725: ;;// std/std.porth:66:7: OP_INLINED 716
addr_7726: ;;// std/std.porth:59:37: OP_INLINED 694
addr_7727: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_7728: ;;// std/std.porth:57:55: OP_INLINED 36
addr_7729: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7730: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7731: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7732: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7733: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7734: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7735: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7736: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_7737: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_7738: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_7739: ;;// porth.porth:24:36: OP_INLINED 662
addr_7740: ;;// std/std.porth:48:34: OP_INLINED 394
addr_7741: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_7742: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_7743: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_7744: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_7745: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_7746: ;;// porth.porth:25:36: OP_INLINED 662
addr_7747: ;;// std/std.porth:48:34: OP_INLINED 394
addr_7748: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_7749: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_7750: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_7751: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_7752: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_7753: ;;// porth.porth:26:17: OP_INLINED 36
addr_7754: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7755: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7756: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7757: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7758: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7759: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7760: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7761: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_7762: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_7763: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_7764: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_7765: ;;// porth.porth:27:36: OP_INLINED 662
addr_7766: ;;// std/std.porth:48:34: OP_INLINED 394
addr_7767: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_7768: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_7769: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_7770: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_7771: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_7772: ;;// porth.porth:28:17: OP_INLINED 36
addr_7773: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7774: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7775: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7776: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7777: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7778: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7779: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7780: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_7781: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_7782: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_7783: ;;// porth.porth:324:25: OP_PUSH_STR 110
    mov rax, 35
    push rax
    lea rax, [str_110]
    push rax
addr_7784: ;;// porth.porth:324:63: OP_INLINED 676
addr_7785: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_7786: ;;// std/std.porth:50:37: OP_INLINED 662
addr_7787: ;;// std/std.porth:48:34: OP_INLINED 394
addr_7788: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_7789: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_7790: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_7791: ;;// porth.porth:324:69: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_7792: ;;// porth.porth:324:71: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_7793: ;;// porth.porth:324:76: OP_INLINED 716
addr_7794: ;;// std/std.porth:59:37: OP_INLINED 694
addr_7795: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_7796: ;;// std/std.porth:57:55: OP_INLINED 36
addr_7797: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7798: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7799: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7800: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7801: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7802: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7803: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7804: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_7805: ;;// porth.porth:324:86: OP_INLINED 676
addr_7806: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_7807: ;;// std/std.porth:50:37: OP_INLINED 662
addr_7808: ;;// std/std.porth:48:34: OP_INLINED 394
addr_7809: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_7810: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_7811: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_7812: ;;// porth.porth:324:92: OP_PUSH_STR 111
    mov rax, 2
    push rax
    lea rax, [str_111]
    push rax
addr_7813: ;;// porth.porth:324:98: OP_INLINED 676
addr_7814: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_7815: ;;// std/std.porth:50:37: OP_INLINED 662
addr_7816: ;;// std/std.porth:48:34: OP_INLINED 394
addr_7817: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_7818: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_7819: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_7820: ;;// porth.porth:325:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_7821: ;;// porth.porth:325:15: OP_INLINED 418
addr_7822: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_7823: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_7824: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_7825: ;;// porth.porth:326:13: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_7826: ;;// porth.porth:327:11: OP_END_IF 0
addr_7827: ;;// porth.porth:328:9: OP_ELSE 60
    jmp addr_7887
addr_7828: ;;// porth.porth:329:11: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7829: ;;// porth.porth:329:15: OP_INLINED 716
addr_7830: ;;// std/std.porth:59:37: OP_INLINED 694
addr_7831: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_7832: ;;// std/std.porth:57:55: OP_INLINED 36
addr_7833: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7834: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7835: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7836: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7837: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7838: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7839: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7840: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_7841: ;;// porth.porth:329:25: OP_INTRINSIC @8
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_7842: ;;// porth.porth:329:28: OP_CALL 6453
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_6453
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_7843: ;;// porth.porth:330:11: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7844: ;;// porth.porth:330:15: OP_INLINED 816
addr_7845: ;;// std/std.porth:80:4: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7846: ;;// std/std.porth:80:8: OP_INLINED 684
addr_7847: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_7848: ;;// std/std.porth:56:57: OP_INLINED 36
addr_7849: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7850: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7851: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7852: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7853: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7854: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7855: ;;// std/std.porth:80:18: OP_INLINED 169
addr_7856: ;;// std/core.porth:108:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7857: ;;// std/core.porth:108:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7858: ;;// std/core.porth:108:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_7859: ;;// std/core.porth:108:36: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_7860: ;;// std/core.porth:108:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7861: ;;// std/core.porth:108:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_7862: ;;// std/std.porth:81:8: OP_INLINED 694
addr_7863: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_7864: ;;// std/std.porth:57:55: OP_INLINED 36
addr_7865: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7866: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7867: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7868: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7869: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7870: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7871: ;;// std/std.porth:81:17: OP_INLINED 161
addr_7872: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7873: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7874: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_7875: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7876: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7877: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_7878: ;;// porth.porth:331:11: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_7879: ;;// porth.porth:331:17: OP_INLINED 161
addr_7880: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_7881: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7882: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_7883: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7884: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7885: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_7886: ;;// porth.porth:332:11: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_7887: ;;// porth.porth:333:9: OP_END_IF 0
addr_7888: ;;// porth.porth:334:7: OP_ELSE 2
    jmp addr_7890
addr_7889: ;;// porth.porth:334:12: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_7890: ;;// porth.porth:334:18: OP_END_IF 0
addr_7891: ;;// porth.porth:335:5: OP_DO 2
    pop rax
    test rax, rax
    jz addr_7893
addr_7892: ;;// porth.porth:335:8: OP_END_WHILE 968
    jmp addr_6924
addr_7893: ;;// porth.porth:336:3: OP_INTRINSIC drop
    pop rax
addr_7894: ;;// porth.porth:338:3: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_7895: ;;// porth.porth:338:9: OP_INLINED 16
addr_7896: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7897: ;;// porth.porth:338:14: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_7898: ;;// porth.porth:338:20: OP_INLINED 0
addr_7899: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7900: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_7901: ;;// porth.porth:338:25: OP_PUSH_LOCAL_MEM 64
    mov rax, [ret_stack_rsp]
    add rax, 64
    push rax
addr_7902: ;;// porth.porth:338:32: OP_INLINED 12
addr_7903: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7904: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_7905: ;;// porth.porth:339:1: OP_RET 72
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 72
    ret
addr_7906: ;;// porth.porth:341:6: OP_PREP_PROC 40
    sub rsp, 40
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_7907: ;;// porth.porth:349:3: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_7908: ;;// porth.porth:349:8: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_7909: ;;// porth.porth:349:14: OP_INLINED 27
addr_7910: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_7911: ;;// porth.porth:350:3: OP_CALL 6882
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_6882
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_7912: ;;// porth.porth:350:30: OP_INLINED 131
addr_7913: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_7914: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_7915: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7916: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_7917: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_7918: ;;// porth.porth:350:35: OP_IF 203
    pop rax
    test rax, rax
    jz addr_8121
addr_7919: ;;// porth.porth:351:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_7920: ;;// porth.porth:351:9: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_7921: ;;// porth.porth:351:15: OP_INLINED 0
addr_7922: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7923: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_7924: ;;// porth.porth:351:20: OP_INLINED 6784
addr_7925: ;;// porth.porth:235:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_7926: ;;// porth.porth:237:5: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_7927: ;;// porth.porth:238:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_7928: ;;// porth.porth:238:11: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_7929: ;;// porth.porth:238:27: OP_INLINED 36
addr_7930: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7931: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7932: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7933: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7934: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7935: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7936: ;;// porth.porth:239:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_7937: ;;// porth.porth:239:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_7938: ;;// porth.porth:239:27: OP_INLINED 36
addr_7939: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7940: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7941: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7942: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7943: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7944: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7945: ;;// porth.porth:240:5: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_7946: ;;// porth.porth:241:5: OP_INTRINSIC drop
    pop rax
addr_7947: ;;// porth.porth:244:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_7948: ;;// porth.porth:244:11: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_7949: ;;// porth.porth:244:21: OP_INLINED 36
addr_7950: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7951: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7952: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7953: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7954: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7955: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7956: ;;// porth.porth:244:26: OP_INLINED 16
addr_7957: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7958: ;;// porth.porth:245:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_7959: ;;// porth.porth:245:11: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_7960: ;;// porth.porth:245:21: OP_INLINED 36
addr_7961: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7962: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7963: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7964: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7965: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7966: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7967: ;;// porth.porth:245:26: OP_INLINED 30
addr_7968: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_7969: ;;// porth.porth:248:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_7970: ;;// porth.porth:248:11: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_7971: ;;// porth.porth:248:22: OP_INLINED 36
addr_7972: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7973: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7974: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7975: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7976: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7977: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7978: ;;// porth.porth:248:27: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_7979: ;;// porth.porth:248:46: OP_INLINED 36
addr_7980: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7981: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7982: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7983: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7984: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7985: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7986: ;;// porth.porth:248:51: OP_INLINED 0
addr_7987: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_7988: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_7989: ;;// porth.porth:249:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_7990: ;;// porth.porth:249:11: OP_PUSH_INT 32
    mov rax, 32
    push rax
addr_7991: ;;// porth.porth:249:28: OP_INLINED 36
addr_7992: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7993: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_7994: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_7995: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_7996: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_7997: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_7998: ;;// porth.porth:249:33: OP_INLINED 0
addr_7999: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8000: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_8001: ;;// porth.porth:250:5: OP_INLINED 78
addr_8002: ;;// std/core.porth:68:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8003: ;;// std/core.porth:68:8: OP_INTRINSIC cast(int)
addr_8004: ;;// std/core.porth:69:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8005: ;;// std/core.porth:69:8: OP_INTRINSIC cast(int)
addr_8006: ;;// std/core.porth:70:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_8007: ;;// porth.porth:251:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_8008: ;;// porth.porth:251:7: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8009: ;;// porth.porth:252:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_8010: ;;// porth.porth:252:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_8011: ;;// porth.porth:252:17: OP_INLINED 36
addr_8012: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8013: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8014: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8015: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8016: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8017: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8018: ;;// porth.porth:253:5: OP_INLINED 30
addr_8019: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_8020: ;;// porth.porth:254:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_8021: ;;// porth.porth:352:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_8022: ;;// porth.porth:352:9: OP_INLINED 5367
addr_8023: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_8024: ;;// porth.porth:32:35: OP_INLINED 5195
addr_8025: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_8026: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_8027: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_8028: ;;// porth.porth:24:23: OP_INLINED 36
addr_8029: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8030: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8031: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8032: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8033: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8034: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8035: ;;// porth.porth:24:28: OP_INLINED 753
addr_8036: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_8037: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_8038: ;;// std/std.porth:65:7: OP_INLINED 704
addr_8039: ;;// std/std.porth:58:38: OP_INLINED 684
addr_8040: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_8041: ;;// std/std.porth:56:57: OP_INLINED 36
addr_8042: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8043: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8044: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8045: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8046: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8047: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8048: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8049: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_8050: ;;// std/std.porth:66:7: OP_INLINED 716
addr_8051: ;;// std/std.porth:59:37: OP_INLINED 694
addr_8052: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_8053: ;;// std/std.porth:57:55: OP_INLINED 36
addr_8054: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8055: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8056: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8057: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8058: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8059: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8060: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8061: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_8062: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_8063: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_8064: ;;// porth.porth:24:36: OP_INLINED 662
addr_8065: ;;// std/std.porth:48:34: OP_INLINED 394
addr_8066: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_8067: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_8068: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_8069: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_8070: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_8071: ;;// porth.porth:25:36: OP_INLINED 662
addr_8072: ;;// std/std.porth:48:34: OP_INLINED 394
addr_8073: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_8074: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_8075: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_8076: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_8077: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_8078: ;;// porth.porth:26:17: OP_INLINED 36
addr_8079: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8080: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8081: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8082: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8083: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8084: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8085: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8086: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_8087: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_8088: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_8089: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_8090: ;;// porth.porth:27:36: OP_INLINED 662
addr_8091: ;;// std/std.porth:48:34: OP_INLINED 394
addr_8092: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_8093: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_8094: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_8095: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_8096: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_8097: ;;// porth.porth:28:17: OP_INLINED 36
addr_8098: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8099: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8100: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8101: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8102: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8103: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8104: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8105: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_8106: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_8107: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_8108: ;;// porth.porth:352:17: OP_PUSH_STR 112
    mov rax, 33
    push rax
    lea rax, [str_112]
    push rax
addr_8109: ;;// porth.porth:352:54: OP_INLINED 676
addr_8110: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_8111: ;;// std/std.porth:50:37: OP_INLINED 662
addr_8112: ;;// std/std.porth:48:34: OP_INLINED 394
addr_8113: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_8114: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_8115: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_8116: ;;// porth.porth:353:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_8117: ;;// porth.porth:353:7: OP_INLINED 418
addr_8118: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_8119: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_8120: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_8121: ;;// porth.porth:354:3: OP_END_IF 0
addr_8122: ;;// porth.porth:355:1: OP_RET 40
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 40
    ret
addr_8123: ;;// porth.porth:357:6: OP_PREP_PROC 40
    sub rsp, 40
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_8124: ;;// porth.porth:365:3: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_8125: ;;// porth.porth:365:8: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_8126: ;;// porth.porth:365:14: OP_INLINED 27
addr_8127: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_8128: ;;// porth.porth:366:3: OP_CALL 6882
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_6882
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_8129: ;;// porth.porth:366:30: OP_INLINED 131
addr_8130: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_8131: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_8132: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8133: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_8134: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_8135: ;;// porth.porth:366:35: OP_IF 203
    pop rax
    test rax, rax
    jz addr_8338
addr_8136: ;;// porth.porth:367:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_8137: ;;// porth.porth:367:9: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_8138: ;;// porth.porth:367:15: OP_INLINED 0
addr_8139: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8140: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_8141: ;;// porth.porth:367:20: OP_INLINED 6784
addr_8142: ;;// porth.porth:235:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_8143: ;;// porth.porth:237:5: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_8144: ;;// porth.porth:238:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_8145: ;;// porth.porth:238:11: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_8146: ;;// porth.porth:238:27: OP_INLINED 36
addr_8147: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8148: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8149: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8150: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8151: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8152: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8153: ;;// porth.porth:239:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_8154: ;;// porth.porth:239:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_8155: ;;// porth.porth:239:27: OP_INLINED 36
addr_8156: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8157: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8158: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8159: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8160: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8161: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8162: ;;// porth.porth:240:5: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_8163: ;;// porth.porth:241:5: OP_INTRINSIC drop
    pop rax
addr_8164: ;;// porth.porth:244:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_8165: ;;// porth.porth:244:11: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_8166: ;;// porth.porth:244:21: OP_INLINED 36
addr_8167: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8168: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8169: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8170: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8171: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8172: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8173: ;;// porth.porth:244:26: OP_INLINED 16
addr_8174: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8175: ;;// porth.porth:245:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_8176: ;;// porth.porth:245:11: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_8177: ;;// porth.porth:245:21: OP_INLINED 36
addr_8178: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8179: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8180: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8181: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8182: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8183: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8184: ;;// porth.porth:245:26: OP_INLINED 30
addr_8185: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_8186: ;;// porth.porth:248:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_8187: ;;// porth.porth:248:11: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_8188: ;;// porth.porth:248:22: OP_INLINED 36
addr_8189: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8190: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8191: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8192: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8193: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8194: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8195: ;;// porth.porth:248:27: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_8196: ;;// porth.porth:248:46: OP_INLINED 36
addr_8197: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8198: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8199: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8200: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8201: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8202: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8203: ;;// porth.porth:248:51: OP_INLINED 0
addr_8204: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8205: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_8206: ;;// porth.porth:249:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_8207: ;;// porth.porth:249:11: OP_PUSH_INT 32
    mov rax, 32
    push rax
addr_8208: ;;// porth.porth:249:28: OP_INLINED 36
addr_8209: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8210: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8211: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8212: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8213: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8214: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8215: ;;// porth.porth:249:33: OP_INLINED 0
addr_8216: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8217: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_8218: ;;// porth.porth:250:5: OP_INLINED 78
addr_8219: ;;// std/core.porth:68:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8220: ;;// std/core.porth:68:8: OP_INTRINSIC cast(int)
addr_8221: ;;// std/core.porth:69:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8222: ;;// std/core.porth:69:8: OP_INTRINSIC cast(int)
addr_8223: ;;// std/core.porth:70:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_8224: ;;// porth.porth:251:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_8225: ;;// porth.porth:251:7: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8226: ;;// porth.porth:252:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_8227: ;;// porth.porth:252:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_8228: ;;// porth.porth:252:17: OP_INLINED 36
addr_8229: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8230: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8231: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8232: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8233: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8234: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8235: ;;// porth.porth:253:5: OP_INLINED 30
addr_8236: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_8237: ;;// porth.porth:254:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_8238: ;;// porth.porth:368:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_8239: ;;// porth.porth:368:9: OP_INLINED 5367
addr_8240: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_8241: ;;// porth.porth:32:35: OP_INLINED 5195
addr_8242: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_8243: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_8244: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_8245: ;;// porth.porth:24:23: OP_INLINED 36
addr_8246: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8247: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8248: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8249: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8250: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8251: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8252: ;;// porth.porth:24:28: OP_INLINED 753
addr_8253: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_8254: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_8255: ;;// std/std.porth:65:7: OP_INLINED 704
addr_8256: ;;// std/std.porth:58:38: OP_INLINED 684
addr_8257: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_8258: ;;// std/std.porth:56:57: OP_INLINED 36
addr_8259: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8260: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8261: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8262: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8263: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8264: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8265: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8266: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_8267: ;;// std/std.porth:66:7: OP_INLINED 716
addr_8268: ;;// std/std.porth:59:37: OP_INLINED 694
addr_8269: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_8270: ;;// std/std.porth:57:55: OP_INLINED 36
addr_8271: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8272: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8273: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8274: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8275: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8276: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8277: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8278: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_8279: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_8280: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_8281: ;;// porth.porth:24:36: OP_INLINED 662
addr_8282: ;;// std/std.porth:48:34: OP_INLINED 394
addr_8283: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_8284: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_8285: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_8286: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_8287: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_8288: ;;// porth.porth:25:36: OP_INLINED 662
addr_8289: ;;// std/std.porth:48:34: OP_INLINED 394
addr_8290: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_8291: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_8292: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_8293: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_8294: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_8295: ;;// porth.porth:26:17: OP_INLINED 36
addr_8296: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8297: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8298: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8299: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8300: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8301: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8302: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8303: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_8304: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_8305: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_8306: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_8307: ;;// porth.porth:27:36: OP_INLINED 662
addr_8308: ;;// std/std.porth:48:34: OP_INLINED 394
addr_8309: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_8310: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_8311: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_8312: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_8313: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_8314: ;;// porth.porth:28:17: OP_INLINED 36
addr_8315: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8316: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8317: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8318: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8319: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8320: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8321: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8322: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_8323: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_8324: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_8325: ;;// porth.porth:368:17: OP_PUSH_STR 113
    mov rax, 36
    push rax
    lea rax, [str_113]
    push rax
addr_8326: ;;// porth.porth:368:57: OP_INLINED 676
addr_8327: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_8328: ;;// std/std.porth:50:37: OP_INLINED 662
addr_8329: ;;// std/std.porth:48:34: OP_INLINED 394
addr_8330: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_8331: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_8332: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_8333: ;;// porth.porth:369:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_8334: ;;// porth.porth:369:7: OP_INLINED 418
addr_8335: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_8336: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_8337: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_8338: ;;// porth.porth:370:3: OP_END_IF 0
addr_8339: ;;// porth.porth:371:1: OP_RET 40
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 40
    ret
addr_8340: ;;// porth.porth:373:6: OP_PREP_PROC 32
    sub rsp, 32
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_8341: ;;// porth.porth:380:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_8342: ;;// porth.porth:380:9: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_8343: ;;// porth.porth:382:3: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_8344: ;;// porth.porth:382:9: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_8345: ;;// porth.porth:386:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_8346: ;;// porth.porth:386:9: OP_INLINED 0
addr_8347: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8348: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_8349: ;;// porth.porth:387:3: OP_WHILE 175
addr_8350: ;;// porth.porth:388:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_8351: ;;// porth.porth:388:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_8352: ;;// porth.porth:388:20: OP_INLINED 36
addr_8353: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8354: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8355: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8356: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8357: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8358: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8359: ;;// porth.porth:388:25: OP_CALL 896
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_896
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_8360: ;;// porth.porth:390:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_8361: ;;// porth.porth:390:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_8362: ;;// porth.porth:390:20: OP_INLINED 36
addr_8363: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8364: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8365: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8366: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8367: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8368: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8369: ;;// porth.porth:390:25: OP_INLINED 1483
addr_8370: ;;// std/std.porth:214:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_8371: ;;// std/std.porth:214:23: OP_INLINED 36
addr_8372: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8373: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8374: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8375: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8376: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8377: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8378: ;;// std/std.porth:215:3: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8379: ;;// std/std.porth:216:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_8380: ;;// std/std.porth:216:5: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_8381: ;;// porth.porth:390:36: OP_IF 29
    pop rax
    test rax, rax
    jz addr_8410
addr_8382: ;;// porth.porth:391:7: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_8383: ;;// porth.porth:391:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_8384: ;;// porth.porth:391:25: OP_INLINED 36
addr_8385: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8386: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8387: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8388: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8389: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8390: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8391: ;;// porth.porth:391:30: OP_INLINED 1483
addr_8392: ;;// std/std.porth:214:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_8393: ;;// std/std.porth:214:23: OP_INLINED 36
addr_8394: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8395: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8396: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8397: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8398: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8399: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8400: ;;// std/std.porth:215:3: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8401: ;;// std/std.porth:216:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_8402: ;;// std/std.porth:216:5: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_8403: ;;// porth.porth:391:41: OP_INLINED 131
addr_8404: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_8405: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_8406: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8407: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_8408: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_8409: ;;// porth.porth:392:5: OP_ELSE 41
    jmp addr_8450
addr_8410: ;;// porth.porth:393:7: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_8411: ;;// porth.porth:393:11: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_8412: ;;// porth.porth:393:22: OP_INLINED 36
addr_8413: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8414: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8415: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8416: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8417: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8418: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8419: ;;// porth.porth:396:7: OP_PUSH_STR 114
    mov rax, 2
    push rax
    lea rax, [str_114]
    push rax
addr_8420: ;;// porth.porth:396:12: OP_INTRINSIC rot
    pop rax
    pop rbx
    pop rcx
    push rbx
    push rax
    push rcx
addr_8421: ;;// porth.porth:396:16: OP_INLINED 753
addr_8422: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_8423: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_8424: ;;// std/std.porth:65:7: OP_INLINED 704
addr_8425: ;;// std/std.porth:58:38: OP_INLINED 684
addr_8426: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_8427: ;;// std/std.porth:56:57: OP_INLINED 36
addr_8428: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8429: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8430: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8431: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8432: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8433: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8434: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8435: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_8436: ;;// std/std.porth:66:7: OP_INLINED 716
addr_8437: ;;// std/std.porth:59:37: OP_INLINED 694
addr_8438: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_8439: ;;// std/std.porth:57:55: OP_INLINED 36
addr_8440: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8441: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8442: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8443: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8444: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8445: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8446: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8447: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_8448: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_8449: ;;// porth.porth:396:21: OP_CALL 1424
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1424
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_8450: ;;// porth.porth:397:5: OP_END_IF 0
addr_8451: ;;// porth.porth:398:3: OP_DO 73
    pop rax
    test rax, rax
    jz addr_8524
addr_8452: ;;// porth.porth:398:6: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_8453: ;;// porth.porth:398:10: OP_INLINED 6713
addr_8454: ;;// porth.porth:217:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_8455: ;;// porth.porth:218:5: OP_PUSH_INT 10
    mov rax, 10
    push rax
addr_8456: ;;// porth.porth:219:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_8457: ;;// porth.porth:219:11: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_8458: ;;// porth.porth:219:22: OP_INLINED 36
addr_8459: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8460: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8461: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8462: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8463: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8464: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8465: ;;// porth.porth:220:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_8466: ;;// porth.porth:220:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_8467: ;;// porth.porth:220:25: OP_INLINED 36
addr_8468: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8469: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8470: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8471: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8472: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8473: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8474: ;;// porth.porth:221:5: OP_CALL 1170
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1170
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_8475: ;;// porth.porth:223:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_8476: ;;// porth.porth:223:11: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_8477: ;;// porth.porth:223:22: OP_INLINED 36
addr_8478: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8479: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8480: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8481: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8482: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8483: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8484: ;;// porth.porth:223:27: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_8485: ;;// porth.porth:223:46: OP_INLINED 36
addr_8486: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8487: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8488: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8489: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8490: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8491: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8492: ;;// porth.porth:223:51: OP_INLINED 0
addr_8493: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8494: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_8495: ;;// porth.porth:224:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_8496: ;;// porth.porth:224:11: OP_PUSH_INT 32
    mov rax, 32
    push rax
addr_8497: ;;// porth.porth:224:28: OP_INLINED 36
addr_8498: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8499: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8500: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8501: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8502: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8503: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8504: ;;// porth.porth:225:5: OP_INLINED 27
addr_8505: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_8506: ;;// porth.porth:227:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_8507: ;;// porth.porth:227:11: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_8508: ;;// porth.porth:227:21: OP_INLINED 36
addr_8509: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8510: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8511: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8512: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8513: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8514: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8515: ;;// porth.porth:227:26: OP_INLINED 161
addr_8516: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_8517: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8518: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_8519: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8520: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8521: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_8522: ;;// porth.porth:228:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_8523: ;;// porth.porth:398:26: OP_END_WHILE 174
    jmp addr_8349
addr_8524: ;;// porth.porth:400:3: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_8525: ;;// porth.porth:400:7: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_8526: ;;// porth.porth:400:18: OP_INLINED 36
addr_8527: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8528: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8529: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8530: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8531: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8532: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8533: ;;// porth.porth:400:23: OP_INLINED 1483
addr_8534: ;;// std/std.porth:214:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_8535: ;;// std/std.porth:214:23: OP_INLINED 36
addr_8536: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8537: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8538: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8539: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8540: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8541: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8542: ;;// std/std.porth:215:3: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8543: ;;// std/std.porth:216:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_8544: ;;// std/std.porth:216:5: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_8545: ;;// porth.porth:400:34: OP_INLINED 131
addr_8546: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_8547: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_8548: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8549: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_8550: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_8551: ;;// porth.porth:400:39: OP_IF 1026
    pop rax
    test rax, rax
    jz addr_9577
addr_8552: ;;// porth.porth:401:5: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_8553: ;;// porth.porth:401:11: OP_INLINED 0
addr_8554: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8555: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_8556: ;;// porth.porth:401:16: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_8557: ;;// porth.porth:401:26: OP_INLINED 36
addr_8558: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8559: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8560: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8561: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8562: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8563: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8564: ;;// porth.porth:402:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_8565: ;;// porth.porth:402:11: OP_INLINED 0
addr_8566: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8567: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_8568: ;;// porth.porth:403:5: OP_INLINED 6784
addr_8569: ;;// porth.porth:235:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_8570: ;;// porth.porth:237:5: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_8571: ;;// porth.porth:238:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_8572: ;;// porth.porth:238:11: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_8573: ;;// porth.porth:238:27: OP_INLINED 36
addr_8574: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8575: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8576: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8577: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8578: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8579: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8580: ;;// porth.porth:239:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_8581: ;;// porth.porth:239:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_8582: ;;// porth.porth:239:27: OP_INLINED 36
addr_8583: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8584: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8585: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8586: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8587: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8588: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8589: ;;// porth.porth:240:5: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_8590: ;;// porth.porth:241:5: OP_INTRINSIC drop
    pop rax
addr_8591: ;;// porth.porth:244:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_8592: ;;// porth.porth:244:11: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_8593: ;;// porth.porth:244:21: OP_INLINED 36
addr_8594: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8595: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8596: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8597: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8598: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8599: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8600: ;;// porth.porth:244:26: OP_INLINED 16
addr_8601: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8602: ;;// porth.porth:245:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_8603: ;;// porth.porth:245:11: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_8604: ;;// porth.porth:245:21: OP_INLINED 36
addr_8605: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8606: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8607: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8608: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8609: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8610: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8611: ;;// porth.porth:245:26: OP_INLINED 30
addr_8612: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_8613: ;;// porth.porth:248:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_8614: ;;// porth.porth:248:11: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_8615: ;;// porth.porth:248:22: OP_INLINED 36
addr_8616: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8617: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8618: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8619: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8620: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8621: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8622: ;;// porth.porth:248:27: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_8623: ;;// porth.porth:248:46: OP_INLINED 36
addr_8624: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8625: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8626: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8627: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8628: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8629: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8630: ;;// porth.porth:248:51: OP_INLINED 0
addr_8631: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8632: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_8633: ;;// porth.porth:249:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_8634: ;;// porth.porth:249:11: OP_PUSH_INT 32
    mov rax, 32
    push rax
addr_8635: ;;// porth.porth:249:28: OP_INLINED 36
addr_8636: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8637: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8638: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8639: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8640: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8641: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8642: ;;// porth.porth:249:33: OP_INLINED 0
addr_8643: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8644: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_8645: ;;// porth.porth:250:5: OP_INLINED 78
addr_8646: ;;// std/core.porth:68:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8647: ;;// std/core.porth:68:8: OP_INTRINSIC cast(int)
addr_8648: ;;// std/core.porth:69:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8649: ;;// std/core.porth:69:8: OP_INTRINSIC cast(int)
addr_8650: ;;// std/core.porth:70:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_8651: ;;// porth.porth:251:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_8652: ;;// porth.porth:251:7: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8653: ;;// porth.porth:252:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_8654: ;;// porth.porth:252:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_8655: ;;// porth.porth:252:17: OP_INLINED 36
addr_8656: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8657: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8658: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8659: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8660: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8661: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8662: ;;// porth.porth:253:5: OP_INLINED 30
addr_8663: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_8664: ;;// porth.porth:254:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_8665: ;;// porth.porth:407:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_8666: ;;// porth.porth:407:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_8667: ;;// porth.porth:407:20: OP_INLINED 36
addr_8668: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8669: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8670: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8671: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8672: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8673: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8674: ;;// porth.porth:407:25: OP_INLINED 716
addr_8675: ;;// std/std.porth:59:37: OP_INLINED 694
addr_8676: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_8677: ;;// std/std.porth:57:55: OP_INLINED 36
addr_8678: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8679: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8680: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8681: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8682: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8683: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8684: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8685: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_8686: ;;// porth.porth:407:35: OP_INTRINSIC @8
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_8687: ;;// porth.porth:407:38: OP_PUSH_INT 34
    mov rax, 34
    push rax
addr_8688: ;;// porth.porth:407:42: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_8689: ;;// porth.porth:407:44: OP_IF 327
    pop rax
    test rax, rax
    jz addr_9016
addr_8690: ;;// porth.porth:409:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_8691: ;;// porth.porth:409:12: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_8692: ;;// porth.porth:409:23: OP_INLINED 36
addr_8693: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8694: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8695: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8696: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8697: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8698: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8699: ;;// porth.porth:409:28: OP_INLINED 816
addr_8700: ;;// std/std.porth:80:4: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_8701: ;;// std/std.porth:80:8: OP_INLINED 684
addr_8702: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_8703: ;;// std/std.porth:56:57: OP_INLINED 36
addr_8704: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8705: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8706: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8707: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8708: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8709: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8710: ;;// std/std.porth:80:18: OP_INLINED 169
addr_8711: ;;// std/core.porth:108:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_8712: ;;// std/core.porth:108:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8713: ;;// std/core.porth:108:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_8714: ;;// std/core.porth:108:36: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_8715: ;;// std/core.porth:108:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8716: ;;// std/core.porth:108:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_8717: ;;// std/std.porth:81:8: OP_INLINED 694
addr_8718: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_8719: ;;// std/std.porth:57:55: OP_INLINED 36
addr_8720: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8721: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8722: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8723: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8724: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8725: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8726: ;;// std/std.porth:81:17: OP_INLINED 161
addr_8727: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_8728: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8729: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_8730: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8731: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8732: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_8733: ;;// porth.porth:410:8: OP_PUSH_INT 34
    mov rax, 34
    push rax
addr_8734: ;;// porth.porth:410:12: OP_CALL 7906
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_7906
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_8735: ;;// porth.porth:410:33: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_8736: ;;// porth.porth:410:38: OP_INLINED 782
addr_8737: ;;// std/std.porth:71:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_8738: ;;// std/std.porth:72:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_8739: ;;// std/std.porth:72:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_8740: ;;// std/std.porth:72:9: OP_INLINED 729
addr_8741: ;;// std/std.porth:60:35: OP_INLINED 684
addr_8742: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_8743: ;;// std/std.porth:56:57: OP_INLINED 36
addr_8744: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8745: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8746: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8747: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8748: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8749: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8750: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_8751: ;;// std/std.porth:73:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_8752: ;;// std/std.porth:73:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_8753: ;;// std/std.porth:73:9: OP_INLINED 741
addr_8754: ;;// std/std.porth:61:34: OP_INLINED 694
addr_8755: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_8756: ;;// std/std.porth:57:55: OP_INLINED 36
addr_8757: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8758: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8759: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8760: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8761: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8762: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8763: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_8764: ;;// std/std.porth:74:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_8765: ;;// porth.porth:411:8: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_8766: ;;// porth.porth:411:13: OP_INLINED 753
addr_8767: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_8768: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_8769: ;;// std/std.porth:65:7: OP_INLINED 704
addr_8770: ;;// std/std.porth:58:38: OP_INLINED 684
addr_8771: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_8772: ;;// std/std.porth:56:57: OP_INLINED 36
addr_8773: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8774: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8775: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8776: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8777: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8778: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8779: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8780: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_8781: ;;// std/std.porth:66:7: OP_INLINED 716
addr_8782: ;;// std/std.porth:59:37: OP_INLINED 694
addr_8783: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_8784: ;;// std/std.porth:57:55: OP_INLINED 36
addr_8785: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8786: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8787: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8788: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8789: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8790: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8791: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8792: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_8793: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_8794: ;;// porth.porth:411:18: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_8795: ;;// porth.porth:411:24: OP_INLINED 0
addr_8796: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8797: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_8798: ;;// porth.porth:411:29: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_8799: ;;// porth.porth:411:41: OP_INLINED 36
addr_8800: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8801: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8802: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8803: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8804: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8805: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8806: ;;// porth.porth:411:46: OP_INLINED 782
addr_8807: ;;// std/std.porth:71:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_8808: ;;// std/std.porth:72:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_8809: ;;// std/std.porth:72:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_8810: ;;// std/std.porth:72:9: OP_INLINED 729
addr_8811: ;;// std/std.porth:60:35: OP_INLINED 684
addr_8812: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_8813: ;;// std/std.porth:56:57: OP_INLINED 36
addr_8814: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8815: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8816: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8817: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8818: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8819: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8820: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_8821: ;;// std/std.porth:73:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_8822: ;;// std/std.porth:73:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_8823: ;;// std/std.porth:73:9: OP_INLINED 741
addr_8824: ;;// std/std.porth:61:34: OP_INLINED 694
addr_8825: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_8826: ;;// std/std.porth:57:55: OP_INLINED 36
addr_8827: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8828: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8829: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8830: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8831: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8832: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8833: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_8834: ;;// std/std.porth:74:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_8835: ;;// porth.porth:413:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_8836: ;;// porth.porth:413:14: OP_INLINED 0
addr_8837: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8838: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_8839: ;;// porth.porth:413:19: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_8840: ;;// porth.porth:413:30: OP_INLINED 36
addr_8841: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8842: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8843: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8844: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8845: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8846: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8847: ;;// porth.porth:413:35: OP_INLINED 1483
addr_8848: ;;// std/std.porth:214:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_8849: ;;// std/std.porth:214:23: OP_INLINED 36
addr_8850: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8851: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8852: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8853: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8854: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8855: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8856: ;;// std/std.porth:215:3: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8857: ;;// std/std.porth:216:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_8858: ;;// std/std.porth:216:5: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_8859: ;;// porth.porth:413:46: OP_INLINED 131
addr_8860: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_8861: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_8862: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8863: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_8864: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_8865: ;;// porth.porth:413:51: OP_IF 135
    pop rax
    test rax, rax
    jz addr_9000
addr_8866: ;;// porth.porth:414:10: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_8867: ;;// porth.porth:414:16: OP_INLINED 0
addr_8868: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8869: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_8870: ;;// porth.porth:414:21: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_8871: ;;// porth.porth:414:32: OP_INLINED 36
addr_8872: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8873: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8874: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8875: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8876: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8877: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8878: ;;// porth.porth:414:37: OP_INLINED 716
addr_8879: ;;// std/std.porth:59:37: OP_INLINED 694
addr_8880: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_8881: ;;// std/std.porth:57:55: OP_INLINED 36
addr_8882: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8883: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8884: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8885: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8886: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8887: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8888: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8889: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_8890: ;;// porth.porth:414:47: OP_INTRINSIC @8
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_8891: ;;// porth.porth:414:50: OP_PUSH_INT 99
    mov rax, 99
    push rax
addr_8892: ;;// porth.porth:414:54: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_8893: ;;// porth.porth:414:56: OP_IF 91
    pop rax
    test rax, rax
    jz addr_8984
addr_8894: ;;// porth.porth:415:12: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_8895: ;;// porth.porth:415:18: OP_INLINED 0
addr_8896: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8897: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_8898: ;;// porth.porth:415:23: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_8899: ;;// porth.porth:415:34: OP_INLINED 36
addr_8900: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8901: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8902: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8903: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8904: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8905: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8906: ;;// porth.porth:415:39: OP_INLINED 816
addr_8907: ;;// std/std.porth:80:4: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_8908: ;;// std/std.porth:80:8: OP_INLINED 684
addr_8909: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_8910: ;;// std/std.porth:56:57: OP_INLINED 36
addr_8911: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8912: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8913: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8914: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8915: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8916: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8917: ;;// std/std.porth:80:18: OP_INLINED 169
addr_8918: ;;// std/core.porth:108:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_8919: ;;// std/core.porth:108:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8920: ;;// std/core.porth:108:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_8921: ;;// std/core.porth:108:36: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_8922: ;;// std/core.porth:108:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8923: ;;// std/core.porth:108:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_8924: ;;// std/std.porth:81:8: OP_INLINED 694
addr_8925: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_8926: ;;// std/std.porth:57:55: OP_INLINED 36
addr_8927: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8928: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8929: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8930: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8931: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8932: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8933: ;;// std/std.porth:81:17: OP_INLINED 161
addr_8934: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_8935: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8936: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_8937: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8938: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8939: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_8940: ;;// porth.porth:416:12: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_8941: ;;// porth.porth:416:14: OP_CALL 6453
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_6453
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_8942: ;;// porth.porth:417:12: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_8943: ;;// porth.porth:417:18: OP_INLINED 0
addr_8944: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8945: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_8946: ;;// porth.porth:417:23: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_8947: ;;// porth.porth:417:35: OP_INLINED 36
addr_8948: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8949: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8950: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8951: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8952: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8953: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8954: ;;// porth.porth:417:40: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_8955: ;;// porth.porth:417:60: OP_INLINED 36
addr_8956: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8957: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8958: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8959: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8960: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8961: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8962: ;;// porth.porth:417:65: OP_INLINED 161
addr_8963: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_8964: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8965: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_8966: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8967: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8968: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_8969: ;;// porth.porth:418:12: OP_PUSH_INT 4
    mov rax, 4
    push rax
addr_8970: ;;// porth.porth:418:23: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_8971: ;;// porth.porth:418:29: OP_INLINED 0
addr_8972: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8973: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_8974: ;;// porth.porth:418:34: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_8975: ;;// porth.porth:418:45: OP_INLINED 36
addr_8976: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8977: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8978: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8979: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8980: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8981: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8982: ;;// porth.porth:418:50: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_8983: ;;// porth.porth:419:10: OP_ELSE 15
    jmp addr_8998
addr_8984: ;;// porth.porth:420:12: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_8985: ;;// porth.porth:420:22: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_8986: ;;// porth.porth:420:28: OP_INLINED 0
addr_8987: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_8988: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_8989: ;;// porth.porth:420:33: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_8990: ;;// porth.porth:420:44: OP_INLINED 36
addr_8991: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8992: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_8993: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_8994: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_8995: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_8996: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_8997: ;;// porth.porth:420:49: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_8998: ;;// porth.porth:421:10: OP_END_IF 0
addr_8999: ;;// porth.porth:422:8: OP_ELSE 15
    jmp addr_9014
addr_9000: ;;// porth.porth:423:10: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_9001: ;;// porth.porth:423:20: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_9002: ;;// porth.porth:423:26: OP_INLINED 0
addr_9003: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_9004: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_9005: ;;// porth.porth:423:31: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_9006: ;;// porth.porth:423:42: OP_INLINED 36
addr_9007: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9008: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9009: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9010: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9011: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9012: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9013: ;;// porth.porth:423:47: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_9014: ;;// porth.porth:424:8: OP_END_IF 0
addr_9015: ;;// porth.porth:425:5: OP_ELSE 271
    jmp addr_9286
addr_9016: ;;// porth.porth:425:10: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_9017: ;;// porth.porth:425:14: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_9018: ;;// porth.porth:425:25: OP_INLINED 36
addr_9019: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9020: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9021: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9022: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9023: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9024: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9025: ;;// porth.porth:425:30: OP_INLINED 716
addr_9026: ;;// std/std.porth:59:37: OP_INLINED 694
addr_9027: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_9028: ;;// std/std.porth:57:55: OP_INLINED 36
addr_9029: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9030: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9031: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9032: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9033: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9034: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9035: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_9036: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_9037: ;;// porth.porth:425:40: OP_INTRINSIC @8
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_9038: ;;// porth.porth:425:43: OP_PUSH_INT 39
    mov rax, 39
    push rax
addr_9039: ;;// porth.porth:425:48: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_9040: ;;// porth.porth:425:50: OP_IFSTAR 247
    pop rax
    test rax, rax
    jz addr_9287
addr_9041: ;;// porth.porth:427:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_9042: ;;// porth.porth:427:12: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_9043: ;;// porth.porth:427:23: OP_INLINED 36
addr_9044: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9045: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9046: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9047: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9048: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9049: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9050: ;;// porth.porth:427:28: OP_INLINED 816
addr_9051: ;;// std/std.porth:80:4: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_9052: ;;// std/std.porth:80:8: OP_INLINED 684
addr_9053: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_9054: ;;// std/std.porth:56:57: OP_INLINED 36
addr_9055: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9056: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9057: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9058: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9059: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9060: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9061: ;;// std/std.porth:80:18: OP_INLINED 169
addr_9062: ;;// std/core.porth:108:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_9063: ;;// std/core.porth:108:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_9064: ;;// std/core.porth:108:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_9065: ;;// std/core.porth:108:36: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_9066: ;;// std/core.porth:108:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9067: ;;// std/core.porth:108:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_9068: ;;// std/std.porth:81:8: OP_INLINED 694
addr_9069: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_9070: ;;// std/std.porth:57:55: OP_INLINED 36
addr_9071: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9072: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9073: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9074: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9075: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9076: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9077: ;;// std/std.porth:81:17: OP_INLINED 161
addr_9078: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_9079: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_9080: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_9081: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9082: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9083: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_9084: ;;// porth.porth:428:8: OP_PUSH_INT 39
    mov rax, 39
    push rax
addr_9085: ;;// porth.porth:428:13: OP_CALL 8123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_8123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_9086: ;;// porth.porth:428:35: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_9087: ;;// porth.porth:428:40: OP_INLINED 782
addr_9088: ;;// std/std.porth:71:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_9089: ;;// std/std.porth:72:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_9090: ;;// std/std.porth:72:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_9091: ;;// std/std.porth:72:9: OP_INLINED 729
addr_9092: ;;// std/std.porth:60:35: OP_INLINED 684
addr_9093: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_9094: ;;// std/std.porth:56:57: OP_INLINED 36
addr_9095: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9096: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9097: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9098: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9099: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9100: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9101: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_9102: ;;// std/std.porth:73:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_9103: ;;// std/std.porth:73:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_9104: ;;// std/std.porth:73:9: OP_INLINED 741
addr_9105: ;;// std/std.porth:61:34: OP_INLINED 694
addr_9106: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_9107: ;;// std/std.porth:57:55: OP_INLINED 36
addr_9108: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9109: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9110: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9111: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9112: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9113: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9114: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_9115: ;;// std/std.porth:74:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_9116: ;;// porth.porth:430:8: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_9117: ;;// porth.porth:430:13: OP_INLINED 704
addr_9118: ;;// std/std.porth:58:38: OP_INLINED 684
addr_9119: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_9120: ;;// std/std.porth:56:57: OP_INLINED 36
addr_9121: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9122: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9123: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9124: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9125: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9126: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9127: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_9128: ;;// porth.porth:430:24: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_9129: ;;// porth.porth:430:26: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_9130: ;;// porth.porth:430:28: OP_IF 30
    pop rax
    test rax, rax
    jz addr_9160
addr_9131: ;;// porth.porth:431:10: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_9132: ;;// porth.porth:431:15: OP_INLINED 716
addr_9133: ;;// std/std.porth:59:37: OP_INLINED 694
addr_9134: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_9135: ;;// std/std.porth:57:55: OP_INLINED 36
addr_9136: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9137: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9138: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9139: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9140: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9141: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9142: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_9143: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_9144: ;;// porth.porth:431:25: OP_INTRINSIC @8
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_9145: ;;// porth.porth:431:28: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_9146: ;;// porth.porth:431:34: OP_INLINED 0
addr_9147: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_9148: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_9149: ;;// porth.porth:431:39: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_9150: ;;// porth.porth:431:51: OP_INLINED 36
addr_9151: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9152: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9153: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9154: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9155: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9156: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9157: ;;// porth.porth:431:56: OP_INLINED 30
addr_9158: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_9159: ;;// porth.porth:432:8: OP_ELSE 112
    jmp addr_9271
addr_9160: ;;// porth.porth:433:10: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_9161: ;;// porth.porth:433:16: OP_INLINED 0
addr_9162: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_9163: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_9164: ;;// porth.porth:433:21: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_9165: ;;// porth.porth:433:31: OP_INLINED 36
addr_9166: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9167: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9168: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9169: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9170: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9171: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9172: ;;// porth.porth:433:36: OP_INLINED 5367
addr_9173: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_9174: ;;// porth.porth:32:35: OP_INLINED 5195
addr_9175: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_9176: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_9177: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_9178: ;;// porth.porth:24:23: OP_INLINED 36
addr_9179: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9180: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9181: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9182: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9183: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9184: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9185: ;;// porth.porth:24:28: OP_INLINED 753
addr_9186: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_9187: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_9188: ;;// std/std.porth:65:7: OP_INLINED 704
addr_9189: ;;// std/std.porth:58:38: OP_INLINED 684
addr_9190: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_9191: ;;// std/std.porth:56:57: OP_INLINED 36
addr_9192: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9193: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9194: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9195: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9196: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9197: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9198: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_9199: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_9200: ;;// std/std.porth:66:7: OP_INLINED 716
addr_9201: ;;// std/std.porth:59:37: OP_INLINED 694
addr_9202: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_9203: ;;// std/std.porth:57:55: OP_INLINED 36
addr_9204: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9205: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9206: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9207: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9208: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9209: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9210: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_9211: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_9212: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_9213: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_9214: ;;// porth.porth:24:36: OP_INLINED 662
addr_9215: ;;// std/std.porth:48:34: OP_INLINED 394
addr_9216: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_9217: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_9218: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_9219: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_9220: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_9221: ;;// porth.porth:25:36: OP_INLINED 662
addr_9222: ;;// std/std.porth:48:34: OP_INLINED 394
addr_9223: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_9224: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_9225: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_9226: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_9227: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_9228: ;;// porth.porth:26:17: OP_INLINED 36
addr_9229: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9230: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9231: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9232: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9233: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9234: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9235: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_9236: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_9237: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_9238: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_9239: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_9240: ;;// porth.porth:27:36: OP_INLINED 662
addr_9241: ;;// std/std.porth:48:34: OP_INLINED 394
addr_9242: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_9243: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_9244: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_9245: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_9246: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_9247: ;;// porth.porth:28:17: OP_INLINED 36
addr_9248: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9249: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9250: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9251: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9252: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9253: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9254: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_9255: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_9256: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_9257: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_9258: ;;// porth.porth:433:44: OP_PUSH_STR 115
    mov rax, 69
    push rax
    lea rax, [str_115]
    push rax
addr_9259: ;;// porth.porth:433:117: OP_INLINED 676
addr_9260: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_9261: ;;// std/std.porth:50:37: OP_INLINED 662
addr_9262: ;;// std/std.porth:48:34: OP_INLINED 394
addr_9263: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_9264: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_9265: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_9266: ;;// porth.porth:434:10: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_9267: ;;// porth.porth:434:12: OP_INLINED 418
addr_9268: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_9269: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_9270: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_9271: ;;// porth.porth:435:8: OP_END_IF 0
addr_9272: ;;// porth.porth:437:8: OP_PUSH_INT 5
    mov rax, 5
    push rax
addr_9273: ;;// porth.porth:437:19: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_9274: ;;// porth.porth:437:25: OP_INLINED 0
addr_9275: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_9276: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_9277: ;;// porth.porth:437:30: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_9278: ;;// porth.porth:437:41: OP_INLINED 36
addr_9279: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9280: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9281: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9282: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9283: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9284: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9285: ;;// porth.porth:437:46: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_9286: ;;// porth.porth:438:5: OP_ELSE 218
    jmp addr_9504
addr_9287: ;;// porth.porth:441:8: OP_PUSH_ADDR 869
    lea rax, [addr_869]
    push rax
addr_9288: ;;// porth.porth:442:8: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_9289: ;;// porth.porth:443:8: OP_INTRINSIC rot
    pop rax
    pop rbx
    pop rcx
    push rbx
    push rax
    push rcx
addr_9290: ;;// porth.porth:443:12: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_9291: ;;// porth.porth:443:23: OP_INLINED 36
addr_9292: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9293: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9294: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9295: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9296: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9297: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9298: ;;// porth.porth:444:8: OP_CALL 970
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_970
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_9299: ;;// porth.porth:446:8: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_9300: ;;// porth.porth:446:13: OP_INLINED 753
addr_9301: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_9302: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_9303: ;;// std/std.porth:65:7: OP_INLINED 704
addr_9304: ;;// std/std.porth:58:38: OP_INLINED 684
addr_9305: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_9306: ;;// std/std.porth:56:57: OP_INLINED 36
addr_9307: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9308: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9309: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9310: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9311: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9312: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9313: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_9314: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_9315: ;;// std/std.porth:66:7: OP_INLINED 716
addr_9316: ;;// std/std.porth:59:37: OP_INLINED 694
addr_9317: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_9318: ;;// std/std.porth:57:55: OP_INLINED 36
addr_9319: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9320: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9321: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9322: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9323: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9324: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9325: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_9326: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_9327: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_9328: ;;// porth.porth:446:18: OP_CALL 1796
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1796
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_9329: ;;// porth.porth:446:32: OP_IF 29
    pop rax
    test rax, rax
    jz addr_9358
addr_9330: ;;// porth.porth:447:10: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_9331: ;;// porth.porth:447:16: OP_INLINED 0
addr_9332: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_9333: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_9334: ;;// porth.porth:447:21: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_9335: ;;// porth.porth:447:33: OP_INLINED 36
addr_9336: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9337: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9338: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9339: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9340: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9341: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9342: ;;// porth.porth:447:38: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_9343: ;;// porth.porth:448:10: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_9344: ;;// porth.porth:448:20: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_9345: ;;// porth.porth:448:26: OP_INLINED 0
addr_9346: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_9347: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_9348: ;;// porth.porth:448:31: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_9349: ;;// porth.porth:448:42: OP_INLINED 36
addr_9350: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9351: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9352: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9353: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9354: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9355: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9356: ;;// porth.porth:448:47: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_9357: ;;// porth.porth:449:8: OP_ELSE 60
    jmp addr_9417
addr_9358: ;;// porth.porth:449:13: OP_INTRINSIC drop
    pop rax
addr_9359: ;;// porth.porth:449:18: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_9360: ;;// porth.porth:449:23: OP_INLINED 753
addr_9361: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_9362: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_9363: ;;// std/std.porth:65:7: OP_INLINED 704
addr_9364: ;;// std/std.porth:58:38: OP_INLINED 684
addr_9365: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_9366: ;;// std/std.porth:56:57: OP_INLINED 36
addr_9367: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9368: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9369: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9370: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9371: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9372: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9373: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_9374: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_9375: ;;// std/std.porth:66:7: OP_INLINED 716
addr_9376: ;;// std/std.porth:59:37: OP_INLINED 694
addr_9377: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_9378: ;;// std/std.porth:57:55: OP_INLINED 36
addr_9379: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9380: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9381: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9382: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9383: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9384: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9385: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_9386: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_9387: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_9388: ;;// porth.porth:449:28: OP_CALL 5454
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5454
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_9389: ;;// porth.porth:449:44: OP_IFSTAR 29
    pop rax
    test rax, rax
    jz addr_9418
addr_9390: ;;// porth.porth:450:10: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_9391: ;;// porth.porth:450:16: OP_INLINED 0
addr_9392: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_9393: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_9394: ;;// porth.porth:450:21: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_9395: ;;// porth.porth:450:33: OP_INLINED 36
addr_9396: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9397: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9398: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9399: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9400: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9401: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9402: ;;// porth.porth:450:38: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_9403: ;;// porth.porth:451:10: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_9404: ;;// porth.porth:451:24: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_9405: ;;// porth.porth:451:30: OP_INLINED 0
addr_9406: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_9407: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_9408: ;;// porth.porth:451:35: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_9409: ;;// porth.porth:451:46: OP_INLINED 36
addr_9410: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9411: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9412: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9413: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9414: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9415: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9416: ;;// porth.porth:451:51: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_9417: ;;// porth.porth:452:8: OP_ELSE 86
    jmp addr_9503
addr_9418: ;;// porth.porth:452:13: OP_INTRINSIC drop
    pop rax
addr_9419: ;;// porth.porth:453:10: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_9420: ;;// porth.porth:453:15: OP_INLINED 753
addr_9421: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_9422: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_9423: ;;// std/std.porth:65:7: OP_INLINED 704
addr_9424: ;;// std/std.porth:58:38: OP_INLINED 684
addr_9425: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_9426: ;;// std/std.porth:56:57: OP_INLINED 36
addr_9427: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9428: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9429: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9430: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9431: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9432: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9433: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_9434: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_9435: ;;// std/std.porth:66:7: OP_INLINED 716
addr_9436: ;;// std/std.porth:59:37: OP_INLINED 694
addr_9437: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_9438: ;;// std/std.porth:57:55: OP_INLINED 36
addr_9439: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9440: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9441: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9442: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9443: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9444: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9445: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_9446: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_9447: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_9448: ;;// porth.porth:453:21: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_9449: ;;// porth.porth:453:27: OP_INLINED 0
addr_9450: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_9451: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_9452: ;;// porth.porth:453:32: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_9453: ;;// porth.porth:453:44: OP_INLINED 36
addr_9454: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9455: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9456: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9457: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9458: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9459: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9460: ;;// porth.porth:453:49: OP_INLINED 782
addr_9461: ;;// std/std.porth:71:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_9462: ;;// std/std.porth:72:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_9463: ;;// std/std.porth:72:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_9464: ;;// std/std.porth:72:9: OP_INLINED 729
addr_9465: ;;// std/std.porth:60:35: OP_INLINED 684
addr_9466: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_9467: ;;// std/std.porth:56:57: OP_INLINED 36
addr_9468: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9469: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9470: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9471: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9472: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9473: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9474: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_9475: ;;// std/std.porth:73:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_9476: ;;// std/std.porth:73:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_9477: ;;// std/std.porth:73:9: OP_INLINED 741
addr_9478: ;;// std/std.porth:61:34: OP_INLINED 694
addr_9479: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_9480: ;;// std/std.porth:57:55: OP_INLINED 36
addr_9481: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9482: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9483: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9484: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9485: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9486: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9487: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_9488: ;;// std/std.porth:74:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_9489: ;;// porth.porth:454:10: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_9490: ;;// porth.porth:454:21: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_9491: ;;// porth.porth:454:27: OP_INLINED 0
addr_9492: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_9493: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_9494: ;;// porth.porth:454:32: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_9495: ;;// porth.porth:454:43: OP_INLINED 36
addr_9496: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9497: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9498: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9499: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9500: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9501: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9502: ;;// porth.porth:454:48: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_9503: ;;// porth.porth:455:8: OP_END_IF 0
addr_9504: ;;// porth.porth:456:5: OP_END_IF 0
addr_9505: ;;// porth.porth:458:5: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_9506: ;;// porth.porth:458:10: OP_INLINED 753
addr_9507: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_9508: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_9509: ;;// std/std.porth:65:7: OP_INLINED 704
addr_9510: ;;// std/std.porth:58:38: OP_INLINED 684
addr_9511: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_9512: ;;// std/std.porth:56:57: OP_INLINED 36
addr_9513: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9514: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9515: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9516: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9517: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9518: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9519: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_9520: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_9521: ;;// std/std.porth:66:7: OP_INLINED 716
addr_9522: ;;// std/std.porth:59:37: OP_INLINED 694
addr_9523: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_9524: ;;// std/std.porth:57:55: OP_INLINED 36
addr_9525: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9526: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9527: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9528: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9529: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9530: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9531: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_9532: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_9533: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_9534: ;;// porth.porth:458:15: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_9535: ;;// porth.porth:458:21: OP_INLINED 0
addr_9536: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_9537: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_9538: ;;// porth.porth:458:26: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_9539: ;;// porth.porth:458:37: OP_INLINED 36
addr_9540: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9541: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9542: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9543: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9544: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9545: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9546: ;;// porth.porth:458:42: OP_INLINED 782
addr_9547: ;;// std/std.porth:71:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_9548: ;;// std/std.porth:72:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_9549: ;;// std/std.porth:72:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_9550: ;;// std/std.porth:72:9: OP_INLINED 729
addr_9551: ;;// std/std.porth:60:35: OP_INLINED 684
addr_9552: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_9553: ;;// std/std.porth:56:57: OP_INLINED 36
addr_9554: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9555: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9556: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9557: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9558: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9559: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9560: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_9561: ;;// std/std.porth:73:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_9562: ;;// std/std.porth:73:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_9563: ;;// std/std.porth:73:9: OP_INLINED 741
addr_9564: ;;// std/std.porth:61:34: OP_INLINED 694
addr_9565: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_9566: ;;// std/std.porth:57:55: OP_INLINED 36
addr_9567: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9568: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9569: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9570: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9571: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9572: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9573: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_9574: ;;// std/std.porth:74:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_9575: ;;// porth.porth:460:5: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_9576: ;;// porth.porth:461:3: OP_ELSE 3
    jmp addr_9579
addr_9577: ;;// porth.porth:462:5: OP_INTRINSIC drop
    pop rax
addr_9578: ;;// porth.porth:463:5: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_9579: ;;// porth.porth:464:3: OP_END_IF 0
addr_9580: ;;// porth.porth:465:1: OP_RET 32
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 32
    ret
addr_9581: ;;// porth.porth:467:6: OP_PREP_PROC 144
    sub rsp, 144
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_9582: ;;// porth.porth:469:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_9583: ;;// porth.porth:469:18: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_9584: ;;// porth.porth:472:3: OP_PUSH_INT 64
    mov rax, 64
    push rax
addr_9585: ;;// porth.porth:472:17: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_9586: ;;// porth.porth:472:19: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_9587: ;;// porth.porth:472:25: OP_CALL 2169
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2169
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_9588: ;;// porth.porth:472:32: OP_INTRINSIC drop
    pop rax
addr_9589: ;;// porth.porth:473:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_9590: ;;// porth.porth:473:18: OP_INLINED 0
addr_9591: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_9592: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_9593: ;;// porth.porth:473:23: OP_CALL 2888
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2888
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_9594: ;;// porth.porth:473:35: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_9595: ;;// porth.porth:473:41: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_9596: ;;// porth.porth:473:57: OP_INLINED 36
addr_9597: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9598: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9599: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9600: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9601: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9602: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9603: ;;// porth.porth:473:62: OP_INLINED 782
addr_9604: ;;// std/std.porth:71:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_9605: ;;// std/std.porth:72:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_9606: ;;// std/std.porth:72:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_9607: ;;// std/std.porth:72:9: OP_INLINED 729
addr_9608: ;;// std/std.porth:60:35: OP_INLINED 684
addr_9609: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_9610: ;;// std/std.porth:56:57: OP_INLINED 36
addr_9611: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9612: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9613: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9614: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9615: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9616: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9617: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_9618: ;;// std/std.porth:73:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_9619: ;;// std/std.porth:73:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_9620: ;;// std/std.porth:73:9: OP_INLINED 741
addr_9621: ;;// std/std.porth:61:34: OP_INLINED 694
addr_9622: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_9623: ;;// std/std.porth:57:55: OP_INLINED 36
addr_9624: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9625: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9626: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9627: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9628: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9629: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9630: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_9631: ;;// std/std.porth:74:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_9632: ;;// porth.porth:474:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_9633: ;;// porth.porth:474:18: OP_INLINED 0
addr_9634: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_9635: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_9636: ;;// porth.porth:474:23: OP_INLINED 657
addr_9637: ;;// std/std.porth:45:43: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_9638: ;;// std/std.porth:45:47: OP_CALL 564
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_564
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_9639: ;;// std/std.porth:45:55: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9640: ;;// porth.porth:474:35: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_9641: ;;// porth.porth:474:41: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_9642: ;;// porth.porth:474:57: OP_INLINED 36
addr_9643: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9644: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9645: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9646: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9647: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9648: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9649: ;;// porth.porth:474:62: OP_INLINED 782
addr_9650: ;;// std/std.porth:71:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_9651: ;;// std/std.porth:72:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_9652: ;;// std/std.porth:72:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_9653: ;;// std/std.porth:72:9: OP_INLINED 729
addr_9654: ;;// std/std.porth:60:35: OP_INLINED 684
addr_9655: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_9656: ;;// std/std.porth:56:57: OP_INLINED 36
addr_9657: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9658: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9659: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9660: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9661: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9662: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9663: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_9664: ;;// std/std.porth:73:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_9665: ;;// std/std.porth:73:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_9666: ;;// std/std.porth:73:9: OP_INLINED 741
addr_9667: ;;// std/std.porth:61:34: OP_INLINED 694
addr_9668: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_9669: ;;// std/std.porth:57:55: OP_INLINED 36
addr_9670: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9671: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9672: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9673: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9674: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9675: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9676: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_9677: ;;// std/std.porth:74:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_9678: ;;// porth.porth:478:3: OP_WHILE 448
addr_9679: ;;// porth.porth:478:9: OP_PUSH_LOCAL_MEM 72
    mov rax, [ret_stack_rsp]
    add rax, 72
    push rax
addr_9680: ;;// porth.porth:478:15: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_9681: ;;// porth.porth:478:21: OP_CALL 8340
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_8340
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_9682: ;;// porth.porth:478:38: OP_DO 444
    pop rax
    test rax, rax
    jz addr_10126
addr_9683: ;;// porth.porth:482:5: OP_PUSH_LOCAL_MEM 72
    mov rax, [ret_stack_rsp]
    add rax, 72
    push rax
addr_9684: ;;// porth.porth:482:11: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_9685: ;;// porth.porth:482:21: OP_INLINED 36
addr_9686: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9687: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9688: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9689: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9690: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9691: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9692: ;;// porth.porth:483:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_9693: ;;// porth.porth:483:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_9694: ;;// porth.porth:483:23: OP_INLINED 36
addr_9695: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9696: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9697: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9698: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9699: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9700: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9701: ;;// porth.porth:483:28: OP_INLINED 753
addr_9702: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_9703: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_9704: ;;// std/std.porth:65:7: OP_INLINED 704
addr_9705: ;;// std/std.porth:58:38: OP_INLINED 684
addr_9706: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_9707: ;;// std/std.porth:56:57: OP_INLINED 36
addr_9708: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9709: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9710: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9711: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9712: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9713: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9714: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_9715: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_9716: ;;// std/std.porth:66:7: OP_INLINED 716
addr_9717: ;;// std/std.porth:59:37: OP_INLINED 694
addr_9718: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_9719: ;;// std/std.porth:57:55: OP_INLINED 36
addr_9720: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9721: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9722: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9723: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9724: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9725: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9726: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_9727: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_9728: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_9729: ;;// porth.porth:483:33: OP_INLINED 668
addr_9730: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_9731: ;;// std/std.porth:49:36: OP_INLINED 662
addr_9732: ;;// std/std.porth:48:34: OP_INLINED 394
addr_9733: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_9734: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_9735: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_9736: ;;// porth.porth:483:38: OP_PUSH_STR 116
    mov rax, 1
    push rax
    lea rax, [str_116]
    push rax
addr_9737: ;;// porth.porth:483:42: OP_INLINED 668
addr_9738: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_9739: ;;// std/std.porth:49:36: OP_INLINED 662
addr_9740: ;;// std/std.porth:48:34: OP_INLINED 394
addr_9741: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_9742: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_9743: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_9744: ;;// porth.porth:484:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_9745: ;;// porth.porth:484:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_9746: ;;// porth.porth:484:17: OP_INLINED 36
addr_9747: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9748: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9749: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9750: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9751: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9752: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9753: ;;// porth.porth:484:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_9754: ;;// porth.porth:484:26: OP_INLINED 2111
addr_9755: ;;// std/std.porth:408:25: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_9756: ;;// std/std.porth:408:32: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_9757: ;;// porth.porth:484:38: OP_PUSH_STR 117
    mov rax, 1
    push rax
    lea rax, [str_117]
    push rax
addr_9758: ;;// porth.porth:484:42: OP_INLINED 668
addr_9759: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_9760: ;;// std/std.porth:49:36: OP_INLINED 662
addr_9761: ;;// std/std.porth:48:34: OP_INLINED 394
addr_9762: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_9763: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_9764: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_9765: ;;// porth.porth:485:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_9766: ;;// porth.porth:485:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_9767: ;;// porth.porth:485:17: OP_INLINED 36
addr_9768: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9769: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9770: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9771: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9772: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9773: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9774: ;;// porth.porth:485:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_9775: ;;// porth.porth:485:26: OP_INLINED 2111
addr_9776: ;;// std/std.porth:408:25: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_9777: ;;// std/std.porth:408:32: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_9778: ;;// porth.porth:485:38: OP_PUSH_STR 118
    mov rax, 2
    push rax
    lea rax, [str_118]
    push rax
addr_9779: ;;// porth.porth:485:43: OP_INLINED 668
addr_9780: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_9781: ;;// std/std.porth:49:36: OP_INLINED 662
addr_9782: ;;// std/std.porth:48:34: OP_INLINED 394
addr_9783: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_9784: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_9785: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_9786: ;;// porth.porth:486:5: OP_INTRINSIC drop
    pop rax
addr_9787: ;;// porth.porth:488:5: OP_PUSH_LOCAL_MEM 72
    mov rax, [ret_stack_rsp]
    add rax, 72
    push rax
addr_9788: ;;// porth.porth:488:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_9789: ;;// porth.porth:488:22: OP_INLINED 36
addr_9790: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9791: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9792: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9793: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9794: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9795: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9796: ;;// porth.porth:488:27: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_9797: ;;// porth.porth:489:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_9798: ;;// porth.porth:489:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_9799: ;;// porth.porth:489:19: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_9800: ;;// porth.porth:489:21: OP_IF 32
    pop rax
    test rax, rax
    jz addr_9832
addr_9801: ;;// porth.porth:490:7: OP_PUSH_STR 119
    mov rax, 10
    push rax
    lea rax, [str_119]
    push rax
addr_9802: ;;// porth.porth:490:20: OP_INLINED 668
addr_9803: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_9804: ;;// std/std.porth:49:36: OP_INLINED 662
addr_9805: ;;// std/std.porth:48:34: OP_INLINED 394
addr_9806: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_9807: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_9808: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_9809: ;;// porth.porth:490:25: OP_PUSH_LOCAL_MEM 72
    mov rax, [ret_stack_rsp]
    add rax, 72
    push rax
addr_9810: ;;// porth.porth:490:31: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_9811: ;;// porth.porth:490:43: OP_INLINED 36
addr_9812: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9813: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9814: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9815: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9816: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9817: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9818: ;;// porth.porth:490:48: OP_INLINED 16
addr_9819: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_9820: ;;// porth.porth:490:53: OP_INLINED 2111
addr_9821: ;;// std/std.porth:408:25: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_9822: ;;// std/std.porth:408:32: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_9823: ;;// porth.porth:490:58: OP_PUSH_STR 120
    mov rax, 1
    push rax
    lea rax, [str_120]
    push rax
addr_9824: ;;// porth.porth:490:63: OP_INLINED 668
addr_9825: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_9826: ;;// std/std.porth:49:36: OP_INLINED 662
addr_9827: ;;// std/std.porth:48:34: OP_INLINED 394
addr_9828: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_9829: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_9830: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_9831: ;;// porth.porth:491:5: OP_ELSE 65
    jmp addr_9896
addr_9832: ;;// porth.porth:491:10: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_9833: ;;// porth.porth:491:14: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_9834: ;;// porth.porth:491:25: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_9835: ;;// porth.porth:491:27: OP_IFSTAR 62
    pop rax
    test rax, rax
    jz addr_9897
addr_9836: ;;// porth.porth:492:7: OP_PUSH_STR 121
    mov rax, 7
    push rax
    lea rax, [str_121]
    push rax
addr_9837: ;;// porth.porth:492:17: OP_INLINED 668
addr_9838: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_9839: ;;// std/std.porth:49:36: OP_INLINED 662
addr_9840: ;;// std/std.porth:48:34: OP_INLINED 394
addr_9841: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_9842: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_9843: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_9844: ;;// porth.porth:492:22: OP_PUSH_LOCAL_MEM 72
    mov rax, [ret_stack_rsp]
    add rax, 72
    push rax
addr_9845: ;;// porth.porth:492:28: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_9846: ;;// porth.porth:492:40: OP_INLINED 36
addr_9847: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9848: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9849: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9850: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9851: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9852: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9853: ;;// porth.porth:492:45: OP_INLINED 753
addr_9854: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_9855: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_9856: ;;// std/std.porth:65:7: OP_INLINED 704
addr_9857: ;;// std/std.porth:58:38: OP_INLINED 684
addr_9858: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_9859: ;;// std/std.porth:56:57: OP_INLINED 36
addr_9860: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9861: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9862: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9863: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9864: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9865: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9866: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_9867: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_9868: ;;// std/std.porth:66:7: OP_INLINED 716
addr_9869: ;;// std/std.porth:59:37: OP_INLINED 694
addr_9870: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_9871: ;;// std/std.porth:57:55: OP_INLINED 36
addr_9872: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9873: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9874: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9875: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9876: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9877: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9878: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_9879: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_9880: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_9881: ;;// porth.porth:492:50: OP_INLINED 668
addr_9882: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_9883: ;;// std/std.porth:49:36: OP_INLINED 662
addr_9884: ;;// std/std.porth:48:34: OP_INLINED 394
addr_9885: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_9886: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_9887: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_9888: ;;// porth.porth:492:55: OP_PUSH_STR 122
    mov rax, 1
    push rax
    lea rax, [str_122]
    push rax
addr_9889: ;;// porth.porth:492:60: OP_INLINED 668
addr_9890: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_9891: ;;// std/std.porth:49:36: OP_INLINED 662
addr_9892: ;;// std/std.porth:48:34: OP_INLINED 394
addr_9893: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_9894: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_9895: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_9896: ;;// porth.porth:493:5: OP_ELSE 65
    jmp addr_9961
addr_9897: ;;// porth.porth:493:10: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_9898: ;;// porth.porth:493:14: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_9899: ;;// porth.porth:493:24: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_9900: ;;// porth.porth:493:26: OP_IFSTAR 62
    pop rax
    test rax, rax
    jz addr_9962
addr_9901: ;;// porth.porth:494:7: OP_PUSH_STR 123
    mov rax, 7
    push rax
    lea rax, [str_123]
    push rax
addr_9902: ;;// porth.porth:494:18: OP_INLINED 668
addr_9903: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_9904: ;;// std/std.porth:49:36: OP_INLINED 662
addr_9905: ;;// std/std.porth:48:34: OP_INLINED 394
addr_9906: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_9907: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_9908: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_9909: ;;// porth.porth:494:23: OP_PUSH_LOCAL_MEM 72
    mov rax, [ret_stack_rsp]
    add rax, 72
    push rax
addr_9910: ;;// porth.porth:494:29: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_9911: ;;// porth.porth:494:41: OP_INLINED 36
addr_9912: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9913: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9914: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9915: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9916: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9917: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9918: ;;// porth.porth:494:46: OP_INLINED 753
addr_9919: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_9920: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_9921: ;;// std/std.porth:65:7: OP_INLINED 704
addr_9922: ;;// std/std.porth:58:38: OP_INLINED 684
addr_9923: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_9924: ;;// std/std.porth:56:57: OP_INLINED 36
addr_9925: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9926: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9927: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9928: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9929: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9930: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9931: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_9932: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_9933: ;;// std/std.porth:66:7: OP_INLINED 716
addr_9934: ;;// std/std.porth:59:37: OP_INLINED 694
addr_9935: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_9936: ;;// std/std.porth:57:55: OP_INLINED 36
addr_9937: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9938: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9939: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9940: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9941: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9942: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9943: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_9944: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_9945: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_9946: ;;// porth.porth:494:51: OP_INLINED 668
addr_9947: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_9948: ;;// std/std.porth:49:36: OP_INLINED 662
addr_9949: ;;// std/std.porth:48:34: OP_INLINED 394
addr_9950: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_9951: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_9952: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_9953: ;;// porth.porth:494:56: OP_PUSH_STR 124
    mov rax, 2
    push rax
    lea rax, [str_124]
    push rax
addr_9954: ;;// porth.porth:494:63: OP_INLINED 668
addr_9955: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_9956: ;;// std/std.porth:49:36: OP_INLINED 662
addr_9957: ;;// std/std.porth:48:34: OP_INLINED 394
addr_9958: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_9959: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_9960: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_9961: ;;// porth.porth:495:5: OP_ELSE 65
    jmp addr_10026
addr_9962: ;;// porth.porth:495:10: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_9963: ;;// porth.porth:495:14: OP_PUSH_INT 4
    mov rax, 4
    push rax
addr_9964: ;;// porth.porth:495:25: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_9965: ;;// porth.porth:495:27: OP_IFSTAR 62
    pop rax
    test rax, rax
    jz addr_10027
addr_9966: ;;// porth.porth:496:7: OP_PUSH_STR 125
    mov rax, 8
    push rax
    lea rax, [str_125]
    push rax
addr_9967: ;;// porth.porth:496:19: OP_INLINED 668
addr_9968: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_9969: ;;// std/std.porth:49:36: OP_INLINED 662
addr_9970: ;;// std/std.porth:48:34: OP_INLINED 394
addr_9971: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_9972: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_9973: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_9974: ;;// porth.porth:496:24: OP_PUSH_LOCAL_MEM 72
    mov rax, [ret_stack_rsp]
    add rax, 72
    push rax
addr_9975: ;;// porth.porth:496:30: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_9976: ;;// porth.porth:496:42: OP_INLINED 36
addr_9977: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9978: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9979: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9980: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9981: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9982: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9983: ;;// porth.porth:496:47: OP_INLINED 753
addr_9984: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_9985: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_9986: ;;// std/std.porth:65:7: OP_INLINED 704
addr_9987: ;;// std/std.porth:58:38: OP_INLINED 684
addr_9988: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_9989: ;;// std/std.porth:56:57: OP_INLINED 36
addr_9990: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9991: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_9992: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_9993: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_9994: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_9995: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_9996: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_9997: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_9998: ;;// std/std.porth:66:7: OP_INLINED 716
addr_9999: ;;// std/std.porth:59:37: OP_INLINED 694
addr_10000: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_10001: ;;// std/std.porth:57:55: OP_INLINED 36
addr_10002: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_10003: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_10004: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_10005: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_10006: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_10007: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_10008: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_10009: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_10010: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_10011: ;;// porth.porth:496:52: OP_INLINED 668
addr_10012: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_10013: ;;// std/std.porth:49:36: OP_INLINED 662
addr_10014: ;;// std/std.porth:48:34: OP_INLINED 394
addr_10015: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_10016: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_10017: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_10018: ;;// porth.porth:496:57: OP_PUSH_STR 126
    mov rax, 2
    push rax
    lea rax, [str_126]
    push rax
addr_10019: ;;// porth.porth:496:64: OP_INLINED 668
addr_10020: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_10021: ;;// std/std.porth:49:36: OP_INLINED 662
addr_10022: ;;// std/std.porth:48:34: OP_INLINED 394
addr_10023: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_10024: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_10025: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_10026: ;;// porth.porth:497:5: OP_ELSE 35
    jmp addr_10061
addr_10027: ;;// porth.porth:497:10: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10028: ;;// porth.porth:497:14: OP_PUSH_INT 5
    mov rax, 5
    push rax
addr_10029: ;;// porth.porth:497:25: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10030: ;;// porth.porth:497:27: OP_IFSTAR 32
    pop rax
    test rax, rax
    jz addr_10062
addr_10031: ;;// porth.porth:498:7: OP_PUSH_STR 127
    mov rax, 7
    push rax
    lea rax, [str_127]
    push rax
addr_10032: ;;// porth.porth:498:17: OP_INLINED 668
addr_10033: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_10034: ;;// std/std.porth:49:36: OP_INLINED 662
addr_10035: ;;// std/std.porth:48:34: OP_INLINED 394
addr_10036: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_10037: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_10038: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_10039: ;;// porth.porth:498:22: OP_PUSH_LOCAL_MEM 72
    mov rax, [ret_stack_rsp]
    add rax, 72
    push rax
addr_10040: ;;// porth.porth:498:28: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_10041: ;;// porth.porth:498:40: OP_INLINED 36
addr_10042: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_10043: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_10044: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_10045: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_10046: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_10047: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_10048: ;;// porth.porth:498:45: OP_INLINED 16
addr_10049: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_10050: ;;// porth.porth:498:50: OP_INLINED 2111
addr_10051: ;;// std/std.porth:408:25: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_10052: ;;// std/std.porth:408:32: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_10053: ;;// porth.porth:498:55: OP_PUSH_STR 128
    mov rax, 1
    push rax
    lea rax, [str_128]
    push rax
addr_10054: ;;// porth.porth:498:60: OP_INLINED 668
addr_10055: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_10056: ;;// std/std.porth:49:36: OP_INLINED 662
addr_10057: ;;// std/std.porth:48:34: OP_INLINED 394
addr_10058: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_10059: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_10060: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_10061: ;;// porth.porth:499:5: OP_ELSE 40
    jmp addr_10101
addr_10062: ;;// porth.porth:499:10: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10063: ;;// porth.porth:499:14: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_10064: ;;// porth.porth:499:28: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10065: ;;// porth.porth:499:30: OP_IFSTAR 37
    pop rax
    test rax, rax
    jz addr_10102
addr_10066: ;;// porth.porth:500:7: OP_PUSH_STR 129
    mov rax, 10
    push rax
    lea rax, [str_129]
    push rax
addr_10067: ;;// porth.porth:500:20: OP_INLINED 668
addr_10068: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_10069: ;;// std/std.porth:49:36: OP_INLINED 662
addr_10070: ;;// std/std.porth:48:34: OP_INLINED 394
addr_10071: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_10072: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_10073: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_10074: ;;// porth.porth:500:25: OP_PUSH_LOCAL_MEM 72
    mov rax, [ret_stack_rsp]
    add rax, 72
    push rax
addr_10075: ;;// porth.porth:500:31: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_10076: ;;// porth.porth:500:43: OP_INLINED 36
addr_10077: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_10078: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_10079: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_10080: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_10081: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_10082: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_10083: ;;// porth.porth:500:48: OP_INLINED 16
addr_10084: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_10085: ;;// porth.porth:500:53: OP_CALL 6274
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_6274
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_10086: ;;// porth.porth:500:66: OP_INLINED 668
addr_10087: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_10088: ;;// std/std.porth:49:36: OP_INLINED 662
addr_10089: ;;// std/std.porth:48:34: OP_INLINED 394
addr_10090: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_10091: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_10092: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_10093: ;;// porth.porth:500:71: OP_PUSH_STR 130
    mov rax, 1
    push rax
    lea rax, [str_130]
    push rax
addr_10094: ;;// porth.porth:500:76: OP_INLINED 668
addr_10095: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_10096: ;;// std/std.porth:49:36: OP_INLINED 662
addr_10097: ;;// std/std.porth:48:34: OP_INLINED 394
addr_10098: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_10099: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_10100: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_10101: ;;// porth.porth:501:5: OP_ELSE 22
    jmp addr_10123
addr_10102: ;;// porth.porth:502:7: OP_PUSH_STR 131
    mov rax, 17
    push rax
    lea rax, [str_131]
    push rax
addr_10103: ;;// porth.porth:502:12: OP_INLINED 676
addr_10104: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_10105: ;;// std/std.porth:50:37: OP_INLINED 662
addr_10106: ;;// std/std.porth:48:34: OP_INLINED 394
addr_10107: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_10108: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_10109: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_10110: ;;// porth.porth:502:18: OP_PUSH_STR 132
    mov rax, 35
    push rax
    lea rax, [str_132]
    push rax
addr_10111: ;;// porth.porth:502:57: OP_INLINED 676
addr_10112: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_10113: ;;// std/std.porth:50:37: OP_INLINED 662
addr_10114: ;;// std/std.porth:48:34: OP_INLINED 394
addr_10115: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_10116: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_10117: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_10118: ;;// porth.porth:503:7: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_10119: ;;// porth.porth:503:9: OP_INLINED 418
addr_10120: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_10121: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_10122: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_10123: ;;// porth.porth:504:5: OP_END_IF 0
addr_10124: ;;// porth.porth:506:5: OP_INTRINSIC drop
    pop rax
addr_10125: ;;// porth.porth:507:3: OP_END_WHILE 447
    jmp addr_9678
addr_10126: ;;// porth.porth:508:1: OP_RET 144
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 144
    ret
addr_10127: ;;// porth.porth:524:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_10128: ;;// porth.porth:532:3: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10129: ;;// porth.porth:532:7: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_10130: ;;// porth.porth:532:22: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10131: ;;// porth.porth:532:24: OP_IF 65
    pop rax
    test rax, rax
    jz addr_10196
addr_10132: ;;// porth.porth:533:5: OP_INTRINSIC drop
    pop rax
addr_10133: ;;// porth.porth:535:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10134: ;;// porth.porth:535:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_10135: ;;// porth.porth:535:19: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10136: ;;// porth.porth:535:21: OP_IF 4
    pop rax
    test rax, rax
    jz addr_10140
addr_10137: ;;// porth.porth:536:7: OP_INTRINSIC drop
    pop rax
addr_10138: ;;// porth.porth:537:7: OP_PUSH_STR 133
    mov rax, 10
    push rax
    lea rax, [str_133]
    push rax
addr_10139: ;;// porth.porth:538:5: OP_ELSE 7
    jmp addr_10146
addr_10140: ;;// porth.porth:538:10: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10141: ;;// porth.porth:538:14: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_10142: ;;// porth.porth:538:25: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10143: ;;// porth.porth:538:27: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10147
addr_10144: ;;// porth.porth:539:7: OP_INTRINSIC drop
    pop rax
addr_10145: ;;// porth.porth:540:7: OP_PUSH_STR 134
    mov rax, 6
    push rax
    lea rax, [str_134]
    push rax
addr_10146: ;;// porth.porth:541:5: OP_ELSE 7
    jmp addr_10153
addr_10147: ;;// porth.porth:541:10: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10148: ;;// porth.porth:541:14: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_10149: ;;// porth.porth:541:24: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10150: ;;// porth.porth:541:26: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10154
addr_10151: ;;// porth.porth:542:7: OP_INTRINSIC drop
    pop rax
addr_10152: ;;// porth.porth:543:7: OP_PUSH_STR 135
    mov rax, 8
    push rax
    lea rax, [str_135]
    push rax
addr_10153: ;;// porth.porth:544:5: OP_ELSE 7
    jmp addr_10160
addr_10154: ;;// porth.porth:544:10: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10155: ;;// porth.porth:544:14: OP_PUSH_INT 4
    mov rax, 4
    push rax
addr_10156: ;;// porth.porth:544:25: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10157: ;;// porth.porth:544:27: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10161
addr_10158: ;;// porth.porth:545:7: OP_INTRINSIC drop
    pop rax
addr_10159: ;;// porth.porth:546:7: OP_PUSH_STR 136
    mov rax, 16
    push rax
    lea rax, [str_136]
    push rax
addr_10160: ;;// porth.porth:547:5: OP_ELSE 7
    jmp addr_10167
addr_10161: ;;// porth.porth:547:10: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10162: ;;// porth.porth:547:14: OP_PUSH_INT 5
    mov rax, 5
    push rax
addr_10163: ;;// porth.porth:547:25: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10164: ;;// porth.porth:547:27: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10168
addr_10165: ;;// porth.porth:548:7: OP_INTRINSIC drop
    pop rax
addr_10166: ;;// porth.porth:549:7: OP_PUSH_STR 137
    mov rax, 11
    push rax
    lea rax, [str_137]
    push rax
addr_10167: ;;// porth.porth:550:5: OP_ELSE 7
    jmp addr_10174
addr_10168: ;;// porth.porth:550:10: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10169: ;;// porth.porth:550:14: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_10170: ;;// porth.porth:550:28: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10171: ;;// porth.porth:550:30: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10175
addr_10172: ;;// porth.porth:551:7: OP_INTRINSIC drop
    pop rax
addr_10173: ;;// porth.porth:552:7: OP_PUSH_STR 138
    mov rax, 9
    push rax
    lea rax, [str_138]
    push rax
addr_10174: ;;// porth.porth:553:5: OP_ELSE 20
    jmp addr_10194
addr_10175: ;;// porth.porth:554:7: OP_INTRINSIC drop
    pop rax
addr_10176: ;;// porth.porth:555:7: OP_PUSH_STR 139
    mov rax, 17
    push rax
    lea rax, [str_139]
    push rax
addr_10177: ;;// porth.porth:555:12: OP_INLINED 676
addr_10178: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_10179: ;;// std/std.porth:50:37: OP_INLINED 662
addr_10180: ;;// std/std.porth:48:34: OP_INLINED 394
addr_10181: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_10182: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_10183: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_10184: ;;// porth.porth:555:18: OP_PUSH_STR 140
    mov rax, 14
    push rax
    lea rax, [str_140]
    push rax
addr_10185: ;;// porth.porth:555:36: OP_INLINED 676
addr_10186: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_10187: ;;// std/std.porth:50:37: OP_INLINED 662
addr_10188: ;;// std/std.porth:48:34: OP_INLINED 394
addr_10189: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_10190: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_10191: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_10192: ;;// porth.porth:556:7: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_10193: ;;// porth.porth:556:9: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_10194: ;;// porth.porth:557:5: OP_END_IF 0
addr_10195: ;;// porth.porth:558:3: OP_ELSE 73
    jmp addr_10268
addr_10196: ;;// porth.porth:558:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10197: ;;// porth.porth:558:12: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_10198: ;;// porth.porth:558:25: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10199: ;;// porth.porth:558:27: OP_IFSTAR 70
    pop rax
    test rax, rax
    jz addr_10269
addr_10200: ;;// porth.porth:559:5: OP_INTRINSIC drop
    pop rax
addr_10201: ;;// porth.porth:561:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10202: ;;// porth.porth:561:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_10203: ;;// porth.porth:561:19: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10204: ;;// porth.porth:561:21: OP_IF 4
    pop rax
    test rax, rax
    jz addr_10208
addr_10205: ;;// porth.porth:562:7: OP_INTRINSIC drop
    pop rax
addr_10206: ;;// porth.porth:563:7: OP_PUSH_STR 141
    mov rax, 8
    push rax
    lea rax, [str_141]
    push rax
addr_10207: ;;// porth.porth:564:5: OP_ELSE 7
    jmp addr_10214
addr_10208: ;;// porth.porth:564:10: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10209: ;;// porth.porth:564:14: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_10210: ;;// porth.porth:564:25: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10211: ;;// porth.porth:564:27: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10215
addr_10212: ;;// porth.porth:565:7: OP_INTRINSIC drop
    pop rax
addr_10213: ;;// porth.porth:566:7: OP_PUSH_STR 142
    mov rax, 5
    push rax
    lea rax, [str_142]
    push rax
addr_10214: ;;// porth.porth:567:5: OP_ELSE 7
    jmp addr_10221
addr_10215: ;;// porth.porth:567:10: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10216: ;;// porth.porth:567:14: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_10217: ;;// porth.porth:567:24: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10218: ;;// porth.porth:567:26: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10222
addr_10219: ;;// porth.porth:568:7: OP_INTRINSIC drop
    pop rax
addr_10220: ;;// porth.porth:569:7: OP_PUSH_STR 143
    mov rax, 7
    push rax
    lea rax, [str_143]
    push rax
addr_10221: ;;// porth.porth:570:5: OP_ELSE 7
    jmp addr_10228
addr_10222: ;;// porth.porth:570:10: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10223: ;;// porth.porth:570:14: OP_PUSH_INT 4
    mov rax, 4
    push rax
addr_10224: ;;// porth.porth:570:25: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10225: ;;// porth.porth:570:27: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10229
addr_10226: ;;// porth.porth:571:7: OP_INTRINSIC drop
    pop rax
addr_10227: ;;// porth.porth:572:7: OP_PUSH_STR 144
    mov rax, 15
    push rax
    lea rax, [str_144]
    push rax
addr_10228: ;;// porth.porth:573:5: OP_ELSE 7
    jmp addr_10235
addr_10229: ;;// porth.porth:573:10: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10230: ;;// porth.porth:573:14: OP_PUSH_INT 5
    mov rax, 5
    push rax
addr_10231: ;;// porth.porth:573:25: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10232: ;;// porth.porth:573:27: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10236
addr_10233: ;;// porth.porth:574:7: OP_INTRINSIC drop
    pop rax
addr_10234: ;;// porth.porth:575:7: OP_PUSH_STR 145
    mov rax, 10
    push rax
    lea rax, [str_145]
    push rax
addr_10235: ;;// porth.porth:576:5: OP_ELSE 7
    jmp addr_10242
addr_10236: ;;// porth.porth:576:10: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10237: ;;// porth.porth:576:14: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_10238: ;;// porth.porth:576:28: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10239: ;;// porth.porth:576:30: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10243
addr_10240: ;;// porth.porth:577:7: OP_INTRINSIC drop
    pop rax
addr_10241: ;;// porth.porth:578:7: OP_PUSH_STR 146
    mov rax, 8
    push rax
    lea rax, [str_146]
    push rax
addr_10242: ;;// porth.porth:579:5: OP_ELSE 25
    jmp addr_10267
addr_10243: ;;// porth.porth:580:7: OP_INTRINSIC drop
    pop rax
addr_10244: ;;// porth.porth:581:7: OP_PUSH_STR 147
    mov rax, 17
    push rax
    lea rax, [str_147]
    push rax
addr_10245: ;;// porth.porth:581:12: OP_INLINED 676
addr_10246: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_10247: ;;// std/std.porth:50:37: OP_INLINED 662
addr_10248: ;;// std/std.porth:48:34: OP_INLINED 394
addr_10249: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_10250: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_10251: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_10252: ;;// porth.porth:581:18: OP_PUSH_STR 148
    mov rax, 14
    push rax
    lea rax, [str_148]
    push rax
addr_10253: ;;// porth.porth:581:36: OP_INLINED 676
addr_10254: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_10255: ;;// std/std.porth:50:37: OP_INLINED 662
addr_10256: ;;// std/std.porth:48:34: OP_INLINED 394
addr_10257: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_10258: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_10259: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_10260: ;;// porth.porth:582:7: OP_PUSH_INT 69
    mov rax, 69
    push rax
addr_10261: ;;// porth.porth:582:10: OP_INLINED 418
addr_10262: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_10263: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_10264: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_10265: ;;// porth.porth:583:7: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_10266: ;;// porth.porth:583:9: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_10267: ;;// porth.porth:584:5: OP_END_IF 0
addr_10268: ;;// porth.porth:585:3: OP_ELSE 26
    jmp addr_10294
addr_10269: ;;// porth.porth:586:5: OP_INTRINSIC drop
    pop rax
addr_10270: ;;// porth.porth:586:10: OP_INTRINSIC drop
    pop rax
addr_10271: ;;// porth.porth:587:5: OP_PUSH_STR 149
    mov rax, 17
    push rax
    lea rax, [str_149]
    push rax
addr_10272: ;;// porth.porth:587:10: OP_INLINED 676
addr_10273: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_10274: ;;// std/std.porth:50:37: OP_INLINED 662
addr_10275: ;;// std/std.porth:48:34: OP_INLINED 394
addr_10276: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_10277: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_10278: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_10279: ;;// porth.porth:587:16: OP_PUSH_STR 150
    mov rax, 14
    push rax
    lea rax, [str_150]
    push rax
addr_10280: ;;// porth.porth:587:34: OP_INLINED 676
addr_10281: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_10282: ;;// std/std.porth:50:37: OP_INLINED 662
addr_10283: ;;// std/std.porth:48:34: OP_INLINED 394
addr_10284: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_10285: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_10286: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_10287: ;;// porth.porth:588:5: OP_PUSH_INT 69
    mov rax, 69
    push rax
addr_10288: ;;// porth.porth:588:8: OP_INLINED 418
addr_10289: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_10290: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_10291: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_10292: ;;// porth.porth:589:5: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_10293: ;;// porth.porth:589:7: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_10294: ;;// porth.porth:590:3: OP_END_IF 0
addr_10295: ;;// porth.porth:591:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_10296: ;;// porth.porth:593:6: OP_PREP_PROC 16
    sub rsp, 16
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_10297: ;;// porth.porth:600:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_10298: ;;// porth.porth:600:8: OP_INLINED 782
addr_10299: ;;// std/std.porth:71:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_10300: ;;// std/std.porth:72:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_10301: ;;// std/std.porth:72:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_10302: ;;// std/std.porth:72:9: OP_INLINED 729
addr_10303: ;;// std/std.porth:60:35: OP_INLINED 684
addr_10304: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_10305: ;;// std/std.porth:56:57: OP_INLINED 36
addr_10306: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_10307: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_10308: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_10309: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_10310: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_10311: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_10312: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_10313: ;;// std/std.porth:73:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_10314: ;;// std/std.porth:73:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_10315: ;;// std/std.porth:73:9: OP_INLINED 741
addr_10316: ;;// std/std.porth:61:34: OP_INLINED 694
addr_10317: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_10318: ;;// std/std.porth:57:55: OP_INLINED 36
addr_10319: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_10320: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_10321: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_10322: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_10323: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_10324: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_10325: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_10326: ;;// std/std.porth:74:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_10327: ;;// porth.porth:602:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_10328: ;;// porth.porth:602:13: OP_INLINED 753
addr_10329: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_10330: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_10331: ;;// std/std.porth:65:7: OP_INLINED 704
addr_10332: ;;// std/std.porth:58:38: OP_INLINED 684
addr_10333: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_10334: ;;// std/std.porth:56:57: OP_INLINED 36
addr_10335: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_10336: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_10337: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_10338: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_10339: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_10340: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_10341: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_10342: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_10343: ;;// std/std.porth:66:7: OP_INLINED 716
addr_10344: ;;// std/std.porth:59:37: OP_INLINED 694
addr_10345: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_10346: ;;// std/std.porth:57:55: OP_INLINED 36
addr_10347: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_10348: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_10349: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_10350: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_10351: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_10352: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_10353: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_10354: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_10355: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_10356: ;;// porth.porth:602:18: OP_PUSH_STR 151
    mov rax, 3
    push rax
    lea rax, [str_151]
    push rax
addr_10357: ;;// porth.porth:602:25: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_10358: ;;// porth.porth:602:31: OP_IF 4
    pop rax
    test rax, rax
    jz addr_10362
addr_10359: ;;// porth.porth:602:35: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_10360: ;;// porth.porth:602:53: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_10361: ;;// porth.porth:603:3: OP_ELSE 35
    jmp addr_10396
addr_10362: ;;// porth.porth:603:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_10363: ;;// porth.porth:603:13: OP_INLINED 753
addr_10364: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_10365: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_10366: ;;// std/std.porth:65:7: OP_INLINED 704
addr_10367: ;;// std/std.porth:58:38: OP_INLINED 684
addr_10368: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_10369: ;;// std/std.porth:56:57: OP_INLINED 36
addr_10370: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_10371: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_10372: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_10373: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_10374: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_10375: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_10376: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_10377: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_10378: ;;// std/std.porth:66:7: OP_INLINED 716
addr_10379: ;;// std/std.porth:59:37: OP_INLINED 694
addr_10380: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_10381: ;;// std/std.porth:57:55: OP_INLINED 36
addr_10382: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_10383: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_10384: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_10385: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_10386: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_10387: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_10388: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_10389: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_10390: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_10391: ;;// porth.porth:603:18: OP_PUSH_STR 152
    mov rax, 4
    push rax
    lea rax, [str_152]
    push rax
addr_10392: ;;// porth.porth:603:25: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_10393: ;;// porth.porth:603:31: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10397
addr_10394: ;;// porth.porth:603:35: OP_PUSH_INT 4
    mov rax, 4
    push rax
addr_10395: ;;// porth.porth:603:53: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_10396: ;;// porth.porth:604:3: OP_ELSE 35
    jmp addr_10431
addr_10397: ;;// porth.porth:604:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_10398: ;;// porth.porth:604:13: OP_INLINED 753
addr_10399: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_10400: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_10401: ;;// std/std.porth:65:7: OP_INLINED 704
addr_10402: ;;// std/std.porth:58:38: OP_INLINED 684
addr_10403: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_10404: ;;// std/std.porth:56:57: OP_INLINED 36
addr_10405: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_10406: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_10407: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_10408: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_10409: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_10410: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_10411: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_10412: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_10413: ;;// std/std.porth:66:7: OP_INLINED 716
addr_10414: ;;// std/std.porth:59:37: OP_INLINED 694
addr_10415: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_10416: ;;// std/std.porth:57:55: OP_INLINED 36
addr_10417: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_10418: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_10419: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_10420: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_10421: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_10422: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_10423: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_10424: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_10425: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_10426: ;;// porth.porth:604:18: OP_PUSH_STR 153
    mov rax, 5
    push rax
    lea rax, [str_153]
    push rax
addr_10427: ;;// porth.porth:604:26: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_10428: ;;// porth.porth:604:32: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10432
addr_10429: ;;// porth.porth:604:36: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_10430: ;;// porth.porth:604:53: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_10431: ;;// porth.porth:605:3: OP_ELSE 35
    jmp addr_10466
addr_10432: ;;// porth.porth:605:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_10433: ;;// porth.porth:605:13: OP_INLINED 753
addr_10434: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_10435: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_10436: ;;// std/std.porth:65:7: OP_INLINED 704
addr_10437: ;;// std/std.porth:58:38: OP_INLINED 684
addr_10438: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_10439: ;;// std/std.porth:56:57: OP_INLINED 36
addr_10440: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_10441: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_10442: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_10443: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_10444: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_10445: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_10446: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_10447: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_10448: ;;// std/std.porth:66:7: OP_INLINED 716
addr_10449: ;;// std/std.porth:59:37: OP_INLINED 694
addr_10450: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_10451: ;;// std/std.porth:57:55: OP_INLINED 36
addr_10452: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_10453: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_10454: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_10455: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_10456: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_10457: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_10458: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_10459: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_10460: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_10461: ;;// porth.porth:605:18: OP_PUSH_STR 154
    mov rax, 6
    push rax
    lea rax, [str_154]
    push rax
addr_10462: ;;// porth.porth:605:27: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_10463: ;;// porth.porth:605:33: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10467
addr_10464: ;;// porth.porth:605:37: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_10465: ;;// porth.porth:605:53: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_10466: ;;// porth.porth:606:3: OP_ELSE 35
    jmp addr_10501
addr_10467: ;;// porth.porth:606:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_10468: ;;// porth.porth:606:13: OP_INLINED 753
addr_10469: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_10470: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_10471: ;;// std/std.porth:65:7: OP_INLINED 704
addr_10472: ;;// std/std.porth:58:38: OP_INLINED 684
addr_10473: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_10474: ;;// std/std.porth:56:57: OP_INLINED 36
addr_10475: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_10476: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_10477: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_10478: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_10479: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_10480: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_10481: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_10482: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_10483: ;;// std/std.porth:66:7: OP_INLINED 716
addr_10484: ;;// std/std.porth:59:37: OP_INLINED 694
addr_10485: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_10486: ;;// std/std.porth:57:55: OP_INLINED 36
addr_10487: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_10488: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_10489: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_10490: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_10491: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_10492: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_10493: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_10494: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_10495: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_10496: ;;// porth.porth:606:18: OP_PUSH_STR 155
    mov rax, 3
    push rax
    lea rax, [str_155]
    push rax
addr_10497: ;;// porth.porth:606:25: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_10498: ;;// porth.porth:606:31: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10502
addr_10499: ;;// porth.porth:606:35: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_10500: ;;// porth.porth:606:53: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_10501: ;;// porth.porth:607:3: OP_ELSE 35
    jmp addr_10536
addr_10502: ;;// porth.porth:607:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_10503: ;;// porth.porth:607:13: OP_INLINED 753
addr_10504: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_10505: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_10506: ;;// std/std.porth:65:7: OP_INLINED 704
addr_10507: ;;// std/std.porth:58:38: OP_INLINED 684
addr_10508: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_10509: ;;// std/std.porth:56:57: OP_INLINED 36
addr_10510: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_10511: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_10512: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_10513: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_10514: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_10515: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_10516: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_10517: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_10518: ;;// std/std.porth:66:7: OP_INLINED 716
addr_10519: ;;// std/std.porth:59:37: OP_INLINED 694
addr_10520: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_10521: ;;// std/std.porth:57:55: OP_INLINED 36
addr_10522: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_10523: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_10524: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_10525: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_10526: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_10527: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_10528: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_10529: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_10530: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_10531: ;;// porth.porth:607:18: OP_PUSH_STR 156
    mov rax, 4
    push rax
    lea rax, [str_156]
    push rax
addr_10532: ;;// porth.porth:607:25: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_10533: ;;// porth.porth:607:31: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10537
addr_10534: ;;// porth.porth:607:35: OP_PUSH_INT 5
    mov rax, 5
    push rax
addr_10535: ;;// porth.porth:607:53: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_10536: ;;// porth.porth:608:3: OP_ELSE 3
    jmp addr_10539
addr_10537: ;;// porth.porth:608:8: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_10538: ;;// porth.porth:608:10: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_10539: ;;// porth.porth:608:16: OP_END_IF 0
addr_10540: ;;// porth.porth:609:1: OP_RET 16
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 16
    ret
addr_10541: ;;// porth.porth:611:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_10542: ;;// porth.porth:617:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10543: ;;// porth.porth:617:12: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_10544: ;;// porth.porth:617:26: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10545: ;;// porth.porth:617:28: OP_IF 4
    pop rax
    test rax, rax
    jz addr_10549
addr_10546: ;;// porth.porth:617:32: OP_INTRINSIC drop
    pop rax
addr_10547: ;;// porth.porth:617:37: OP_PUSH_STR 157
    mov rax, 3
    push rax
    lea rax, [str_157]
    push rax
addr_10548: ;;// porth.porth:618:3: OP_ELSE 7
    jmp addr_10555
addr_10549: ;;// porth.porth:618:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10550: ;;// porth.porth:618:12: OP_PUSH_INT 4
    mov rax, 4
    push rax
addr_10551: ;;// porth.porth:618:26: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10552: ;;// porth.porth:618:28: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10556
addr_10553: ;;// porth.porth:618:32: OP_INTRINSIC drop
    pop rax
addr_10554: ;;// porth.porth:618:37: OP_PUSH_STR 158
    mov rax, 4
    push rax
    lea rax, [str_158]
    push rax
addr_10555: ;;// porth.porth:619:3: OP_ELSE 7
    jmp addr_10562
addr_10556: ;;// porth.porth:619:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10557: ;;// porth.porth:619:12: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_10558: ;;// porth.porth:619:27: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10559: ;;// porth.porth:619:29: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10563
addr_10560: ;;// porth.porth:619:33: OP_INTRINSIC drop
    pop rax
addr_10561: ;;// porth.porth:619:38: OP_PUSH_STR 159
    mov rax, 5
    push rax
    lea rax, [str_159]
    push rax
addr_10562: ;;// porth.porth:620:3: OP_ELSE 7
    jmp addr_10569
addr_10563: ;;// porth.porth:620:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10564: ;;// porth.porth:620:12: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_10565: ;;// porth.porth:620:28: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10566: ;;// porth.porth:620:30: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10570
addr_10567: ;;// porth.porth:620:34: OP_INTRINSIC drop
    pop rax
addr_10568: ;;// porth.porth:620:39: OP_PUSH_STR 160
    mov rax, 6
    push rax
    lea rax, [str_160]
    push rax
addr_10569: ;;// porth.porth:621:3: OP_ELSE 7
    jmp addr_10576
addr_10570: ;;// porth.porth:621:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10571: ;;// porth.porth:621:12: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_10572: ;;// porth.porth:621:26: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10573: ;;// porth.porth:621:28: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10577
addr_10574: ;;// porth.porth:621:32: OP_INTRINSIC drop
    pop rax
addr_10575: ;;// porth.porth:621:37: OP_PUSH_STR 161
    mov rax, 3
    push rax
    lea rax, [str_161]
    push rax
addr_10576: ;;// porth.porth:622:3: OP_ELSE 7
    jmp addr_10583
addr_10577: ;;// porth.porth:622:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10578: ;;// porth.porth:622:12: OP_PUSH_INT 5
    mov rax, 5
    push rax
addr_10579: ;;// porth.porth:622:26: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10580: ;;// porth.porth:622:28: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10584
addr_10581: ;;// porth.porth:622:32: OP_INTRINSIC drop
    pop rax
addr_10582: ;;// porth.porth:622:37: OP_PUSH_STR 162
    mov rax, 4
    push rax
    lea rax, [str_162]
    push rax
addr_10583: ;;// porth.porth:623:3: OP_ELSE 25
    jmp addr_10608
addr_10584: ;;// porth.porth:624:5: OP_INTRINSIC drop
    pop rax
addr_10585: ;;// porth.porth:625:5: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_10586: ;;// porth.porth:625:7: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_10587: ;;// porth.porth:626:5: OP_PUSH_STR 163
    mov rax, 17
    push rax
    lea rax, [str_163]
    push rax
addr_10588: ;;// porth.porth:626:10: OP_INLINED 676
addr_10589: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_10590: ;;// std/std.porth:50:37: OP_INLINED 662
addr_10591: ;;// std/std.porth:48:34: OP_INLINED 394
addr_10592: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_10593: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_10594: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_10595: ;;// porth.porth:626:16: OP_PUSH_STR 164
    mov rax, 14
    push rax
    lea rax, [str_164]
    push rax
addr_10596: ;;// porth.porth:626:34: OP_INLINED 676
addr_10597: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_10598: ;;// std/std.porth:50:37: OP_INLINED 662
addr_10599: ;;// std/std.porth:48:34: OP_INLINED 394
addr_10600: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_10601: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_10602: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_10603: ;;// porth.porth:627:5: OP_PUSH_INT 69
    mov rax, 69
    push rax
addr_10604: ;;// porth.porth:627:8: OP_INLINED 418
addr_10605: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_10606: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_10607: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_10608: ;;// porth.porth:628:3: OP_END_IF 0
addr_10609: ;;// porth.porth:629:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_10610: ;;// porth.porth:687:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_10611: ;;// porth.porth:693:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10612: ;;// porth.porth:693:12: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_10613: ;;// porth.porth:693:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10614: ;;// porth.porth:693:34: OP_IF 4
    pop rax
    test rax, rax
    jz addr_10618
addr_10615: ;;// porth.porth:693:38: OP_INTRINSIC drop
    pop rax
addr_10616: ;;// porth.porth:693:43: OP_PUSH_STR 165
    mov rax, 1
    push rax
    lea rax, [str_165]
    push rax
addr_10617: ;;// porth.porth:694:3: OP_ELSE 7
    jmp addr_10624
addr_10618: ;;// porth.porth:694:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10619: ;;// porth.porth:694:12: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_10620: ;;// porth.porth:694:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10621: ;;// porth.porth:694:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10625
addr_10622: ;;// porth.porth:694:38: OP_INTRINSIC drop
    pop rax
addr_10623: ;;// porth.porth:694:43: OP_PUSH_STR 166
    mov rax, 2
    push rax
    lea rax, [str_166]
    push rax
addr_10624: ;;// porth.porth:695:3: OP_ELSE 7
    jmp addr_10631
addr_10625: ;;// porth.porth:695:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10626: ;;// porth.porth:695:12: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_10627: ;;// porth.porth:695:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10628: ;;// porth.porth:695:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10632
addr_10629: ;;// porth.porth:695:38: OP_INTRINSIC drop
    pop rax
addr_10630: ;;// porth.porth:695:43: OP_PUSH_STR 167
    mov rax, 2
    push rax
    lea rax, [str_167]
    push rax
addr_10631: ;;// porth.porth:696:3: OP_ELSE 7
    jmp addr_10638
addr_10632: ;;// porth.porth:696:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10633: ;;// porth.porth:696:12: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_10634: ;;// porth.porth:696:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10635: ;;// porth.porth:696:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10639
addr_10636: ;;// porth.porth:696:38: OP_INTRINSIC drop
    pop rax
addr_10637: ;;// porth.porth:696:43: OP_PUSH_STR 168
    mov rax, 1
    push rax
    lea rax, [str_168]
    push rax
addr_10638: ;;// porth.porth:697:3: OP_ELSE 7
    jmp addr_10645
addr_10639: ;;// porth.porth:697:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10640: ;;// porth.porth:697:12: OP_PUSH_INT 4
    mov rax, 4
    push rax
addr_10641: ;;// porth.porth:697:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10642: ;;// porth.porth:697:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10646
addr_10643: ;;// porth.porth:697:38: OP_INTRINSIC drop
    pop rax
addr_10644: ;;// porth.porth:697:43: OP_PUSH_STR 169
    mov rax, 1
    push rax
    lea rax, [str_169]
    push rax
addr_10645: ;;// porth.porth:698:3: OP_ELSE 7
    jmp addr_10652
addr_10646: ;;// porth.porth:698:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10647: ;;// porth.porth:698:12: OP_PUSH_INT 5
    mov rax, 5
    push rax
addr_10648: ;;// porth.porth:698:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10649: ;;// porth.porth:698:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10653
addr_10650: ;;// porth.porth:698:38: OP_INTRINSIC drop
    pop rax
addr_10651: ;;// porth.porth:698:43: OP_PUSH_STR 170
    mov rax, 6
    push rax
    lea rax, [str_170]
    push rax
addr_10652: ;;// porth.porth:699:3: OP_ELSE 7
    jmp addr_10659
addr_10653: ;;// porth.porth:699:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10654: ;;// porth.porth:699:12: OP_PUSH_INT 6
    mov rax, 6
    push rax
addr_10655: ;;// porth.porth:699:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10656: ;;// porth.porth:699:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10660
addr_10657: ;;// porth.porth:699:38: OP_INTRINSIC drop
    pop rax
addr_10658: ;;// porth.porth:699:43: OP_PUSH_STR 171
    mov rax, 7
    push rax
    lea rax, [str_171]
    push rax
addr_10659: ;;// porth.porth:700:3: OP_ELSE 7
    jmp addr_10666
addr_10660: ;;// porth.porth:700:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10661: ;;// porth.porth:700:12: OP_PUSH_INT 7
    mov rax, 7
    push rax
addr_10662: ;;// porth.porth:700:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10663: ;;// porth.porth:700:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10667
addr_10664: ;;// porth.porth:700:38: OP_INTRINSIC drop
    pop rax
addr_10665: ;;// porth.porth:700:43: OP_PUSH_STR 172
    mov rax, 3
    push rax
    lea rax, [str_172]
    push rax
addr_10666: ;;// porth.porth:701:3: OP_ELSE 7
    jmp addr_10673
addr_10667: ;;// porth.porth:701:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10668: ;;// porth.porth:701:12: OP_PUSH_INT 19
    mov rax, 19
    push rax
addr_10669: ;;// porth.porth:701:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10670: ;;// porth.porth:701:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10674
addr_10671: ;;// porth.porth:701:38: OP_INTRINSIC drop
    pop rax
addr_10672: ;;// porth.porth:701:43: OP_PUSH_STR 173
    mov rax, 5
    push rax
    lea rax, [str_173]
    push rax
addr_10673: ;;// porth.porth:702:3: OP_ELSE 7
    jmp addr_10680
addr_10674: ;;// porth.porth:702:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10675: ;;// porth.porth:702:12: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_10676: ;;// porth.porth:702:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10677: ;;// porth.porth:702:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10681
addr_10678: ;;// porth.porth:702:38: OP_INTRINSIC drop
    pop rax
addr_10679: ;;// porth.porth:702:43: OP_PUSH_STR 174
    mov rax, 1
    push rax
    lea rax, [str_174]
    push rax
addr_10680: ;;// porth.porth:703:3: OP_ELSE 7
    jmp addr_10687
addr_10681: ;;// porth.porth:703:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10682: ;;// porth.porth:703:12: OP_PUSH_INT 9
    mov rax, 9
    push rax
addr_10683: ;;// porth.porth:703:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10684: ;;// porth.porth:703:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10688
addr_10685: ;;// porth.porth:703:38: OP_INTRINSIC drop
    pop rax
addr_10686: ;;// porth.porth:703:43: OP_PUSH_STR 175
    mov rax, 1
    push rax
    lea rax, [str_175]
    push rax
addr_10687: ;;// porth.porth:704:3: OP_ELSE 7
    jmp addr_10694
addr_10688: ;;// porth.porth:704:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10689: ;;// porth.porth:704:12: OP_PUSH_INT 10
    mov rax, 10
    push rax
addr_10690: ;;// porth.porth:704:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10691: ;;// porth.porth:704:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10695
addr_10692: ;;// porth.porth:704:38: OP_INTRINSIC drop
    pop rax
addr_10693: ;;// porth.porth:704:43: OP_PUSH_STR 176
    mov rax, 1
    push rax
    lea rax, [str_176]
    push rax
addr_10694: ;;// porth.porth:705:3: OP_ELSE 7
    jmp addr_10701
addr_10695: ;;// porth.porth:705:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10696: ;;// porth.porth:705:12: OP_PUSH_INT 11
    mov rax, 11
    push rax
addr_10697: ;;// porth.porth:705:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10698: ;;// porth.porth:705:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10702
addr_10699: ;;// porth.porth:705:38: OP_INTRINSIC drop
    pop rax
addr_10700: ;;// porth.porth:705:43: OP_PUSH_STR 177
    mov rax, 2
    push rax
    lea rax, [str_177]
    push rax
addr_10701: ;;// porth.porth:706:3: OP_ELSE 7
    jmp addr_10708
addr_10702: ;;// porth.porth:706:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10703: ;;// porth.porth:706:12: OP_PUSH_INT 12
    mov rax, 12
    push rax
addr_10704: ;;// porth.porth:706:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10705: ;;// porth.porth:706:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10709
addr_10706: ;;// porth.porth:706:38: OP_INTRINSIC drop
    pop rax
addr_10707: ;;// porth.porth:706:43: OP_PUSH_STR 178
    mov rax, 2
    push rax
    lea rax, [str_178]
    push rax
addr_10708: ;;// porth.porth:707:3: OP_ELSE 7
    jmp addr_10715
addr_10709: ;;// porth.porth:707:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10710: ;;// porth.porth:707:12: OP_PUSH_INT 13
    mov rax, 13
    push rax
addr_10711: ;;// porth.porth:707:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10712: ;;// porth.porth:707:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10716
addr_10713: ;;// porth.porth:707:38: OP_INTRINSIC drop
    pop rax
addr_10714: ;;// porth.porth:707:43: OP_PUSH_STR 179
    mov rax, 2
    push rax
    lea rax, [str_179]
    push rax
addr_10715: ;;// porth.porth:708:3: OP_ELSE 7
    jmp addr_10722
addr_10716: ;;// porth.porth:708:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10717: ;;// porth.porth:708:12: OP_PUSH_INT 14
    mov rax, 14
    push rax
addr_10718: ;;// porth.porth:708:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10719: ;;// porth.porth:708:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10723
addr_10720: ;;// porth.porth:708:38: OP_INTRINSIC drop
    pop rax
addr_10721: ;;// porth.porth:708:43: OP_PUSH_STR 180
    mov rax, 3
    push rax
    lea rax, [str_180]
    push rax
addr_10722: ;;// porth.porth:709:3: OP_ELSE 7
    jmp addr_10729
addr_10723: ;;// porth.porth:709:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10724: ;;// porth.porth:709:12: OP_PUSH_INT 15
    mov rax, 15
    push rax
addr_10725: ;;// porth.porth:709:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10726: ;;// porth.porth:709:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10730
addr_10727: ;;// porth.porth:709:38: OP_INTRINSIC drop
    pop rax
addr_10728: ;;// porth.porth:709:43: OP_PUSH_STR 181
    mov rax, 3
    push rax
    lea rax, [str_181]
    push rax
addr_10729: ;;// porth.porth:710:3: OP_ELSE 7
    jmp addr_10736
addr_10730: ;;// porth.porth:710:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10731: ;;// porth.porth:710:12: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_10732: ;;// porth.porth:710:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10733: ;;// porth.porth:710:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10737
addr_10734: ;;// porth.porth:710:38: OP_INTRINSIC drop
    pop rax
addr_10735: ;;// porth.porth:710:43: OP_PUSH_STR 182
    mov rax, 2
    push rax
    lea rax, [str_182]
    push rax
addr_10736: ;;// porth.porth:711:3: OP_ELSE 7
    jmp addr_10743
addr_10737: ;;// porth.porth:711:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10738: ;;// porth.porth:711:12: OP_PUSH_INT 17
    mov rax, 17
    push rax
addr_10739: ;;// porth.porth:711:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10740: ;;// porth.porth:711:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10744
addr_10741: ;;// porth.porth:711:38: OP_INTRINSIC drop
    pop rax
addr_10742: ;;// porth.porth:711:43: OP_PUSH_STR 183
    mov rax, 3
    push rax
    lea rax, [str_183]
    push rax
addr_10743: ;;// porth.porth:712:3: OP_ELSE 7
    jmp addr_10750
addr_10744: ;;// porth.porth:712:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10745: ;;// porth.porth:712:12: OP_PUSH_INT 18
    mov rax, 18
    push rax
addr_10746: ;;// porth.porth:712:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10747: ;;// porth.porth:712:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10751
addr_10748: ;;// porth.porth:712:38: OP_INTRINSIC drop
    pop rax
addr_10749: ;;// porth.porth:712:43: OP_PUSH_STR 184
    mov rax, 3
    push rax
    lea rax, [str_184]
    push rax
addr_10750: ;;// porth.porth:713:3: OP_ELSE 7
    jmp addr_10757
addr_10751: ;;// porth.porth:713:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10752: ;;// porth.porth:713:12: OP_PUSH_INT 20
    mov rax, 20
    push rax
addr_10753: ;;// porth.porth:713:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10754: ;;// porth.porth:713:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10758
addr_10755: ;;// porth.porth:713:38: OP_INTRINSIC drop
    pop rax
addr_10756: ;;// porth.porth:713:43: OP_PUSH_STR 185
    mov rax, 3
    push rax
    lea rax, [str_185]
    push rax
addr_10757: ;;// porth.porth:714:3: OP_ELSE 7
    jmp addr_10764
addr_10758: ;;// porth.porth:714:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10759: ;;// porth.porth:714:12: OP_PUSH_INT 21
    mov rax, 21
    push rax
addr_10760: ;;// porth.porth:714:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10761: ;;// porth.porth:714:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10765
addr_10762: ;;// porth.porth:714:38: OP_INTRINSIC drop
    pop rax
addr_10763: ;;// porth.porth:714:43: OP_PUSH_STR 186
    mov rax, 4
    push rax
    lea rax, [str_186]
    push rax
addr_10764: ;;// porth.porth:715:3: OP_ELSE 7
    jmp addr_10771
addr_10765: ;;// porth.porth:715:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10766: ;;// porth.porth:715:12: OP_PUSH_INT 22
    mov rax, 22
    push rax
addr_10767: ;;// porth.porth:715:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10768: ;;// porth.porth:715:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10772
addr_10769: ;;// porth.porth:715:38: OP_INTRINSIC drop
    pop rax
addr_10770: ;;// porth.porth:715:43: OP_PUSH_STR 187
    mov rax, 4
    push rax
    lea rax, [str_187]
    push rax
addr_10771: ;;// porth.porth:716:3: OP_ELSE 7
    jmp addr_10778
addr_10772: ;;// porth.porth:716:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10773: ;;// porth.porth:716:12: OP_PUSH_INT 23
    mov rax, 23
    push rax
addr_10774: ;;// porth.porth:716:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10775: ;;// porth.porth:716:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10779
addr_10776: ;;// porth.porth:716:38: OP_INTRINSIC drop
    pop rax
addr_10777: ;;// porth.porth:716:43: OP_PUSH_STR 188
    mov rax, 4
    push rax
    lea rax, [str_188]
    push rax
addr_10778: ;;// porth.porth:717:3: OP_ELSE 7
    jmp addr_10785
addr_10779: ;;// porth.porth:717:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10780: ;;// porth.porth:717:12: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_10781: ;;// porth.porth:717:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10782: ;;// porth.porth:717:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10786
addr_10783: ;;// porth.porth:717:38: OP_INTRINSIC drop
    pop rax
addr_10784: ;;// porth.porth:717:43: OP_PUSH_STR 189
    mov rax, 3
    push rax
    lea rax, [str_189]
    push rax
addr_10785: ;;// porth.porth:718:3: OP_ELSE 7
    jmp addr_10792
addr_10786: ;;// porth.porth:718:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10787: ;;// porth.porth:718:12: OP_PUSH_INT 26
    mov rax, 26
    push rax
addr_10788: ;;// porth.porth:718:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10789: ;;// porth.porth:718:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10793
addr_10790: ;;// porth.porth:718:38: OP_INTRINSIC drop
    pop rax
addr_10791: ;;// porth.porth:718:43: OP_PUSH_STR 190
    mov rax, 2
    push rax
    lea rax, [str_190]
    push rax
addr_10792: ;;// porth.porth:719:3: OP_ELSE 7
    jmp addr_10799
addr_10793: ;;// porth.porth:719:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10794: ;;// porth.porth:719:12: OP_PUSH_INT 25
    mov rax, 25
    push rax
addr_10795: ;;// porth.porth:719:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10796: ;;// porth.porth:719:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10800
addr_10797: ;;// porth.porth:719:38: OP_INTRINSIC drop
    pop rax
addr_10798: ;;// porth.porth:719:43: OP_PUSH_STR 191
    mov rax, 2
    push rax
    lea rax, [str_191]
    push rax
addr_10799: ;;// porth.porth:720:3: OP_ELSE 7
    jmp addr_10806
addr_10800: ;;// porth.porth:720:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10801: ;;// porth.porth:720:12: OP_PUSH_INT 28
    mov rax, 28
    push rax
addr_10802: ;;// porth.porth:720:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10803: ;;// porth.porth:720:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10807
addr_10804: ;;// porth.porth:720:38: OP_INTRINSIC drop
    pop rax
addr_10805: ;;// porth.porth:720:43: OP_PUSH_STR 192
    mov rax, 3
    push rax
    lea rax, [str_192]
    push rax
addr_10806: ;;// porth.porth:721:3: OP_ELSE 7
    jmp addr_10813
addr_10807: ;;// porth.porth:721:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10808: ;;// porth.porth:721:12: OP_PUSH_INT 27
    mov rax, 27
    push rax
addr_10809: ;;// porth.porth:721:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10810: ;;// porth.porth:721:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10814
addr_10811: ;;// porth.porth:721:38: OP_INTRINSIC drop
    pop rax
addr_10812: ;;// porth.porth:721:43: OP_PUSH_STR 193
    mov rax, 3
    push rax
    lea rax, [str_193]
    push rax
addr_10813: ;;// porth.porth:722:3: OP_ELSE 7
    jmp addr_10820
addr_10814: ;;// porth.porth:722:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10815: ;;// porth.porth:722:12: OP_PUSH_INT 30
    mov rax, 30
    push rax
addr_10816: ;;// porth.porth:722:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10817: ;;// porth.porth:722:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10821
addr_10818: ;;// porth.porth:722:38: OP_INTRINSIC drop
    pop rax
addr_10819: ;;// porth.porth:722:43: OP_PUSH_STR 194
    mov rax, 3
    push rax
    lea rax, [str_194]
    push rax
addr_10820: ;;// porth.porth:723:3: OP_ELSE 7
    jmp addr_10827
addr_10821: ;;// porth.porth:723:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10822: ;;// porth.porth:723:12: OP_PUSH_INT 29
    mov rax, 29
    push rax
addr_10823: ;;// porth.porth:723:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10824: ;;// porth.porth:723:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10828
addr_10825: ;;// porth.porth:723:38: OP_INTRINSIC drop
    pop rax
addr_10826: ;;// porth.porth:723:43: OP_PUSH_STR 195
    mov rax, 3
    push rax
    lea rax, [str_195]
    push rax
addr_10827: ;;// porth.porth:724:3: OP_ELSE 7
    jmp addr_10834
addr_10828: ;;// porth.porth:724:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10829: ;;// porth.porth:724:12: OP_PUSH_INT 32
    mov rax, 32
    push rax
addr_10830: ;;// porth.porth:724:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10831: ;;// porth.porth:724:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10835
addr_10832: ;;// porth.porth:724:38: OP_INTRINSIC drop
    pop rax
addr_10833: ;;// porth.porth:724:43: OP_PUSH_STR 196
    mov rax, 3
    push rax
    lea rax, [str_196]
    push rax
addr_10834: ;;// porth.porth:725:3: OP_ELSE 7
    jmp addr_10841
addr_10835: ;;// porth.porth:725:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10836: ;;// porth.porth:725:12: OP_PUSH_INT 31
    mov rax, 31
    push rax
addr_10837: ;;// porth.porth:725:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10838: ;;// porth.porth:725:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10842
addr_10839: ;;// porth.porth:725:38: OP_INTRINSIC drop
    pop rax
addr_10840: ;;// porth.porth:725:43: OP_PUSH_STR 197
    mov rax, 3
    push rax
    lea rax, [str_197]
    push rax
addr_10841: ;;// porth.porth:726:3: OP_ELSE 7
    jmp addr_10848
addr_10842: ;;// porth.porth:726:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10843: ;;// porth.porth:726:12: OP_PUSH_INT 33
    mov rax, 33
    push rax
addr_10844: ;;// porth.porth:726:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10845: ;;// porth.porth:726:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10849
addr_10846: ;;// porth.porth:726:38: OP_INTRINSIC drop
    pop rax
addr_10847: ;;// porth.porth:726:43: OP_PUSH_STR 198
    mov rax, 9
    push rax
    lea rax, [str_198]
    push rax
addr_10848: ;;// porth.porth:727:3: OP_ELSE 7
    jmp addr_10855
addr_10849: ;;// porth.porth:727:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10850: ;;// porth.porth:727:12: OP_PUSH_INT 34
    mov rax, 34
    push rax
addr_10851: ;;// porth.porth:727:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10852: ;;// porth.porth:727:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10856
addr_10853: ;;// porth.porth:727:38: OP_INTRINSIC drop
    pop rax
addr_10854: ;;// porth.porth:727:43: OP_PUSH_STR 199
    mov rax, 9
    push rax
    lea rax, [str_199]
    push rax
addr_10855: ;;// porth.porth:728:3: OP_ELSE 7
    jmp addr_10862
addr_10856: ;;// porth.porth:728:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10857: ;;// porth.porth:728:12: OP_PUSH_INT 37
    mov rax, 37
    push rax
addr_10858: ;;// porth.porth:728:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10859: ;;// porth.porth:728:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10863
addr_10860: ;;// porth.porth:728:38: OP_INTRINSIC drop
    pop rax
addr_10861: ;;// porth.porth:728:43: OP_PUSH_STR 200
    mov rax, 10
    push rax
    lea rax, [str_200]
    push rax
addr_10862: ;;// porth.porth:729:3: OP_ELSE 7
    jmp addr_10869
addr_10863: ;;// porth.porth:729:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10864: ;;// porth.porth:729:12: OP_PUSH_INT 35
    mov rax, 35
    push rax
addr_10865: ;;// porth.porth:729:33: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10866: ;;// porth.porth:729:35: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10870
addr_10867: ;;// porth.porth:729:39: OP_INTRINSIC drop
    pop rax
addr_10868: ;;// porth.porth:729:44: OP_PUSH_STR 201
    mov rax, 11
    push rax
    lea rax, [str_201]
    push rax
addr_10869: ;;// porth.porth:730:3: OP_ELSE 7
    jmp addr_10876
addr_10870: ;;// porth.porth:730:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10871: ;;// porth.porth:730:12: OP_PUSH_INT 36
    mov rax, 36
    push rax
addr_10872: ;;// porth.porth:730:34: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10873: ;;// porth.porth:730:36: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10877
addr_10874: ;;// porth.porth:730:40: OP_INTRINSIC drop
    pop rax
addr_10875: ;;// porth.porth:730:45: OP_PUSH_STR 202
    mov rax, 12
    push rax
    lea rax, [str_202]
    push rax
addr_10876: ;;// porth.porth:731:3: OP_ELSE 7
    jmp addr_10883
addr_10877: ;;// porth.porth:731:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10878: ;;// porth.porth:731:12: OP_PUSH_INT 38
    mov rax, 38
    push rax
addr_10879: ;;// porth.porth:731:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10880: ;;// porth.porth:731:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10884
addr_10881: ;;// porth.porth:731:38: OP_INTRINSIC drop
    pop rax
addr_10882: ;;// porth.porth:731:43: OP_PUSH_STR 203
    mov rax, 10
    push rax
    lea rax, [str_203]
    push rax
addr_10883: ;;// porth.porth:732:3: OP_ELSE 7
    jmp addr_10890
addr_10884: ;;// porth.porth:732:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10885: ;;// porth.porth:732:12: OP_PUSH_INT 39
    mov rax, 39
    push rax
addr_10886: ;;// porth.porth:732:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10887: ;;// porth.porth:732:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10891
addr_10888: ;;// porth.porth:732:38: OP_INTRINSIC drop
    pop rax
addr_10889: ;;// porth.porth:732:43: OP_PUSH_STR 204
    mov rax, 4
    push rax
    lea rax, [str_204]
    push rax
addr_10890: ;;// porth.porth:733:3: OP_ELSE 7
    jmp addr_10897
addr_10891: ;;// porth.porth:733:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10892: ;;// porth.porth:733:12: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_10893: ;;// porth.porth:733:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10894: ;;// porth.porth:733:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10898
addr_10895: ;;// porth.porth:733:38: OP_INTRINSIC drop
    pop rax
addr_10896: ;;// porth.porth:733:43: OP_PUSH_STR 205
    mov rax, 4
    push rax
    lea rax, [str_205]
    push rax
addr_10897: ;;// porth.porth:734:3: OP_ELSE 7
    jmp addr_10904
addr_10898: ;;// porth.porth:734:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10899: ;;// porth.porth:734:12: OP_PUSH_INT 41
    mov rax, 41
    push rax
addr_10900: ;;// porth.porth:734:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10901: ;;// porth.porth:734:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10905
addr_10902: ;;// porth.porth:734:38: OP_INTRINSIC drop
    pop rax
addr_10903: ;;// porth.porth:734:43: OP_PUSH_STR 206
    mov rax, 4
    push rax
    lea rax, [str_206]
    push rax
addr_10904: ;;// porth.porth:735:3: OP_ELSE 7
    jmp addr_10911
addr_10905: ;;// porth.porth:735:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10906: ;;// porth.porth:735:12: OP_PUSH_INT 42
    mov rax, 42
    push rax
addr_10907: ;;// porth.porth:735:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10908: ;;// porth.porth:735:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10912
addr_10909: ;;// porth.porth:735:38: OP_INTRINSIC drop
    pop rax
addr_10910: ;;// porth.porth:735:43: OP_PUSH_STR 207
    mov rax, 8
    push rax
    lea rax, [str_207]
    push rax
addr_10911: ;;// porth.porth:736:3: OP_ELSE 7
    jmp addr_10918
addr_10912: ;;// porth.porth:736:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10913: ;;// porth.porth:736:12: OP_PUSH_INT 43
    mov rax, 43
    push rax
addr_10914: ;;// porth.porth:736:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10915: ;;// porth.porth:736:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10919
addr_10916: ;;// porth.porth:736:38: OP_INTRINSIC drop
    pop rax
addr_10917: ;;// porth.porth:736:43: OP_PUSH_STR 208
    mov rax, 8
    push rax
    lea rax, [str_208]
    push rax
addr_10918: ;;// porth.porth:737:3: OP_ELSE 7
    jmp addr_10925
addr_10919: ;;// porth.porth:737:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10920: ;;// porth.porth:737:12: OP_PUSH_INT 44
    mov rax, 44
    push rax
addr_10921: ;;// porth.porth:737:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10922: ;;// porth.porth:737:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10926
addr_10923: ;;// porth.porth:737:38: OP_INTRINSIC drop
    pop rax
addr_10924: ;;// porth.porth:737:43: OP_PUSH_STR 209
    mov rax, 8
    push rax
    lea rax, [str_209]
    push rax
addr_10925: ;;// porth.porth:738:3: OP_ELSE 7
    jmp addr_10932
addr_10926: ;;// porth.porth:738:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10927: ;;// porth.porth:738:12: OP_PUSH_INT 45
    mov rax, 45
    push rax
addr_10928: ;;// porth.porth:738:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10929: ;;// porth.porth:738:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10933
addr_10930: ;;// porth.porth:738:38: OP_INTRINSIC drop
    pop rax
addr_10931: ;;// porth.porth:738:43: OP_PUSH_STR 210
    mov rax, 8
    push rax
    lea rax, [str_210]
    push rax
addr_10932: ;;// porth.porth:739:3: OP_ELSE 7
    jmp addr_10939
addr_10933: ;;// porth.porth:739:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10934: ;;// porth.porth:739:12: OP_PUSH_INT 46
    mov rax, 46
    push rax
addr_10935: ;;// porth.porth:739:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10936: ;;// porth.porth:739:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10940
addr_10937: ;;// porth.porth:739:38: OP_INTRINSIC drop
    pop rax
addr_10938: ;;// porth.porth:739:43: OP_PUSH_STR 211
    mov rax, 8
    push rax
    lea rax, [str_211]
    push rax
addr_10939: ;;// porth.porth:740:3: OP_ELSE 7
    jmp addr_10946
addr_10940: ;;// porth.porth:740:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10941: ;;// porth.porth:740:12: OP_PUSH_INT 47
    mov rax, 47
    push rax
addr_10942: ;;// porth.porth:740:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10943: ;;// porth.porth:740:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10947
addr_10944: ;;// porth.porth:740:38: OP_INTRINSIC drop
    pop rax
addr_10945: ;;// porth.porth:740:43: OP_PUSH_STR 212
    mov rax, 8
    push rax
    lea rax, [str_212]
    push rax
addr_10946: ;;// porth.porth:741:3: OP_ELSE 7
    jmp addr_10953
addr_10947: ;;// porth.porth:741:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10948: ;;// porth.porth:741:12: OP_PUSH_INT 48
    mov rax, 48
    push rax
addr_10949: ;;// porth.porth:741:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10950: ;;// porth.porth:741:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10954
addr_10951: ;;// porth.porth:741:38: OP_INTRINSIC drop
    pop rax
addr_10952: ;;// porth.porth:741:43: OP_PUSH_STR 213
    mov rax, 8
    push rax
    lea rax, [str_213]
    push rax
addr_10953: ;;// porth.porth:742:3: OP_ELSE 7
    jmp addr_10960
addr_10954: ;;// porth.porth:742:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_10955: ;;// porth.porth:742:12: OP_PUSH_INT 49
    mov rax, 49
    push rax
addr_10956: ;;// porth.porth:742:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_10957: ;;// porth.porth:742:34: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_10961
addr_10958: ;;// porth.porth:742:38: OP_INTRINSIC drop
    pop rax
addr_10959: ;;// porth.porth:742:43: OP_PUSH_STR 214
    mov rax, 3
    push rax
    lea rax, [str_214]
    push rax
addr_10960: ;;// porth.porth:743:3: OP_ELSE 25
    jmp addr_10985
addr_10961: ;;// porth.porth:744:5: OP_INTRINSIC drop
    pop rax
addr_10962: ;;// porth.porth:744:10: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_10963: ;;// porth.porth:744:12: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_10964: ;;// porth.porth:745:5: OP_PUSH_STR 215
    mov rax, 17
    push rax
    lea rax, [str_215]
    push rax
addr_10965: ;;// porth.porth:745:10: OP_INLINED 676
addr_10966: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_10967: ;;// std/std.porth:50:37: OP_INLINED 662
addr_10968: ;;// std/std.porth:48:34: OP_INLINED 394
addr_10969: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_10970: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_10971: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_10972: ;;// porth.porth:745:16: OP_PUSH_STR 216
    mov rax, 14
    push rax
    lea rax, [str_216]
    push rax
addr_10973: ;;// porth.porth:745:34: OP_INLINED 676
addr_10974: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_10975: ;;// std/std.porth:50:37: OP_INLINED 662
addr_10976: ;;// std/std.porth:48:34: OP_INLINED 394
addr_10977: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_10978: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_10979: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_10980: ;;// porth.porth:746:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_10981: ;;// porth.porth:746:7: OP_INLINED 418
addr_10982: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_10983: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_10984: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_10985: ;;// porth.porth:747:3: OP_END_IF 0
addr_10986: ;;// porth.porth:748:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_10987: ;;// porth.porth:750:6: OP_PREP_PROC 16
    sub rsp, 16
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_10988: ;;// porth.porth:757:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_10989: ;;// porth.porth:757:8: OP_INLINED 782
addr_10990: ;;// std/std.porth:71:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_10991: ;;// std/std.porth:72:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_10992: ;;// std/std.porth:72:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_10993: ;;// std/std.porth:72:9: OP_INLINED 729
addr_10994: ;;// std/std.porth:60:35: OP_INLINED 684
addr_10995: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_10996: ;;// std/std.porth:56:57: OP_INLINED 36
addr_10997: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_10998: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_10999: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11000: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11001: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11002: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11003: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_11004: ;;// std/std.porth:73:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_11005: ;;// std/std.porth:73:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_11006: ;;// std/std.porth:73:9: OP_INLINED 741
addr_11007: ;;// std/std.porth:61:34: OP_INLINED 694
addr_11008: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_11009: ;;// std/std.porth:57:55: OP_INLINED 36
addr_11010: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11011: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11012: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11013: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11014: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11015: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11016: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_11017: ;;// std/std.porth:74:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_11018: ;;// porth.porth:758:3: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_11019: ;;// porth.porth:760:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_11020: ;;// porth.porth:760:13: OP_INLINED 753
addr_11021: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_11022: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11023: ;;// std/std.porth:65:7: OP_INLINED 704
addr_11024: ;;// std/std.porth:58:38: OP_INLINED 684
addr_11025: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_11026: ;;// std/std.porth:56:57: OP_INLINED 36
addr_11027: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11028: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11029: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11030: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11031: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11032: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11033: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11034: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11035: ;;// std/std.porth:66:7: OP_INLINED 716
addr_11036: ;;// std/std.porth:59:37: OP_INLINED 694
addr_11037: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_11038: ;;// std/std.porth:57:55: OP_INLINED 36
addr_11039: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11040: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11041: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11042: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11043: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11044: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11045: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11046: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_11047: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_11048: ;;// porth.porth:760:18: OP_PUSH_STR 217
    mov rax, 1
    push rax
    lea rax, [str_217]
    push rax
addr_11049: ;;// porth.porth:760:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_11050: ;;// porth.porth:760:37: OP_IF 3
    pop rax
    test rax, rax
    jz addr_11053
addr_11051: ;;// porth.porth:760:41: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_11052: ;;// porth.porth:761:3: OP_ELSE 34
    jmp addr_11086
addr_11053: ;;// porth.porth:761:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_11054: ;;// porth.porth:761:13: OP_INLINED 753
addr_11055: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_11056: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11057: ;;// std/std.porth:65:7: OP_INLINED 704
addr_11058: ;;// std/std.porth:58:38: OP_INLINED 684
addr_11059: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_11060: ;;// std/std.porth:56:57: OP_INLINED 36
addr_11061: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11062: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11063: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11064: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11065: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11066: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11067: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11068: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11069: ;;// std/std.porth:66:7: OP_INLINED 716
addr_11070: ;;// std/std.porth:59:37: OP_INLINED 694
addr_11071: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_11072: ;;// std/std.porth:57:55: OP_INLINED 36
addr_11073: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11074: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11075: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11076: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11077: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11078: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11079: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11080: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_11081: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_11082: ;;// porth.porth:761:18: OP_PUSH_STR 218
    mov rax, 2
    push rax
    lea rax, [str_218]
    push rax
addr_11083: ;;// porth.porth:761:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_11084: ;;// porth.porth:761:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_11087
addr_11085: ;;// porth.porth:761:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_11086: ;;// porth.porth:762:3: OP_ELSE 34
    jmp addr_11120
addr_11087: ;;// porth.porth:762:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_11088: ;;// porth.porth:762:13: OP_INLINED 753
addr_11089: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_11090: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11091: ;;// std/std.porth:65:7: OP_INLINED 704
addr_11092: ;;// std/std.porth:58:38: OP_INLINED 684
addr_11093: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_11094: ;;// std/std.porth:56:57: OP_INLINED 36
addr_11095: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11096: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11097: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11098: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11099: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11100: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11101: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11102: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11103: ;;// std/std.porth:66:7: OP_INLINED 716
addr_11104: ;;// std/std.porth:59:37: OP_INLINED 694
addr_11105: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_11106: ;;// std/std.porth:57:55: OP_INLINED 36
addr_11107: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11108: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11109: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11110: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11111: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11112: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11113: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11114: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_11115: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_11116: ;;// porth.porth:762:18: OP_PUSH_STR 219
    mov rax, 2
    push rax
    lea rax, [str_219]
    push rax
addr_11117: ;;// porth.porth:762:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_11118: ;;// porth.porth:762:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_11121
addr_11119: ;;// porth.porth:762:41: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_11120: ;;// porth.porth:763:3: OP_ELSE 34
    jmp addr_11154
addr_11121: ;;// porth.porth:763:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_11122: ;;// porth.porth:763:13: OP_INLINED 753
addr_11123: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_11124: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11125: ;;// std/std.porth:65:7: OP_INLINED 704
addr_11126: ;;// std/std.porth:58:38: OP_INLINED 684
addr_11127: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_11128: ;;// std/std.porth:56:57: OP_INLINED 36
addr_11129: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11130: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11131: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11132: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11133: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11134: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11135: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11136: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11137: ;;// std/std.porth:66:7: OP_INLINED 716
addr_11138: ;;// std/std.porth:59:37: OP_INLINED 694
addr_11139: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_11140: ;;// std/std.porth:57:55: OP_INLINED 36
addr_11141: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11142: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11143: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11144: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11145: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11146: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11147: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11148: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_11149: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_11150: ;;// porth.porth:763:18: OP_PUSH_STR 220
    mov rax, 1
    push rax
    lea rax, [str_220]
    push rax
addr_11151: ;;// porth.porth:763:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_11152: ;;// porth.porth:763:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_11155
addr_11153: ;;// porth.porth:763:41: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_11154: ;;// porth.porth:764:3: OP_ELSE 34
    jmp addr_11188
addr_11155: ;;// porth.porth:764:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_11156: ;;// porth.porth:764:13: OP_INLINED 753
addr_11157: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_11158: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11159: ;;// std/std.porth:65:7: OP_INLINED 704
addr_11160: ;;// std/std.porth:58:38: OP_INLINED 684
addr_11161: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_11162: ;;// std/std.porth:56:57: OP_INLINED 36
addr_11163: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11164: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11165: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11166: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11167: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11168: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11169: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11170: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11171: ;;// std/std.porth:66:7: OP_INLINED 716
addr_11172: ;;// std/std.porth:59:37: OP_INLINED 694
addr_11173: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_11174: ;;// std/std.porth:57:55: OP_INLINED 36
addr_11175: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11176: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11177: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11178: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11179: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11180: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11181: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11182: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_11183: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_11184: ;;// porth.porth:764:18: OP_PUSH_STR 221
    mov rax, 1
    push rax
    lea rax, [str_221]
    push rax
addr_11185: ;;// porth.porth:764:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_11186: ;;// porth.porth:764:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_11189
addr_11187: ;;// porth.porth:764:41: OP_PUSH_INT 4
    mov rax, 4
    push rax
addr_11188: ;;// porth.porth:765:3: OP_ELSE 34
    jmp addr_11222
addr_11189: ;;// porth.porth:765:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_11190: ;;// porth.porth:765:13: OP_INLINED 753
addr_11191: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_11192: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11193: ;;// std/std.porth:65:7: OP_INLINED 704
addr_11194: ;;// std/std.porth:58:38: OP_INLINED 684
addr_11195: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_11196: ;;// std/std.porth:56:57: OP_INLINED 36
addr_11197: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11198: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11199: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11200: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11201: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11202: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11203: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11204: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11205: ;;// std/std.porth:66:7: OP_INLINED 716
addr_11206: ;;// std/std.porth:59:37: OP_INLINED 694
addr_11207: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_11208: ;;// std/std.porth:57:55: OP_INLINED 36
addr_11209: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11210: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11211: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11212: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11213: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11214: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11215: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11216: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_11217: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_11218: ;;// porth.porth:765:18: OP_PUSH_STR 222
    mov rax, 6
    push rax
    lea rax, [str_222]
    push rax
addr_11219: ;;// porth.porth:765:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_11220: ;;// porth.porth:765:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_11223
addr_11221: ;;// porth.porth:765:41: OP_PUSH_INT 5
    mov rax, 5
    push rax
addr_11222: ;;// porth.porth:766:3: OP_ELSE 34
    jmp addr_11256
addr_11223: ;;// porth.porth:766:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_11224: ;;// porth.porth:766:13: OP_INLINED 753
addr_11225: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_11226: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11227: ;;// std/std.porth:65:7: OP_INLINED 704
addr_11228: ;;// std/std.porth:58:38: OP_INLINED 684
addr_11229: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_11230: ;;// std/std.porth:56:57: OP_INLINED 36
addr_11231: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11232: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11233: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11234: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11235: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11236: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11237: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11238: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11239: ;;// std/std.porth:66:7: OP_INLINED 716
addr_11240: ;;// std/std.porth:59:37: OP_INLINED 694
addr_11241: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_11242: ;;// std/std.porth:57:55: OP_INLINED 36
addr_11243: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11244: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11245: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11246: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11247: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11248: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11249: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11250: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_11251: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_11252: ;;// porth.porth:766:18: OP_PUSH_STR 223
    mov rax, 7
    push rax
    lea rax, [str_223]
    push rax
addr_11253: ;;// porth.porth:766:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_11254: ;;// porth.porth:766:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_11257
addr_11255: ;;// porth.porth:766:41: OP_PUSH_INT 6
    mov rax, 6
    push rax
addr_11256: ;;// porth.porth:767:3: OP_ELSE 34
    jmp addr_11290
addr_11257: ;;// porth.porth:767:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_11258: ;;// porth.porth:767:13: OP_INLINED 753
addr_11259: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_11260: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11261: ;;// std/std.porth:65:7: OP_INLINED 704
addr_11262: ;;// std/std.porth:58:38: OP_INLINED 684
addr_11263: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_11264: ;;// std/std.porth:56:57: OP_INLINED 36
addr_11265: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11266: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11267: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11268: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11269: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11270: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11271: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11272: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11273: ;;// std/std.porth:66:7: OP_INLINED 716
addr_11274: ;;// std/std.porth:59:37: OP_INLINED 694
addr_11275: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_11276: ;;// std/std.porth:57:55: OP_INLINED 36
addr_11277: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11278: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11279: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11280: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11281: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11282: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11283: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11284: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_11285: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_11286: ;;// porth.porth:767:18: OP_PUSH_STR 224
    mov rax, 3
    push rax
    lea rax, [str_224]
    push rax
addr_11287: ;;// porth.porth:767:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_11288: ;;// porth.porth:767:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_11291
addr_11289: ;;// porth.porth:767:41: OP_PUSH_INT 7
    mov rax, 7
    push rax
addr_11290: ;;// porth.porth:768:3: OP_ELSE 34
    jmp addr_11324
addr_11291: ;;// porth.porth:768:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_11292: ;;// porth.porth:768:13: OP_INLINED 753
addr_11293: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_11294: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11295: ;;// std/std.porth:65:7: OP_INLINED 704
addr_11296: ;;// std/std.porth:58:38: OP_INLINED 684
addr_11297: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_11298: ;;// std/std.porth:56:57: OP_INLINED 36
addr_11299: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11300: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11301: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11302: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11303: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11304: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11305: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11306: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11307: ;;// std/std.porth:66:7: OP_INLINED 716
addr_11308: ;;// std/std.porth:59:37: OP_INLINED 694
addr_11309: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_11310: ;;// std/std.porth:57:55: OP_INLINED 36
addr_11311: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11312: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11313: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11314: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11315: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11316: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11317: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11318: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_11319: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_11320: ;;// porth.porth:768:18: OP_PUSH_STR 225
    mov rax, 5
    push rax
    lea rax, [str_225]
    push rax
addr_11321: ;;// porth.porth:768:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_11322: ;;// porth.porth:768:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_11325
addr_11323: ;;// porth.porth:768:41: OP_PUSH_INT 19
    mov rax, 19
    push rax
addr_11324: ;;// porth.porth:769:3: OP_ELSE 34
    jmp addr_11358
addr_11325: ;;// porth.porth:769:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_11326: ;;// porth.porth:769:13: OP_INLINED 753
addr_11327: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_11328: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11329: ;;// std/std.porth:65:7: OP_INLINED 704
addr_11330: ;;// std/std.porth:58:38: OP_INLINED 684
addr_11331: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_11332: ;;// std/std.porth:56:57: OP_INLINED 36
addr_11333: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11334: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11335: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11336: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11337: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11338: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11339: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11340: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11341: ;;// std/std.porth:66:7: OP_INLINED 716
addr_11342: ;;// std/std.porth:59:37: OP_INLINED 694
addr_11343: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_11344: ;;// std/std.porth:57:55: OP_INLINED 36
addr_11345: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11346: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11347: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11348: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11349: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11350: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11351: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11352: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_11353: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_11354: ;;// porth.porth:769:18: OP_PUSH_STR 226
    mov rax, 1
    push rax
    lea rax, [str_226]
    push rax
addr_11355: ;;// porth.porth:769:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_11356: ;;// porth.porth:769:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_11359
addr_11357: ;;// porth.porth:769:41: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_11358: ;;// porth.porth:770:3: OP_ELSE 34
    jmp addr_11392
addr_11359: ;;// porth.porth:770:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_11360: ;;// porth.porth:770:13: OP_INLINED 753
addr_11361: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_11362: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11363: ;;// std/std.porth:65:7: OP_INLINED 704
addr_11364: ;;// std/std.porth:58:38: OP_INLINED 684
addr_11365: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_11366: ;;// std/std.porth:56:57: OP_INLINED 36
addr_11367: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11368: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11369: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11370: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11371: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11372: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11373: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11374: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11375: ;;// std/std.porth:66:7: OP_INLINED 716
addr_11376: ;;// std/std.porth:59:37: OP_INLINED 694
addr_11377: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_11378: ;;// std/std.porth:57:55: OP_INLINED 36
addr_11379: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11380: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11381: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11382: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11383: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11384: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11385: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11386: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_11387: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_11388: ;;// porth.porth:770:18: OP_PUSH_STR 227
    mov rax, 1
    push rax
    lea rax, [str_227]
    push rax
addr_11389: ;;// porth.porth:770:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_11390: ;;// porth.porth:770:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_11393
addr_11391: ;;// porth.porth:770:41: OP_PUSH_INT 9
    mov rax, 9
    push rax
addr_11392: ;;// porth.porth:771:3: OP_ELSE 34
    jmp addr_11426
addr_11393: ;;// porth.porth:771:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_11394: ;;// porth.porth:771:13: OP_INLINED 753
addr_11395: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_11396: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11397: ;;// std/std.porth:65:7: OP_INLINED 704
addr_11398: ;;// std/std.porth:58:38: OP_INLINED 684
addr_11399: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_11400: ;;// std/std.porth:56:57: OP_INLINED 36
addr_11401: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11402: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11403: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11404: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11405: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11406: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11407: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11408: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11409: ;;// std/std.porth:66:7: OP_INLINED 716
addr_11410: ;;// std/std.porth:59:37: OP_INLINED 694
addr_11411: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_11412: ;;// std/std.porth:57:55: OP_INLINED 36
addr_11413: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11414: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11415: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11416: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11417: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11418: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11419: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11420: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_11421: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_11422: ;;// porth.porth:771:18: OP_PUSH_STR 228
    mov rax, 1
    push rax
    lea rax, [str_228]
    push rax
addr_11423: ;;// porth.porth:771:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_11424: ;;// porth.porth:771:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_11427
addr_11425: ;;// porth.porth:771:41: OP_PUSH_INT 10
    mov rax, 10
    push rax
addr_11426: ;;// porth.porth:772:3: OP_ELSE 34
    jmp addr_11460
addr_11427: ;;// porth.porth:772:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_11428: ;;// porth.porth:772:13: OP_INLINED 753
addr_11429: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_11430: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11431: ;;// std/std.porth:65:7: OP_INLINED 704
addr_11432: ;;// std/std.porth:58:38: OP_INLINED 684
addr_11433: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_11434: ;;// std/std.porth:56:57: OP_INLINED 36
addr_11435: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11436: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11437: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11438: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11439: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11440: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11441: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11442: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11443: ;;// std/std.porth:66:7: OP_INLINED 716
addr_11444: ;;// std/std.porth:59:37: OP_INLINED 694
addr_11445: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_11446: ;;// std/std.porth:57:55: OP_INLINED 36
addr_11447: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11448: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11449: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11450: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11451: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11452: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11453: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11454: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_11455: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_11456: ;;// porth.porth:772:18: OP_PUSH_STR 229
    mov rax, 2
    push rax
    lea rax, [str_229]
    push rax
addr_11457: ;;// porth.porth:772:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_11458: ;;// porth.porth:772:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_11461
addr_11459: ;;// porth.porth:772:41: OP_PUSH_INT 11
    mov rax, 11
    push rax
addr_11460: ;;// porth.porth:773:3: OP_ELSE 34
    jmp addr_11494
addr_11461: ;;// porth.porth:773:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_11462: ;;// porth.porth:773:13: OP_INLINED 753
addr_11463: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_11464: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11465: ;;// std/std.porth:65:7: OP_INLINED 704
addr_11466: ;;// std/std.porth:58:38: OP_INLINED 684
addr_11467: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_11468: ;;// std/std.porth:56:57: OP_INLINED 36
addr_11469: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11470: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11471: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11472: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11473: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11474: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11475: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11476: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11477: ;;// std/std.porth:66:7: OP_INLINED 716
addr_11478: ;;// std/std.porth:59:37: OP_INLINED 694
addr_11479: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_11480: ;;// std/std.porth:57:55: OP_INLINED 36
addr_11481: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11482: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11483: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11484: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11485: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11486: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11487: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11488: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_11489: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_11490: ;;// porth.porth:773:18: OP_PUSH_STR 230
    mov rax, 2
    push rax
    lea rax, [str_230]
    push rax
addr_11491: ;;// porth.porth:773:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_11492: ;;// porth.porth:773:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_11495
addr_11493: ;;// porth.porth:773:41: OP_PUSH_INT 12
    mov rax, 12
    push rax
addr_11494: ;;// porth.porth:774:3: OP_ELSE 34
    jmp addr_11528
addr_11495: ;;// porth.porth:774:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_11496: ;;// porth.porth:774:13: OP_INLINED 753
addr_11497: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_11498: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11499: ;;// std/std.porth:65:7: OP_INLINED 704
addr_11500: ;;// std/std.porth:58:38: OP_INLINED 684
addr_11501: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_11502: ;;// std/std.porth:56:57: OP_INLINED 36
addr_11503: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11504: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11505: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11506: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11507: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11508: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11509: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11510: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11511: ;;// std/std.porth:66:7: OP_INLINED 716
addr_11512: ;;// std/std.porth:59:37: OP_INLINED 694
addr_11513: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_11514: ;;// std/std.porth:57:55: OP_INLINED 36
addr_11515: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11516: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11517: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11518: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11519: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11520: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11521: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11522: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_11523: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_11524: ;;// porth.porth:774:18: OP_PUSH_STR 231
    mov rax, 2
    push rax
    lea rax, [str_231]
    push rax
addr_11525: ;;// porth.porth:774:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_11526: ;;// porth.porth:774:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_11529
addr_11527: ;;// porth.porth:774:41: OP_PUSH_INT 13
    mov rax, 13
    push rax
addr_11528: ;;// porth.porth:775:3: OP_ELSE 34
    jmp addr_11562
addr_11529: ;;// porth.porth:775:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_11530: ;;// porth.porth:775:13: OP_INLINED 753
addr_11531: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_11532: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11533: ;;// std/std.porth:65:7: OP_INLINED 704
addr_11534: ;;// std/std.porth:58:38: OP_INLINED 684
addr_11535: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_11536: ;;// std/std.porth:56:57: OP_INLINED 36
addr_11537: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11538: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11539: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11540: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11541: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11542: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11543: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11544: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11545: ;;// std/std.porth:66:7: OP_INLINED 716
addr_11546: ;;// std/std.porth:59:37: OP_INLINED 694
addr_11547: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_11548: ;;// std/std.porth:57:55: OP_INLINED 36
addr_11549: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11550: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11551: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11552: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11553: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11554: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11555: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11556: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_11557: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_11558: ;;// porth.porth:775:18: OP_PUSH_STR 232
    mov rax, 3
    push rax
    lea rax, [str_232]
    push rax
addr_11559: ;;// porth.porth:775:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_11560: ;;// porth.porth:775:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_11563
addr_11561: ;;// porth.porth:775:41: OP_PUSH_INT 14
    mov rax, 14
    push rax
addr_11562: ;;// porth.porth:776:3: OP_ELSE 34
    jmp addr_11596
addr_11563: ;;// porth.porth:776:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_11564: ;;// porth.porth:776:13: OP_INLINED 753
addr_11565: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_11566: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11567: ;;// std/std.porth:65:7: OP_INLINED 704
addr_11568: ;;// std/std.porth:58:38: OP_INLINED 684
addr_11569: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_11570: ;;// std/std.porth:56:57: OP_INLINED 36
addr_11571: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11572: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11573: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11574: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11575: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11576: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11577: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11578: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11579: ;;// std/std.porth:66:7: OP_INLINED 716
addr_11580: ;;// std/std.porth:59:37: OP_INLINED 694
addr_11581: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_11582: ;;// std/std.porth:57:55: OP_INLINED 36
addr_11583: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11584: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11585: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11586: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11587: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11588: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11589: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11590: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_11591: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_11592: ;;// porth.porth:776:18: OP_PUSH_STR 233
    mov rax, 3
    push rax
    lea rax, [str_233]
    push rax
addr_11593: ;;// porth.porth:776:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_11594: ;;// porth.porth:776:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_11597
addr_11595: ;;// porth.porth:776:41: OP_PUSH_INT 15
    mov rax, 15
    push rax
addr_11596: ;;// porth.porth:777:3: OP_ELSE 34
    jmp addr_11630
addr_11597: ;;// porth.porth:777:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_11598: ;;// porth.porth:777:13: OP_INLINED 753
addr_11599: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_11600: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11601: ;;// std/std.porth:65:7: OP_INLINED 704
addr_11602: ;;// std/std.porth:58:38: OP_INLINED 684
addr_11603: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_11604: ;;// std/std.porth:56:57: OP_INLINED 36
addr_11605: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11606: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11607: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11608: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11609: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11610: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11611: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11612: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11613: ;;// std/std.porth:66:7: OP_INLINED 716
addr_11614: ;;// std/std.porth:59:37: OP_INLINED 694
addr_11615: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_11616: ;;// std/std.porth:57:55: OP_INLINED 36
addr_11617: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11618: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11619: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11620: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11621: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11622: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11623: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11624: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_11625: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_11626: ;;// porth.porth:777:18: OP_PUSH_STR 234
    mov rax, 2
    push rax
    lea rax, [str_234]
    push rax
addr_11627: ;;// porth.porth:777:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_11628: ;;// porth.porth:777:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_11631
addr_11629: ;;// porth.porth:777:41: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_11630: ;;// porth.porth:778:3: OP_ELSE 34
    jmp addr_11664
addr_11631: ;;// porth.porth:778:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_11632: ;;// porth.porth:778:13: OP_INLINED 753
addr_11633: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_11634: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11635: ;;// std/std.porth:65:7: OP_INLINED 704
addr_11636: ;;// std/std.porth:58:38: OP_INLINED 684
addr_11637: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_11638: ;;// std/std.porth:56:57: OP_INLINED 36
addr_11639: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11640: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11641: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11642: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11643: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11644: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11645: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11646: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11647: ;;// std/std.porth:66:7: OP_INLINED 716
addr_11648: ;;// std/std.porth:59:37: OP_INLINED 694
addr_11649: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_11650: ;;// std/std.porth:57:55: OP_INLINED 36
addr_11651: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11652: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11653: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11654: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11655: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11656: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11657: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11658: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_11659: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_11660: ;;// porth.porth:778:18: OP_PUSH_STR 235
    mov rax, 3
    push rax
    lea rax, [str_235]
    push rax
addr_11661: ;;// porth.porth:778:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_11662: ;;// porth.porth:778:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_11665
addr_11663: ;;// porth.porth:778:41: OP_PUSH_INT 17
    mov rax, 17
    push rax
addr_11664: ;;// porth.porth:779:3: OP_ELSE 34
    jmp addr_11698
addr_11665: ;;// porth.porth:779:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_11666: ;;// porth.porth:779:13: OP_INLINED 753
addr_11667: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_11668: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11669: ;;// std/std.porth:65:7: OP_INLINED 704
addr_11670: ;;// std/std.porth:58:38: OP_INLINED 684
addr_11671: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_11672: ;;// std/std.porth:56:57: OP_INLINED 36
addr_11673: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11674: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11675: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11676: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11677: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11678: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11679: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11680: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11681: ;;// std/std.porth:66:7: OP_INLINED 716
addr_11682: ;;// std/std.porth:59:37: OP_INLINED 694
addr_11683: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_11684: ;;// std/std.porth:57:55: OP_INLINED 36
addr_11685: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11686: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11687: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11688: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11689: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11690: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11691: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11692: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_11693: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_11694: ;;// porth.porth:779:18: OP_PUSH_STR 236
    mov rax, 3
    push rax
    lea rax, [str_236]
    push rax
addr_11695: ;;// porth.porth:779:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_11696: ;;// porth.porth:779:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_11699
addr_11697: ;;// porth.porth:779:41: OP_PUSH_INT 18
    mov rax, 18
    push rax
addr_11698: ;;// porth.porth:780:3: OP_ELSE 34
    jmp addr_11732
addr_11699: ;;// porth.porth:780:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_11700: ;;// porth.porth:780:13: OP_INLINED 753
addr_11701: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_11702: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11703: ;;// std/std.porth:65:7: OP_INLINED 704
addr_11704: ;;// std/std.porth:58:38: OP_INLINED 684
addr_11705: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_11706: ;;// std/std.porth:56:57: OP_INLINED 36
addr_11707: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11708: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11709: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11710: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11711: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11712: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11713: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11714: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11715: ;;// std/std.porth:66:7: OP_INLINED 716
addr_11716: ;;// std/std.porth:59:37: OP_INLINED 694
addr_11717: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_11718: ;;// std/std.porth:57:55: OP_INLINED 36
addr_11719: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11720: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11721: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11722: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11723: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11724: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11725: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11726: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_11727: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_11728: ;;// porth.porth:780:18: OP_PUSH_STR 237
    mov rax, 3
    push rax
    lea rax, [str_237]
    push rax
addr_11729: ;;// porth.porth:780:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_11730: ;;// porth.porth:780:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_11733
addr_11731: ;;// porth.porth:780:41: OP_PUSH_INT 20
    mov rax, 20
    push rax
addr_11732: ;;// porth.porth:781:3: OP_ELSE 34
    jmp addr_11766
addr_11733: ;;// porth.porth:781:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_11734: ;;// porth.porth:781:13: OP_INLINED 753
addr_11735: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_11736: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11737: ;;// std/std.porth:65:7: OP_INLINED 704
addr_11738: ;;// std/std.porth:58:38: OP_INLINED 684
addr_11739: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_11740: ;;// std/std.porth:56:57: OP_INLINED 36
addr_11741: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11742: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11743: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11744: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11745: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11746: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11747: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11748: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11749: ;;// std/std.porth:66:7: OP_INLINED 716
addr_11750: ;;// std/std.porth:59:37: OP_INLINED 694
addr_11751: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_11752: ;;// std/std.porth:57:55: OP_INLINED 36
addr_11753: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11754: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11755: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11756: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11757: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11758: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11759: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11760: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_11761: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_11762: ;;// porth.porth:781:18: OP_PUSH_STR 238
    mov rax, 4
    push rax
    lea rax, [str_238]
    push rax
addr_11763: ;;// porth.porth:781:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_11764: ;;// porth.porth:781:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_11767
addr_11765: ;;// porth.porth:781:41: OP_PUSH_INT 21
    mov rax, 21
    push rax
addr_11766: ;;// porth.porth:782:3: OP_ELSE 34
    jmp addr_11800
addr_11767: ;;// porth.porth:782:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_11768: ;;// porth.porth:782:13: OP_INLINED 753
addr_11769: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_11770: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11771: ;;// std/std.porth:65:7: OP_INLINED 704
addr_11772: ;;// std/std.porth:58:38: OP_INLINED 684
addr_11773: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_11774: ;;// std/std.porth:56:57: OP_INLINED 36
addr_11775: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11776: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11777: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11778: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11779: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11780: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11781: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11782: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11783: ;;// std/std.porth:66:7: OP_INLINED 716
addr_11784: ;;// std/std.porth:59:37: OP_INLINED 694
addr_11785: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_11786: ;;// std/std.porth:57:55: OP_INLINED 36
addr_11787: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11788: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11789: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11790: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11791: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11792: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11793: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11794: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_11795: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_11796: ;;// porth.porth:782:18: OP_PUSH_STR 239
    mov rax, 4
    push rax
    lea rax, [str_239]
    push rax
addr_11797: ;;// porth.porth:782:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_11798: ;;// porth.porth:782:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_11801
addr_11799: ;;// porth.porth:782:41: OP_PUSH_INT 22
    mov rax, 22
    push rax
addr_11800: ;;// porth.porth:783:3: OP_ELSE 34
    jmp addr_11834
addr_11801: ;;// porth.porth:783:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_11802: ;;// porth.porth:783:13: OP_INLINED 753
addr_11803: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_11804: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11805: ;;// std/std.porth:65:7: OP_INLINED 704
addr_11806: ;;// std/std.porth:58:38: OP_INLINED 684
addr_11807: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_11808: ;;// std/std.porth:56:57: OP_INLINED 36
addr_11809: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11810: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11811: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11812: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11813: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11814: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11815: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11816: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11817: ;;// std/std.porth:66:7: OP_INLINED 716
addr_11818: ;;// std/std.porth:59:37: OP_INLINED 694
addr_11819: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_11820: ;;// std/std.porth:57:55: OP_INLINED 36
addr_11821: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11822: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11823: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11824: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11825: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11826: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11827: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11828: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_11829: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_11830: ;;// porth.porth:783:18: OP_PUSH_STR 240
    mov rax, 4
    push rax
    lea rax, [str_240]
    push rax
addr_11831: ;;// porth.porth:783:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_11832: ;;// porth.porth:783:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_11835
addr_11833: ;;// porth.porth:783:41: OP_PUSH_INT 23
    mov rax, 23
    push rax
addr_11834: ;;// porth.porth:784:3: OP_ELSE 34
    jmp addr_11868
addr_11835: ;;// porth.porth:784:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_11836: ;;// porth.porth:784:13: OP_INLINED 753
addr_11837: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_11838: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11839: ;;// std/std.porth:65:7: OP_INLINED 704
addr_11840: ;;// std/std.porth:58:38: OP_INLINED 684
addr_11841: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_11842: ;;// std/std.porth:56:57: OP_INLINED 36
addr_11843: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11844: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11845: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11846: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11847: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11848: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11849: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11850: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11851: ;;// std/std.porth:66:7: OP_INLINED 716
addr_11852: ;;// std/std.porth:59:37: OP_INLINED 694
addr_11853: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_11854: ;;// std/std.porth:57:55: OP_INLINED 36
addr_11855: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11856: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11857: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11858: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11859: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11860: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11861: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11862: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_11863: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_11864: ;;// porth.porth:784:18: OP_PUSH_STR 241
    mov rax, 3
    push rax
    lea rax, [str_241]
    push rax
addr_11865: ;;// porth.porth:784:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_11866: ;;// porth.porth:784:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_11869
addr_11867: ;;// porth.porth:784:41: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_11868: ;;// porth.porth:785:3: OP_ELSE 34
    jmp addr_11902
addr_11869: ;;// porth.porth:785:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_11870: ;;// porth.porth:785:13: OP_INLINED 753
addr_11871: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_11872: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11873: ;;// std/std.porth:65:7: OP_INLINED 704
addr_11874: ;;// std/std.porth:58:38: OP_INLINED 684
addr_11875: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_11876: ;;// std/std.porth:56:57: OP_INLINED 36
addr_11877: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11878: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11879: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11880: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11881: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11882: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11883: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11884: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11885: ;;// std/std.porth:66:7: OP_INLINED 716
addr_11886: ;;// std/std.porth:59:37: OP_INLINED 694
addr_11887: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_11888: ;;// std/std.porth:57:55: OP_INLINED 36
addr_11889: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11890: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11891: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11892: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11893: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11894: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11895: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11896: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_11897: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_11898: ;;// porth.porth:785:18: OP_PUSH_STR 242
    mov rax, 2
    push rax
    lea rax, [str_242]
    push rax
addr_11899: ;;// porth.porth:785:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_11900: ;;// porth.porth:785:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_11903
addr_11901: ;;// porth.porth:785:41: OP_PUSH_INT 26
    mov rax, 26
    push rax
addr_11902: ;;// porth.porth:786:3: OP_ELSE 34
    jmp addr_11936
addr_11903: ;;// porth.porth:786:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_11904: ;;// porth.porth:786:13: OP_INLINED 753
addr_11905: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_11906: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11907: ;;// std/std.porth:65:7: OP_INLINED 704
addr_11908: ;;// std/std.porth:58:38: OP_INLINED 684
addr_11909: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_11910: ;;// std/std.porth:56:57: OP_INLINED 36
addr_11911: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11912: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11913: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11914: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11915: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11916: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11917: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11918: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11919: ;;// std/std.porth:66:7: OP_INLINED 716
addr_11920: ;;// std/std.porth:59:37: OP_INLINED 694
addr_11921: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_11922: ;;// std/std.porth:57:55: OP_INLINED 36
addr_11923: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11924: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11925: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11926: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11927: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11928: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11929: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11930: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_11931: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_11932: ;;// porth.porth:786:18: OP_PUSH_STR 243
    mov rax, 2
    push rax
    lea rax, [str_243]
    push rax
addr_11933: ;;// porth.porth:786:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_11934: ;;// porth.porth:786:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_11937
addr_11935: ;;// porth.porth:786:41: OP_PUSH_INT 25
    mov rax, 25
    push rax
addr_11936: ;;// porth.porth:787:3: OP_ELSE 34
    jmp addr_11970
addr_11937: ;;// porth.porth:787:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_11938: ;;// porth.porth:787:13: OP_INLINED 753
addr_11939: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_11940: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11941: ;;// std/std.porth:65:7: OP_INLINED 704
addr_11942: ;;// std/std.porth:58:38: OP_INLINED 684
addr_11943: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_11944: ;;// std/std.porth:56:57: OP_INLINED 36
addr_11945: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11946: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11947: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11948: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11949: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11950: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11951: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11952: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11953: ;;// std/std.porth:66:7: OP_INLINED 716
addr_11954: ;;// std/std.porth:59:37: OP_INLINED 694
addr_11955: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_11956: ;;// std/std.porth:57:55: OP_INLINED 36
addr_11957: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11958: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11959: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11960: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11961: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11962: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11963: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11964: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_11965: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_11966: ;;// porth.porth:787:18: OP_PUSH_STR 244
    mov rax, 3
    push rax
    lea rax, [str_244]
    push rax
addr_11967: ;;// porth.porth:787:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_11968: ;;// porth.porth:787:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_11971
addr_11969: ;;// porth.porth:787:41: OP_PUSH_INT 28
    mov rax, 28
    push rax
addr_11970: ;;// porth.porth:788:3: OP_ELSE 34
    jmp addr_12004
addr_11971: ;;// porth.porth:788:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_11972: ;;// porth.porth:788:13: OP_INLINED 753
addr_11973: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_11974: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11975: ;;// std/std.porth:65:7: OP_INLINED 704
addr_11976: ;;// std/std.porth:58:38: OP_INLINED 684
addr_11977: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_11978: ;;// std/std.porth:56:57: OP_INLINED 36
addr_11979: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11980: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11981: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11982: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11983: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11984: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11985: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11986: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_11987: ;;// std/std.porth:66:7: OP_INLINED 716
addr_11988: ;;// std/std.porth:59:37: OP_INLINED 694
addr_11989: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_11990: ;;// std/std.porth:57:55: OP_INLINED 36
addr_11991: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11992: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_11993: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_11994: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_11995: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_11996: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_11997: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_11998: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_11999: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_12000: ;;// porth.porth:788:18: OP_PUSH_STR 245
    mov rax, 3
    push rax
    lea rax, [str_245]
    push rax
addr_12001: ;;// porth.porth:788:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_12002: ;;// porth.porth:788:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12005
addr_12003: ;;// porth.porth:788:41: OP_PUSH_INT 27
    mov rax, 27
    push rax
addr_12004: ;;// porth.porth:789:3: OP_ELSE 34
    jmp addr_12038
addr_12005: ;;// porth.porth:789:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_12006: ;;// porth.porth:789:13: OP_INLINED 753
addr_12007: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_12008: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12009: ;;// std/std.porth:65:7: OP_INLINED 704
addr_12010: ;;// std/std.porth:58:38: OP_INLINED 684
addr_12011: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_12012: ;;// std/std.porth:56:57: OP_INLINED 36
addr_12013: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12014: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12015: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12016: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12017: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12018: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12019: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12020: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12021: ;;// std/std.porth:66:7: OP_INLINED 716
addr_12022: ;;// std/std.porth:59:37: OP_INLINED 694
addr_12023: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_12024: ;;// std/std.porth:57:55: OP_INLINED 36
addr_12025: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12026: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12027: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12028: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12029: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12030: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12031: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12032: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_12033: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_12034: ;;// porth.porth:789:18: OP_PUSH_STR 246
    mov rax, 3
    push rax
    lea rax, [str_246]
    push rax
addr_12035: ;;// porth.porth:789:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_12036: ;;// porth.porth:789:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12039
addr_12037: ;;// porth.porth:789:41: OP_PUSH_INT 30
    mov rax, 30
    push rax
addr_12038: ;;// porth.porth:790:3: OP_ELSE 34
    jmp addr_12072
addr_12039: ;;// porth.porth:790:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_12040: ;;// porth.porth:790:13: OP_INLINED 753
addr_12041: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_12042: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12043: ;;// std/std.porth:65:7: OP_INLINED 704
addr_12044: ;;// std/std.porth:58:38: OP_INLINED 684
addr_12045: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_12046: ;;// std/std.porth:56:57: OP_INLINED 36
addr_12047: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12048: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12049: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12050: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12051: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12052: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12053: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12054: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12055: ;;// std/std.porth:66:7: OP_INLINED 716
addr_12056: ;;// std/std.porth:59:37: OP_INLINED 694
addr_12057: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_12058: ;;// std/std.porth:57:55: OP_INLINED 36
addr_12059: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12060: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12061: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12062: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12063: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12064: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12065: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12066: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_12067: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_12068: ;;// porth.porth:790:18: OP_PUSH_STR 247
    mov rax, 3
    push rax
    lea rax, [str_247]
    push rax
addr_12069: ;;// porth.porth:790:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_12070: ;;// porth.porth:790:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12073
addr_12071: ;;// porth.porth:790:41: OP_PUSH_INT 29
    mov rax, 29
    push rax
addr_12072: ;;// porth.porth:791:3: OP_ELSE 34
    jmp addr_12106
addr_12073: ;;// porth.porth:791:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_12074: ;;// porth.porth:791:13: OP_INLINED 753
addr_12075: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_12076: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12077: ;;// std/std.porth:65:7: OP_INLINED 704
addr_12078: ;;// std/std.porth:58:38: OP_INLINED 684
addr_12079: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_12080: ;;// std/std.porth:56:57: OP_INLINED 36
addr_12081: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12082: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12083: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12084: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12085: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12086: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12087: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12088: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12089: ;;// std/std.porth:66:7: OP_INLINED 716
addr_12090: ;;// std/std.porth:59:37: OP_INLINED 694
addr_12091: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_12092: ;;// std/std.porth:57:55: OP_INLINED 36
addr_12093: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12094: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12095: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12096: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12097: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12098: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12099: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12100: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_12101: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_12102: ;;// porth.porth:791:18: OP_PUSH_STR 248
    mov rax, 3
    push rax
    lea rax, [str_248]
    push rax
addr_12103: ;;// porth.porth:791:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_12104: ;;// porth.porth:791:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12107
addr_12105: ;;// porth.porth:791:41: OP_PUSH_INT 32
    mov rax, 32
    push rax
addr_12106: ;;// porth.porth:792:3: OP_ELSE 34
    jmp addr_12140
addr_12107: ;;// porth.porth:792:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_12108: ;;// porth.porth:792:13: OP_INLINED 753
addr_12109: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_12110: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12111: ;;// std/std.porth:65:7: OP_INLINED 704
addr_12112: ;;// std/std.porth:58:38: OP_INLINED 684
addr_12113: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_12114: ;;// std/std.porth:56:57: OP_INLINED 36
addr_12115: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12116: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12117: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12118: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12119: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12120: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12121: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12122: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12123: ;;// std/std.porth:66:7: OP_INLINED 716
addr_12124: ;;// std/std.porth:59:37: OP_INLINED 694
addr_12125: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_12126: ;;// std/std.porth:57:55: OP_INLINED 36
addr_12127: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12128: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12129: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12130: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12131: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12132: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12133: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12134: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_12135: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_12136: ;;// porth.porth:792:18: OP_PUSH_STR 249
    mov rax, 3
    push rax
    lea rax, [str_249]
    push rax
addr_12137: ;;// porth.porth:792:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_12138: ;;// porth.porth:792:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12141
addr_12139: ;;// porth.porth:792:41: OP_PUSH_INT 31
    mov rax, 31
    push rax
addr_12140: ;;// porth.porth:793:3: OP_ELSE 34
    jmp addr_12174
addr_12141: ;;// porth.porth:793:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_12142: ;;// porth.porth:793:13: OP_INLINED 753
addr_12143: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_12144: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12145: ;;// std/std.porth:65:7: OP_INLINED 704
addr_12146: ;;// std/std.porth:58:38: OP_INLINED 684
addr_12147: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_12148: ;;// std/std.porth:56:57: OP_INLINED 36
addr_12149: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12150: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12151: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12152: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12153: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12154: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12155: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12156: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12157: ;;// std/std.porth:66:7: OP_INLINED 716
addr_12158: ;;// std/std.porth:59:37: OP_INLINED 694
addr_12159: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_12160: ;;// std/std.porth:57:55: OP_INLINED 36
addr_12161: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12162: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12163: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12164: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12165: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12166: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12167: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12168: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_12169: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_12170: ;;// porth.porth:793:18: OP_PUSH_STR 250
    mov rax, 9
    push rax
    lea rax, [str_250]
    push rax
addr_12171: ;;// porth.porth:793:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_12172: ;;// porth.porth:793:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12175
addr_12173: ;;// porth.porth:793:41: OP_PUSH_INT 33
    mov rax, 33
    push rax
addr_12174: ;;// porth.porth:794:3: OP_ELSE 34
    jmp addr_12208
addr_12175: ;;// porth.porth:794:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_12176: ;;// porth.porth:794:13: OP_INLINED 753
addr_12177: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_12178: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12179: ;;// std/std.porth:65:7: OP_INLINED 704
addr_12180: ;;// std/std.porth:58:38: OP_INLINED 684
addr_12181: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_12182: ;;// std/std.porth:56:57: OP_INLINED 36
addr_12183: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12184: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12185: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12186: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12187: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12188: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12189: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12190: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12191: ;;// std/std.porth:66:7: OP_INLINED 716
addr_12192: ;;// std/std.porth:59:37: OP_INLINED 694
addr_12193: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_12194: ;;// std/std.porth:57:55: OP_INLINED 36
addr_12195: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12196: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12197: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12198: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12199: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12200: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12201: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12202: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_12203: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_12204: ;;// porth.porth:794:18: OP_PUSH_STR 251
    mov rax, 9
    push rax
    lea rax, [str_251]
    push rax
addr_12205: ;;// porth.porth:794:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_12206: ;;// porth.porth:794:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12209
addr_12207: ;;// porth.porth:794:41: OP_PUSH_INT 34
    mov rax, 34
    push rax
addr_12208: ;;// porth.porth:795:3: OP_ELSE 34
    jmp addr_12242
addr_12209: ;;// porth.porth:795:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_12210: ;;// porth.porth:795:13: OP_INLINED 753
addr_12211: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_12212: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12213: ;;// std/std.porth:65:7: OP_INLINED 704
addr_12214: ;;// std/std.porth:58:38: OP_INLINED 684
addr_12215: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_12216: ;;// std/std.porth:56:57: OP_INLINED 36
addr_12217: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12218: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12219: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12220: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12221: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12222: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12223: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12224: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12225: ;;// std/std.porth:66:7: OP_INLINED 716
addr_12226: ;;// std/std.porth:59:37: OP_INLINED 694
addr_12227: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_12228: ;;// std/std.porth:57:55: OP_INLINED 36
addr_12229: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12230: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12231: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12232: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12233: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12234: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12235: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12236: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_12237: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_12238: ;;// porth.porth:795:18: OP_PUSH_STR 252
    mov rax, 10
    push rax
    lea rax, [str_252]
    push rax
addr_12239: ;;// porth.porth:795:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_12240: ;;// porth.porth:795:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12243
addr_12241: ;;// porth.porth:795:41: OP_PUSH_INT 37
    mov rax, 37
    push rax
addr_12242: ;;// porth.porth:796:3: OP_ELSE 34
    jmp addr_12276
addr_12243: ;;// porth.porth:796:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_12244: ;;// porth.porth:796:13: OP_INLINED 753
addr_12245: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_12246: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12247: ;;// std/std.porth:65:7: OP_INLINED 704
addr_12248: ;;// std/std.porth:58:38: OP_INLINED 684
addr_12249: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_12250: ;;// std/std.porth:56:57: OP_INLINED 36
addr_12251: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12252: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12253: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12254: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12255: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12256: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12257: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12258: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12259: ;;// std/std.porth:66:7: OP_INLINED 716
addr_12260: ;;// std/std.porth:59:37: OP_INLINED 694
addr_12261: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_12262: ;;// std/std.porth:57:55: OP_INLINED 36
addr_12263: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12264: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12265: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12266: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12267: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12268: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12269: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12270: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_12271: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_12272: ;;// porth.porth:796:18: OP_PUSH_STR 253
    mov rax, 11
    push rax
    lea rax, [str_253]
    push rax
addr_12273: ;;// porth.porth:796:32: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_12274: ;;// porth.porth:796:38: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12277
addr_12275: ;;// porth.porth:796:42: OP_PUSH_INT 35
    mov rax, 35
    push rax
addr_12276: ;;// porth.porth:797:3: OP_ELSE 34
    jmp addr_12310
addr_12277: ;;// porth.porth:797:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_12278: ;;// porth.porth:797:13: OP_INLINED 753
addr_12279: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_12280: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12281: ;;// std/std.porth:65:7: OP_INLINED 704
addr_12282: ;;// std/std.porth:58:38: OP_INLINED 684
addr_12283: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_12284: ;;// std/std.porth:56:57: OP_INLINED 36
addr_12285: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12286: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12287: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12288: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12289: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12290: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12291: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12292: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12293: ;;// std/std.porth:66:7: OP_INLINED 716
addr_12294: ;;// std/std.porth:59:37: OP_INLINED 694
addr_12295: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_12296: ;;// std/std.porth:57:55: OP_INLINED 36
addr_12297: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12298: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12299: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12300: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12301: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12302: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12303: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12304: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_12305: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_12306: ;;// porth.porth:797:18: OP_PUSH_STR 254
    mov rax, 12
    push rax
    lea rax, [str_254]
    push rax
addr_12307: ;;// porth.porth:797:33: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_12308: ;;// porth.porth:797:39: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12311
addr_12309: ;;// porth.porth:797:43: OP_PUSH_INT 36
    mov rax, 36
    push rax
addr_12310: ;;// porth.porth:798:3: OP_ELSE 34
    jmp addr_12344
addr_12311: ;;// porth.porth:798:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_12312: ;;// porth.porth:798:13: OP_INLINED 753
addr_12313: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_12314: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12315: ;;// std/std.porth:65:7: OP_INLINED 704
addr_12316: ;;// std/std.porth:58:38: OP_INLINED 684
addr_12317: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_12318: ;;// std/std.porth:56:57: OP_INLINED 36
addr_12319: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12320: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12321: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12322: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12323: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12324: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12325: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12326: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12327: ;;// std/std.porth:66:7: OP_INLINED 716
addr_12328: ;;// std/std.porth:59:37: OP_INLINED 694
addr_12329: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_12330: ;;// std/std.porth:57:55: OP_INLINED 36
addr_12331: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12332: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12333: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12334: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12335: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12336: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12337: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12338: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_12339: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_12340: ;;// porth.porth:798:18: OP_PUSH_STR 255
    mov rax, 10
    push rax
    lea rax, [str_255]
    push rax
addr_12341: ;;// porth.porth:798:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_12342: ;;// porth.porth:798:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12345
addr_12343: ;;// porth.porth:798:41: OP_PUSH_INT 38
    mov rax, 38
    push rax
addr_12344: ;;// porth.porth:799:3: OP_ELSE 34
    jmp addr_12378
addr_12345: ;;// porth.porth:799:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_12346: ;;// porth.porth:799:13: OP_INLINED 753
addr_12347: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_12348: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12349: ;;// std/std.porth:65:7: OP_INLINED 704
addr_12350: ;;// std/std.porth:58:38: OP_INLINED 684
addr_12351: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_12352: ;;// std/std.porth:56:57: OP_INLINED 36
addr_12353: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12354: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12355: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12356: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12357: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12358: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12359: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12360: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12361: ;;// std/std.porth:66:7: OP_INLINED 716
addr_12362: ;;// std/std.porth:59:37: OP_INLINED 694
addr_12363: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_12364: ;;// std/std.porth:57:55: OP_INLINED 36
addr_12365: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12366: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12367: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12368: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12369: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12370: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12371: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12372: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_12373: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_12374: ;;// porth.porth:799:18: OP_PUSH_STR 256
    mov rax, 4
    push rax
    lea rax, [str_256]
    push rax
addr_12375: ;;// porth.porth:799:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_12376: ;;// porth.porth:799:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12379
addr_12377: ;;// porth.porth:799:41: OP_PUSH_INT 39
    mov rax, 39
    push rax
addr_12378: ;;// porth.porth:800:3: OP_ELSE 34
    jmp addr_12412
addr_12379: ;;// porth.porth:800:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_12380: ;;// porth.porth:800:13: OP_INLINED 753
addr_12381: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_12382: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12383: ;;// std/std.porth:65:7: OP_INLINED 704
addr_12384: ;;// std/std.porth:58:38: OP_INLINED 684
addr_12385: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_12386: ;;// std/std.porth:56:57: OP_INLINED 36
addr_12387: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12388: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12389: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12390: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12391: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12392: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12393: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12394: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12395: ;;// std/std.porth:66:7: OP_INLINED 716
addr_12396: ;;// std/std.porth:59:37: OP_INLINED 694
addr_12397: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_12398: ;;// std/std.porth:57:55: OP_INLINED 36
addr_12399: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12400: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12401: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12402: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12403: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12404: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12405: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12406: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_12407: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_12408: ;;// porth.porth:800:18: OP_PUSH_STR 257
    mov rax, 4
    push rax
    lea rax, [str_257]
    push rax
addr_12409: ;;// porth.porth:800:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_12410: ;;// porth.porth:800:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12413
addr_12411: ;;// porth.porth:800:41: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_12412: ;;// porth.porth:801:3: OP_ELSE 34
    jmp addr_12446
addr_12413: ;;// porth.porth:801:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_12414: ;;// porth.porth:801:13: OP_INLINED 753
addr_12415: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_12416: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12417: ;;// std/std.porth:65:7: OP_INLINED 704
addr_12418: ;;// std/std.porth:58:38: OP_INLINED 684
addr_12419: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_12420: ;;// std/std.porth:56:57: OP_INLINED 36
addr_12421: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12422: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12423: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12424: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12425: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12426: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12427: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12428: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12429: ;;// std/std.porth:66:7: OP_INLINED 716
addr_12430: ;;// std/std.porth:59:37: OP_INLINED 694
addr_12431: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_12432: ;;// std/std.porth:57:55: OP_INLINED 36
addr_12433: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12434: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12435: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12436: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12437: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12438: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12439: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12440: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_12441: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_12442: ;;// porth.porth:801:18: OP_PUSH_STR 258
    mov rax, 4
    push rax
    lea rax, [str_258]
    push rax
addr_12443: ;;// porth.porth:801:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_12444: ;;// porth.porth:801:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12447
addr_12445: ;;// porth.porth:801:41: OP_PUSH_INT 41
    mov rax, 41
    push rax
addr_12446: ;;// porth.porth:802:3: OP_ELSE 34
    jmp addr_12480
addr_12447: ;;// porth.porth:802:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_12448: ;;// porth.porth:802:13: OP_INLINED 753
addr_12449: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_12450: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12451: ;;// std/std.porth:65:7: OP_INLINED 704
addr_12452: ;;// std/std.porth:58:38: OP_INLINED 684
addr_12453: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_12454: ;;// std/std.porth:56:57: OP_INLINED 36
addr_12455: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12456: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12457: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12458: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12459: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12460: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12461: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12462: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12463: ;;// std/std.porth:66:7: OP_INLINED 716
addr_12464: ;;// std/std.porth:59:37: OP_INLINED 694
addr_12465: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_12466: ;;// std/std.porth:57:55: OP_INLINED 36
addr_12467: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12468: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12469: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12470: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12471: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12472: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12473: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12474: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_12475: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_12476: ;;// porth.porth:802:18: OP_PUSH_STR 259
    mov rax, 8
    push rax
    lea rax, [str_259]
    push rax
addr_12477: ;;// porth.porth:802:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_12478: ;;// porth.porth:802:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12481
addr_12479: ;;// porth.porth:802:41: OP_PUSH_INT 42
    mov rax, 42
    push rax
addr_12480: ;;// porth.porth:803:3: OP_ELSE 34
    jmp addr_12514
addr_12481: ;;// porth.porth:803:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_12482: ;;// porth.porth:803:13: OP_INLINED 753
addr_12483: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_12484: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12485: ;;// std/std.porth:65:7: OP_INLINED 704
addr_12486: ;;// std/std.porth:58:38: OP_INLINED 684
addr_12487: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_12488: ;;// std/std.porth:56:57: OP_INLINED 36
addr_12489: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12490: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12491: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12492: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12493: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12494: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12495: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12496: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12497: ;;// std/std.porth:66:7: OP_INLINED 716
addr_12498: ;;// std/std.porth:59:37: OP_INLINED 694
addr_12499: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_12500: ;;// std/std.porth:57:55: OP_INLINED 36
addr_12501: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12502: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12503: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12504: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12505: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12506: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12507: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12508: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_12509: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_12510: ;;// porth.porth:803:18: OP_PUSH_STR 260
    mov rax, 8
    push rax
    lea rax, [str_260]
    push rax
addr_12511: ;;// porth.porth:803:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_12512: ;;// porth.porth:803:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12515
addr_12513: ;;// porth.porth:803:41: OP_PUSH_INT 43
    mov rax, 43
    push rax
addr_12514: ;;// porth.porth:804:3: OP_ELSE 34
    jmp addr_12548
addr_12515: ;;// porth.porth:804:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_12516: ;;// porth.porth:804:13: OP_INLINED 753
addr_12517: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_12518: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12519: ;;// std/std.porth:65:7: OP_INLINED 704
addr_12520: ;;// std/std.porth:58:38: OP_INLINED 684
addr_12521: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_12522: ;;// std/std.porth:56:57: OP_INLINED 36
addr_12523: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12524: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12525: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12526: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12527: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12528: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12529: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12530: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12531: ;;// std/std.porth:66:7: OP_INLINED 716
addr_12532: ;;// std/std.porth:59:37: OP_INLINED 694
addr_12533: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_12534: ;;// std/std.porth:57:55: OP_INLINED 36
addr_12535: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12536: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12537: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12538: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12539: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12540: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12541: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12542: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_12543: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_12544: ;;// porth.porth:804:18: OP_PUSH_STR 261
    mov rax, 8
    push rax
    lea rax, [str_261]
    push rax
addr_12545: ;;// porth.porth:804:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_12546: ;;// porth.porth:804:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12549
addr_12547: ;;// porth.porth:804:41: OP_PUSH_INT 44
    mov rax, 44
    push rax
addr_12548: ;;// porth.porth:805:3: OP_ELSE 34
    jmp addr_12582
addr_12549: ;;// porth.porth:805:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_12550: ;;// porth.porth:805:13: OP_INLINED 753
addr_12551: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_12552: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12553: ;;// std/std.porth:65:7: OP_INLINED 704
addr_12554: ;;// std/std.porth:58:38: OP_INLINED 684
addr_12555: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_12556: ;;// std/std.porth:56:57: OP_INLINED 36
addr_12557: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12558: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12559: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12560: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12561: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12562: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12563: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12564: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12565: ;;// std/std.porth:66:7: OP_INLINED 716
addr_12566: ;;// std/std.porth:59:37: OP_INLINED 694
addr_12567: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_12568: ;;// std/std.porth:57:55: OP_INLINED 36
addr_12569: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12570: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12571: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12572: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12573: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12574: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12575: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12576: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_12577: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_12578: ;;// porth.porth:805:18: OP_PUSH_STR 262
    mov rax, 8
    push rax
    lea rax, [str_262]
    push rax
addr_12579: ;;// porth.porth:805:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_12580: ;;// porth.porth:805:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12583
addr_12581: ;;// porth.porth:805:41: OP_PUSH_INT 45
    mov rax, 45
    push rax
addr_12582: ;;// porth.porth:806:3: OP_ELSE 34
    jmp addr_12616
addr_12583: ;;// porth.porth:806:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_12584: ;;// porth.porth:806:13: OP_INLINED 753
addr_12585: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_12586: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12587: ;;// std/std.porth:65:7: OP_INLINED 704
addr_12588: ;;// std/std.porth:58:38: OP_INLINED 684
addr_12589: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_12590: ;;// std/std.porth:56:57: OP_INLINED 36
addr_12591: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12592: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12593: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12594: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12595: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12596: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12597: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12598: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12599: ;;// std/std.porth:66:7: OP_INLINED 716
addr_12600: ;;// std/std.porth:59:37: OP_INLINED 694
addr_12601: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_12602: ;;// std/std.porth:57:55: OP_INLINED 36
addr_12603: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12604: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12605: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12606: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12607: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12608: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12609: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12610: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_12611: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_12612: ;;// porth.porth:806:18: OP_PUSH_STR 263
    mov rax, 8
    push rax
    lea rax, [str_263]
    push rax
addr_12613: ;;// porth.porth:806:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_12614: ;;// porth.porth:806:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12617
addr_12615: ;;// porth.porth:806:41: OP_PUSH_INT 46
    mov rax, 46
    push rax
addr_12616: ;;// porth.porth:807:3: OP_ELSE 34
    jmp addr_12650
addr_12617: ;;// porth.porth:807:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_12618: ;;// porth.porth:807:13: OP_INLINED 753
addr_12619: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_12620: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12621: ;;// std/std.porth:65:7: OP_INLINED 704
addr_12622: ;;// std/std.porth:58:38: OP_INLINED 684
addr_12623: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_12624: ;;// std/std.porth:56:57: OP_INLINED 36
addr_12625: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12626: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12627: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12628: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12629: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12630: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12631: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12632: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12633: ;;// std/std.porth:66:7: OP_INLINED 716
addr_12634: ;;// std/std.porth:59:37: OP_INLINED 694
addr_12635: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_12636: ;;// std/std.porth:57:55: OP_INLINED 36
addr_12637: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12638: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12639: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12640: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12641: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12642: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12643: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12644: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_12645: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_12646: ;;// porth.porth:807:18: OP_PUSH_STR 264
    mov rax, 8
    push rax
    lea rax, [str_264]
    push rax
addr_12647: ;;// porth.porth:807:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_12648: ;;// porth.porth:807:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12651
addr_12649: ;;// porth.porth:807:41: OP_PUSH_INT 47
    mov rax, 47
    push rax
addr_12650: ;;// porth.porth:808:3: OP_ELSE 34
    jmp addr_12684
addr_12651: ;;// porth.porth:808:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_12652: ;;// porth.porth:808:13: OP_INLINED 753
addr_12653: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_12654: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12655: ;;// std/std.porth:65:7: OP_INLINED 704
addr_12656: ;;// std/std.porth:58:38: OP_INLINED 684
addr_12657: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_12658: ;;// std/std.porth:56:57: OP_INLINED 36
addr_12659: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12660: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12661: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12662: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12663: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12664: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12665: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12666: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12667: ;;// std/std.porth:66:7: OP_INLINED 716
addr_12668: ;;// std/std.porth:59:37: OP_INLINED 694
addr_12669: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_12670: ;;// std/std.porth:57:55: OP_INLINED 36
addr_12671: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12672: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12673: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12674: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12675: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12676: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12677: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12678: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_12679: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_12680: ;;// porth.porth:808:18: OP_PUSH_STR 265
    mov rax, 8
    push rax
    lea rax, [str_265]
    push rax
addr_12681: ;;// porth.porth:808:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_12682: ;;// porth.porth:808:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12685
addr_12683: ;;// porth.porth:808:41: OP_PUSH_INT 48
    mov rax, 48
    push rax
addr_12684: ;;// porth.porth:809:3: OP_ELSE 34
    jmp addr_12718
addr_12685: ;;// porth.porth:809:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_12686: ;;// porth.porth:809:13: OP_INLINED 753
addr_12687: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_12688: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12689: ;;// std/std.porth:65:7: OP_INLINED 704
addr_12690: ;;// std/std.porth:58:38: OP_INLINED 684
addr_12691: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_12692: ;;// std/std.porth:56:57: OP_INLINED 36
addr_12693: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12694: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12695: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12696: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12697: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12698: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12699: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12700: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_12701: ;;// std/std.porth:66:7: OP_INLINED 716
addr_12702: ;;// std/std.porth:59:37: OP_INLINED 694
addr_12703: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_12704: ;;// std/std.porth:57:55: OP_INLINED 36
addr_12705: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12706: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12707: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12708: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12709: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12710: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12711: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_12712: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_12713: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_12714: ;;// porth.porth:809:18: OP_PUSH_STR 266
    mov rax, 3
    push rax
    lea rax, [str_266]
    push rax
addr_12715: ;;// porth.porth:809:31: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_12716: ;;// porth.porth:809:37: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12719
addr_12717: ;;// porth.porth:809:41: OP_PUSH_INT 49
    mov rax, 49
    push rax
addr_12718: ;;// porth.porth:810:3: OP_ELSE 4
    jmp addr_12722
addr_12719: ;;// porth.porth:811:5: OP_INTRINSIC drop
    pop rax
addr_12720: ;;// porth.porth:811:10: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_12721: ;;// porth.porth:811:16: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_12722: ;;// porth.porth:812:3: OP_END_IF 0
addr_12723: ;;// porth.porth:813:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12724: ;;// porth.porth:814:1: OP_RET 16
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 16
    ret
addr_12725: ;;// porth.porth:1034:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_12726: ;;// porth.porth:1040:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_12727: ;;// porth.porth:1040:12: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_12728: ;;// porth.porth:1040:31: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_12729: ;;// porth.porth:1040:33: OP_IF 3
    pop rax
    test rax, rax
    jz addr_12732
addr_12730: ;;// porth.porth:1040:37: OP_PUSH_STR 267
    mov rax, 11
    push rax
    lea rax, [str_267]
    push rax
addr_12731: ;;// porth.porth:1041:3: OP_ELSE 6
    jmp addr_12737
addr_12732: ;;// porth.porth:1041:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_12733: ;;// porth.porth:1041:12: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_12734: ;;// porth.porth:1041:31: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_12735: ;;// porth.porth:1041:33: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12738
addr_12736: ;;// porth.porth:1041:37: OP_PUSH_STR 268
    mov rax, 12
    push rax
    lea rax, [str_268]
    push rax
addr_12737: ;;// porth.porth:1042:3: OP_ELSE 6
    jmp addr_12743
addr_12738: ;;// porth.porth:1042:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_12739: ;;// porth.porth:1042:12: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_12740: ;;// porth.porth:1042:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_12741: ;;// porth.porth:1042:34: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12744
addr_12742: ;;// porth.porth:1042:38: OP_PUSH_STR 269
    mov rax, 13
    push rax
    lea rax, [str_269]
    push rax
addr_12743: ;;// porth.porth:1043:3: OP_ELSE 6
    jmp addr_12749
addr_12744: ;;// porth.porth:1043:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_12745: ;;// porth.porth:1043:12: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_12746: ;;// porth.porth:1043:33: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_12747: ;;// porth.porth:1043:35: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12750
addr_12748: ;;// porth.porth:1043:39: OP_PUSH_STR 270
    mov rax, 14
    push rax
    lea rax, [str_270]
    push rax
addr_12749: ;;// porth.porth:1044:3: OP_ELSE 6
    jmp addr_12755
addr_12750: ;;// porth.porth:1044:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_12751: ;;// porth.porth:1044:12: OP_PUSH_INT 4
    mov rax, 4
    push rax
addr_12752: ;;// porth.porth:1044:31: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_12753: ;;// porth.porth:1044:33: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12756
addr_12754: ;;// porth.porth:1044:37: OP_PUSH_STR 271
    mov rax, 11
    push rax
    lea rax, [str_271]
    push rax
addr_12755: ;;// porth.porth:1045:3: OP_ELSE 6
    jmp addr_12761
addr_12756: ;;// porth.porth:1045:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_12757: ;;// porth.porth:1045:12: OP_PUSH_INT 5
    mov rax, 5
    push rax
addr_12758: ;;// porth.porth:1045:31: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_12759: ;;// porth.porth:1045:33: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12762
addr_12760: ;;// porth.porth:1045:37: OP_PUSH_STR 272
    mov rax, 12
    push rax
    lea rax, [str_272]
    push rax
addr_12761: ;;// porth.porth:1046:3: OP_ELSE 6
    jmp addr_12767
addr_12762: ;;// porth.porth:1046:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_12763: ;;// porth.porth:1046:12: OP_PUSH_INT 7
    mov rax, 7
    push rax
addr_12764: ;;// porth.porth:1046:31: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_12765: ;;// porth.porth:1046:33: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12768
addr_12766: ;;// porth.porth:1046:37: OP_PUSH_STR 273
    mov rax, 18
    push rax
    lea rax, [str_273]
    push rax
addr_12767: ;;// porth.porth:1047:3: OP_ELSE 6
    jmp addr_12773
addr_12768: ;;// porth.porth:1047:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_12769: ;;// porth.porth:1047:12: OP_PUSH_INT 6
    mov rax, 6
    push rax
addr_12770: ;;// porth.porth:1047:31: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_12771: ;;// porth.porth:1047:33: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12774
addr_12772: ;;// porth.porth:1047:37: OP_PUSH_STR 274
    mov rax, 17
    push rax
    lea rax, [str_274]
    push rax
addr_12773: ;;// porth.porth:1048:3: OP_ELSE 6
    jmp addr_12779
addr_12774: ;;// porth.porth:1048:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_12775: ;;// porth.porth:1048:12: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_12776: ;;// porth.porth:1048:31: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_12777: ;;// porth.porth:1048:33: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12780
addr_12778: ;;// porth.porth:1048:37: OP_PUSH_STR 275
    mov rax, 11
    push rax
    lea rax, [str_275]
    push rax
addr_12779: ;;// porth.porth:1049:3: OP_ELSE 6
    jmp addr_12785
addr_12780: ;;// porth.porth:1049:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_12781: ;;// porth.porth:1049:12: OP_PUSH_INT 9
    mov rax, 9
    push rax
addr_12782: ;;// porth.porth:1049:31: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_12783: ;;// porth.porth:1049:33: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12786
addr_12784: ;;// porth.porth:1049:37: OP_PUSH_STR 276
    mov rax, 12
    push rax
    lea rax, [str_276]
    push rax
addr_12785: ;;// porth.porth:1050:3: OP_ELSE 6
    jmp addr_12791
addr_12786: ;;// porth.porth:1050:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_12787: ;;// porth.porth:1050:12: OP_PUSH_INT 22
    mov rax, 22
    push rax
addr_12788: ;;// porth.porth:1050:31: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_12789: ;;// porth.porth:1050:33: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12792
addr_12790: ;;// porth.porth:1050:37: OP_PUSH_STR 277
    mov rax, 12
    push rax
    lea rax, [str_277]
    push rax
addr_12791: ;;// porth.porth:1051:3: OP_ELSE 6
    jmp addr_12797
addr_12792: ;;// porth.porth:1051:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_12793: ;;// porth.porth:1051:12: OP_PUSH_INT 10
    mov rax, 10
    push rax
addr_12794: ;;// porth.porth:1051:31: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_12795: ;;// porth.porth:1051:33: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12798
addr_12796: ;;// porth.porth:1051:37: OP_PUSH_STR 278
    mov rax, 5
    push rax
    lea rax, [str_278]
    push rax
addr_12797: ;;// porth.porth:1052:3: OP_ELSE 6
    jmp addr_12803
addr_12798: ;;// porth.porth:1052:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_12799: ;;// porth.porth:1052:12: OP_PUSH_INT 11
    mov rax, 11
    push rax
addr_12800: ;;// porth.porth:1052:31: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_12801: ;;// porth.porth:1052:33: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12804
addr_12802: ;;// porth.porth:1052:37: OP_PUSH_STR 279
    mov rax, 9
    push rax
    lea rax, [str_279]
    push rax
addr_12803: ;;// porth.porth:1053:3: OP_ELSE 6
    jmp addr_12809
addr_12804: ;;// porth.porth:1053:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_12805: ;;// porth.porth:1053:12: OP_PUSH_INT 12
    mov rax, 12
    push rax
addr_12806: ;;// porth.porth:1053:31: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_12807: ;;// porth.porth:1053:33: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12810
addr_12808: ;;// porth.porth:1053:37: OP_PUSH_STR 280
    mov rax, 7
    push rax
    lea rax, [str_280]
    push rax
addr_12809: ;;// porth.porth:1054:3: OP_ELSE 6
    jmp addr_12815
addr_12810: ;;// porth.porth:1054:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_12811: ;;// porth.porth:1054:12: OP_PUSH_INT 13
    mov rax, 13
    push rax
addr_12812: ;;// porth.porth:1054:31: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_12813: ;;// porth.porth:1054:33: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12816
addr_12814: ;;// porth.porth:1054:37: OP_PUSH_STR 281
    mov rax, 9
    push rax
    lea rax, [str_281]
    push rax
addr_12815: ;;// porth.porth:1055:3: OP_ELSE 6
    jmp addr_12821
addr_12816: ;;// porth.porth:1055:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_12817: ;;// porth.porth:1055:12: OP_PUSH_INT 14
    mov rax, 14
    push rax
addr_12818: ;;// porth.porth:1055:31: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_12819: ;;// porth.porth:1055:33: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12822
addr_12820: ;;// porth.porth:1055:37: OP_PUSH_STR 282
    mov rax, 12
    push rax
    lea rax, [str_282]
    push rax
addr_12821: ;;// porth.porth:1056:3: OP_ELSE 6
    jmp addr_12827
addr_12822: ;;// porth.porth:1056:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_12823: ;;// porth.porth:1056:12: OP_PUSH_INT 15
    mov rax, 15
    push rax
addr_12824: ;;// porth.porth:1056:31: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_12825: ;;// porth.porth:1056:33: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12828
addr_12826: ;;// porth.porth:1056:37: OP_PUSH_STR 283
    mov rax, 12
    push rax
    lea rax, [str_283]
    push rax
addr_12827: ;;// porth.porth:1057:3: OP_ELSE 6
    jmp addr_12833
addr_12828: ;;// porth.porth:1057:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_12829: ;;// porth.porth:1057:12: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_12830: ;;// porth.porth:1057:31: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_12831: ;;// porth.porth:1057:33: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12834
addr_12832: ;;// porth.porth:1057:37: OP_PUSH_STR 284
    mov rax, 6
    push rax
    lea rax, [str_284]
    push rax
addr_12833: ;;// porth.porth:1058:3: OP_ELSE 6
    jmp addr_12839
addr_12834: ;;// porth.porth:1058:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_12835: ;;// porth.porth:1058:12: OP_PUSH_INT 17
    mov rax, 17
    push rax
addr_12836: ;;// porth.porth:1058:31: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_12837: ;;// porth.porth:1058:33: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12840
addr_12838: ;;// porth.porth:1058:37: OP_PUSH_STR 285
    mov rax, 7
    push rax
    lea rax, [str_285]
    push rax
addr_12839: ;;// porth.porth:1059:3: OP_ELSE 6
    jmp addr_12845
addr_12840: ;;// porth.porth:1059:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_12841: ;;// porth.porth:1059:12: OP_PUSH_INT 18
    mov rax, 18
    push rax
addr_12842: ;;// porth.porth:1059:31: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_12843: ;;// porth.porth:1059:33: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12846
addr_12844: ;;// porth.porth:1059:37: OP_PUSH_STR 286
    mov rax, 14
    push rax
    lea rax, [str_286]
    push rax
addr_12845: ;;// porth.porth:1060:3: OP_ELSE 6
    jmp addr_12851
addr_12846: ;;// porth.porth:1060:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_12847: ;;// porth.porth:1060:12: OP_PUSH_INT 19
    mov rax, 19
    push rax
addr_12848: ;;// porth.porth:1060:31: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_12849: ;;// porth.porth:1060:33: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12852
addr_12850: ;;// porth.porth:1060:37: OP_PUSH_STR 287
    mov rax, 10
    push rax
    lea rax, [str_287]
    push rax
addr_12851: ;;// porth.porth:1061:3: OP_ELSE 6
    jmp addr_12857
addr_12852: ;;// porth.porth:1061:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_12853: ;;// porth.porth:1061:12: OP_PUSH_INT 20
    mov rax, 20
    push rax
addr_12854: ;;// porth.porth:1061:31: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_12855: ;;// porth.porth:1061:33: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12858
addr_12856: ;;// porth.porth:1061:37: OP_PUSH_STR 288
    mov rax, 8
    push rax
    lea rax, [str_288]
    push rax
addr_12857: ;;// porth.porth:1062:3: OP_ELSE 6
    jmp addr_12863
addr_12858: ;;// porth.porth:1062:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_12859: ;;// porth.porth:1062:12: OP_PUSH_INT 21
    mov rax, 21
    push rax
addr_12860: ;;// porth.porth:1062:31: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_12861: ;;// porth.porth:1062:33: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12864
addr_12862: ;;// porth.porth:1062:37: OP_PUSH_STR 289
    mov rax, 5
    push rax
    lea rax, [str_289]
    push rax
addr_12863: ;;// porth.porth:1063:3: OP_ELSE 6
    jmp addr_12869
addr_12864: ;;// porth.porth:1063:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_12865: ;;// porth.porth:1063:12: OP_PUSH_INT 23
    mov rax, 23
    push rax
addr_12866: ;;// porth.porth:1063:31: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_12867: ;;// porth.porth:1063:33: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12870
addr_12868: ;;// porth.porth:1063:37: OP_PUSH_STR 290
    mov rax, 12
    push rax
    lea rax, [str_290]
    push rax
addr_12869: ;;// porth.porth:1064:3: OP_ELSE 6
    jmp addr_12875
addr_12870: ;;// porth.porth:1064:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_12871: ;;// porth.porth:1064:12: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_12872: ;;// porth.porth:1064:31: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_12873: ;;// porth.porth:1064:33: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12876
addr_12874: ;;// porth.porth:1064:37: OP_PUSH_STR 291
    mov rax, 11
    push rax
    lea rax, [str_291]
    push rax
addr_12875: ;;// porth.porth:1065:3: OP_ELSE 6
    jmp addr_12881
addr_12876: ;;// porth.porth:1065:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_12877: ;;// porth.porth:1065:12: OP_PUSH_INT 25
    mov rax, 25
    push rax
addr_12878: ;;// porth.porth:1065:31: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_12879: ;;// porth.porth:1065:33: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12882
addr_12880: ;;// porth.porth:1065:37: OP_PUSH_STR 292
    mov rax, 12
    push rax
    lea rax, [str_292]
    push rax
addr_12881: ;;// porth.porth:1066:3: OP_ELSE 6
    jmp addr_12887
addr_12882: ;;// porth.porth:1066:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_12883: ;;// porth.porth:1066:12: OP_PUSH_INT 27
    mov rax, 27
    push rax
addr_12884: ;;// porth.porth:1066:31: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_12885: ;;// porth.porth:1066:33: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12888
addr_12886: ;;// porth.porth:1066:37: OP_PUSH_STR 293
    mov rax, 9
    push rax
    lea rax, [str_293]
    push rax
addr_12887: ;;// porth.porth:1067:3: OP_ELSE 6
    jmp addr_12893
addr_12888: ;;// porth.porth:1067:8: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_12889: ;;// porth.porth:1067:12: OP_PUSH_INT 26
    mov rax, 26
    push rax
addr_12890: ;;// porth.porth:1067:31: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_12891: ;;// porth.porth:1067:33: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_12894
addr_12892: ;;// porth.porth:1067:37: OP_PUSH_STR 294
    mov rax, 12
    push rax
    lea rax, [str_294]
    push rax
addr_12893: ;;// porth.porth:1068:3: OP_ELSE 24
    jmp addr_12917
addr_12894: ;;// porth.porth:1069:5: OP_PUSH_STR 295
    mov rax, 18
    push rax
    lea rax, [str_295]
    push rax
addr_12895: ;;// porth.porth:1069:10: OP_INLINED 676
addr_12896: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_12897: ;;// std/std.porth:50:37: OP_INLINED 662
addr_12898: ;;// std/std.porth:48:34: OP_INLINED 394
addr_12899: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_12900: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_12901: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_12902: ;;// porth.porth:1069:16: OP_PUSH_STR 296
    mov rax, 18
    push rax
    lea rax, [str_296]
    push rax
addr_12903: ;;// porth.porth:1069:38: OP_INLINED 676
addr_12904: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_12905: ;;// std/std.porth:50:37: OP_INLINED 662
addr_12906: ;;// std/std.porth:48:34: OP_INLINED 394
addr_12907: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_12908: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_12909: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_12910: ;;// porth.porth:1069:44: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_12911: ;;// porth.porth:1069:46: OP_INLINED 418
addr_12912: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_12913: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_12914: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_12915: ;;// porth.porth:1070:5: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_12916: ;;// porth.porth:1070:7: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_12917: ;;// porth.porth:1071:3: OP_END_IF 0
addr_12918: ;;// porth.porth:1072:3: OP_INTRINSIC rot
    pop rax
    pop rbx
    pop rcx
    push rbx
    push rax
    push rcx
addr_12919: ;;// porth.porth:1072:7: OP_INTRINSIC drop
    pop rax
addr_12920: ;;// porth.porth:1073:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_12921: ;;// porth.porth:1084:6: OP_PREP_PROC 88
    sub rsp, 88
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_12922: ;;// porth.porth:1090:3: OP_PUSH_INT 72
    mov rax, 72
    push rax
addr_12923: ;;// porth.porth:1090:17: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12924: ;;// porth.porth:1090:22: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_12925: ;;// porth.porth:1090:25: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_12926: ;;// porth.porth:1090:34: OP_INLINED 36
addr_12927: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12928: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12929: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12930: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12931: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12932: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12933: ;;// porth.porth:1090:39: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_12934: ;;// porth.porth:1090:46: OP_INTRINSIC drop
    pop rax
addr_12935: ;;// porth.porth:1091:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_12936: ;;// porth.porth:1091:6: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_12937: ;;// porth.porth:1091:17: OP_INLINED 36
addr_12938: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12939: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12940: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12941: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12942: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12943: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12944: ;;// porth.porth:1091:22: OP_INLINED 30
addr_12945: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_12946: ;;// porth.porth:1092:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_12947: ;;// porth.porth:1092:6: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_12948: ;;// porth.porth:1092:14: OP_INLINED 36
addr_12949: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12950: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_12951: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12952: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_12953: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_12954: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_12955: ;;// porth.porth:1092:19: OP_INLINED 30
addr_12956: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_12957: ;;// porth.porth:1094:3: OP_PUSH_INT 88
    mov rax, 88
    push rax
addr_12958: ;;// porth.porth:1094:14: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_12959: ;;// porth.porth:1094:17: OP_PUSH_INT 65536
    mov rax, 65536
    push rax
addr_12960: ;;// porth.porth:1094:25: OP_PUSH_GLOBAL_MEM 8421432
    lea rax, [mem+8421432]
    push rax
addr_12961: ;;// porth.porth:1094:29: OP_PUSH_GLOBAL_MEM 8421424
    lea rax, [mem+8421424]
    push rax
addr_12962: ;;// porth.porth:1094:39: OP_CALL 2731
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2731
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_12963: ;;// porth.porth:1094:51: OP_INLINED 131
addr_12964: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_12965: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_12966: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12967: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_12968: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_12969: ;;// porth.porth:1094:56: OP_IF 22
    pop rax
    test rax, rax
    jz addr_12991
addr_12970: ;;// porth.porth:1095:5: OP_PUSH_STR 297
    mov rax, 18
    push rax
    lea rax, [str_297]
    push rax
addr_12971: ;;// porth.porth:1095:10: OP_INLINED 676
addr_12972: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_12973: ;;// std/std.porth:50:37: OP_INLINED 662
addr_12974: ;;// std/std.porth:48:34: OP_INLINED 394
addr_12975: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_12976: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_12977: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_12978: ;;// porth.porth:1095:16: OP_PUSH_STR 298
    mov rax, 22
    push rax
    lea rax, [str_298]
    push rax
addr_12979: ;;// porth.porth:1095:42: OP_INLINED 676
addr_12980: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_12981: ;;// std/std.porth:50:37: OP_INLINED 662
addr_12982: ;;// std/std.porth:48:34: OP_INLINED 394
addr_12983: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_12984: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_12985: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_12986: ;;// porth.porth:1095:48: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_12987: ;;// porth.porth:1095:50: OP_INLINED 418
addr_12988: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_12989: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_12990: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_12991: ;;// porth.porth:1096:3: OP_END_IF 0
addr_12992: ;;// porth.porth:1097:3: OP_INTRINSIC drop
    pop rax
addr_12993: ;;// porth.porth:1098:1: OP_RET 88
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 88
    ret
addr_12994: ;;// porth.porth:1100:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_12995: ;;// porth.porth:1103:3: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_12996: ;;// porth.porth:1103:7: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_12997: ;;// porth.porth:1103:18: OP_INLINED 36
addr_12998: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_12999: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13000: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13001: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13002: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13003: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13004: ;;// porth.porth:1103:23: OP_INLINED 16
addr_13005: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13006: ;;// porth.porth:1103:28: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13007: ;;// porth.porth:1104:3: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_13008: ;;// porth.porth:1104:7: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_13009: ;;// porth.porth:1104:18: OP_INLINED 36
addr_13010: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13011: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13012: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13013: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13014: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13015: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13016: ;;// porth.porth:1104:23: OP_INLINED 16
addr_13017: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13018: ;;// porth.porth:1104:28: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13019: ;;// porth.porth:1105:3: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_13020: ;;// porth.porth:1105:7: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_13021: ;;// porth.porth:1105:18: OP_INLINED 36
addr_13022: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13023: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13024: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13025: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13026: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13027: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13028: ;;// porth.porth:1105:28: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13029: ;;// porth.porth:1105:33: OP_INTRINSIC drop
    pop rax
addr_13030: ;;// porth.porth:1106:3: OP_CALL 12921
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_12921
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_13031: ;;// porth.porth:1107:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_13032: ;;// porth.porth:1109:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_13033: ;;// porth.porth:1110:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_13034: ;;// porth.porth:1111:5: OP_WHILE 221
addr_13035: ;;// porth.porth:1111:11: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_13036: ;;// porth.porth:1111:15: OP_PUSH_GLOBAL_MEM 8421424
    lea rax, [mem+8421424]
    push rax
addr_13037: ;;// porth.porth:1111:25: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13038: ;;// porth.porth:1111:29: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_13039: ;;// porth.porth:1111:31: OP_DO 216
    pop rax
    test rax, rax
    jz addr_13255
addr_13040: ;;// porth.porth:1112:7: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_13041: ;;// porth.porth:1112:11: OP_PUSH_INT 88
    mov rax, 88
    push rax
addr_13042: ;;// porth.porth:1112:22: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_13043: ;;// porth.porth:1112:24: OP_PUSH_GLOBAL_MEM 8421432
    lea rax, [mem+8421432]
    push rax
addr_13044: ;;// porth.porth:1112:28: OP_INLINED 73
addr_13045: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_13046: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13047: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_13048: ;;// porth.porth:1113:9: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_13049: ;;// porth.porth:1113:13: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_13050: ;;// porth.porth:1113:22: OP_INLINED 36
addr_13051: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13052: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13053: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13054: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13055: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13056: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13057: ;;// porth.porth:1113:27: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_13058: ;;// porth.porth:1113:37: OP_INLINED 36
addr_13059: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13060: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13061: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13062: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13063: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13064: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13065: ;;// porth.porth:1113:42: OP_INLINED 5280
addr_13066: ;;// porth.porth:31:27: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_13067: ;;// porth.porth:31:34: OP_INLINED 5195
addr_13068: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_13069: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_13070: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_13071: ;;// porth.porth:24:23: OP_INLINED 36
addr_13072: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13073: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13074: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13075: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13076: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13077: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13078: ;;// porth.porth:24:28: OP_INLINED 753
addr_13079: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_13080: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_13081: ;;// std/std.porth:65:7: OP_INLINED 704
addr_13082: ;;// std/std.porth:58:38: OP_INLINED 684
addr_13083: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_13084: ;;// std/std.porth:56:57: OP_INLINED 36
addr_13085: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13086: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13087: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13088: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13089: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13090: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13091: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13092: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_13093: ;;// std/std.porth:66:7: OP_INLINED 716
addr_13094: ;;// std/std.porth:59:37: OP_INLINED 694
addr_13095: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_13096: ;;// std/std.porth:57:55: OP_INLINED 36
addr_13097: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13098: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13099: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13100: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13101: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13102: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13103: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13104: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_13105: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_13106: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_13107: ;;// porth.porth:24:36: OP_INLINED 662
addr_13108: ;;// std/std.porth:48:34: OP_INLINED 394
addr_13109: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_13110: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_13111: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_13112: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_13113: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_13114: ;;// porth.porth:25:36: OP_INLINED 662
addr_13115: ;;// std/std.porth:48:34: OP_INLINED 394
addr_13116: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_13117: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_13118: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_13119: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_13120: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_13121: ;;// porth.porth:26:17: OP_INLINED 36
addr_13122: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13123: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13124: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13125: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13126: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13127: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13128: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13129: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_13130: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_13131: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_13132: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_13133: ;;// porth.porth:27:36: OP_INLINED 662
addr_13134: ;;// std/std.porth:48:34: OP_INLINED 394
addr_13135: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_13136: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_13137: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_13138: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_13139: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_13140: ;;// porth.porth:28:17: OP_INLINED 36
addr_13141: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13142: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13143: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13144: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13145: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13146: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13147: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13148: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_13149: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_13150: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_13151: ;;// porth.porth:1113:49: OP_PUSH_STR 299
    mov rax, 2
    push rax
    lea rax, [str_299]
    push rax
addr_13152: ;;// porth.porth:1113:54: OP_INLINED 668
addr_13153: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_13154: ;;// std/std.porth:49:36: OP_INLINED 662
addr_13155: ;;// std/std.porth:48:34: OP_INLINED 394
addr_13156: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_13157: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_13158: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_13159: ;;// porth.porth:1114:9: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_13160: ;;// porth.porth:1114:14: OP_INLINED 2111
addr_13161: ;;// std/std.porth:408:25: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_13162: ;;// std/std.porth:408:32: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_13163: ;;// porth.porth:1114:19: OP_PUSH_STR 300
    mov rax, 4
    push rax
    lea rax, [str_300]
    push rax
addr_13164: ;;// porth.porth:1114:26: OP_INLINED 668
addr_13165: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_13166: ;;// std/std.porth:49:36: OP_INLINED 662
addr_13167: ;;// std/std.porth:48:34: OP_INLINED 394
addr_13168: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_13169: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_13170: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_13171: ;;// porth.porth:1115:9: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_13172: ;;// porth.porth:1115:13: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_13173: ;;// porth.porth:1115:21: OP_INLINED 36
addr_13174: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13175: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13176: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13177: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13178: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13179: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13180: ;;// porth.porth:1115:26: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13181: ;;// porth.porth:1115:30: OP_CALL 12725
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_12725
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_13182: ;;// porth.porth:1115:45: OP_INLINED 668
addr_13183: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_13184: ;;// std/std.porth:49:36: OP_INLINED 662
addr_13185: ;;// std/std.porth:48:34: OP_INLINED 394
addr_13186: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_13187: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_13188: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_13189: ;;// porth.porth:1115:50: OP_PUSH_STR 301
    mov rax, 1
    push rax
    lea rax, [str_301]
    push rax
addr_13190: ;;// porth.porth:1115:54: OP_INLINED 668
addr_13191: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_13192: ;;// std/std.porth:49:36: OP_INLINED 662
addr_13193: ;;// std/std.porth:48:34: OP_INLINED 394
addr_13194: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_13195: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_13196: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_13197: ;;// porth.porth:1116:9: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_13198: ;;// porth.porth:1116:13: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_13199: ;;// porth.porth:1116:21: OP_INLINED 36
addr_13200: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13201: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13202: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13203: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13204: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13205: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13206: ;;// porth.porth:1116:26: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13207: ;;// porth.porth:1116:30: OP_PUSH_INT 22
    mov rax, 22
    push rax
addr_13208: ;;// porth.porth:1116:43: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_13209: ;;// porth.porth:1116:45: OP_IF 20
    pop rax
    test rax, rax
    jz addr_13229
addr_13210: ;;// porth.porth:1117:11: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_13211: ;;// porth.porth:1117:15: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_13212: ;;// porth.porth:1117:26: OP_INLINED 36
addr_13213: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13214: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13215: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13216: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13217: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13218: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13219: ;;// porth.porth:1117:31: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13220: ;;// porth.porth:1117:35: OP_CALL 10610
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_10610
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_13221: ;;// porth.porth:1117:50: OP_INLINED 668
addr_13222: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_13223: ;;// std/std.porth:49:36: OP_INLINED 662
addr_13224: ;;// std/std.porth:48:34: OP_INLINED 394
addr_13225: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_13226: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_13227: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_13228: ;;// porth.porth:1118:9: OP_ELSE 14
    jmp addr_13242
addr_13229: ;;// porth.porth:1119:11: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_13230: ;;// porth.porth:1119:15: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_13231: ;;// porth.porth:1119:26: OP_INLINED 36
addr_13232: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13233: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13234: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13235: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13236: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13237: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13238: ;;// porth.porth:1119:31: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13239: ;;// porth.porth:1119:35: OP_INLINED 2111
addr_13240: ;;// std/std.porth:408:25: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_13241: ;;// std/std.porth:408:32: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_13242: ;;// porth.porth:1120:9: OP_END_IF 0
addr_13243: ;;// porth.porth:1121:9: OP_PUSH_STR 302
    mov rax, 1
    push rax
    lea rax, [str_302]
    push rax
addr_13244: ;;// porth.porth:1121:14: OP_INLINED 668
addr_13245: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_13246: ;;// std/std.porth:49:36: OP_INLINED 662
addr_13247: ;;// std/std.porth:48:34: OP_INLINED 394
addr_13248: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_13249: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_13250: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_13251: ;;// porth.porth:1122:7: OP_INTRINSIC drop
    pop rax
addr_13252: ;;// porth.porth:1123:7: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_13253: ;;// porth.porth:1123:9: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13254: ;;// porth.porth:1124:5: OP_END_WHILE 220
    jmp addr_13034
addr_13255: ;;// porth.porth:1125:3: OP_INTRINSIC drop
    pop rax
addr_13256: ;;// porth.porth:1126:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_13257: ;;// porth.porth:1137:6: OP_PREP_PROC 16
    sub rsp, 16
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_13258: ;;// porth.porth:1143:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_13259: ;;// porth.porth:1143:10: OP_INLINED 782
addr_13260: ;;// std/std.porth:71:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_13261: ;;// std/std.porth:72:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_13262: ;;// std/std.porth:72:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_13263: ;;// std/std.porth:72:9: OP_INLINED 729
addr_13264: ;;// std/std.porth:60:35: OP_INLINED 684
addr_13265: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_13266: ;;// std/std.porth:56:57: OP_INLINED 36
addr_13267: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13268: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13269: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13270: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13271: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13272: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13273: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_13274: ;;// std/std.porth:73:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_13275: ;;// std/std.porth:73:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_13276: ;;// std/std.porth:73:9: OP_INLINED 741
addr_13277: ;;// std/std.porth:61:34: OP_INLINED 694
addr_13278: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_13279: ;;// std/std.porth:57:55: OP_INLINED 36
addr_13280: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13281: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13282: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13283: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13284: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13285: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13286: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_13287: ;;// std/std.porth:74:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_13288: ;;// porth.porth:1145:3: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_13289: ;;// porth.porth:1145:15: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_13290: ;;// porth.porth:1146:3: OP_PUSH_INT 2048
    mov rax, 2048
    push rax
addr_13291: ;;// porth.porth:1146:15: OP_PUSH_GLOBAL_MEM 14188608
    lea rax, [mem+14188608]
    push rax
addr_13292: ;;// porth.porth:1147:3: OP_PUSH_GLOBAL_MEM 14188600
    lea rax, [mem+14188600]
    push rax
addr_13293: ;;// porth.porth:1148:3: OP_CALL 2731
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2731
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_13294: ;;// porth.porth:1148:15: OP_INLINED 131
addr_13295: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_13296: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_13297: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13298: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_13299: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_13300: ;;// porth.porth:1148:20: OP_IF 22
    pop rax
    test rax, rax
    jz addr_13322
addr_13301: ;;// porth.porth:1149:5: OP_PUSH_STR 303
    mov rax, 18
    push rax
    lea rax, [str_303]
    push rax
addr_13302: ;;// porth.porth:1149:10: OP_INLINED 676
addr_13303: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_13304: ;;// std/std.porth:50:37: OP_INLINED 662
addr_13305: ;;// std/std.porth:48:34: OP_INLINED 394
addr_13306: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_13307: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_13308: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_13309: ;;// porth.porth:1149:16: OP_PUSH_STR 304
    mov rax, 43
    push rax
    lea rax, [str_304]
    push rax
addr_13310: ;;// porth.porth:1149:63: OP_INLINED 676
addr_13311: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_13312: ;;// std/std.porth:50:37: OP_INLINED 662
addr_13313: ;;// std/std.porth:48:34: OP_INLINED 394
addr_13314: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_13315: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_13316: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_13317: ;;// porth.porth:1150:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_13318: ;;// porth.porth:1150:7: OP_INLINED 418
addr_13319: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_13320: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_13321: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_13322: ;;// porth.porth:1151:3: OP_END_IF 0
addr_13323: ;;// porth.porth:1152:1: OP_RET 16
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 16
    ret
addr_13324: ;;// porth.porth:1169:6: OP_PREP_PROC 16
    sub rsp, 16
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_13325: ;;// porth.porth:1175:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_13326: ;;// porth.porth:1175:8: OP_INLINED 782
addr_13327: ;;// std/std.porth:71:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_13328: ;;// std/std.porth:72:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_13329: ;;// std/std.porth:72:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_13330: ;;// std/std.porth:72:9: OP_INLINED 729
addr_13331: ;;// std/std.porth:60:35: OP_INLINED 684
addr_13332: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_13333: ;;// std/std.porth:56:57: OP_INLINED 36
addr_13334: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13335: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13336: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13337: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13338: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13339: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13340: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_13341: ;;// std/std.porth:73:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_13342: ;;// std/std.porth:73:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_13343: ;;// std/std.porth:73:9: OP_INLINED 741
addr_13344: ;;// std/std.porth:61:34: OP_INLINED 694
addr_13345: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_13346: ;;// std/std.porth:57:55: OP_INLINED 36
addr_13347: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13348: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13349: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13350: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13351: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13352: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13353: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_13354: ;;// std/std.porth:74:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_13355: ;;// porth.porth:1177:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_13356: ;;// porth.porth:1177:5: OP_WHILE 93
addr_13357: ;;// porth.porth:1178:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_13358: ;;// porth.porth:1178:9: OP_PUSH_GLOBAL_MEM 14286912
    lea rax, [mem+14286912]
    push rax
addr_13359: ;;// porth.porth:1178:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13360: ;;// porth.porth:1178:26: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_13361: ;;// porth.porth:1178:28: OP_IF 82
    pop rax
    test rax, rax
    jz addr_13443
addr_13362: ;;// porth.porth:1179:7: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_13363: ;;// porth.porth:1179:11: OP_PUSH_INT 64
    mov rax, 64
    push rax
addr_13364: ;;// porth.porth:1179:25: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_13365: ;;// porth.porth:1179:27: OP_PUSH_GLOBAL_MEM 14221376
    lea rax, [mem+14221376]
    push rax
addr_13366: ;;// porth.porth:1179:34: OP_INLINED 73
addr_13367: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_13368: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13369: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_13370: ;;// porth.porth:1179:39: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_13371: ;;// porth.porth:1179:50: OP_INLINED 36
addr_13372: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13373: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13374: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13375: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13376: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13377: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13378: ;;// porth.porth:1179:55: OP_INLINED 753
addr_13379: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_13380: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_13381: ;;// std/std.porth:65:7: OP_INLINED 704
addr_13382: ;;// std/std.porth:58:38: OP_INLINED 684
addr_13383: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_13384: ;;// std/std.porth:56:57: OP_INLINED 36
addr_13385: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13386: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13387: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13388: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13389: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13390: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13391: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13392: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_13393: ;;// std/std.porth:66:7: OP_INLINED 716
addr_13394: ;;// std/std.porth:59:37: OP_INLINED 694
addr_13395: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_13396: ;;// std/std.porth:57:55: OP_INLINED 36
addr_13397: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13398: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13399: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13400: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13401: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13402: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13403: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13404: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_13405: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_13406: ;;// porth.porth:1180:7: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_13407: ;;// porth.porth:1180:12: OP_INLINED 753
addr_13408: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_13409: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_13410: ;;// std/std.porth:65:7: OP_INLINED 704
addr_13411: ;;// std/std.porth:58:38: OP_INLINED 684
addr_13412: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_13413: ;;// std/std.porth:56:57: OP_INLINED 36
addr_13414: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13415: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13416: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13417: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13418: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13419: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13420: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13421: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_13422: ;;// std/std.porth:66:7: OP_INLINED 716
addr_13423: ;;// std/std.porth:59:37: OP_INLINED 694
addr_13424: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_13425: ;;// std/std.porth:57:55: OP_INLINED 36
addr_13426: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13427: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13428: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13429: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13430: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13431: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13432: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13433: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_13434: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_13435: ;;// porth.porth:1181:7: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_13436: ;;// porth.porth:1182:7: OP_INLINED 131
addr_13437: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_13438: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_13439: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13440: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_13441: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_13442: ;;// porth.porth:1183:5: OP_ELSE 2
    jmp addr_13444
addr_13443: ;;// porth.porth:1183:10: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_13444: ;;// porth.porth:1183:16: OP_END_IF 0
addr_13445: ;;// porth.porth:1184:3: OP_DO 4
    pop rax
    test rax, rax
    jz addr_13449
addr_13446: ;;// porth.porth:1184:6: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_13447: ;;// porth.porth:1184:8: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13448: ;;// porth.porth:1184:10: OP_END_WHILE 92
    jmp addr_13356
addr_13449: ;;// porth.porth:1186:3: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_13450: ;;// porth.porth:1186:7: OP_PUSH_GLOBAL_MEM 14286912
    lea rax, [mem+14286912]
    push rax
addr_13451: ;;// porth.porth:1186:20: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13452: ;;// porth.porth:1186:24: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_13453: ;;// porth.porth:1186:26: OP_IF 9
    pop rax
    test rax, rax
    jz addr_13462
addr_13454: ;;// porth.porth:1187:5: OP_PUSH_INT 64
    mov rax, 64
    push rax
addr_13455: ;;// porth.porth:1187:19: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_13456: ;;// porth.porth:1187:21: OP_PUSH_GLOBAL_MEM 14221376
    lea rax, [mem+14221376]
    push rax
addr_13457: ;;// porth.porth:1187:28: OP_INLINED 73
addr_13458: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_13459: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13460: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_13461: ;;// porth.porth:1188:3: OP_ELSE 3
    jmp addr_13464
addr_13462: ;;// porth.porth:1189:5: OP_INTRINSIC drop
    pop rax
addr_13463: ;;// porth.porth:1189:10: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_13464: ;;// porth.porth:1190:3: OP_END_IF 0
addr_13465: ;;// porth.porth:1191:1: OP_RET 16
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 16
    ret
addr_13466: ;;// porth.porth:1193:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_13467: ;;// porth.porth:1196:3: OP_PUSH_INT 64
    mov rax, 64
    push rax
addr_13468: ;;// porth.porth:1196:17: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13469: ;;// porth.porth:1196:22: OP_PUSH_INT 1024
    mov rax, 1024
    push rax
addr_13470: ;;// porth.porth:1196:32: OP_PUSH_GLOBAL_MEM 14221376
    lea rax, [mem+14221376]
    push rax
addr_13471: ;;// porth.porth:1196:39: OP_PUSH_GLOBAL_MEM 14286912
    lea rax, [mem+14286912]
    push rax
addr_13472: ;;// porth.porth:1196:52: OP_CALL 2731
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2731
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_13473: ;;// porth.porth:1196:64: OP_INLINED 131
addr_13474: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_13475: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_13476: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13477: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_13478: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_13479: ;;// porth.porth:1196:69: OP_IF 22
    pop rax
    test rax, rax
    jz addr_13501
addr_13480: ;;// porth.porth:1197:5: OP_PUSH_STR 305
    mov rax, 18
    push rax
    lea rax, [str_305]
    push rax
addr_13481: ;;// porth.porth:1197:10: OP_INLINED 676
addr_13482: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_13483: ;;// std/std.porth:50:37: OP_INLINED 662
addr_13484: ;;// std/std.porth:48:34: OP_INLINED 394
addr_13485: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_13486: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_13487: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_13488: ;;// porth.porth:1197:16: OP_PUSH_STR 306
    mov rax, 49
    push rax
    lea rax, [str_306]
    push rax
addr_13489: ;;// porth.porth:1197:69: OP_INLINED 676
addr_13490: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_13491: ;;// std/std.porth:50:37: OP_INLINED 662
addr_13492: ;;// std/std.porth:48:34: OP_INLINED 394
addr_13493: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_13494: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_13495: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_13496: ;;// porth.porth:1198:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_13497: ;;// porth.porth:1198:7: OP_INLINED 418
addr_13498: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_13499: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_13500: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_13501: ;;// porth.porth:1199:3: OP_END_IF 0
addr_13502: ;;// porth.porth:1200:3: OP_INTRINSIC drop
    pop rax
addr_13503: ;;// porth.porth:1201:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_13504: ;;// porth.porth:1218:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_13505: ;;// porth.porth:1219:3: OP_PUSH_GLOBAL_MEM 15073352
    lea rax, [mem+15073352]
    push rax
addr_13506: ;;// porth.porth:1219:25: OP_INLINED 16
addr_13507: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13508: ;;// porth.porth:1219:30: OP_PUSH_INT 16384
    mov rax, 16384
    push rax
addr_13509: ;;// porth.porth:1219:50: OP_INTRINSIC >=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovge rcx, rdx
    push rcx
addr_13510: ;;// porth.porth:1219:53: OP_IF 22
    pop rax
    test rax, rax
    jz addr_13532
addr_13511: ;;// porth.porth:1220:5: OP_PUSH_STR 307
    mov rax, 18
    push rax
    lea rax, [str_307]
    push rax
addr_13512: ;;// porth.porth:1220:10: OP_INLINED 676
addr_13513: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_13514: ;;// std/std.porth:50:37: OP_INLINED 662
addr_13515: ;;// std/std.porth:48:34: OP_INLINED 394
addr_13516: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_13517: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_13518: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_13519: ;;// porth.porth:1220:16: OP_PUSH_STR 308
    mov rax, 152
    push rax
    lea rax, [str_308]
    push rax
addr_13520: ;;// porth.porth:1220:172: OP_INLINED 676
addr_13521: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_13522: ;;// std/std.porth:50:37: OP_INLINED 662
addr_13523: ;;// std/std.porth:48:34: OP_INLINED 394
addr_13524: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_13525: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_13526: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_13527: ;;// porth.porth:1221:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_13528: ;;// porth.porth:1221:7: OP_INLINED 418
addr_13529: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_13530: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_13531: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_13532: ;;// porth.porth:1222:3: OP_END_IF 0
addr_13533: ;;// porth.porth:1224:3: OP_PUSH_GLOBAL_MEM 15073352
    lea rax, [mem+15073352]
    push rax
addr_13534: ;;// porth.porth:1224:25: OP_INLINED 16
addr_13535: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13536: ;;// porth.porth:1225:3: OP_PUSH_INT 48
    mov rax, 48
    push rax
addr_13537: ;;// porth.porth:1225:21: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_13538: ;;// porth.porth:1226:3: OP_PUSH_GLOBAL_MEM 14286920
    lea rax, [mem+14286920]
    push rax
addr_13539: ;;// porth.porth:1226:19: OP_INLINED 73
addr_13540: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_13541: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13542: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_13543: ;;// porth.porth:1228:3: OP_PUSH_GLOBAL_MEM 15073352
    lea rax, [mem+15073352]
    push rax
addr_13544: ;;// porth.porth:1228:25: OP_INLINED 161
addr_13545: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_13546: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13547: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_13548: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13549: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13550: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_13551: ;;// porth.porth:1229:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_13552: ;;// porth.porth:1231:6: OP_PREP_PROC 16
    sub rsp, 16
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_13553: ;;// porth.porth:1237:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_13554: ;;// porth.porth:1237:9: OP_INLINED 27
addr_13555: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_13556: ;;// porth.porth:1240:3: OP_CALL 13504
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13504
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_13557: ;;// porth.porth:1240:20: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_13558: ;;// porth.porth:1240:28: OP_INLINED 27
addr_13559: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_13560: ;;// porth.porth:1242:3: OP_PUSH_INT 32
    mov rax, 32
    push rax
addr_13561: ;;// porth.porth:1242:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13562: ;;// porth.porth:1242:20: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_13563: ;;// porth.porth:1242:28: OP_INLINED 0
addr_13564: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13565: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_13566: ;;// porth.porth:1242:33: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_13567: ;;// porth.porth:1242:47: OP_INLINED 36
addr_13568: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13569: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13570: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13571: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13572: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13573: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13574: ;;// porth.porth:1242:52: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_13575: ;;// porth.porth:1242:59: OP_INTRINSIC drop
    pop rax
addr_13576: ;;// porth.porth:1243:3: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_13577: ;;// porth.porth:1243:11: OP_INLINED 0
addr_13578: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13579: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_13580: ;;// porth.porth:1243:16: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_13581: ;;// porth.porth:1243:31: OP_INLINED 36
addr_13582: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13583: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13584: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13585: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13586: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13587: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13588: ;;// porth.porth:1243:36: OP_INLINED 30
addr_13589: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_13590: ;;// porth.porth:1245:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_13591: ;;// porth.porth:1245:11: OP_INLINED 0
addr_13592: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13593: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_13594: ;;// porth.porth:1245:16: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_13595: ;;// porth.porth:1245:31: OP_INLINED 36
addr_13596: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13597: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13598: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13599: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13600: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13601: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13602: ;;// porth.porth:1245:36: OP_INLINED 0
addr_13603: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13604: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_13605: ;;// porth.porth:1246:3: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_13606: ;;// porth.porth:1246:11: OP_INLINED 0
addr_13607: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13608: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_13609: ;;// porth.porth:1246:16: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_13610: ;;// porth.porth:1246:31: OP_INLINED 36
addr_13611: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13612: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13613: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13614: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13615: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13616: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13617: ;;// porth.porth:1246:36: OP_INLINED 27
addr_13618: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_13619: ;;// porth.porth:1248:3: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_13620: ;;// porth.porth:1248:11: OP_INLINED 0
addr_13621: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13622: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_13623: ;;// porth.porth:1249:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_13624: ;;// porth.porth:1249:11: OP_INLINED 0
addr_13625: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13626: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_13627: ;;// porth.porth:1249:16: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_13628: ;;// porth.porth:1249:30: OP_INLINED 36
addr_13629: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13630: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13631: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13632: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13633: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13634: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13635: ;;// porth.porth:1249:35: OP_INLINED 27
addr_13636: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_13637: ;;// porth.porth:1251:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_13638: ;;// porth.porth:1251:11: OP_INLINED 0
addr_13639: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13640: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_13641: ;;// porth.porth:1251:16: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_13642: ;;// porth.porth:1251:32: OP_INLINED 36
addr_13643: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13644: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13645: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13646: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13647: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13648: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13649: ;;// porth.porth:1251:37: OP_INLINED 161
addr_13650: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_13651: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13652: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_13653: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13654: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13655: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_13656: ;;// porth.porth:1252:1: OP_RET 16
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 16
    ret
addr_13657: ;;// porth.porth:1254:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_13658: ;;// porth.porth:1258:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13659: ;;// porth.porth:1259:3: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_13660: ;;// porth.porth:1259:8: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_13661: ;;// porth.porth:1259:23: OP_INLINED 36
addr_13662: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13663: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13664: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13665: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13666: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13667: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13668: ;;// porth.porth:1259:28: OP_INLINED 16
addr_13669: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13670: ;;// porth.porth:1260:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13671: ;;// porth.porth:1260:8: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_13672: ;;// porth.porth:1260:22: OP_INLINED 36
addr_13673: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13674: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13675: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13676: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13677: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13678: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13679: ;;// porth.porth:1261:3: OP_INTRINSIC rot
    pop rax
    pop rbx
    pop rcx
    push rbx
    push rax
    push rcx
addr_13680: ;;// porth.porth:1262:3: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_13681: ;;// porth.porth:1263:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_13682: ;;// porth.porth:1265:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_13683: ;;// porth.porth:1268:3: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_13684: ;;// porth.porth:1268:7: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_13685: ;;// porth.porth:1268:23: OP_INLINED 36
addr_13686: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13687: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13688: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13689: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13690: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13691: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13692: ;;// porth.porth:1268:28: OP_INLINED 169
addr_13693: ;;// std/core.porth:108:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_13694: ;;// std/core.porth:108:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13695: ;;// std/core.porth:108:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_13696: ;;// std/core.porth:108:36: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_13697: ;;// std/core.porth:108:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13698: ;;// std/core.porth:108:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_13699: ;;// porth.porth:1269:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_13700: ;;// porth.porth:1269:17: OP_INLINED 36
addr_13701: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13702: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13703: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13704: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13705: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13706: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13707: ;;// porth.porth:1270:3: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_13708: ;;// porth.porth:1270:7: OP_INLINED 0
addr_13709: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13710: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_13711: ;;// porth.porth:1270:12: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_13712: ;;// porth.porth:1270:17: OP_INLINED 52
addr_13713: ;;// std/core.porth:46:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13714: ;;// std/core.porth:46:8: OP_INTRINSIC cast(int)
addr_13715: ;;// std/core.porth:47:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13716: ;;// std/core.porth:47:8: OP_INTRINSIC cast(int)
addr_13717: ;;// std/core.porth:48:3: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_13718: ;;// porth.porth:1270:23: OP_IF 20
    pop rax
    test rax, rax
    jz addr_13738
addr_13719: ;;// porth.porth:1271:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_13720: ;;// porth.porth:1271:9: OP_INLINED 0
addr_13721: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13722: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_13723: ;;// porth.porth:1271:14: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_13724: ;;// porth.porth:1271:29: OP_INLINED 36
addr_13725: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13726: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13727: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13728: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13729: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13730: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13731: ;;// porth.porth:1271:34: OP_INLINED 0
addr_13732: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13733: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_13734: ;;// porth.porth:1272:5: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13735: ;;// porth.porth:1273:5: OP_INLINED 27
addr_13736: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_13737: ;;// porth.porth:1274:3: OP_ELSE 2
    jmp addr_13739
addr_13738: ;;// porth.porth:1274:8: OP_INTRINSIC drop
    pop rax
addr_13739: ;;// porth.porth:1274:13: OP_END_IF 0
addr_13740: ;;// porth.porth:1275:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_13741: ;;// porth.porth:1277:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_13742: ;;// porth.porth:1277:39: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_13743: ;;// porth.porth:1277:53: OP_INLINED 36
addr_13744: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13745: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13746: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13747: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13748: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13749: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13750: ;;// porth.porth:1277:58: OP_INLINED 0
addr_13751: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13752: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_13753: ;;// porth.porth:1277:63: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_13754: ;;// porth.porth:1277:68: OP_INLINED 59
addr_13755: ;;// std/core.porth:52:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13756: ;;// std/core.porth:52:8: OP_INTRINSIC cast(int)
addr_13757: ;;// std/core.porth:53:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13758: ;;// std/core.porth:53:8: OP_INTRINSIC cast(int)
addr_13759: ;;// std/core.porth:54:3: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_13760: ;;// porth.porth:1277:73: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_13761: ;;// porth.porth:1279:6: OP_PREP_PROC 8
    sub rsp, 8
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_13762: ;;// porth.porth:1284:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_13763: ;;// porth.porth:1284:6: OP_INLINED 30
addr_13764: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_13765: ;;// porth.porth:1285:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_13766: ;;// porth.porth:1285:17: OP_INLINED 36
addr_13767: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13768: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13769: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13770: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13771: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13772: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13773: ;;// porth.porth:1285:22: OP_INLINED 0
addr_13774: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13775: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_13776: ;;// porth.porth:1286:5: OP_WHILE 156
addr_13777: ;;// porth.porth:1286:11: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_13778: ;;// porth.porth:1286:15: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_13779: ;;// porth.porth:1286:20: OP_INLINED 52
addr_13780: ;;// std/core.porth:46:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13781: ;;// std/core.porth:46:8: OP_INTRINSIC cast(int)
addr_13782: ;;// std/core.porth:47:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13783: ;;// std/core.porth:47:8: OP_INTRINSIC cast(int)
addr_13784: ;;// std/core.porth:48:3: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_13785: ;;// porth.porth:1286:26: OP_DO 147
    pop rax
    test rax, rax
    jz addr_13932
addr_13786: ;;// porth.porth:1287:7: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_13787: ;;// porth.porth:1287:11: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_13788: ;;// porth.porth:1287:25: OP_INLINED 36
addr_13789: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13790: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13791: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13792: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13793: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13794: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13795: ;;// porth.porth:1287:50: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_13796: ;;// porth.porth:1287:53: OP_INLINED 16
addr_13797: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13798: ;;// porth.porth:1287:58: OP_INLINED 5195
addr_13799: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_13800: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_13801: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_13802: ;;// porth.porth:24:23: OP_INLINED 36
addr_13803: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13804: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13805: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13806: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13807: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13808: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13809: ;;// porth.porth:24:28: OP_INLINED 753
addr_13810: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_13811: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_13812: ;;// std/std.porth:65:7: OP_INLINED 704
addr_13813: ;;// std/std.porth:58:38: OP_INLINED 684
addr_13814: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_13815: ;;// std/std.porth:56:57: OP_INLINED 36
addr_13816: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13817: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13818: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13819: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13820: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13821: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13822: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13823: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_13824: ;;// std/std.porth:66:7: OP_INLINED 716
addr_13825: ;;// std/std.porth:59:37: OP_INLINED 694
addr_13826: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_13827: ;;// std/std.porth:57:55: OP_INLINED 36
addr_13828: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13829: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13830: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13831: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13832: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13833: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13834: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13835: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_13836: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_13837: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_13838: ;;// porth.porth:24:36: OP_INLINED 662
addr_13839: ;;// std/std.porth:48:34: OP_INLINED 394
addr_13840: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_13841: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_13842: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_13843: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_13844: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_13845: ;;// porth.porth:25:36: OP_INLINED 662
addr_13846: ;;// std/std.porth:48:34: OP_INLINED 394
addr_13847: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_13848: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_13849: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_13850: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_13851: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_13852: ;;// porth.porth:26:17: OP_INLINED 36
addr_13853: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13854: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13855: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13856: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13857: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13858: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13859: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13860: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_13861: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_13862: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_13863: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_13864: ;;// porth.porth:27:36: OP_INLINED 662
addr_13865: ;;// std/std.porth:48:34: OP_INLINED 394
addr_13866: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_13867: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_13868: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_13869: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_13870: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_13871: ;;// porth.porth:28:17: OP_INLINED 36
addr_13872: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13873: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13874: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13875: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13876: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13877: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13878: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13879: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_13880: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_13881: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_13882: ;;// porth.porth:1288:7: OP_PUSH_STR 309
    mov rax, 14
    push rax
    lea rax, [str_309]
    push rax
addr_13883: ;;// porth.porth:1288:50: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_13884: ;;// porth.porth:1288:53: OP_INLINED 16
addr_13885: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13886: ;;// porth.porth:1288:58: OP_INLINED 662
addr_13887: ;;// std/std.porth:48:34: OP_INLINED 394
addr_13888: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_13889: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_13890: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_13891: ;;// porth.porth:1289:7: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_13892: ;;// porth.porth:1289:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_13893: ;;// porth.porth:1289:26: OP_INLINED 36
addr_13894: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13895: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13896: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13897: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13898: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13899: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13900: ;;// porth.porth:1289:31: OP_INLINED 16
addr_13901: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13902: ;;// porth.porth:1289:36: OP_CALL 10541
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_10541
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_13903: ;;// porth.porth:1289:50: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_13904: ;;// porth.porth:1289:53: OP_INLINED 16
addr_13905: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13906: ;;// porth.porth:1289:58: OP_INLINED 662
addr_13907: ;;// std/std.porth:48:34: OP_INLINED 394
addr_13908: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_13909: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_13910: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_13911: ;;// porth.porth:1290:7: OP_PUSH_STR 310
    mov rax, 2
    push rax
    lea rax, [str_310]
    push rax
addr_13912: ;;// porth.porth:1290:50: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_13913: ;;// porth.porth:1290:53: OP_INLINED 16
addr_13914: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13915: ;;// porth.porth:1290:58: OP_INLINED 662
addr_13916: ;;// std/std.porth:48:34: OP_INLINED 394
addr_13917: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_13918: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_13919: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_13920: ;;// porth.porth:1292:7: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_13921: ;;// porth.porth:1292:22: OP_INLINED 36
addr_13922: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13923: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13924: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13925: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13926: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13927: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13928: ;;// porth.porth:1292:27: OP_INLINED 0
addr_13929: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13930: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_13931: ;;// porth.porth:1293:5: OP_END_WHILE 155
    jmp addr_13776
addr_13932: ;;// porth.porth:1294:3: OP_INTRINSIC drop
    pop rax
addr_13933: ;;// porth.porth:1295:1: OP_RET 8
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 8
    ret
addr_13934: ;;// porth.porth:1297:6: OP_PREP_PROC 8
    sub rsp, 8
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_13935: ;;// porth.porth:1303:3: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_13936: ;;// porth.porth:1303:21: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_13937: ;;// porth.porth:1303:31: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_13938: ;;// porth.porth:1303:36: OP_INLINED 27
addr_13939: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_13940: ;;// porth.porth:1305:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_13941: ;;// porth.porth:1305:17: OP_INLINED 36
addr_13942: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13943: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13944: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13945: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13946: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13947: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13948: ;;// porth.porth:1305:22: OP_INLINED 0
addr_13949: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13950: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_13951: ;;// porth.porth:1306:5: OP_WHILE 47
addr_13952: ;;// porth.porth:1306:11: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_13953: ;;// porth.porth:1306:15: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_13954: ;;// porth.porth:1306:20: OP_INLINED 52
addr_13955: ;;// std/core.porth:46:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13956: ;;// std/core.porth:46:8: OP_INTRINSIC cast(int)
addr_13957: ;;// std/core.porth:47:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13958: ;;// std/core.porth:47:8: OP_INTRINSIC cast(int)
addr_13959: ;;// std/core.porth:48:3: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_13960: ;;// porth.porth:1306:26: OP_DO 38
    pop rax
    test rax, rax
    jz addr_13998
addr_13961: ;;// porth.porth:1307:7: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_13962: ;;// porth.porth:1307:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_13963: ;;// porth.porth:1307:26: OP_INLINED 36
addr_13964: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13965: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13966: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13967: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13968: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13969: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13970: ;;// porth.porth:1307:31: OP_INLINED 16
addr_13971: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13972: ;;// porth.porth:1308:7: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_13973: ;;// porth.porth:1308:12: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_13974: ;;// porth.porth:1308:26: OP_INLINED 36
addr_13975: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13976: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13977: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13978: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13979: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13980: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13981: ;;// porth.porth:1309:7: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_13982: ;;// porth.porth:1309:12: OP_INLINED 0
addr_13983: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13984: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_13985: ;;// porth.porth:1310:7: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_13986: ;;// porth.porth:1312:7: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_13987: ;;// porth.porth:1312:22: OP_INLINED 36
addr_13988: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13989: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_13990: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_13991: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_13992: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_13993: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_13994: ;;// porth.porth:1312:27: OP_INLINED 0
addr_13995: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_13996: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_13997: ;;// porth.porth:1313:5: OP_END_WHILE 46
    jmp addr_13951
addr_13998: ;;// porth.porth:1314:3: OP_INTRINSIC drop
    pop rax
addr_13999: ;;// porth.porth:1316:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_14000: ;;// porth.porth:1316:8: OP_INLINED 0
addr_14001: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_14002: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_14003: ;;// porth.porth:1317:1: OP_RET 8
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 8
    ret
addr_14004: ;;// porth.porth:1343:6: OP_PREP_PROC 16
    sub rsp, 16
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14005: ;;// porth.porth:1349:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_14006: ;;// porth.porth:1349:8: OP_INLINED 782
addr_14007: ;;// std/std.porth:71:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_14008: ;;// std/std.porth:72:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14009: ;;// std/std.porth:72:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_14010: ;;// std/std.porth:72:9: OP_INLINED 729
addr_14011: ;;// std/std.porth:60:35: OP_INLINED 684
addr_14012: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_14013: ;;// std/std.porth:56:57: OP_INLINED 36
addr_14014: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14015: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_14016: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14017: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_14018: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14019: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_14020: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_14021: ;;// std/std.porth:73:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_14022: ;;// std/std.porth:73:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_14023: ;;// std/std.porth:73:9: OP_INLINED 741
addr_14024: ;;// std/std.porth:61:34: OP_INLINED 694
addr_14025: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_14026: ;;// std/std.porth:57:55: OP_INLINED 36
addr_14027: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14028: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_14029: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14030: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_14031: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14032: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_14033: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_14034: ;;// std/std.porth:74:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_14035: ;;// porth.porth:1351:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_14036: ;;// porth.porth:1351:5: OP_WHILE 93
addr_14037: ;;// porth.porth:1352:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_14038: ;;// porth.porth:1352:9: OP_PUSH_GLOBAL_MEM 15073360
    lea rax, [mem+15073360]
    push rax
addr_14039: ;;// porth.porth:1352:21: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_14040: ;;// porth.porth:1352:25: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_14041: ;;// porth.porth:1352:27: OP_IF 82
    pop rax
    test rax, rax
    jz addr_14123
addr_14042: ;;// porth.porth:1353:7: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_14043: ;;// porth.porth:1353:11: OP_PUSH_INT 120
    mov rax, 120
    push rax
addr_14044: ;;// porth.porth:1353:24: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_14045: ;;// porth.porth:1353:26: OP_PUSH_GLOBAL_MEM 15073368
    lea rax, [mem+15073368]
    push rax
addr_14046: ;;// porth.porth:1353:32: OP_INLINED 73
addr_14047: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_14048: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14049: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_14050: ;;// porth.porth:1353:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_14051: ;;// porth.porth:1353:47: OP_INLINED 36
addr_14052: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14053: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_14054: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14055: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_14056: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14057: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_14058: ;;// porth.porth:1353:52: OP_INLINED 753
addr_14059: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_14060: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14061: ;;// std/std.porth:65:7: OP_INLINED 704
addr_14062: ;;// std/std.porth:58:38: OP_INLINED 684
addr_14063: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_14064: ;;// std/std.porth:56:57: OP_INLINED 36
addr_14065: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14066: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_14067: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14068: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_14069: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14070: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_14071: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_14072: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14073: ;;// std/std.porth:66:7: OP_INLINED 716
addr_14074: ;;// std/std.porth:59:37: OP_INLINED 694
addr_14075: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_14076: ;;// std/std.porth:57:55: OP_INLINED 36
addr_14077: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14078: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_14079: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14080: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_14081: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14082: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_14083: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_14084: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_14085: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_14086: ;;// porth.porth:1354:7: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_14087: ;;// porth.porth:1354:12: OP_INLINED 753
addr_14088: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_14089: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14090: ;;// std/std.porth:65:7: OP_INLINED 704
addr_14091: ;;// std/std.porth:58:38: OP_INLINED 684
addr_14092: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_14093: ;;// std/std.porth:56:57: OP_INLINED 36
addr_14094: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14095: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_14096: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14097: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_14098: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14099: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_14100: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_14101: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14102: ;;// std/std.porth:66:7: OP_INLINED 716
addr_14103: ;;// std/std.porth:59:37: OP_INLINED 694
addr_14104: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_14105: ;;// std/std.porth:57:55: OP_INLINED 36
addr_14106: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14107: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_14108: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14109: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_14110: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14111: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_14112: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_14113: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_14114: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_14115: ;;// porth.porth:1355:7: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14116: ;;// porth.porth:1356:7: OP_INLINED 131
addr_14117: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_14118: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_14119: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14120: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_14121: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_14122: ;;// porth.porth:1357:5: OP_ELSE 2
    jmp addr_14124
addr_14123: ;;// porth.porth:1357:10: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_14124: ;;// porth.porth:1357:16: OP_END_IF 0
addr_14125: ;;// porth.porth:1358:3: OP_DO 4
    pop rax
    test rax, rax
    jz addr_14129
addr_14126: ;;// porth.porth:1358:6: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_14127: ;;// porth.porth:1358:8: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14128: ;;// porth.porth:1358:10: OP_END_WHILE 92
    jmp addr_14036
addr_14129: ;;// porth.porth:1360:3: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_14130: ;;// porth.porth:1360:7: OP_PUSH_GLOBAL_MEM 15073360
    lea rax, [mem+15073360]
    push rax
addr_14131: ;;// porth.porth:1360:19: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_14132: ;;// porth.porth:1360:23: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_14133: ;;// porth.porth:1360:25: OP_IF 9
    pop rax
    test rax, rax
    jz addr_14142
addr_14134: ;;// porth.porth:1361:5: OP_PUSH_INT 120
    mov rax, 120
    push rax
addr_14135: ;;// porth.porth:1361:18: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_14136: ;;// porth.porth:1361:20: OP_PUSH_GLOBAL_MEM 15073368
    lea rax, [mem+15073368]
    push rax
addr_14137: ;;// porth.porth:1361:26: OP_INLINED 73
addr_14138: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_14139: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14140: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_14141: ;;// porth.porth:1362:3: OP_ELSE 3
    jmp addr_14144
addr_14142: ;;// porth.porth:1363:5: OP_INTRINSIC drop
    pop rax
addr_14143: ;;// porth.porth:1363:10: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_14144: ;;// porth.porth:1364:3: OP_END_IF 0
addr_14145: ;;// porth.porth:1365:1: OP_RET 16
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 16
    ret
addr_14146: ;;// porth.porth:1367:6: OP_PREP_PROC 8
    sub rsp, 8
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14147: ;;// porth.porth:1373:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_14148: ;;// porth.porth:1373:8: OP_INLINED 30
addr_14149: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_14150: ;;// porth.porth:1375:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_14151: ;;// porth.porth:1375:5: OP_WHILE 35
addr_14152: ;;// porth.porth:1376:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_14153: ;;// porth.porth:1376:9: OP_PUSH_GLOBAL_MEM 15073360
    lea rax, [mem+15073360]
    push rax
addr_14154: ;;// porth.porth:1376:21: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_14155: ;;// porth.porth:1376:25: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_14156: ;;// porth.porth:1376:27: OP_IF 24
    pop rax
    test rax, rax
    jz addr_14180
addr_14157: ;;// porth.porth:1377:7: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_14158: ;;// porth.porth:1377:11: OP_PUSH_INT 120
    mov rax, 120
    push rax
addr_14159: ;;// porth.porth:1377:24: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_14160: ;;// porth.porth:1377:26: OP_PUSH_GLOBAL_MEM 15073368
    lea rax, [mem+15073368]
    push rax
addr_14161: ;;// porth.porth:1377:32: OP_INLINED 73
addr_14162: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_14163: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14164: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_14165: ;;// porth.porth:1377:37: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_14166: ;;// porth.porth:1377:47: OP_INLINED 36
addr_14167: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14168: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_14169: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14170: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_14171: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14172: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_14173: ;;// porth.porth:1377:52: OP_INLINED 16
addr_14174: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_14175: ;;// porth.porth:1378:7: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_14176: ;;// porth.porth:1378:12: OP_INLINED 16
addr_14177: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_14178: ;;// porth.porth:1379:7: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_14179: ;;// porth.porth:1380:5: OP_ELSE 2
    jmp addr_14181
addr_14180: ;;// porth.porth:1380:10: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_14181: ;;// porth.porth:1380:16: OP_END_IF 0
addr_14182: ;;// porth.porth:1381:3: OP_DO 4
    pop rax
    test rax, rax
    jz addr_14186
addr_14183: ;;// porth.porth:1381:6: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_14184: ;;// porth.porth:1381:8: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14185: ;;// porth.porth:1381:10: OP_END_WHILE 34
    jmp addr_14151
addr_14186: ;;// porth.porth:1383:3: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_14187: ;;// porth.porth:1383:7: OP_PUSH_GLOBAL_MEM 15073360
    lea rax, [mem+15073360]
    push rax
addr_14188: ;;// porth.porth:1383:19: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_14189: ;;// porth.porth:1383:23: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_14190: ;;// porth.porth:1383:25: OP_IF 9
    pop rax
    test rax, rax
    jz addr_14199
addr_14191: ;;// porth.porth:1384:5: OP_PUSH_INT 120
    mov rax, 120
    push rax
addr_14192: ;;// porth.porth:1384:18: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_14193: ;;// porth.porth:1384:20: OP_PUSH_GLOBAL_MEM 15073368
    lea rax, [mem+15073368]
    push rax
addr_14194: ;;// porth.porth:1384:26: OP_INLINED 73
addr_14195: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_14196: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14197: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_14198: ;;// porth.porth:1385:3: OP_ELSE 3
    jmp addr_14201
addr_14199: ;;// porth.porth:1386:5: OP_INTRINSIC drop
    pop rax
addr_14200: ;;// porth.porth:1386:10: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_14201: ;;// porth.porth:1387:3: OP_END_IF 0
addr_14202: ;;// porth.porth:1388:1: OP_RET 8
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 8
    ret
addr_14203: ;;// porth.porth:1391:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14204: ;;// porth.porth:1394:3: OP_PUSH_INT 120
    mov rax, 120
    push rax
addr_14205: ;;// porth.porth:1394:16: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14206: ;;// porth.porth:1394:21: OP_PUSH_INT 1024
    mov rax, 1024
    push rax
addr_14207: ;;// porth.porth:1394:31: OP_PUSH_GLOBAL_MEM 15073368
    lea rax, [mem+15073368]
    push rax
addr_14208: ;;// porth.porth:1394:37: OP_PUSH_GLOBAL_MEM 15073360
    lea rax, [mem+15073360]
    push rax
addr_14209: ;;// porth.porth:1394:49: OP_CALL 2731
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2731
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14210: ;;// porth.porth:1394:61: OP_INLINED 131
addr_14211: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_14212: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_14213: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14214: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_14215: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_14216: ;;// porth.porth:1394:66: OP_IF 22
    pop rax
    test rax, rax
    jz addr_14238
addr_14217: ;;// porth.porth:1395:5: OP_PUSH_STR 311
    mov rax, 18
    push rax
    lea rax, [str_311]
    push rax
addr_14218: ;;// porth.porth:1395:10: OP_INLINED 676
addr_14219: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_14220: ;;// std/std.porth:50:37: OP_INLINED 662
addr_14221: ;;// std/std.porth:48:34: OP_INLINED 394
addr_14222: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_14223: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_14224: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_14225: ;;// porth.porth:1395:16: OP_PUSH_STR 312
    mov rax, 49
    push rax
    lea rax, [str_312]
    push rax
addr_14226: ;;// porth.porth:1395:69: OP_INLINED 676
addr_14227: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_14228: ;;// std/std.porth:50:37: OP_INLINED 662
addr_14229: ;;// std/std.porth:48:34: OP_INLINED 394
addr_14230: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_14231: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_14232: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_14233: ;;// porth.porth:1396:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_14234: ;;// porth.porth:1396:7: OP_INLINED 418
addr_14235: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_14236: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_14237: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_14238: ;;// porth.porth:1397:3: OP_END_IF 0
addr_14239: ;;// porth.porth:1398:3: OP_INTRINSIC drop
    pop rax
addr_14240: ;;// porth.porth:1399:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_14241: ;;// porth.porth:1418:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14242: ;;// porth.porth:1419:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_14243: ;;// porth.porth:1419:5: OP_PUSH_GLOBAL_MEM 15253616
    lea rax, [mem+15253616]
    push rax
addr_14244: ;;// porth.porth:1419:26: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_14245: ;;// porth.porth:1420:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_14246: ;;// porth.porth:1420:5: OP_PUSH_GLOBAL_MEM 15310968
    lea rax, [mem+15310968]
    push rax
addr_14247: ;;// porth.porth:1420:27: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_14248: ;;// porth.porth:1421:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_14249: ;;// porth.porth:1423:6: OP_PREP_PROC 16
    sub rsp, 16
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14250: ;;// porth.porth:1429:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_14251: ;;// porth.porth:1429:8: OP_INLINED 782
addr_14252: ;;// std/std.porth:71:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_14253: ;;// std/std.porth:72:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14254: ;;// std/std.porth:72:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_14255: ;;// std/std.porth:72:9: OP_INLINED 729
addr_14256: ;;// std/std.porth:60:35: OP_INLINED 684
addr_14257: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_14258: ;;// std/std.porth:56:57: OP_INLINED 36
addr_14259: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14260: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_14261: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14262: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_14263: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14264: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_14265: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_14266: ;;// std/std.porth:73:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_14267: ;;// std/std.porth:73:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_14268: ;;// std/std.porth:73:9: OP_INLINED 741
addr_14269: ;;// std/std.porth:61:34: OP_INLINED 694
addr_14270: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_14271: ;;// std/std.porth:57:55: OP_INLINED 36
addr_14272: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14273: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_14274: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14275: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_14276: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14277: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_14278: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_14279: ;;// std/std.porth:74:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_14280: ;;// porth.porth:1431:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_14281: ;;// porth.porth:1431:5: OP_WHILE 93
addr_14282: ;;// porth.porth:1432:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_14283: ;;// porth.porth:1432:9: OP_PUSH_GLOBAL_MEM 15253616
    lea rax, [mem+15253616]
    push rax
addr_14284: ;;// porth.porth:1432:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_14285: ;;// porth.porth:1432:34: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_14286: ;;// porth.porth:1432:36: OP_IF 82
    pop rax
    test rax, rax
    jz addr_14368
addr_14287: ;;// porth.porth:1433:7: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_14288: ;;// porth.porth:1433:11: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_14289: ;;// porth.porth:1433:26: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_14290: ;;// porth.porth:1433:28: OP_PUSH_GLOBAL_MEM 15253624
    lea rax, [mem+15253624]
    push rax
addr_14291: ;;// porth.porth:1433:43: OP_INLINED 73
addr_14292: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_14293: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14294: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_14295: ;;// porth.porth:1433:48: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_14296: ;;// porth.porth:1433:60: OP_INLINED 36
addr_14297: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14298: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_14299: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14300: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_14301: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14302: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_14303: ;;// porth.porth:1433:65: OP_INLINED 753
addr_14304: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_14305: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14306: ;;// std/std.porth:65:7: OP_INLINED 704
addr_14307: ;;// std/std.porth:58:38: OP_INLINED 684
addr_14308: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_14309: ;;// std/std.porth:56:57: OP_INLINED 36
addr_14310: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14311: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_14312: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14313: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_14314: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14315: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_14316: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_14317: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14318: ;;// std/std.porth:66:7: OP_INLINED 716
addr_14319: ;;// std/std.porth:59:37: OP_INLINED 694
addr_14320: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_14321: ;;// std/std.porth:57:55: OP_INLINED 36
addr_14322: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14323: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_14324: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14325: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_14326: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14327: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_14328: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_14329: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_14330: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_14331: ;;// porth.porth:1434:7: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_14332: ;;// porth.porth:1434:12: OP_INLINED 753
addr_14333: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_14334: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14335: ;;// std/std.porth:65:7: OP_INLINED 704
addr_14336: ;;// std/std.porth:58:38: OP_INLINED 684
addr_14337: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_14338: ;;// std/std.porth:56:57: OP_INLINED 36
addr_14339: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14340: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_14341: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14342: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_14343: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14344: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_14345: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_14346: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14347: ;;// std/std.porth:66:7: OP_INLINED 716
addr_14348: ;;// std/std.porth:59:37: OP_INLINED 694
addr_14349: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_14350: ;;// std/std.porth:57:55: OP_INLINED 36
addr_14351: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14352: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_14353: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14354: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_14355: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14356: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_14357: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_14358: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_14359: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_14360: ;;// porth.porth:1435:7: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14361: ;;// porth.porth:1436:7: OP_INLINED 131
addr_14362: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_14363: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_14364: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14365: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_14366: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_14367: ;;// porth.porth:1437:5: OP_ELSE 2
    jmp addr_14369
addr_14368: ;;// porth.porth:1437:10: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_14369: ;;// porth.porth:1437:16: OP_END_IF 0
addr_14370: ;;// porth.porth:1438:3: OP_DO 4
    pop rax
    test rax, rax
    jz addr_14374
addr_14371: ;;// porth.porth:1438:6: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_14372: ;;// porth.porth:1438:8: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14373: ;;// porth.porth:1438:10: OP_END_WHILE 92
    jmp addr_14281
addr_14374: ;;// porth.porth:1440:3: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_14375: ;;// porth.porth:1440:7: OP_PUSH_GLOBAL_MEM 15253616
    lea rax, [mem+15253616]
    push rax
addr_14376: ;;// porth.porth:1440:28: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_14377: ;;// porth.porth:1440:32: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_14378: ;;// porth.porth:1440:34: OP_IF 9
    pop rax
    test rax, rax
    jz addr_14387
addr_14379: ;;// porth.porth:1441:5: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_14380: ;;// porth.porth:1441:20: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_14381: ;;// porth.porth:1441:22: OP_PUSH_GLOBAL_MEM 15253624
    lea rax, [mem+15253624]
    push rax
addr_14382: ;;// porth.porth:1441:37: OP_INLINED 73
addr_14383: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_14384: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14385: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_14386: ;;// porth.porth:1442:3: OP_ELSE 3
    jmp addr_14389
addr_14387: ;;// porth.porth:1443:5: OP_INTRINSIC drop
    pop rax
addr_14388: ;;// porth.porth:1443:10: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_14389: ;;// porth.porth:1444:3: OP_END_IF 0
addr_14390: ;;// porth.porth:1445:1: OP_RET 16
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 16
    ret
addr_14391: ;;// porth.porth:1447:6: OP_PREP_PROC 16
    sub rsp, 16
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14392: ;;// porth.porth:1453:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_14393: ;;// porth.porth:1453:8: OP_INLINED 782
addr_14394: ;;// std/std.porth:71:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_14395: ;;// std/std.porth:72:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14396: ;;// std/std.porth:72:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_14397: ;;// std/std.porth:72:9: OP_INLINED 729
addr_14398: ;;// std/std.porth:60:35: OP_INLINED 684
addr_14399: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_14400: ;;// std/std.porth:56:57: OP_INLINED 36
addr_14401: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14402: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_14403: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14404: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_14405: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14406: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_14407: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_14408: ;;// std/std.porth:73:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_14409: ;;// std/std.porth:73:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_14410: ;;// std/std.porth:73:9: OP_INLINED 741
addr_14411: ;;// std/std.porth:61:34: OP_INLINED 694
addr_14412: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_14413: ;;// std/std.porth:57:55: OP_INLINED 36
addr_14414: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14415: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_14416: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14417: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_14418: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14419: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_14420: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_14421: ;;// std/std.porth:74:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_14422: ;;// porth.porth:1455:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_14423: ;;// porth.porth:1455:5: OP_WHILE 93
addr_14424: ;;// porth.porth:1456:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_14425: ;;// porth.porth:1456:9: OP_PUSH_GLOBAL_MEM 15196256
    lea rax, [mem+15196256]
    push rax
addr_14426: ;;// porth.porth:1456:31: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_14427: ;;// porth.porth:1456:35: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_14428: ;;// porth.porth:1456:37: OP_IF 82
    pop rax
    test rax, rax
    jz addr_14510
addr_14429: ;;// porth.porth:1457:7: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_14430: ;;// porth.porth:1457:11: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_14431: ;;// porth.porth:1457:26: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_14432: ;;// porth.porth:1457:28: OP_PUSH_GLOBAL_MEM 15196264
    lea rax, [mem+15196264]
    push rax
addr_14433: ;;// porth.porth:1457:44: OP_INLINED 73
addr_14434: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_14435: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14436: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_14437: ;;// porth.porth:1457:49: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_14438: ;;// porth.porth:1457:61: OP_INLINED 36
addr_14439: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14440: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_14441: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14442: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_14443: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14444: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_14445: ;;// porth.porth:1457:66: OP_INLINED 753
addr_14446: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_14447: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14448: ;;// std/std.porth:65:7: OP_INLINED 704
addr_14449: ;;// std/std.porth:58:38: OP_INLINED 684
addr_14450: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_14451: ;;// std/std.porth:56:57: OP_INLINED 36
addr_14452: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14453: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_14454: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14455: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_14456: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14457: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_14458: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_14459: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14460: ;;// std/std.porth:66:7: OP_INLINED 716
addr_14461: ;;// std/std.porth:59:37: OP_INLINED 694
addr_14462: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_14463: ;;// std/std.porth:57:55: OP_INLINED 36
addr_14464: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14465: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_14466: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14467: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_14468: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14469: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_14470: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_14471: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_14472: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_14473: ;;// porth.porth:1458:7: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_14474: ;;// porth.porth:1458:12: OP_INLINED 753
addr_14475: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_14476: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14477: ;;// std/std.porth:65:7: OP_INLINED 704
addr_14478: ;;// std/std.porth:58:38: OP_INLINED 684
addr_14479: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_14480: ;;// std/std.porth:56:57: OP_INLINED 36
addr_14481: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14482: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_14483: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14484: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_14485: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14486: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_14487: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_14488: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14489: ;;// std/std.porth:66:7: OP_INLINED 716
addr_14490: ;;// std/std.porth:59:37: OP_INLINED 694
addr_14491: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_14492: ;;// std/std.porth:57:55: OP_INLINED 36
addr_14493: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14494: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_14495: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14496: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_14497: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14498: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_14499: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_14500: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_14501: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_14502: ;;// porth.porth:1459:7: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14503: ;;// porth.porth:1460:7: OP_INLINED 131
addr_14504: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_14505: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_14506: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14507: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_14508: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_14509: ;;// porth.porth:1461:5: OP_ELSE 2
    jmp addr_14511
addr_14510: ;;// porth.porth:1461:10: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_14511: ;;// porth.porth:1461:16: OP_END_IF 0
addr_14512: ;;// porth.porth:1462:3: OP_DO 4
    pop rax
    test rax, rax
    jz addr_14516
addr_14513: ;;// porth.porth:1462:6: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_14514: ;;// porth.porth:1462:8: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14515: ;;// porth.porth:1462:10: OP_END_WHILE 92
    jmp addr_14423
addr_14516: ;;// porth.porth:1464:3: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_14517: ;;// porth.porth:1464:7: OP_PUSH_GLOBAL_MEM 15196256
    lea rax, [mem+15196256]
    push rax
addr_14518: ;;// porth.porth:1464:29: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_14519: ;;// porth.porth:1464:33: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_14520: ;;// porth.porth:1464:35: OP_IF 9
    pop rax
    test rax, rax
    jz addr_14529
addr_14521: ;;// porth.porth:1465:5: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_14522: ;;// porth.porth:1465:20: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_14523: ;;// porth.porth:1465:22: OP_PUSH_GLOBAL_MEM 15196264
    lea rax, [mem+15196264]
    push rax
addr_14524: ;;// porth.porth:1465:38: OP_INLINED 73
addr_14525: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_14526: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14527: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_14528: ;;// porth.porth:1466:3: OP_ELSE 3
    jmp addr_14531
addr_14529: ;;// porth.porth:1467:5: OP_INTRINSIC drop
    pop rax
addr_14530: ;;// porth.porth:1467:10: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_14531: ;;// porth.porth:1468:3: OP_END_IF 0
addr_14532: ;;// porth.porth:1469:1: OP_RET 16
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 16
    ret
addr_14533: ;;// porth.porth:1471:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14534: ;;// porth.porth:1474:3: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_14535: ;;// porth.porth:1474:18: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14536: ;;// porth.porth:1474:23: OP_PUSH_INT 1024
    mov rax, 1024
    push rax
addr_14537: ;;// porth.porth:1474:42: OP_PUSH_GLOBAL_MEM 15253624
    lea rax, [mem+15253624]
    push rax
addr_14538: ;;// porth.porth:1474:57: OP_PUSH_GLOBAL_MEM 15253616
    lea rax, [mem+15253616]
    push rax
addr_14539: ;;// porth.porth:1474:78: OP_CALL 2731
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2731
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14540: ;;// porth.porth:1474:90: OP_INLINED 131
addr_14541: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_14542: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_14543: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14544: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_14545: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_14546: ;;// porth.porth:1474:95: OP_IF 22
    pop rax
    test rax, rax
    jz addr_14568
addr_14547: ;;// porth.porth:1475:5: OP_PUSH_STR 313
    mov rax, 18
    push rax
    lea rax, [str_313]
    push rax
addr_14548: ;;// porth.porth:1475:10: OP_INLINED 676
addr_14549: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_14550: ;;// std/std.porth:50:37: OP_INLINED 662
addr_14551: ;;// std/std.porth:48:34: OP_INLINED 394
addr_14552: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_14553: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_14554: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_14555: ;;// porth.porth:1475:16: OP_PUSH_STR 314
    mov rax, 52
    push rax
    lea rax, [str_314]
    push rax
addr_14556: ;;// porth.porth:1475:72: OP_INLINED 676
addr_14557: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_14558: ;;// std/std.porth:50:37: OP_INLINED 662
addr_14559: ;;// std/std.porth:48:34: OP_INLINED 394
addr_14560: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_14561: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_14562: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_14563: ;;// porth.porth:1476:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_14564: ;;// porth.porth:1476:7: OP_INLINED 418
addr_14565: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_14566: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_14567: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_14568: ;;// porth.porth:1477:3: OP_END_IF 0
addr_14569: ;;// porth.porth:1478:3: OP_INTRINSIC drop
    pop rax
addr_14570: ;;// porth.porth:1479:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_14571: ;;// porth.porth:1481:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14572: ;;// porth.porth:1484:3: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_14573: ;;// porth.porth:1484:18: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14574: ;;// porth.porth:1484:23: OP_PUSH_INT 1024
    mov rax, 1024
    push rax
addr_14575: ;;// porth.porth:1484:43: OP_PUSH_GLOBAL_MEM 15196264
    lea rax, [mem+15196264]
    push rax
addr_14576: ;;// porth.porth:1484:59: OP_PUSH_GLOBAL_MEM 15196256
    lea rax, [mem+15196256]
    push rax
addr_14577: ;;// porth.porth:1484:81: OP_CALL 2731
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2731
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14578: ;;// porth.porth:1484:93: OP_INLINED 131
addr_14579: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_14580: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_14581: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14582: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_14583: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_14584: ;;// porth.porth:1484:98: OP_IF 22
    pop rax
    test rax, rax
    jz addr_14606
addr_14585: ;;// porth.porth:1485:5: OP_PUSH_STR 315
    mov rax, 18
    push rax
    lea rax, [str_315]
    push rax
addr_14586: ;;// porth.porth:1485:10: OP_INLINED 676
addr_14587: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_14588: ;;// std/std.porth:50:37: OP_INLINED 662
addr_14589: ;;// std/std.porth:48:34: OP_INLINED 394
addr_14590: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_14591: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_14592: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_14593: ;;// porth.porth:1485:16: OP_PUSH_STR 316
    mov rax, 53
    push rax
    lea rax, [str_316]
    push rax
addr_14594: ;;// porth.porth:1485:73: OP_INLINED 676
addr_14595: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_14596: ;;// std/std.porth:50:37: OP_INLINED 662
addr_14597: ;;// std/std.porth:48:34: OP_INLINED 394
addr_14598: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_14599: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_14600: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_14601: ;;// porth.porth:1486:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_14602: ;;// porth.porth:1486:7: OP_INLINED 418
addr_14603: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_14604: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_14605: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_14606: ;;// porth.porth:1487:3: OP_END_IF 0
addr_14607: ;;// porth.porth:1488:3: OP_INTRINSIC drop
    pop rax
addr_14608: ;;// porth.porth:1489:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_14609: ;;// porth.porth:1494:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14610: ;;// porth.porth:1494:33: OP_INLINED 5367
addr_14611: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_14612: ;;// porth.porth:32:35: OP_INLINED 5195
addr_14613: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_14614: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14615: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_14616: ;;// porth.porth:24:23: OP_INLINED 36
addr_14617: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14618: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_14619: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14620: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_14621: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14622: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_14623: ;;// porth.porth:24:28: OP_INLINED 753
addr_14624: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_14625: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14626: ;;// std/std.porth:65:7: OP_INLINED 704
addr_14627: ;;// std/std.porth:58:38: OP_INLINED 684
addr_14628: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_14629: ;;// std/std.porth:56:57: OP_INLINED 36
addr_14630: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14631: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_14632: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14633: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_14634: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14635: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_14636: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_14637: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14638: ;;// std/std.porth:66:7: OP_INLINED 716
addr_14639: ;;// std/std.porth:59:37: OP_INLINED 694
addr_14640: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_14641: ;;// std/std.porth:57:55: OP_INLINED 36
addr_14642: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14643: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_14644: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14645: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_14646: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14647: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_14648: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_14649: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_14650: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_14651: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_14652: ;;// porth.porth:24:36: OP_INLINED 662
addr_14653: ;;// std/std.porth:48:34: OP_INLINED 394
addr_14654: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_14655: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_14656: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_14657: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_14658: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_14659: ;;// porth.porth:25:36: OP_INLINED 662
addr_14660: ;;// std/std.porth:48:34: OP_INLINED 394
addr_14661: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_14662: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_14663: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_14664: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14665: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_14666: ;;// porth.porth:26:17: OP_INLINED 36
addr_14667: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14668: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_14669: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14670: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_14671: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14672: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_14673: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_14674: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_14675: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14676: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_14677: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_14678: ;;// porth.porth:27:36: OP_INLINED 662
addr_14679: ;;// std/std.porth:48:34: OP_INLINED 394
addr_14680: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_14681: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_14682: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_14683: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14684: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_14685: ;;// porth.porth:28:17: OP_INLINED 36
addr_14686: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14687: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_14688: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14689: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_14690: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14691: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_14692: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_14693: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_14694: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14695: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_14696: ;;// porth.porth:1494:41: OP_PUSH_STR 317
    mov rax, 21
    push rax
    lea rax, [str_317]
    push rax
addr_14697: ;;// porth.porth:1494:66: OP_INLINED 676
addr_14698: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_14699: ;;// std/std.porth:50:37: OP_INLINED 662
addr_14700: ;;// std/std.porth:48:34: OP_INLINED 394
addr_14701: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_14702: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_14703: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_14704: ;;// porth.porth:1494:72: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_14705: ;;// porth.porth:1500:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14706: ;;// porth.porth:1504:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_14707: ;;// porth.porth:1505:5: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_14708: ;;// porth.porth:1505:10: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14709: ;;// porth.porth:1505:12: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_14710: ;;// porth.porth:1506:5: OP_WHILE 37
addr_14711: ;;// porth.porth:1506:11: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_14712: ;;// porth.porth:1506:16: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_14713: ;;// porth.porth:1506:18: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_14714: ;;// porth.porth:1506:20: OP_DO 33
    pop rax
    test rax, rax
    jz addr_14747
addr_14715: ;;// porth.porth:1507:7: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_14716: ;;// porth.porth:1508:9: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14717: ;;// porth.porth:1508:15: OP_INLINED 131
addr_14718: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_14719: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_14720: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14721: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_14722: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_14723: ;;// porth.porth:1508:20: OP_IF 4
    pop rax
    test rax, rax
    jz addr_14727
addr_14724: ;;// porth.porth:1508:23: OP_PUSH_STR 318
    mov rax, 1
    push rax
    lea rax, [str_318]
    push rax
addr_14725: ;;// porth.porth:1508:27: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_14726: ;;// porth.porth:1508:31: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14727: ;;// porth.porth:1508:37: OP_END_IF 0
addr_14728: ;;// porth.porth:1509:9: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_14729: ;;// porth.porth:1509:11: OP_INTRINSIC @8
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_14730: ;;// porth.porth:1509:14: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_14731: ;;// porth.porth:1509:18: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14732: ;;// porth.porth:1511:9: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_14733: ;;// porth.porth:1512:9: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_14734: ;;// porth.porth:1512:11: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_14735: ;;// porth.porth:1512:13: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_14736: ;;// porth.porth:1513:9: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_14737: ;;// porth.porth:1513:11: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_14738: ;;// porth.porth:1513:13: OP_INLINED 36
addr_14739: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14740: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_14741: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14742: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_14743: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14744: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_14745: ;;// porth.porth:1514:7: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_14746: ;;// porth.porth:1515:5: OP_END_WHILE 36
    jmp addr_14710
addr_14747: ;;// porth.porth:1516:5: OP_INTRINSIC drop
    pop rax
addr_14748: ;;// porth.porth:1516:10: OP_INTRINSIC drop
    pop rax
addr_14749: ;;// porth.porth:1516:15: OP_INTRINSIC drop
    pop rax
addr_14750: ;;// porth.porth:1517:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_14751: ;;// porth.porth:1518:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_14752: ;;// porth.porth:1522:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14753: ;;// porth.porth:1525:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_14754: ;;// porth.porth:1526:5: OP_PUSH_STR 319
    mov rax, 7
    push rax
    lea rax, [str_319]
    push rax
addr_14755: ;;// porth.porth:1526:46: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14756: ;;// porth.porth:1526:50: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14757: ;;// porth.porth:1527:5: OP_PUSH_STR 320
    mov rax, 37
    push rax
    lea rax, [str_320]
    push rax
addr_14758: ;;// porth.porth:1527:46: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14759: ;;// porth.porth:1527:50: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14760: ;;// porth.porth:1528:5: OP_PUSH_STR 321
    mov rax, 20
    push rax
    lea rax, [str_321]
    push rax
addr_14761: ;;// porth.porth:1528:46: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14762: ;;// porth.porth:1528:50: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14763: ;;// porth.porth:1529:5: OP_PUSH_GLOBAL_MEM 15310984
    lea rax, [mem+15310984]
    push rax
addr_14764: ;;// porth.porth:1529:13: OP_INLINED 12
addr_14765: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_14766: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_14767: ;;// porth.porth:1529:19: OP_IF 5
    pop rax
    test rax, rax
    jz addr_14772
addr_14768: ;;// porth.porth:1531:7: OP_PUSH_STR 322
    mov rax, 30
    push rax
    lea rax, [str_322]
    push rax
addr_14769: ;;// porth.porth:1531:48: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14770: ;;// porth.porth:1531:52: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14771: ;;// porth.porth:1532:5: OP_ELSE 4
    jmp addr_14775
addr_14772: ;;// porth.porth:1533:7: OP_PUSH_STR 323
    mov rax, 30
    push rax
    lea rax, [str_323]
    push rax
addr_14773: ;;// porth.porth:1533:48: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14774: ;;// porth.porth:1533:52: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14775: ;;// porth.porth:1534:5: OP_END_IF 0
addr_14776: ;;// porth.porth:1535:5: OP_PUSH_STR 324
    mov rax, 26
    push rax
    lea rax, [str_324]
    push rax
addr_14777: ;;// porth.porth:1535:46: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14778: ;;// porth.porth:1535:50: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14779: ;;// porth.porth:1536:5: OP_PUSH_STR 325
    mov rax, 5
    push rax
    lea rax, [str_325]
    push rax
addr_14780: ;;// porth.porth:1536:46: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14781: ;;// porth.porth:1536:50: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14782: ;;// porth.porth:1537:5: OP_PUSH_STR 326
    mov rax, 21
    push rax
    lea rax, [str_326]
    push rax
addr_14783: ;;// porth.porth:1537:46: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14784: ;;// porth.porth:1537:50: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14785: ;;// porth.porth:1538:5: OP_PUSH_STR 327
    mov rax, 25
    push rax
    lea rax, [str_327]
    push rax
addr_14786: ;;// porth.porth:1538:46: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14787: ;;// porth.porth:1538:50: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14788: ;;// porth.porth:1539:5: OP_PUSH_STR 328
    mov rax, 15
    push rax
    lea rax, [str_328]
    push rax
addr_14789: ;;// porth.porth:1539:46: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14790: ;;// porth.porth:1539:50: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14791: ;;// porth.porth:1540:5: OP_PUSH_STR 329
    mov rax, 21
    push rax
    lea rax, [str_329]
    push rax
addr_14792: ;;// porth.porth:1540:46: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14793: ;;// porth.porth:1540:50: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14794: ;;// porth.porth:1541:5: OP_PUSH_STR 330
    mov rax, 20
    push rax
    lea rax, [str_330]
    push rax
addr_14795: ;;// porth.porth:1541:46: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14796: ;;// porth.porth:1541:50: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14797: ;;// porth.porth:1542:5: OP_PUSH_STR 331
    mov rax, 19
    push rax
    lea rax, [str_331]
    push rax
addr_14798: ;;// porth.porth:1542:46: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14799: ;;// porth.porth:1542:50: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14800: ;;// porth.porth:1543:5: OP_PUSH_STR 332
    mov rax, 29
    push rax
    lea rax, [str_332]
    push rax
addr_14801: ;;// porth.porth:1543:46: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14802: ;;// porth.porth:1543:50: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14803: ;;// porth.porth:1544:5: OP_PUSH_STR 333
    mov rax, 21
    push rax
    lea rax, [str_333]
    push rax
addr_14804: ;;// porth.porth:1544:46: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14805: ;;// porth.porth:1544:50: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14806: ;;// porth.porth:1545:5: OP_PUSH_STR 334
    mov rax, 21
    push rax
    lea rax, [str_334]
    push rax
addr_14807: ;;// porth.porth:1545:46: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14808: ;;// porth.porth:1545:50: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14809: ;;// porth.porth:1546:5: OP_PUSH_STR 335
    mov rax, 20
    push rax
    lea rax, [str_335]
    push rax
addr_14810: ;;// porth.porth:1546:46: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14811: ;;// porth.porth:1546:50: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14812: ;;// porth.porth:1547:5: OP_PUSH_GLOBAL_MEM 15310984
    lea rax, [mem+15310984]
    push rax
addr_14813: ;;// porth.porth:1547:13: OP_INLINED 12
addr_14814: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_14815: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_14816: ;;// porth.porth:1547:19: OP_IF 5
    pop rax
    test rax, rax
    jz addr_14821
addr_14817: ;;// porth.porth:1552:7: OP_PUSH_STR 336
    mov rax, 21
    push rax
    lea rax, [str_336]
    push rax
addr_14818: ;;// porth.porth:1552:32: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14819: ;;// porth.porth:1552:36: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14820: ;;// porth.porth:1553:5: OP_ELSE 4
    jmp addr_14824
addr_14821: ;;// porth.porth:1554:7: OP_PUSH_STR 337
    mov rax, 27
    push rax
    lea rax, [str_337]
    push rax
addr_14822: ;;// porth.porth:1554:48: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14823: ;;// porth.porth:1554:52: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14824: ;;// porth.porth:1555:5: OP_END_IF 0
addr_14825: ;;// porth.porth:1556:5: OP_PUSH_STR 338
    mov rax, 21
    push rax
    lea rax, [str_338]
    push rax
addr_14826: ;;// porth.porth:1556:46: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14827: ;;// porth.porth:1556:50: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14828: ;;// porth.porth:1557:5: OP_PUSH_STR 339
    mov rax, 21
    push rax
    lea rax, [str_339]
    push rax
addr_14829: ;;// porth.porth:1557:46: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14830: ;;// porth.porth:1557:50: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14831: ;;// porth.porth:1558:5: OP_PUSH_STR 340
    mov rax, 21
    push rax
    lea rax, [str_340]
    push rax
addr_14832: ;;// porth.porth:1558:46: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14833: ;;// porth.porth:1558:50: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14834: ;;// porth.porth:1559:5: OP_PUSH_STR 341
    mov rax, 19
    push rax
    lea rax, [str_341]
    push rax
addr_14835: ;;// porth.porth:1559:46: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14836: ;;// porth.porth:1559:50: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14837: ;;// porth.porth:1560:5: OP_PUSH_STR 342
    mov rax, 19
    push rax
    lea rax, [str_342]
    push rax
addr_14838: ;;// porth.porth:1560:46: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14839: ;;// porth.porth:1560:50: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14840: ;;// porth.porth:1561:5: OP_PUSH_STR 343
    mov rax, 16
    push rax
    lea rax, [str_343]
    push rax
addr_14841: ;;// porth.porth:1561:46: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14842: ;;// porth.porth:1561:50: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14843: ;;// porth.porth:1562:5: OP_PUSH_STR 344
    mov rax, 26
    push rax
    lea rax, [str_344]
    push rax
addr_14844: ;;// porth.porth:1562:46: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14845: ;;// porth.porth:1562:50: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14846: ;;// porth.porth:1563:5: OP_PUSH_STR 345
    mov rax, 19
    push rax
    lea rax, [str_345]
    push rax
addr_14847: ;;// porth.porth:1563:46: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14848: ;;// porth.porth:1563:50: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14849: ;;// porth.porth:1564:5: OP_PUSH_STR 346
    mov rax, 21
    push rax
    lea rax, [str_346]
    push rax
addr_14850: ;;// porth.porth:1564:46: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14851: ;;// porth.porth:1564:50: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14852: ;;// porth.porth:1565:5: OP_PUSH_STR 347
    mov rax, 21
    push rax
    lea rax, [str_347]
    push rax
addr_14853: ;;// porth.porth:1565:46: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14854: ;;// porth.porth:1565:50: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14855: ;;// porth.porth:1566:5: OP_PUSH_STR 348
    mov rax, 30
    push rax
    lea rax, [str_348]
    push rax
addr_14856: ;;// porth.porth:1566:46: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14857: ;;// porth.porth:1566:50: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14858: ;;// porth.porth:1567:5: OP_PUSH_STR 349
    mov rax, 20
    push rax
    lea rax, [str_349]
    push rax
addr_14859: ;;// porth.porth:1567:46: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14860: ;;// porth.porth:1567:50: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14861: ;;// porth.porth:1568:5: OP_PUSH_STR 350
    mov rax, 19
    push rax
    lea rax, [str_350]
    push rax
addr_14862: ;;// porth.porth:1568:46: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14863: ;;// porth.porth:1568:50: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14864: ;;// porth.porth:1569:5: OP_PUSH_STR 351
    mov rax, 12
    push rax
    lea rax, [str_351]
    push rax
addr_14865: ;;// porth.porth:1569:46: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14866: ;;// porth.porth:1569:50: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14867: ;;// porth.porth:1570:5: OP_PUSH_STR 352
    mov rax, 20
    push rax
    lea rax, [str_352]
    push rax
addr_14868: ;;// porth.porth:1570:46: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14869: ;;// porth.porth:1570:50: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14870: ;;// porth.porth:1571:5: OP_PUSH_STR 353
    mov rax, 8
    push rax
    lea rax, [str_353]
    push rax
addr_14871: ;;// porth.porth:1571:46: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14872: ;;// porth.porth:1571:50: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14873: ;;// porth.porth:1572:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_14874: ;;// porth.porth:1573:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_14875: ;;// porth.porth:1575:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14876: ;;// porth.porth:1576:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_14877: ;;// porth.porth:1577:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14878: ;;// porth.porth:1577:8: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_14879: ;;// porth.porth:1577:19: OP_INLINED 36
addr_14880: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14881: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_14882: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14883: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_14884: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14885: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_14886: ;;// porth.porth:1577:24: OP_INLINED 16
addr_14887: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_14888: ;;// porth.porth:1578:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14889: ;;// porth.porth:1578:8: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_14890: ;;// porth.porth:1578:19: OP_INLINED 36
addr_14891: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14892: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_14893: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14894: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_14895: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14896: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_14897: ;;// porth.porth:1578:24: OP_INLINED 16
addr_14898: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_14899: ;;// porth.porth:1579:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14900: ;;// porth.porth:1579:8: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_14901: ;;// porth.porth:1579:19: OP_INLINED 36
addr_14902: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14903: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_14904: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14905: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_14906: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14907: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_14908: ;;// porth.porth:1580:5: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_14909: ;;// porth.porth:1584:7: OP_PUSH_STR 354
    mov rax, 6
    push rax
    lea rax, [str_354]
    push rax
addr_14910: ;;// porth.porth:1584:32: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_14911: ;;// porth.porth:1584:36: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14912: ;;// porth.porth:1585:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_14913: ;;// porth.porth:1585:13: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_14914: ;;// porth.porth:1585:23: OP_INLINED 36
addr_14915: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14916: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_14917: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14918: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_14919: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14920: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_14921: ;;// porth.porth:1585:32: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_14922: ;;// porth.porth:1585:36: OP_INLINED 5122
addr_14923: ;;// porth.porth:13:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_14924: ;;// porth.porth:14:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14925: ;;// porth.porth:14:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_14926: ;;// porth.porth:14:23: OP_INLINED 36
addr_14927: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14928: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_14929: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14930: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_14931: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14932: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_14933: ;;// porth.porth:14:28: OP_INLINED 753
addr_14934: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_14935: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14936: ;;// std/std.porth:65:7: OP_INLINED 704
addr_14937: ;;// std/std.porth:58:38: OP_INLINED 684
addr_14938: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_14939: ;;// std/std.porth:56:57: OP_INLINED 36
addr_14940: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14941: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_14942: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14943: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_14944: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14945: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_14946: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_14947: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14948: ;;// std/std.porth:66:7: OP_INLINED 716
addr_14949: ;;// std/std.porth:59:37: OP_INLINED 694
addr_14950: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_14951: ;;// std/std.porth:57:55: OP_INLINED 36
addr_14952: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14953: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_14954: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14955: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_14956: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14957: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_14958: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_14959: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_14960: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_14961: ;;// porth.porth:14:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_14962: ;;// porth.porth:14:37: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14963: ;;// porth.porth:15:5: OP_PUSH_STR 53
    mov rax, 1
    push rax
    lea rax, [str_53]
    push rax
addr_14964: ;;// porth.porth:15:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_14965: ;;// porth.porth:15:37: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14966: ;;// porth.porth:16:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14967: ;;// porth.porth:16:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_14968: ;;// porth.porth:16:17: OP_INLINED 36
addr_14969: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14970: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_14971: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14972: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_14973: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14974: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_14975: ;;// porth.porth:16:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_14976: ;;// porth.porth:16:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_14977: ;;// porth.porth:16:37: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14978: ;;// porth.porth:17:5: OP_PUSH_STR 54
    mov rax, 1
    push rax
    lea rax, [str_54]
    push rax
addr_14979: ;;// porth.porth:17:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_14980: ;;// porth.porth:17:37: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14981: ;;// porth.porth:18:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14982: ;;// porth.porth:18:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_14983: ;;// porth.porth:18:17: OP_INLINED 36
addr_14984: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14985: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_14986: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_14987: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_14988: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_14989: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_14990: ;;// porth.porth:18:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_14991: ;;// porth.porth:18:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_14992: ;;// porth.porth:18:37: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14993: ;;// porth.porth:19:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_14994: ;;// porth.porth:1586:7: OP_PUSH_STR 355
    mov rax, 2
    push rax
    lea rax, [str_355]
    push rax
addr_14995: ;;// porth.porth:1586:32: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_14996: ;;// porth.porth:1586:36: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14997: ;;// porth.porth:1587:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_14998: ;;// porth.porth:1587:12: OP_CALL 12725
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_12725
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_14999: ;;// porth.porth:1587:32: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15000: ;;// porth.porth:1587:36: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15001: ;;// porth.porth:1588:7: OP_PUSH_STR 356
    mov rax, 1
    push rax
    lea rax, [str_356]
    push rax
addr_15002: ;;// porth.porth:1588:32: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15003: ;;// porth.porth:1588:36: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15004: ;;// porth.porth:1589:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15005: ;;// porth.porth:1589:12: OP_PUSH_INT 22
    mov rax, 22
    push rax
addr_15006: ;;// porth.porth:1589:25: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_15007: ;;// porth.porth:1589:27: OP_IF 6
    pop rax
    test rax, rax
    jz addr_15013
addr_15008: ;;// porth.porth:1590:9: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_15009: ;;// porth.porth:1590:17: OP_CALL 10610
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_10610
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15010: ;;// porth.porth:1590:32: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15011: ;;// porth.porth:1590:36: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15012: ;;// porth.porth:1591:7: OP_ELSE 4
    jmp addr_15016
addr_15013: ;;// porth.porth:1592:9: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_15014: ;;// porth.porth:1592:32: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15015: ;;// porth.porth:1592:36: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15016: ;;// porth.porth:1593:7: OP_END_IF 0
addr_15017: ;;// porth.porth:1594:7: OP_PUSH_STR 357
    mov rax, 1
    push rax
    lea rax, [str_357]
    push rax
addr_15018: ;;// porth.porth:1594:32: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15019: ;;// porth.porth:1594:36: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15020: ;;// porth.porth:1595:5: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_15021: ;;// porth.porth:1596:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_15022: ;;// porth.porth:1597:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_15023: ;;// porth.porth:1599:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15024: ;;// porth.porth:1604:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_15025: ;;// porth.porth:1605:10: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15026: ;;// porth.porth:1605:14: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_15027: ;;// porth.porth:1605:16: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_15028: ;;// porth.porth:1605:18: OP_IF 3
    pop rax
    test rax, rax
    jz addr_15031
addr_15029: ;;// porth.porth:1605:22: OP_PUSH_STR 358
    mov rax, 3
    push rax
    lea rax, [str_358]
    push rax
addr_15030: ;;// porth.porth:1606:5: OP_ELSE 6
    jmp addr_15036
addr_15031: ;;// porth.porth:1606:10: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15032: ;;// porth.porth:1606:14: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_15033: ;;// porth.porth:1606:16: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_15034: ;;// porth.porth:1606:18: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_15037
addr_15035: ;;// porth.porth:1606:22: OP_PUSH_STR 359
    mov rax, 3
    push rax
    lea rax, [str_359]
    push rax
addr_15036: ;;// porth.porth:1607:5: OP_ELSE 6
    jmp addr_15042
addr_15037: ;;// porth.porth:1607:10: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15038: ;;// porth.porth:1607:14: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_15039: ;;// porth.porth:1607:16: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_15040: ;;// porth.porth:1607:18: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_15043
addr_15041: ;;// porth.porth:1607:22: OP_PUSH_STR 360
    mov rax, 3
    push rax
    lea rax, [str_360]
    push rax
addr_15042: ;;// porth.porth:1608:5: OP_ELSE 6
    jmp addr_15048
addr_15043: ;;// porth.porth:1608:10: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15044: ;;// porth.porth:1608:14: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_15045: ;;// porth.porth:1608:16: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_15046: ;;// porth.porth:1608:18: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_15049
addr_15047: ;;// porth.porth:1608:22: OP_PUSH_STR 361
    mov rax, 3
    push rax
    lea rax, [str_361]
    push rax
addr_15048: ;;// porth.porth:1609:5: OP_ELSE 6
    jmp addr_15054
addr_15049: ;;// porth.porth:1609:10: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15050: ;;// porth.porth:1609:14: OP_PUSH_INT 4
    mov rax, 4
    push rax
addr_15051: ;;// porth.porth:1609:16: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_15052: ;;// porth.porth:1609:18: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_15055
addr_15053: ;;// porth.porth:1609:22: OP_PUSH_STR 362
    mov rax, 2
    push rax
    lea rax, [str_362]
    push rax
addr_15054: ;;// porth.porth:1610:5: OP_ELSE 6
    jmp addr_15060
addr_15055: ;;// porth.porth:1610:10: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15056: ;;// porth.porth:1610:14: OP_PUSH_INT 5
    mov rax, 5
    push rax
addr_15057: ;;// porth.porth:1610:16: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_15058: ;;// porth.porth:1610:18: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_15061
addr_15059: ;;// porth.porth:1610:22: OP_PUSH_STR 363
    mov rax, 2
    push rax
    lea rax, [str_363]
    push rax
addr_15060: ;;// porth.porth:1611:5: OP_ELSE 3
    jmp addr_15063
addr_15061: ;;// porth.porth:1611:10: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_15062: ;;// porth.porth:1611:12: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_15063: ;;// porth.porth:1611:17: OP_END_IF 0
addr_15064: ;;// porth.porth:1612:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_15065: ;;// porth.porth:1613:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_15066: ;;// porth.porth:1615:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15067: ;;// porth.porth:1620:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_15068: ;;// porth.porth:1621:10: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15069: ;;// porth.porth:1621:14: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_15070: ;;// porth.porth:1621:16: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_15071: ;;// porth.porth:1621:18: OP_IF 3
    pop rax
    test rax, rax
    jz addr_15074
addr_15072: ;;// porth.porth:1621:22: OP_PUSH_STR 364
    mov rax, 3
    push rax
    lea rax, [str_364]
    push rax
addr_15073: ;;// porth.porth:1622:5: OP_ELSE 3
    jmp addr_15076
addr_15074: ;;// porth.porth:1622:10: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_15075: ;;// porth.porth:1622:12: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_15076: ;;// porth.porth:1622:17: OP_END_IF 0
addr_15077: ;;// porth.porth:1623:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_15078: ;;// porth.porth:1624:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_15079: ;;// porth.porth:1626:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15080: ;;// porth.porth:1630:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_15081: ;;// porth.porth:1631:5: OP_PUSH_STR 365
    mov rax, 5
    push rax
    lea rax, [str_365]
    push rax
addr_15082: ;;// porth.porth:1631:13: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_15083: ;;// porth.porth:1631:17: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15084: ;;// porth.porth:1632:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15085: ;;// porth.porth:1632:13: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_15086: ;;// porth.porth:1632:17: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15087: ;;// porth.porth:1633:5: OP_PUSH_STR 366
    mov rax, 1
    push rax
    lea rax, [str_366]
    push rax
addr_15088: ;;// porth.porth:1633:13: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_15089: ;;// porth.porth:1633:17: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15090: ;;// porth.porth:1635:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15091: ;;// porth.porth:1635:8: OP_PUSH_INT 88
    mov rax, 88
    push rax
addr_15092: ;;// porth.porth:1635:19: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_15093: ;;// porth.porth:1635:21: OP_PUSH_GLOBAL_MEM 8421432
    lea rax, [mem+8421432]
    push rax
addr_15094: ;;// porth.porth:1635:25: OP_INLINED 73
addr_15095: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_15096: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_15097: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_15098: ;;// porth.porth:1636:5: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_15099: ;;// porth.porth:1637:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15100: ;;// porth.porth:1637:10: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_15101: ;;// porth.porth:1637:14: OP_CALL 14875
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_14875
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15102: ;;// porth.porth:1639:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15103: ;;// porth.porth:1639:10: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_15104: ;;// porth.porth:1639:18: OP_INLINED 36
addr_15105: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_15106: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_15107: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_15108: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_15109: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_15110: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_15111: ;;// porth.porth:1639:23: OP_INLINED 16
addr_15112: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_15113: ;;// porth.porth:1640:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15114: ;;// porth.porth:1640:10: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_15115: ;;// porth.porth:1640:21: OP_INLINED 36
addr_15116: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_15117: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_15118: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_15119: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_15120: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_15121: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_15122: ;;// porth.porth:1640:26: OP_INLINED 16
addr_15123: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_15124: ;;// porth.porth:1641:7: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_15125: ;;// porth.porth:1643:9: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15126: ;;// porth.porth:1643:14: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_15127: ;;// porth.porth:1643:26: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_15128: ;;// porth.porth:1644:9: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15129: ;;// porth.porth:1644:14: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_15130: ;;// porth.porth:1644:27: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_15131: ;;// porth.porth:1644:29: OP_INLINED 146
addr_15132: ;;// std/core.porth:100:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_15133: ;;// std/core.porth:100:8: OP_INTRINSIC cast(int)
addr_15134: ;;// std/core.porth:101:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_15135: ;;// std/core.porth:101:8: OP_INTRINSIC cast(int)
addr_15136: ;;// std/core.porth:102:3: OP_INTRINSIC or
    pop rax
    pop rbx
    or rbx, rax
    push rbx
addr_15137: ;;// std/core.porth:103:3: OP_INTRINSIC cast(bool)
addr_15138: ;;// porth.porth:1645:9: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15139: ;;// porth.porth:1645:14: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_15140: ;;// porth.porth:1645:28: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_15141: ;;// porth.porth:1645:30: OP_INLINED 146
addr_15142: ;;// std/core.porth:100:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_15143: ;;// std/core.porth:100:8: OP_INTRINSIC cast(int)
addr_15144: ;;// std/core.porth:101:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_15145: ;;// std/core.porth:101:8: OP_INTRINSIC cast(int)
addr_15146: ;;// std/core.porth:102:3: OP_INTRINSIC or
    pop rax
    pop rbx
    or rbx, rax
    push rbx
addr_15147: ;;// std/core.porth:103:3: OP_INTRINSIC cast(bool)
addr_15148: ;;// porth.porth:1646:9: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15149: ;;// porth.porth:1646:14: OP_PUSH_INT 4
    mov rax, 4
    push rax
addr_15150: ;;// porth.porth:1646:26: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_15151: ;;// porth.porth:1646:28: OP_INLINED 146
addr_15152: ;;// std/core.porth:100:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_15153: ;;// std/core.porth:100:8: OP_INTRINSIC cast(int)
addr_15154: ;;// std/core.porth:101:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_15155: ;;// std/core.porth:101:8: OP_INTRINSIC cast(int)
addr_15156: ;;// std/core.porth:102:3: OP_INTRINSIC or
    pop rax
    pop rbx
    or rbx, rax
    push rbx
addr_15157: ;;// std/core.porth:103:3: OP_INTRINSIC cast(bool)
addr_15158: ;;// porth.porth:1647:9: OP_IF 14
    pop rax
    test rax, rax
    jz addr_15172
addr_15159: ;;// porth.porth:1648:12: OP_PUSH_STR 367
    mov rax, 13
    push rax
    lea rax, [str_367]
    push rax
addr_15160: ;;// porth.porth:1648:30: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15161: ;;// porth.porth:1648:34: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15162: ;;// porth.porth:1648:40: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_15163: ;;// porth.porth:1648:48: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15164: ;;// porth.porth:1648:52: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15165: ;;// porth.porth:1648:58: OP_PUSH_STR 368
    mov rax, 1
    push rax
    lea rax, [str_368]
    push rax
addr_15166: ;;// porth.porth:1648:63: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15167: ;;// porth.porth:1648:67: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15168: ;;// porth.porth:1649:12: OP_PUSH_STR 369
    mov rax, 13
    push rax
    lea rax, [str_369]
    push rax
addr_15169: ;;// porth.porth:1649:30: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15170: ;;// porth.porth:1649:34: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15171: ;;// porth.porth:1650:9: OP_ELSE 17
    jmp addr_15188
addr_15172: ;;// porth.porth:1650:14: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15173: ;;// porth.porth:1650:19: OP_PUSH_INT 5
    mov rax, 5
    push rax
addr_15174: ;;// porth.porth:1650:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_15175: ;;// porth.porth:1650:34: OP_IFSTAR 14
    pop rax
    test rax, rax
    jz addr_15189
addr_15176: ;;// porth.porth:1651:12: OP_PUSH_STR 370
    mov rax, 19
    push rax
    lea rax, [str_370]
    push rax
addr_15177: ;;// porth.porth:1651:34: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15178: ;;// porth.porth:1651:38: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15179: ;;// porth.porth:1651:44: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_15180: ;;// porth.porth:1651:52: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15181: ;;// porth.porth:1651:56: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15182: ;;// porth.porth:1651:62: OP_PUSH_STR 371
    mov rax, 2
    push rax
    lea rax, [str_371]
    push rax
addr_15183: ;;// porth.porth:1651:68: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15184: ;;// porth.porth:1651:72: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15185: ;;// porth.porth:1652:12: OP_PUSH_STR 372
    mov rax, 13
    push rax
    lea rax, [str_372]
    push rax
addr_15186: ;;// porth.porth:1652:33: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15187: ;;// porth.porth:1652:37: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15188: ;;// porth.porth:1653:9: OP_ELSE 23
    jmp addr_15211
addr_15189: ;;// porth.porth:1653:14: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15190: ;;// porth.porth:1653:19: OP_PUSH_INT 23
    mov rax, 23
    push rax
addr_15191: ;;// porth.porth:1653:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_15192: ;;// porth.porth:1653:34: OP_IFSTAR 20
    pop rax
    test rax, rax
    jz addr_15212
addr_15193: ;;// porth.porth:1654:12: OP_PUSH_STR 373
    mov rax, 12
    push rax
    lea rax, [str_373]
    push rax
addr_15194: ;;// porth.porth:1654:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15195: ;;// porth.porth:1654:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15196: ;;// porth.porth:1655:12: OP_PUSH_STR 374
    mov rax, 17
    push rax
    lea rax, [str_374]
    push rax
addr_15197: ;;// porth.porth:1655:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15198: ;;// porth.porth:1655:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15199: ;;// porth.porth:1656:12: OP_PUSH_STR 375
    mov rax, 29
    push rax
    lea rax, [str_375]
    push rax
addr_15200: ;;// porth.porth:1656:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15201: ;;// porth.porth:1656:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15202: ;;// porth.porth:1657:12: OP_PUSH_STR 376
    mov rax, 13
    push rax
    lea rax, [str_376]
    push rax
addr_15203: ;;// porth.porth:1657:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15204: ;;// porth.porth:1657:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15205: ;;// porth.porth:1658:12: OP_PUSH_STR 377
    mov rax, 29
    push rax
    lea rax, [str_377]
    push rax
addr_15206: ;;// porth.porth:1658:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15207: ;;// porth.porth:1658:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15208: ;;// porth.porth:1659:12: OP_PUSH_STR 378
    mov rax, 17
    push rax
    lea rax, [str_378]
    push rax
addr_15209: ;;// porth.porth:1659:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15210: ;;// porth.porth:1659:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15211: ;;// porth.porth:1660:9: OP_ELSE 48
    jmp addr_15259
addr_15212: ;;// porth.porth:1660:14: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15213: ;;// porth.porth:1660:19: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_15214: ;;// porth.porth:1660:31: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_15215: ;;// porth.porth:1660:33: OP_IFSTAR 45
    pop rax
    test rax, rax
    jz addr_15260
addr_15216: ;;// porth.porth:1661:11: OP_PUSH_STR 379
    mov rax, 29
    push rax
    lea rax, [str_379]
    push rax
addr_15217: ;;// porth.porth:1661:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15218: ;;// porth.porth:1661:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15219: ;;// porth.porth:1662:11: OP_PUSH_STR 380
    mov rax, 13
    push rax
    lea rax, [str_380]
    push rax
addr_15220: ;;// porth.porth:1662:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15221: ;;// porth.porth:1662:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15222: ;;// porth.porth:1663:11: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_15223: ;;// porth.porth:1663:19: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_15224: ;;// porth.porth:1663:21: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_15225: ;;// porth.porth:1663:29: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15226: ;;// porth.porth:1663:33: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15227: ;;// porth.porth:1664:11: OP_PUSH_STR 381
    mov rax, 1
    push rax
    lea rax, [str_381]
    push rax
addr_15228: ;;// porth.porth:1664:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15229: ;;// porth.porth:1664:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15230: ;;// porth.porth:1665:11: OP_PUSH_STR 382
    mov rax, 29
    push rax
    lea rax, [str_382]
    push rax
addr_15231: ;;// porth.porth:1665:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15232: ;;// porth.porth:1665:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15233: ;;// porth.porth:1666:11: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_15234: ;;// porth.porth:1667:11: OP_WHILE 24
addr_15235: ;;// porth.porth:1667:17: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_15236: ;;// porth.porth:1667:21: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_15237: ;;// porth.porth:1667:23: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_15238: ;;// porth.porth:1667:25: OP_DO 20
    pop rax
    test rax, rax
    jz addr_15258
addr_15239: ;;// porth.porth:1668:13: OP_PUSH_STR 383
    mov rax, 12
    push rax
    lea rax, [str_383]
    push rax
addr_15240: ;;// porth.porth:1668:29: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15241: ;;// porth.porth:1668:33: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15242: ;;// porth.porth:1669:13: OP_PUSH_STR 384
    mov rax, 13
    push rax
    lea rax, [str_384]
    push rax
addr_15243: ;;// porth.porth:1669:29: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15244: ;;// porth.porth:1669:33: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15245: ;;// porth.porth:1670:13: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_15246: ;;// porth.porth:1670:17: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_15247: ;;// porth.porth:1670:19: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_15248: ;;// porth.porth:1670:21: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_15249: ;;// porth.porth:1670:23: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_15250: ;;// porth.porth:1670:29: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15251: ;;// porth.porth:1670:33: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15252: ;;// porth.porth:1671:13: OP_PUSH_STR 385
    mov rax, 7
    push rax
    lea rax, [str_385]
    push rax
addr_15253: ;;// porth.porth:1671:29: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15254: ;;// porth.porth:1671:33: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15255: ;;// porth.porth:1672:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_15256: ;;// porth.porth:1672:15: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_15257: ;;// porth.porth:1673:11: OP_END_WHILE 23
    jmp addr_15234
addr_15258: ;;// porth.porth:1673:15: OP_INTRINSIC drop
    pop rax
addr_15259: ;;// porth.porth:1674:9: OP_ELSE 64
    jmp addr_15323
addr_15260: ;;// porth.porth:1674:14: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15261: ;;// porth.porth:1674:19: OP_PUSH_INT 25
    mov rax, 25
    push rax
addr_15262: ;;// porth.porth:1674:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_15263: ;;// porth.porth:1674:34: OP_IFSTAR 61
    pop rax
    test rax, rax
    jz addr_15324
addr_15264: ;;// porth.porth:1675:11: OP_PUSH_STR 386
    mov rax, 29
    push rax
    lea rax, [str_386]
    push rax
addr_15265: ;;// porth.porth:1675:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15266: ;;// porth.porth:1675:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15267: ;;// porth.porth:1676:11: OP_PUSH_STR 387
    mov rax, 13
    push rax
    lea rax, [str_387]
    push rax
addr_15268: ;;// porth.porth:1676:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15269: ;;// porth.porth:1676:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15270: ;;// porth.porth:1676:55: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_15271: ;;// porth.porth:1676:63: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_15272: ;;// porth.porth:1676:65: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_15273: ;;// porth.porth:1676:67: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15274: ;;// porth.porth:1676:71: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15275: ;;// porth.porth:1676:77: OP_PUSH_STR 388
    mov rax, 1
    push rax
    lea rax, [str_388]
    push rax
addr_15276: ;;// porth.porth:1676:82: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15277: ;;// porth.porth:1676:86: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15278: ;;// porth.porth:1677:11: OP_PUSH_STR 389
    mov rax, 29
    push rax
    lea rax, [str_389]
    push rax
addr_15279: ;;// porth.porth:1677:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15280: ;;// porth.porth:1677:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15281: ;;// porth.porth:1679:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_15282: ;;// porth.porth:1680:11: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_15283: ;;// porth.porth:1681:11: OP_WHILE 38
addr_15284: ;;// porth.porth:1681:17: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_15285: ;;// porth.porth:1681:22: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_15286: ;;// porth.porth:1681:27: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_15287: ;;// porth.porth:1681:29: OP_DO 34
    pop rax
    test rax, rax
    jz addr_15321
addr_15288: ;;// porth.porth:1682:13: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_15289: ;;// porth.porth:1683:15: OP_PUSH_STR 390
    mov rax, 18
    push rax
    lea rax, [str_390]
    push rax
addr_15290: ;;// porth.porth:1683:36: OP_PUSH_BIND 6
    mov rax, [ret_stack_rsp]
    add rax, 48
    mov rbx, [rax]
    push rbx
addr_15291: ;;// porth.porth:1683:40: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15292: ;;// porth.porth:1684:15: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15293: ;;// porth.porth:1684:17: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_15294: ;;// porth.porth:1684:19: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_15295: ;;// porth.porth:1684:36: OP_PUSH_BIND 6
    mov rax, [ret_stack_rsp]
    add rax, 48
    mov rbx, [rax]
    push rbx
addr_15296: ;;// porth.porth:1684:40: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15297: ;;// porth.porth:1685:15: OP_PUSH_STR 391
    mov rax, 2
    push rax
    lea rax, [str_391]
    push rax
addr_15298: ;;// porth.porth:1685:36: OP_PUSH_BIND 6
    mov rax, [ret_stack_rsp]
    add rax, 48
    mov rbx, [rax]
    push rbx
addr_15299: ;;// porth.porth:1685:40: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15300: ;;// porth.porth:1687:15: OP_PUSH_STR 392
    mov rax, 13
    push rax
    lea rax, [str_392]
    push rax
addr_15301: ;;// porth.porth:1687:36: OP_PUSH_BIND 6
    mov rax, [ret_stack_rsp]
    add rax, 48
    mov rbx, [rax]
    push rbx
addr_15302: ;;// porth.porth:1687:40: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15303: ;;// porth.porth:1688:15: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_15304: ;;// porth.porth:1688:17: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15305: ;;// porth.porth:1688:19: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_15306: ;;// porth.porth:1688:21: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_15307: ;;// porth.porth:1688:23: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_15308: ;;// porth.porth:1688:25: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_15309: ;;// porth.porth:1688:27: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_15310: ;;// porth.porth:1688:36: OP_PUSH_BIND 6
    mov rax, [ret_stack_rsp]
    add rax, 48
    mov rbx, [rax]
    push rbx
addr_15311: ;;// porth.porth:1688:40: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15312: ;;// porth.porth:1689:15: OP_PUSH_STR 393
    mov rax, 7
    push rax
    lea rax, [str_393]
    push rax
addr_15313: ;;// porth.porth:1689:36: OP_PUSH_BIND 6
    mov rax, [ret_stack_rsp]
    add rax, 48
    mov rbx, [rax]
    push rbx
addr_15314: ;;// porth.porth:1689:40: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15315: ;;// porth.porth:1691:15: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15316: ;;// porth.porth:1691:17: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_15317: ;;// porth.porth:1691:19: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_15318: ;;// porth.porth:1692:15: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_15319: ;;// porth.porth:1693:13: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_15320: ;;// porth.porth:1694:11: OP_END_WHILE 37
    jmp addr_15283
addr_15321: ;;// porth.porth:1695:11: OP_INTRINSIC drop
    pop rax
addr_15322: ;;// porth.porth:1696:11: OP_INTRINSIC drop
    pop rax
addr_15323: ;;// porth.porth:1697:9: OP_ELSE 22
    jmp addr_15345
addr_15324: ;;// porth.porth:1697:14: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15325: ;;// porth.porth:1697:19: OP_PUSH_INT 27
    mov rax, 27
    push rax
addr_15326: ;;// porth.porth:1697:29: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_15327: ;;// porth.porth:1697:31: OP_IFSTAR 19
    pop rax
    test rax, rax
    jz addr_15346
addr_15328: ;;// porth.porth:1698:11: OP_PUSH_STR 394
    mov rax, 29
    push rax
    lea rax, [str_394]
    push rax
addr_15329: ;;// porth.porth:1698:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15330: ;;// porth.porth:1698:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15331: ;;// porth.porth:1699:11: OP_PUSH_STR 395
    mov rax, 13
    push rax
    lea rax, [str_395]
    push rax
addr_15332: ;;// porth.porth:1699:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15333: ;;// porth.porth:1699:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15334: ;;// porth.porth:1700:11: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_15335: ;;// porth.porth:1700:19: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_15336: ;;// porth.porth:1700:21: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_15337: ;;// porth.porth:1700:29: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15338: ;;// porth.porth:1700:33: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15339: ;;// porth.porth:1701:11: OP_PUSH_STR 396
    mov rax, 1
    push rax
    lea rax, [str_396]
    push rax
addr_15340: ;;// porth.porth:1701:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15341: ;;// porth.porth:1701:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15342: ;;// porth.porth:1702:11: OP_PUSH_STR 397
    mov rax, 29
    push rax
    lea rax, [str_397]
    push rax
addr_15343: ;;// porth.porth:1702:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15344: ;;// porth.porth:1702:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15345: ;;// porth.porth:1703:9: OP_ELSE 25
    jmp addr_15370
addr_15346: ;;// porth.porth:1703:14: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15347: ;;// porth.porth:1703:19: OP_PUSH_INT 26
    mov rax, 26
    push rax
addr_15348: ;;// porth.porth:1703:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_15349: ;;// porth.porth:1703:34: OP_IFSTAR 22
    pop rax
    test rax, rax
    jz addr_15371
addr_15350: ;;// porth.porth:1704:12: OP_PUSH_STR 398
    mov rax, 29
    push rax
    lea rax, [str_398]
    push rax
addr_15351: ;;// porth.porth:1704:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15352: ;;// porth.porth:1704:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15353: ;;// porth.porth:1705:12: OP_PUSH_STR 399
    mov rax, 13
    push rax
    lea rax, [str_399]
    push rax
addr_15354: ;;// porth.porth:1705:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15355: ;;// porth.porth:1705:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15356: ;;// porth.porth:1706:12: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_15357: ;;// porth.porth:1706:20: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_15358: ;;// porth.porth:1706:22: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_15359: ;;// porth.porth:1706:29: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15360: ;;// porth.porth:1706:33: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15361: ;;// porth.porth:1707:12: OP_PUSH_STR 400
    mov rax, 1
    push rax
    lea rax, [str_400]
    push rax
addr_15362: ;;// porth.porth:1707:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15363: ;;// porth.porth:1707:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15364: ;;// porth.porth:1708:12: OP_PUSH_STR 401
    mov rax, 19
    push rax
    lea rax, [str_401]
    push rax
addr_15365: ;;// porth.porth:1708:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15366: ;;// porth.porth:1708:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15367: ;;// porth.porth:1709:12: OP_PUSH_STR 402
    mov rax, 13
    push rax
    lea rax, [str_402]
    push rax
addr_15368: ;;// porth.porth:1709:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15369: ;;// porth.porth:1709:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15370: ;;// porth.porth:1710:9: OP_ELSE 20
    jmp addr_15390
addr_15371: ;;// porth.porth:1710:14: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15372: ;;// porth.porth:1710:19: OP_PUSH_INT 6
    mov rax, 6
    push rax
addr_15373: ;;// porth.porth:1710:37: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_15374: ;;// porth.porth:1710:39: OP_IFSTAR 17
    pop rax
    test rax, rax
    jz addr_15391
addr_15375: ;;// porth.porth:1711:12: OP_PUSH_STR 403
    mov rax, 29
    push rax
    lea rax, [str_403]
    push rax
addr_15376: ;;// porth.porth:1711:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15377: ;;// porth.porth:1711:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15378: ;;// porth.porth:1712:12: OP_PUSH_STR 404
    mov rax, 13
    push rax
    lea rax, [str_404]
    push rax
addr_15379: ;;// porth.porth:1712:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15380: ;;// porth.porth:1712:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15381: ;;// porth.porth:1713:12: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_15382: ;;// porth.porth:1713:29: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15383: ;;// porth.porth:1713:33: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15384: ;;// porth.porth:1714:12: OP_PUSH_STR 405
    mov rax, 1
    push rax
    lea rax, [str_405]
    push rax
addr_15385: ;;// porth.porth:1714:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15386: ;;// porth.porth:1714:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15387: ;;// porth.porth:1715:12: OP_PUSH_STR 406
    mov rax, 13
    push rax
    lea rax, [str_406]
    push rax
addr_15388: ;;// porth.porth:1715:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15389: ;;// porth.porth:1715:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15390: ;;// porth.porth:1716:9: OP_ELSE 17
    jmp addr_15407
addr_15391: ;;// porth.porth:1716:14: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15392: ;;// porth.porth:1716:19: OP_PUSH_INT 7
    mov rax, 7
    push rax
addr_15393: ;;// porth.porth:1716:38: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_15394: ;;// porth.porth:1716:40: OP_IFSTAR 14
    pop rax
    test rax, rax
    jz addr_15408
addr_15395: ;;// porth.porth:1717:12: OP_PUSH_STR 407
    mov rax, 18
    push rax
    lea rax, [str_407]
    push rax
addr_15396: ;;// porth.porth:1717:33: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15397: ;;// porth.porth:1717:37: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15398: ;;// porth.porth:1717:43: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_15399: ;;// porth.porth:1717:51: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15400: ;;// porth.porth:1717:55: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15401: ;;// porth.porth:1717:61: OP_PUSH_STR 408
    mov rax, 2
    push rax
    lea rax, [str_408]
    push rax
addr_15402: ;;// porth.porth:1717:67: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15403: ;;// porth.porth:1717:71: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15404: ;;// porth.porth:1718:12: OP_PUSH_STR 409
    mov rax, 13
    push rax
    lea rax, [str_409]
    push rax
addr_15405: ;;// porth.porth:1718:33: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15406: ;;// porth.porth:1718:37: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15407: ;;// porth.porth:1719:9: OP_ELSE 47
    jmp addr_15454
addr_15408: ;;// porth.porth:1719:14: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15409: ;;// porth.porth:1719:19: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_15410: ;;// porth.porth:1719:31: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_15411: ;;// porth.porth:1719:33: OP_IFSTAR 44
    pop rax
    test rax, rax
    jz addr_15455
addr_15412: ;;// porth.porth:1720:12: OP_PUSH_STR 410
    mov rax, 13
    push rax
    lea rax, [str_410]
    push rax
addr_15413: ;;// porth.porth:1720:28: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15414: ;;// porth.porth:1720:32: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15415: ;;// porth.porth:1721:14: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_15416: ;;// porth.porth:1722:14: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_15417: ;;// porth.porth:1722:26: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_15418: ;;// porth.porth:1723:14: OP_PUSH_GLOBAL_MEM 14188608
    lea rax, [mem+14188608]
    push rax
addr_15419: ;;// porth.porth:1723:22: OP_INLINED 73
addr_15420: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_15421: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_15422: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_15423: ;;// porth.porth:1724:14: OP_INLINED 704
addr_15424: ;;// std/std.porth:58:38: OP_INLINED 684
addr_15425: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_15426: ;;// std/std.porth:56:57: OP_INLINED 36
addr_15427: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_15428: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_15429: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_15430: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_15431: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_15432: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_15433: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_15434: ;;// porth.porth:1725:14: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15435: ;;// porth.porth:1725:18: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15436: ;;// porth.porth:1726:12: OP_PUSH_STR 411
    mov rax, 1
    push rax
    lea rax, [str_411]
    push rax
addr_15437: ;;// porth.porth:1726:17: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15438: ;;// porth.porth:1726:21: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15439: ;;// porth.porth:1728:12: OP_PUSH_STR 412
    mov rax, 13
    push rax
    lea rax, [str_412]
    push rax
addr_15440: ;;// porth.porth:1728:33: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15441: ;;// porth.porth:1728:37: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15442: ;;// porth.porth:1729:12: OP_PUSH_STR 413
    mov rax, 18
    push rax
    lea rax, [str_413]
    push rax
addr_15443: ;;// porth.porth:1729:38: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15444: ;;// porth.porth:1729:42: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15445: ;;// porth.porth:1730:12: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_15446: ;;// porth.porth:1730:20: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15447: ;;// porth.porth:1730:24: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15448: ;;// porth.porth:1731:12: OP_PUSH_STR 414
    mov rax, 2
    push rax
    lea rax, [str_414]
    push rax
addr_15449: ;;// porth.porth:1731:34: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15450: ;;// porth.porth:1731:38: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15451: ;;// porth.porth:1732:12: OP_PUSH_STR 415
    mov rax, 13
    push rax
    lea rax, [str_415]
    push rax
addr_15452: ;;// porth.porth:1732:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15453: ;;// porth.porth:1732:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15454: ;;// porth.porth:1733:9: OP_ELSE 17
    jmp addr_15471
addr_15455: ;;// porth.porth:1733:14: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15456: ;;// porth.porth:1733:19: OP_PUSH_INT 9
    mov rax, 9
    push rax
addr_15457: ;;// porth.porth:1733:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_15458: ;;// porth.porth:1733:34: OP_IFSTAR 14
    pop rax
    test rax, rax
    jz addr_15472
addr_15459: ;;// porth.porth:1734:12: OP_PUSH_STR 416
    mov rax, 18
    push rax
    lea rax, [str_416]
    push rax
addr_15460: ;;// porth.porth:1734:38: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15461: ;;// porth.porth:1734:42: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15462: ;;// porth.porth:1735:12: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_15463: ;;// porth.porth:1735:20: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15464: ;;// porth.porth:1735:24: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15465: ;;// porth.porth:1736:12: OP_PUSH_STR 417
    mov rax, 2
    push rax
    lea rax, [str_417]
    push rax
addr_15466: ;;// porth.porth:1736:34: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15467: ;;// porth.porth:1736:38: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15468: ;;// porth.porth:1737:12: OP_PUSH_STR 418
    mov rax, 13
    push rax
    lea rax, [str_418]
    push rax
addr_15469: ;;// porth.porth:1737:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15470: ;;// porth.porth:1737:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15471: ;;// porth.porth:1738:9: OP_ELSE 22
    jmp addr_15493
addr_15472: ;;// porth.porth:1738:14: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15473: ;;// porth.porth:1738:19: OP_PUSH_INT 10
    mov rax, 10
    push rax
addr_15474: ;;// porth.porth:1738:25: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_15475: ;;// porth.porth:1738:27: OP_IFSTAR 19
    pop rax
    test rax, rax
    jz addr_15494
addr_15476: ;;// porth.porth:1739:12: OP_PUSH_STR 419
    mov rax, 12
    push rax
    lea rax, [str_419]
    push rax
addr_15477: ;;// porth.porth:1739:34: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15478: ;;// porth.porth:1739:38: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15479: ;;// porth.porth:1740:12: OP_PUSH_STR 420
    mov rax, 18
    push rax
    lea rax, [str_420]
    push rax
addr_15480: ;;// porth.porth:1740:34: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15481: ;;// porth.porth:1740:38: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15482: ;;// porth.porth:1741:12: OP_PUSH_STR 421
    mov rax, 12
    push rax
    lea rax, [str_421]
    push rax
addr_15483: ;;// porth.porth:1741:34: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15484: ;;// porth.porth:1741:38: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15485: ;;// porth.porth:1741:44: OP_PUSH_BIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov rbx, [rax]
    push rbx
addr_15486: ;;// porth.porth:1741:47: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_15487: ;;// porth.porth:1741:55: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_15488: ;;// porth.porth:1741:57: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15489: ;;// porth.porth:1741:61: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15490: ;;// porth.porth:1741:67: OP_PUSH_STR 422
    mov rax, 1
    push rax
    lea rax, [str_422]
    push rax
addr_15491: ;;// porth.porth:1741:72: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15492: ;;// porth.porth:1741:76: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15493: ;;// porth.porth:1742:9: OP_ELSE 22
    jmp addr_15515
addr_15494: ;;// porth.porth:1742:14: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15495: ;;// porth.porth:1742:19: OP_PUSH_INT 11
    mov rax, 11
    push rax
addr_15496: ;;// porth.porth:1742:29: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_15497: ;;// porth.porth:1742:31: OP_IFSTAR 19
    pop rax
    test rax, rax
    jz addr_15516
addr_15498: ;;// porth.porth:1743:12: OP_PUSH_STR 423
    mov rax, 12
    push rax
    lea rax, [str_423]
    push rax
addr_15499: ;;// porth.porth:1743:34: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15500: ;;// porth.porth:1743:38: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15501: ;;// porth.porth:1744:12: OP_PUSH_STR 424
    mov rax, 18
    push rax
    lea rax, [str_424]
    push rax
addr_15502: ;;// porth.porth:1744:34: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15503: ;;// porth.porth:1744:38: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15504: ;;// porth.porth:1745:12: OP_PUSH_STR 425
    mov rax, 12
    push rax
    lea rax, [str_425]
    push rax
addr_15505: ;;// porth.porth:1745:34: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15506: ;;// porth.porth:1745:38: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15507: ;;// porth.porth:1745:44: OP_PUSH_BIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov rbx, [rax]
    push rbx
addr_15508: ;;// porth.porth:1745:47: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_15509: ;;// porth.porth:1745:55: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_15510: ;;// porth.porth:1745:57: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15511: ;;// porth.porth:1745:61: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15512: ;;// porth.porth:1745:67: OP_PUSH_STR 426
    mov rax, 1
    push rax
    lea rax, [str_426]
    push rax
addr_15513: ;;// porth.porth:1745:72: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15514: ;;// porth.porth:1745:76: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15515: ;;// porth.porth:1746:9: OP_ELSE 16
    jmp addr_15531
addr_15516: ;;// porth.porth:1746:14: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15517: ;;// porth.porth:1746:19: OP_PUSH_INT 12
    mov rax, 12
    push rax
addr_15518: ;;// porth.porth:1746:27: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_15519: ;;// porth.porth:1746:29: OP_IFSTAR 13
    pop rax
    test rax, rax
    jz addr_15532
addr_15520: ;;// porth.porth:1747:12: OP_PUSH_STR 427
    mov rax, 13
    push rax
    lea rax, [str_427]
    push rax
addr_15521: ;;// porth.porth:1747:34: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15522: ;;// porth.porth:1747:38: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15523: ;;// porth.porth:1747:44: OP_PUSH_BIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov rbx, [rax]
    push rbx
addr_15524: ;;// porth.porth:1747:47: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_15525: ;;// porth.porth:1747:55: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_15526: ;;// porth.porth:1747:57: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15527: ;;// porth.porth:1747:61: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15528: ;;// porth.porth:1747:67: OP_PUSH_STR 428
    mov rax, 1
    push rax
    lea rax, [str_428]
    push rax
addr_15529: ;;// porth.porth:1747:72: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15530: ;;// porth.porth:1747:76: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15531: ;;// porth.porth:1748:9: OP_ELSE 16
    jmp addr_15547
addr_15532: ;;// porth.porth:1748:14: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15533: ;;// porth.porth:1748:19: OP_PUSH_INT 14
    mov rax, 14
    push rax
addr_15534: ;;// porth.porth:1748:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_15535: ;;// porth.porth:1748:34: OP_IFSTAR 13
    pop rax
    test rax, rax
    jz addr_15548
addr_15536: ;;// porth.porth:1749:12: OP_PUSH_STR 429
    mov rax, 13
    push rax
    lea rax, [str_429]
    push rax
addr_15537: ;;// porth.porth:1749:34: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15538: ;;// porth.porth:1749:38: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15539: ;;// porth.porth:1749:44: OP_PUSH_BIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov rbx, [rax]
    push rbx
addr_15540: ;;// porth.porth:1749:47: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_15541: ;;// porth.porth:1749:55: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_15542: ;;// porth.porth:1749:57: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15543: ;;// porth.porth:1749:61: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15544: ;;// porth.porth:1749:67: OP_PUSH_STR 430
    mov rax, 1
    push rax
    lea rax, [str_430]
    push rax
addr_15545: ;;// porth.porth:1749:72: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15546: ;;// porth.porth:1749:76: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15547: ;;// porth.porth:1750:9: OP_ELSE 5
    jmp addr_15552
addr_15548: ;;// porth.porth:1750:14: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15549: ;;// porth.porth:1750:19: OP_PUSH_INT 13
    mov rax, 13
    push rax
addr_15550: ;;// porth.porth:1750:29: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_15551: ;;// porth.porth:1750:31: OP_IFSTAR 2
    pop rax
    test rax, rax
    jz addr_15553
addr_15552: ;;// porth.porth:1752:9: OP_ELSE 5
    jmp addr_15557
addr_15553: ;;// porth.porth:1752:14: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15554: ;;// porth.porth:1752:19: OP_PUSH_INT 20
    mov rax, 20
    push rax
addr_15555: ;;// porth.porth:1752:28: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_15556: ;;// porth.porth:1752:30: OP_IFSTAR 2
    pop rax
    test rax, rax
    jz addr_15558
addr_15557: ;;// porth.porth:1754:9: OP_ELSE 22
    jmp addr_15579
addr_15558: ;;// porth.porth:1754:14: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15559: ;;// porth.porth:1754:19: OP_PUSH_INT 21
    mov rax, 21
    push rax
addr_15560: ;;// porth.porth:1754:25: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_15561: ;;// porth.porth:1754:27: OP_IFSTAR 19
    pop rax
    test rax, rax
    jz addr_15580
addr_15562: ;;// porth.porth:1755:12: OP_PUSH_STR 431
    mov rax, 12
    push rax
    lea rax, [str_431]
    push rax
addr_15563: ;;// porth.porth:1755:34: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15564: ;;// porth.porth:1755:38: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15565: ;;// porth.porth:1756:12: OP_PUSH_STR 432
    mov rax, 18
    push rax
    lea rax, [str_432]
    push rax
addr_15566: ;;// porth.porth:1756:34: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15567: ;;// porth.porth:1756:38: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15568: ;;// porth.porth:1757:12: OP_PUSH_STR 433
    mov rax, 12
    push rax
    lea rax, [str_433]
    push rax
addr_15569: ;;// porth.porth:1757:34: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15570: ;;// porth.porth:1757:38: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15571: ;;// porth.porth:1757:44: OP_PUSH_BIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov rbx, [rax]
    push rbx
addr_15572: ;;// porth.porth:1757:47: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_15573: ;;// porth.porth:1757:55: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_15574: ;;// porth.porth:1757:57: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15575: ;;// porth.porth:1757:61: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15576: ;;// porth.porth:1757:67: OP_PUSH_STR 434
    mov rax, 1
    push rax
    lea rax, [str_434]
    push rax
addr_15577: ;;// porth.porth:1757:72: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15578: ;;// porth.porth:1757:76: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15579: ;;// porth.porth:1758:9: OP_ELSE 20
    jmp addr_15599
addr_15580: ;;// porth.porth:1758:14: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15581: ;;// porth.porth:1758:19: OP_PUSH_INT 15
    mov rax, 15
    push rax
addr_15582: ;;// porth.porth:1758:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_15583: ;;// porth.porth:1758:34: OP_IFSTAR 17
    pop rax
    test rax, rax
    jz addr_15600
addr_15584: ;;// porth.porth:1759:12: OP_PUSH_STR 435
    mov rax, 13
    push rax
    lea rax, [str_435]
    push rax
addr_15585: ;;// porth.porth:1759:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15586: ;;// porth.porth:1759:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15587: ;;// porth.porth:1760:12: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_15588: ;;// porth.porth:1760:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15589: ;;// porth.porth:1760:49: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15590: ;;// porth.porth:1761:12: OP_PUSH_STR 436
    mov rax, 1
    push rax
    lea rax, [str_436]
    push rax
addr_15591: ;;// porth.porth:1761:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15592: ;;// porth.porth:1761:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15593: ;;// porth.porth:1763:12: OP_PUSH_STR 437
    mov rax, 29
    push rax
    lea rax, [str_437]
    push rax
addr_15594: ;;// porth.porth:1763:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15595: ;;// porth.porth:1763:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15596: ;;// porth.porth:1764:12: OP_PUSH_STR 438
    mov rax, 17
    push rax
    lea rax, [str_438]
    push rax
addr_15597: ;;// porth.porth:1764:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15598: ;;// porth.porth:1764:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15599: ;;// porth.porth:1765:9: OP_ELSE 23
    jmp addr_15622
addr_15600: ;;// porth.porth:1765:14: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15601: ;;// porth.porth:1765:19: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_15602: ;;// porth.porth:1765:26: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_15603: ;;// porth.porth:1765:28: OP_IFSTAR 20
    pop rax
    test rax, rax
    jz addr_15623
addr_15604: ;;// porth.porth:1766:12: OP_PUSH_STR 439
    mov rax, 17
    push rax
    lea rax, [str_439]
    push rax
addr_15605: ;;// porth.porth:1766:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15606: ;;// porth.porth:1766:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15607: ;;// porth.porth:1767:12: OP_PUSH_STR 440
    mov rax, 29
    push rax
    lea rax, [str_440]
    push rax
addr_15608: ;;// porth.porth:1767:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15609: ;;// porth.porth:1767:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15610: ;;// porth.porth:1768:12: OP_PUSH_STR 441
    mov rax, 13
    push rax
    lea rax, [str_441]
    push rax
addr_15611: ;;// porth.porth:1768:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15612: ;;// porth.porth:1768:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15613: ;;// porth.porth:1769:12: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_15614: ;;// porth.porth:1769:32: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15615: ;;// porth.porth:1769:36: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15616: ;;// porth.porth:1770:12: OP_PUSH_STR 442
    mov rax, 1
    push rax
    lea rax, [str_442]
    push rax
addr_15617: ;;// porth.porth:1770:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15618: ;;// porth.porth:1770:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15619: ;;// porth.porth:1771:12: OP_PUSH_STR 443
    mov rax, 8
    push rax
    lea rax, [str_443]
    push rax
addr_15620: ;;// porth.porth:1771:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15621: ;;// porth.porth:1771:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15622: ;;// porth.porth:1772:9: OP_ELSE 26
    jmp addr_15648
addr_15623: ;;// porth.porth:1772:14: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15624: ;;// porth.porth:1772:19: OP_PUSH_INT 17
    mov rax, 17
    push rax
addr_15625: ;;// porth.porth:1772:27: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_15626: ;;// porth.porth:1772:29: OP_IFSTAR 23
    pop rax
    test rax, rax
    jz addr_15649
addr_15627: ;;// porth.porth:1773:12: OP_PUSH_STR 444
    mov rax, 17
    push rax
    lea rax, [str_444]
    push rax
addr_15628: ;;// porth.porth:1773:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15629: ;;// porth.porth:1773:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15630: ;;// porth.porth:1774:12: OP_PUSH_STR 445
    mov rax, 29
    push rax
    lea rax, [str_445]
    push rax
addr_15631: ;;// porth.porth:1774:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15632: ;;// porth.porth:1774:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15633: ;;// porth.porth:1775:12: OP_PUSH_STR 446
    mov rax, 14
    push rax
    lea rax, [str_446]
    push rax
addr_15634: ;;// porth.porth:1775:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15635: ;;// porth.porth:1775:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15636: ;;// porth.porth:1776:12: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_15637: ;;// porth.porth:1776:32: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15638: ;;// porth.porth:1776:36: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15639: ;;// porth.porth:1777:12: OP_PUSH_STR 447
    mov rax, 1
    push rax
    lea rax, [str_447]
    push rax
addr_15640: ;;// porth.porth:1777:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15641: ;;// porth.porth:1777:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15642: ;;// porth.porth:1778:12: OP_PUSH_STR 448
    mov rax, 29
    push rax
    lea rax, [str_448]
    push rax
addr_15643: ;;// porth.porth:1778:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15644: ;;// porth.porth:1778:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15645: ;;// porth.porth:1779:12: OP_PUSH_STR 449
    mov rax, 17
    push rax
    lea rax, [str_449]
    push rax
addr_15646: ;;// porth.porth:1779:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15647: ;;// porth.porth:1779:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15648: ;;// porth.porth:1780:9: OP_ELSE 278
    jmp addr_15926
addr_15649: ;;// porth.porth:1780:14: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15650: ;;// porth.porth:1780:19: OP_PUSH_INT 18
    mov rax, 18
    push rax
addr_15651: ;;// porth.porth:1780:34: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_15652: ;;// porth.porth:1780:36: OP_IFSTAR 275
    pop rax
    test rax, rax
    jz addr_15927
addr_15653: ;;// porth.porth:1781:12: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_15654: ;;// porth.porth:1781:20: OP_PUSH_INT 120
    mov rax, 120
    push rax
addr_15655: ;;// porth.porth:1781:33: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_15656: ;;// porth.porth:1781:35: OP_PUSH_GLOBAL_MEM 15073368
    lea rax, [mem+15073368]
    push rax
addr_15657: ;;// porth.porth:1781:41: OP_INLINED 73
addr_15658: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_15659: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_15660: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_15661: ;;// porth.porth:1782:12: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_15662: ;;// porth.porth:1783:14: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15663: ;;// porth.porth:1783:19: OP_PUSH_INT 72
    mov rax, 72
    push rax
addr_15664: ;;// porth.porth:1783:28: OP_INLINED 36
addr_15665: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_15666: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_15667: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_15668: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_15669: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_15670: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_15671: ;;// porth.porth:1783:33: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_15672: ;;// porth.porth:1783:49: OP_INLINED 36
addr_15673: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_15674: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_15675: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_15676: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_15677: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_15678: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_15679: ;;// porth.porth:1783:54: OP_INLINED 16
addr_15680: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_15681: ;;// porth.porth:1783:59: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_15682: ;;// porth.porth:1783:61: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_15683: ;;// porth.porth:1784:14: OP_WHILE 27
addr_15684: ;;// porth.porth:1784:20: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_15685: ;;// porth.porth:1784:24: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_15686: ;;// porth.porth:1784:26: OP_INTRINSIC >=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovge rcx, rdx
    push rcx
addr_15687: ;;// porth.porth:1784:29: OP_DO 23
    pop rax
    test rax, rax
    jz addr_15710
addr_15688: ;;// porth.porth:1785:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_15689: ;;// porth.porth:1785:20: OP_CALL 15023
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_15023
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15690: ;;// porth.porth:1786:16: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_15691: ;;// porth.porth:1787:18: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15692: ;;// porth.porth:1787:23: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_15693: ;;// porth.porth:1787:25: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_15694: ;;// porth.porth:1787:28: OP_IF 11
    pop rax
    test rax, rax
    jz addr_15705
addr_15695: ;;// porth.porth:1788:20: OP_PUSH_STR 450
    mov rax, 8
    push rax
    lea rax, [str_450]
    push rax
addr_15696: ;;// porth.porth:1788:31: OP_PUSH_BIND 7
    mov rax, [ret_stack_rsp]
    add rax, 56
    mov rbx, [rax]
    push rbx
addr_15697: ;;// porth.porth:1788:35: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15698: ;;// porth.porth:1789:20: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15699: ;;// porth.porth:1789:25: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_15700: ;;// porth.porth:1789:30: OP_PUSH_BIND 7
    mov rax, [ret_stack_rsp]
    add rax, 56
    mov rbx, [rax]
    push rbx
addr_15701: ;;// porth.porth:1789:34: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15702: ;;// porth.porth:1790:20: OP_PUSH_STR 451
    mov rax, 1
    push rax
    lea rax, [str_451]
    push rax
addr_15703: ;;// porth.porth:1790:25: OP_PUSH_BIND 7
    mov rax, [ret_stack_rsp]
    add rax, 56
    mov rbx, [rax]
    push rbx
addr_15704: ;;// porth.porth:1790:29: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15705: ;;// porth.porth:1791:18: OP_END_IF 0
addr_15706: ;;// porth.porth:1792:16: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_15707: ;;// porth.porth:1793:16: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_15708: ;;// porth.porth:1793:18: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_15709: ;;// porth.porth:1794:14: OP_END_WHILE 26
    jmp addr_15683
addr_15710: ;;// porth.porth:1794:18: OP_INTRINSIC drop
    pop rax
addr_15711: ;;// porth.porth:1796:14: OP_PUSH_STR 452
    mov rax, 17
    push rax
    lea rax, [str_452]
    push rax
addr_15712: ;;// porth.porth:1796:47: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_15713: ;;// porth.porth:1796:51: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15714: ;;// porth.porth:1797:14: OP_PUSH_STR 453
    mov rax, 29
    push rax
    lea rax, [str_453]
    push rax
addr_15715: ;;// porth.porth:1797:47: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_15716: ;;// porth.porth:1797:51: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15717: ;;// porth.porth:1798:14: OP_PUSH_STR 454
    mov rax, 9
    push rax
    lea rax, [str_454]
    push rax
addr_15718: ;;// porth.porth:1798:47: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_15719: ;;// porth.porth:1798:51: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15720: ;;// porth.porth:1799:14: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15721: ;;// porth.porth:1799:19: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_15722: ;;// porth.porth:1799:36: OP_INLINED 36
addr_15723: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_15724: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_15725: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_15726: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_15727: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_15728: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_15729: ;;// porth.porth:1799:41: OP_INLINED 753
addr_15730: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_15731: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15732: ;;// std/std.porth:65:7: OP_INLINED 704
addr_15733: ;;// std/std.porth:58:38: OP_INLINED 684
addr_15734: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_15735: ;;// std/std.porth:56:57: OP_INLINED 36
addr_15736: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_15737: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_15738: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_15739: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_15740: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_15741: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_15742: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_15743: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15744: ;;// std/std.porth:66:7: OP_INLINED 716
addr_15745: ;;// std/std.porth:59:37: OP_INLINED 694
addr_15746: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_15747: ;;// std/std.porth:57:55: OP_INLINED 36
addr_15748: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_15749: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_15750: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_15751: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_15752: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_15753: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_15754: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_15755: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_15756: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_15757: ;;// porth.porth:1799:47: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_15758: ;;// porth.porth:1799:51: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15759: ;;// porth.porth:1800:14: OP_PUSH_STR 455
    mov rax, 1
    push rax
    lea rax, [str_455]
    push rax
addr_15760: ;;// porth.porth:1800:47: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_15761: ;;// porth.porth:1800:51: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15762: ;;// porth.porth:1801:14: OP_PUSH_STR 456
    mov rax, 29
    push rax
    lea rax, [str_456]
    push rax
addr_15763: ;;// porth.porth:1801:47: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_15764: ;;// porth.porth:1801:51: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15765: ;;// porth.porth:1802:14: OP_PUSH_STR 457
    mov rax, 17
    push rax
    lea rax, [str_457]
    push rax
addr_15766: ;;// porth.porth:1802:47: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_15767: ;;// porth.porth:1802:51: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15768: ;;// porth.porth:1804:14: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15769: ;;// porth.porth:1804:19: OP_PUSH_INT 88
    mov rax, 88
    push rax
addr_15770: ;;// porth.porth:1804:29: OP_INLINED 36
addr_15771: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_15772: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_15773: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_15774: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_15775: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_15776: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_15777: ;;// porth.porth:1804:34: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_15778: ;;// porth.porth:1804:50: OP_INLINED 36
addr_15779: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_15780: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_15781: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_15782: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_15783: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_15784: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_15785: ;;// porth.porth:1804:55: OP_INLINED 16
addr_15786: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_15787: ;;// porth.porth:1804:60: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_15788: ;;// porth.porth:1804:62: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_15789: ;;// porth.porth:1805:14: OP_WHILE 135
addr_15790: ;;// porth.porth:1805:20: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_15791: ;;// porth.porth:1805:24: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_15792: ;;// porth.porth:1805:26: OP_INTRINSIC >=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovge rcx, rdx
    push rcx
addr_15793: ;;// porth.porth:1805:29: OP_DO 131
    pop rax
    test rax, rax
    jz addr_15924
addr_15794: ;;// porth.porth:1806:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_15795: ;;// porth.porth:1806:20: OP_CALL 15066
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_15066
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15796: ;;// porth.porth:1807:16: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_15797: ;;// porth.porth:1808:18: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15798: ;;// porth.porth:1808:23: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_15799: ;;// porth.porth:1808:25: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_15800: ;;// porth.porth:1808:27: OP_IF 109
    pop rax
    test rax, rax
    jz addr_15909
addr_15801: ;;// porth.porth:1809:20: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_15802: ;;// porth.porth:1809:25: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_15803: ;;// porth.porth:1809:34: OP_INLINED 36
addr_15804: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_15805: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_15806: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_15807: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_15808: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_15809: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_15810: ;;// porth.porth:1809:39: OP_INLINED 5367
addr_15811: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_15812: ;;// porth.porth:32:35: OP_INLINED 5195
addr_15813: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_15814: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15815: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_15816: ;;// porth.porth:24:23: OP_INLINED 36
addr_15817: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_15818: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_15819: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_15820: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_15821: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_15822: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_15823: ;;// porth.porth:24:28: OP_INLINED 753
addr_15824: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_15825: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15826: ;;// std/std.porth:65:7: OP_INLINED 704
addr_15827: ;;// std/std.porth:58:38: OP_INLINED 684
addr_15828: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_15829: ;;// std/std.porth:56:57: OP_INLINED 36
addr_15830: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_15831: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_15832: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_15833: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_15834: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_15835: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_15836: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_15837: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15838: ;;// std/std.porth:66:7: OP_INLINED 716
addr_15839: ;;// std/std.porth:59:37: OP_INLINED 694
addr_15840: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_15841: ;;// std/std.porth:57:55: OP_INLINED 36
addr_15842: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_15843: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_15844: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_15845: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_15846: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_15847: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_15848: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_15849: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_15850: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_15851: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_15852: ;;// porth.porth:24:36: OP_INLINED 662
addr_15853: ;;// std/std.porth:48:34: OP_INLINED 394
addr_15854: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_15855: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_15856: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_15857: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_15858: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_15859: ;;// porth.porth:25:36: OP_INLINED 662
addr_15860: ;;// std/std.porth:48:34: OP_INLINED 394
addr_15861: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_15862: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_15863: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_15864: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15865: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_15866: ;;// porth.porth:26:17: OP_INLINED 36
addr_15867: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_15868: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_15869: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_15870: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_15871: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_15872: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_15873: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_15874: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_15875: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15876: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_15877: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_15878: ;;// porth.porth:27:36: OP_INLINED 662
addr_15879: ;;// std/std.porth:48:34: OP_INLINED 394
addr_15880: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_15881: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_15882: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_15883: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15884: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_15885: ;;// porth.porth:28:17: OP_INLINED 36
addr_15886: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_15887: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_15888: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_15889: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_15890: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_15891: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_15892: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_15893: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_15894: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15895: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_15896: ;;// porth.porth:1810:20: OP_PUSH_STR 458
    mov rax, 104
    push rax
    lea rax, [str_458]
    push rax
addr_15897: ;;// porth.porth:1810:128: OP_INLINED 676
addr_15898: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_15899: ;;// std/std.porth:50:37: OP_INLINED 662
addr_15900: ;;// std/std.porth:48:34: OP_INLINED 394
addr_15901: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_15902: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_15903: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_15904: ;;// porth.porth:1811:20: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_15905: ;;// porth.porth:1811:22: OP_INLINED 418
addr_15906: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_15907: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_15908: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_15909: ;;// porth.porth:1812:18: OP_END_IF 0
addr_15910: ;;// porth.porth:1813:18: OP_PUSH_STR 459
    mov rax, 9
    push rax
    lea rax, [str_459]
    push rax
addr_15911: ;;// porth.porth:1813:30: OP_PUSH_BIND 7
    mov rax, [ret_stack_rsp]
    add rax, 56
    mov rbx, [rax]
    push rbx
addr_15912: ;;// porth.porth:1813:34: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15913: ;;// porth.porth:1814:18: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15914: ;;// porth.porth:1814:23: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_15915: ;;// porth.porth:1814:28: OP_PUSH_BIND 7
    mov rax, [ret_stack_rsp]
    add rax, 56
    mov rbx, [rax]
    push rbx
addr_15916: ;;// porth.porth:1814:32: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15917: ;;// porth.porth:1815:18: OP_PUSH_STR 460
    mov rax, 1
    push rax
    lea rax, [str_460]
    push rax
addr_15918: ;;// porth.porth:1815:23: OP_PUSH_BIND 7
    mov rax, [ret_stack_rsp]
    add rax, 56
    mov rbx, [rax]
    push rbx
addr_15919: ;;// porth.porth:1815:27: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15920: ;;// porth.porth:1816:16: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_15921: ;;// porth.porth:1817:16: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_15922: ;;// porth.porth:1817:18: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_15923: ;;// porth.porth:1818:14: OP_END_WHILE 134
    jmp addr_15789
addr_15924: ;;// porth.porth:1818:18: OP_INTRINSIC drop
    pop rax
addr_15925: ;;// porth.porth:1819:12: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_15926: ;;// porth.porth:1820:9: OP_ELSE 5
    jmp addr_15931
addr_15927: ;;// porth.porth:1820:14: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15928: ;;// porth.porth:1820:19: OP_PUSH_INT 19
    mov rax, 19
    push rax
addr_15929: ;;// porth.porth:1820:30: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_15930: ;;// porth.porth:1820:32: OP_IFSTAR 2
    pop rax
    test rax, rax
    jz addr_15932
addr_15931: ;;// porth.porth:1822:9: OP_ELSE 901
    jmp addr_16832
addr_15932: ;;// porth.porth:1822:14: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_15933: ;;// porth.porth:1822:19: OP_PUSH_INT 22
    mov rax, 22
    push rax
addr_15934: ;;// porth.porth:1822:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_15935: ;;// porth.porth:1822:34: OP_IFSTAR 898
    pop rax
    test rax, rax
    jz addr_16833
addr_15936: ;;// porth.porth:1827:13: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_15937: ;;// porth.porth:1827:21: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_15938: ;;// porth.porth:1827:36: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_15939: ;;// porth.porth:1827:38: OP_IF 14
    pop rax
    test rax, rax
    jz addr_15953
addr_15940: ;;// porth.porth:1828:17: OP_PUSH_STR 461
    mov rax, 12
    push rax
    lea rax, [str_461]
    push rax
addr_15941: ;;// porth.porth:1828:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15942: ;;// porth.porth:1828:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15943: ;;// porth.porth:1829:17: OP_PUSH_STR 462
    mov rax, 12
    push rax
    lea rax, [str_462]
    push rax
addr_15944: ;;// porth.porth:1829:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15945: ;;// porth.porth:1829:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15946: ;;// porth.porth:1830:17: OP_PUSH_STR 463
    mov rax, 17
    push rax
    lea rax, [str_463]
    push rax
addr_15947: ;;// porth.porth:1830:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15948: ;;// porth.porth:1830:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15949: ;;// porth.porth:1831:17: OP_PUSH_STR 464
    mov rax, 13
    push rax
    lea rax, [str_464]
    push rax
addr_15950: ;;// porth.porth:1831:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15951: ;;// porth.porth:1831:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15952: ;;// porth.porth:1832:13: OP_ELSE 26
    jmp addr_15978
addr_15953: ;;// porth.porth:1832:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_15954: ;;// porth.porth:1832:26: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_15955: ;;// porth.porth:1832:45: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_15956: ;;// porth.porth:1832:47: OP_IFSTAR 23
    pop rax
    test rax, rax
    jz addr_15979
addr_15957: ;;// porth.porth:1833:17: OP_PUSH_STR 465
    mov rax, 12
    push rax
    lea rax, [str_465]
    push rax
addr_15958: ;;// porth.porth:1833:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15959: ;;// porth.porth:1833:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15960: ;;// porth.porth:1834:17: OP_PUSH_STR 466
    mov rax, 12
    push rax
    lea rax, [str_466]
    push rax
addr_15961: ;;// porth.porth:1834:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15962: ;;// porth.porth:1834:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15963: ;;// porth.porth:1835:17: OP_PUSH_STR 467
    mov rax, 19
    push rax
    lea rax, [str_467]
    push rax
addr_15964: ;;// porth.porth:1835:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15965: ;;// porth.porth:1835:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15966: ;;// porth.porth:1836:17: OP_PUSH_STR 468
    mov rax, 19
    push rax
    lea rax, [str_468]
    push rax
addr_15967: ;;// porth.porth:1836:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15968: ;;// porth.porth:1836:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15969: ;;// porth.porth:1837:17: OP_PUSH_STR 469
    mov rax, 21
    push rax
    lea rax, [str_469]
    push rax
addr_15970: ;;// porth.porth:1837:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15971: ;;// porth.porth:1837:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15972: ;;// porth.porth:1838:17: OP_PUSH_STR 470
    mov rax, 19
    push rax
    lea rax, [str_470]
    push rax
addr_15973: ;;// porth.porth:1838:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15974: ;;// porth.porth:1838:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15975: ;;// porth.porth:1839:17: OP_PUSH_STR 471
    mov rax, 13
    push rax
    lea rax, [str_471]
    push rax
addr_15976: ;;// porth.porth:1839:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15977: ;;// porth.porth:1839:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15978: ;;// porth.porth:1840:13: OP_ELSE 26
    jmp addr_16004
addr_15979: ;;// porth.porth:1840:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_15980: ;;// porth.porth:1840:26: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_15981: ;;// porth.porth:1840:45: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_15982: ;;// porth.porth:1840:47: OP_IFSTAR 23
    pop rax
    test rax, rax
    jz addr_16005
addr_15983: ;;// porth.porth:1841:17: OP_PUSH_STR 472
    mov rax, 12
    push rax
    lea rax, [str_472]
    push rax
addr_15984: ;;// porth.porth:1841:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15985: ;;// porth.porth:1841:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15986: ;;// porth.porth:1842:17: OP_PUSH_STR 473
    mov rax, 12
    push rax
    lea rax, [str_473]
    push rax
addr_15987: ;;// porth.porth:1842:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15988: ;;// porth.porth:1842:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15989: ;;// porth.porth:1843:17: OP_PUSH_STR 474
    mov rax, 19
    push rax
    lea rax, [str_474]
    push rax
addr_15990: ;;// porth.porth:1843:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15991: ;;// porth.porth:1843:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15992: ;;// porth.porth:1844:17: OP_PUSH_STR 475
    mov rax, 19
    push rax
    lea rax, [str_475]
    push rax
addr_15993: ;;// porth.porth:1844:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15994: ;;// porth.porth:1844:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15995: ;;// porth.porth:1845:17: OP_PUSH_STR 476
    mov rax, 21
    push rax
    lea rax, [str_476]
    push rax
addr_15996: ;;// porth.porth:1845:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_15997: ;;// porth.porth:1845:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_15998: ;;// porth.porth:1846:17: OP_PUSH_STR 477
    mov rax, 19
    push rax
    lea rax, [str_477]
    push rax
addr_15999: ;;// porth.porth:1846:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16000: ;;// porth.porth:1846:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16001: ;;// porth.porth:1847:17: OP_PUSH_STR 478
    mov rax, 13
    push rax
    lea rax, [str_478]
    push rax
addr_16002: ;;// porth.porth:1847:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16003: ;;// porth.porth:1847:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16004: ;;// porth.porth:1848:13: OP_ELSE 17
    jmp addr_16021
addr_16005: ;;// porth.porth:1848:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16006: ;;// porth.porth:1848:26: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_16007: ;;// porth.porth:1848:42: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16008: ;;// porth.porth:1848:44: OP_IFSTAR 14
    pop rax
    test rax, rax
    jz addr_16022
addr_16009: ;;// porth.porth:1849:17: OP_PUSH_STR 479
    mov rax, 12
    push rax
    lea rax, [str_479]
    push rax
addr_16010: ;;// porth.porth:1849:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16011: ;;// porth.porth:1849:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16012: ;;// porth.porth:1850:17: OP_PUSH_STR 480
    mov rax, 12
    push rax
    lea rax, [str_480]
    push rax
addr_16013: ;;// porth.porth:1850:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16014: ;;// porth.porth:1850:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16015: ;;// porth.porth:1851:17: OP_PUSH_STR 481
    mov rax, 17
    push rax
    lea rax, [str_481]
    push rax
addr_16016: ;;// porth.porth:1851:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16017: ;;// porth.porth:1851:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16018: ;;// porth.porth:1852:17: OP_PUSH_STR 482
    mov rax, 13
    push rax
    lea rax, [str_482]
    push rax
addr_16019: ;;// porth.porth:1852:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16020: ;;// porth.porth:1852:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16021: ;;// porth.porth:1853:13: OP_ELSE 17
    jmp addr_16038
addr_16022: ;;// porth.porth:1853:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16023: ;;// porth.porth:1853:26: OP_PUSH_INT 4
    mov rax, 4
    push rax
addr_16024: ;;// porth.porth:1853:40: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16025: ;;// porth.porth:1853:42: OP_IFSTAR 14
    pop rax
    test rax, rax
    jz addr_16039
addr_16026: ;;// porth.porth:1854:17: OP_PUSH_STR 483
    mov rax, 12
    push rax
    lea rax, [str_483]
    push rax
addr_16027: ;;// porth.porth:1854:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16028: ;;// porth.porth:1854:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16029: ;;// porth.porth:1855:17: OP_PUSH_STR 484
    mov rax, 12
    push rax
    lea rax, [str_484]
    push rax
addr_16030: ;;// porth.porth:1855:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16031: ;;// porth.porth:1855:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16032: ;;// porth.porth:1856:17: OP_PUSH_STR 485
    mov rax, 12
    push rax
    lea rax, [str_485]
    push rax
addr_16033: ;;// porth.porth:1856:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16034: ;;// porth.porth:1856:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16035: ;;// porth.porth:1857:17: OP_PUSH_STR 486
    mov rax, 13
    push rax
    lea rax, [str_486]
    push rax
addr_16036: ;;// porth.porth:1857:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16037: ;;// porth.porth:1857:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16038: ;;// porth.porth:1858:13: OP_ELSE 23
    jmp addr_16061
addr_16039: ;;// porth.porth:1858:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16040: ;;// porth.porth:1858:26: OP_PUSH_INT 5
    mov rax, 5
    push rax
addr_16041: ;;// porth.porth:1858:43: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16042: ;;// porth.porth:1858:45: OP_IFSTAR 20
    pop rax
    test rax, rax
    jz addr_16062
addr_16043: ;;// porth.porth:1859:17: OP_PUSH_STR 487
    mov rax, 17
    push rax
    lea rax, [str_487]
    push rax
addr_16044: ;;// porth.porth:1859:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16045: ;;// porth.porth:1859:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16046: ;;// porth.porth:1860:17: OP_PUSH_STR 488
    mov rax, 12
    push rax
    lea rax, [str_488]
    push rax
addr_16047: ;;// porth.porth:1860:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16048: ;;// porth.porth:1860:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16049: ;;// porth.porth:1861:17: OP_PUSH_STR 489
    mov rax, 12
    push rax
    lea rax, [str_489]
    push rax
addr_16050: ;;// porth.porth:1861:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16051: ;;// porth.porth:1861:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16052: ;;// porth.porth:1862:17: OP_PUSH_STR 490
    mov rax, 12
    push rax
    lea rax, [str_490]
    push rax
addr_16053: ;;// porth.porth:1862:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16054: ;;// porth.porth:1862:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16055: ;;// porth.porth:1863:17: OP_PUSH_STR 491
    mov rax, 13
    push rax
    lea rax, [str_491]
    push rax
addr_16056: ;;// porth.porth:1863:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16057: ;;// porth.porth:1863:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16058: ;;// porth.porth:1864:17: OP_PUSH_STR 492
    mov rax, 13
    push rax
    lea rax, [str_492]
    push rax
addr_16059: ;;// porth.porth:1864:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16060: ;;// porth.porth:1864:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16061: ;;// porth.porth:1865:13: OP_ELSE 23
    jmp addr_16084
addr_16062: ;;// porth.porth:1865:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16063: ;;// porth.porth:1865:26: OP_PUSH_INT 6
    mov rax, 6
    push rax
addr_16064: ;;// porth.porth:1865:44: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16065: ;;// porth.porth:1865:46: OP_IFSTAR 20
    pop rax
    test rax, rax
    jz addr_16085
addr_16066: ;;// porth.porth:1866:17: OP_PUSH_STR 493
    mov rax, 12
    push rax
    lea rax, [str_493]
    push rax
addr_16067: ;;// porth.porth:1866:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16068: ;;// porth.porth:1866:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16069: ;;// porth.porth:1867:17: OP_PUSH_STR 494
    mov rax, 12
    push rax
    lea rax, [str_494]
    push rax
addr_16070: ;;// porth.porth:1867:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16071: ;;// porth.porth:1867:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16072: ;;// porth.porth:1868:17: OP_PUSH_STR 495
    mov rax, 8
    push rax
    lea rax, [str_495]
    push rax
addr_16073: ;;// porth.porth:1868:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16074: ;;// porth.porth:1868:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16075: ;;// porth.porth:1869:17: OP_PUSH_STR 496
    mov rax, 13
    push rax
    lea rax, [str_496]
    push rax
addr_16076: ;;// porth.porth:1869:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16077: ;;// porth.porth:1869:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16078: ;;// porth.porth:1870:17: OP_PUSH_STR 497
    mov rax, 13
    push rax
    lea rax, [str_497]
    push rax
addr_16079: ;;// porth.porth:1870:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16080: ;;// porth.porth:1870:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16081: ;;// porth.porth:1871:17: OP_PUSH_STR 498
    mov rax, 13
    push rax
    lea rax, [str_498]
    push rax
addr_16082: ;;// porth.porth:1871:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16083: ;;// porth.porth:1871:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16084: ;;// porth.porth:1872:13: OP_ELSE 20
    jmp addr_16104
addr_16085: ;;// porth.porth:1872:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16086: ;;// porth.porth:1872:26: OP_PUSH_INT 7
    mov rax, 7
    push rax
addr_16087: ;;// porth.porth:1872:40: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16088: ;;// porth.porth:1872:42: OP_IFSTAR 17
    pop rax
    test rax, rax
    jz addr_16105
addr_16089: ;;// porth.porth:1873:17: OP_PUSH_STR 499
    mov rax, 12
    push rax
    lea rax, [str_499]
    push rax
addr_16090: ;;// porth.porth:1873:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16091: ;;// porth.porth:1873:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16092: ;;// porth.porth:1874:17: OP_PUSH_STR 500
    mov rax, 12
    push rax
    lea rax, [str_500]
    push rax
addr_16093: ;;// porth.porth:1874:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16094: ;;// porth.porth:1874:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16095: ;;// porth.porth:1875:17: OP_PUSH_STR 501
    mov rax, 17
    push rax
    lea rax, [str_501]
    push rax
addr_16096: ;;// porth.porth:1875:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16097: ;;// porth.porth:1875:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16098: ;;// porth.porth:1876:17: OP_PUSH_STR 502
    mov rax, 20
    push rax
    lea rax, [str_502]
    push rax
addr_16099: ;;// porth.porth:1876:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16100: ;;// porth.porth:1876:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16101: ;;// porth.porth:1877:17: OP_PUSH_STR 503
    mov rax, 13
    push rax
    lea rax, [str_503]
    push rax
addr_16102: ;;// porth.porth:1877:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16103: ;;// porth.porth:1877:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16104: ;;// porth.porth:1878:13: OP_ELSE 17
    jmp addr_16121
addr_16105: ;;// porth.porth:1878:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16106: ;;// porth.porth:1878:26: OP_PUSH_INT 14
    mov rax, 14
    push rax
addr_16107: ;;// porth.porth:1878:40: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16108: ;;// porth.porth:1878:42: OP_IFSTAR 14
    pop rax
    test rax, rax
    jz addr_16122
addr_16109: ;;// porth.porth:1879:17: OP_PUSH_STR 504
    mov rax, 12
    push rax
    lea rax, [str_504]
    push rax
addr_16110: ;;// porth.porth:1879:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16111: ;;// porth.porth:1879:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16112: ;;// porth.porth:1880:17: OP_PUSH_STR 505
    mov rax, 12
    push rax
    lea rax, [str_505]
    push rax
addr_16113: ;;// porth.porth:1880:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16114: ;;// porth.porth:1880:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16115: ;;// porth.porth:1881:17: OP_PUSH_STR 506
    mov rax, 16
    push rax
    lea rax, [str_506]
    push rax
addr_16116: ;;// porth.porth:1881:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16117: ;;// porth.porth:1881:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16118: ;;// porth.porth:1882:17: OP_PUSH_STR 507
    mov rax, 13
    push rax
    lea rax, [str_507]
    push rax
addr_16119: ;;// porth.porth:1882:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16120: ;;// porth.porth:1882:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16121: ;;// porth.porth:1883:13: OP_ELSE 17
    jmp addr_16138
addr_16122: ;;// porth.porth:1883:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16123: ;;// porth.porth:1883:26: OP_PUSH_INT 15
    mov rax, 15
    push rax
addr_16124: ;;// porth.porth:1883:40: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16125: ;;// porth.porth:1883:42: OP_IFSTAR 14
    pop rax
    test rax, rax
    jz addr_16139
addr_16126: ;;// porth.porth:1884:17: OP_PUSH_STR 508
    mov rax, 12
    push rax
    lea rax, [str_508]
    push rax
addr_16127: ;;// porth.porth:1884:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16128: ;;// porth.porth:1884:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16129: ;;// porth.porth:1885:17: OP_PUSH_STR 509
    mov rax, 12
    push rax
    lea rax, [str_509]
    push rax
addr_16130: ;;// porth.porth:1885:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16131: ;;// porth.porth:1885:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16132: ;;// porth.porth:1886:17: OP_PUSH_STR 510
    mov rax, 16
    push rax
    lea rax, [str_510]
    push rax
addr_16133: ;;// porth.porth:1886:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16134: ;;// porth.porth:1886:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16135: ;;// porth.porth:1887:17: OP_PUSH_STR 511
    mov rax, 13
    push rax
    lea rax, [str_511]
    push rax
addr_16136: ;;// porth.porth:1887:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16137: ;;// porth.porth:1887:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16138: ;;// porth.porth:1888:13: OP_ELSE 17
    jmp addr_16155
addr_16139: ;;// porth.porth:1888:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16140: ;;// porth.porth:1888:26: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_16141: ;;// porth.porth:1888:39: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16142: ;;// porth.porth:1888:41: OP_IFSTAR 14
    pop rax
    test rax, rax
    jz addr_16156
addr_16143: ;;// porth.porth:1889:17: OP_PUSH_STR 512
    mov rax, 12
    push rax
    lea rax, [str_512]
    push rax
addr_16144: ;;// porth.porth:1889:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16145: ;;// porth.porth:1889:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16146: ;;// porth.porth:1890:17: OP_PUSH_STR 513
    mov rax, 12
    push rax
    lea rax, [str_513]
    push rax
addr_16147: ;;// porth.porth:1890:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16148: ;;// porth.porth:1890:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16149: ;;// porth.porth:1891:17: OP_PUSH_STR 514
    mov rax, 16
    push rax
    lea rax, [str_514]
    push rax
addr_16150: ;;// porth.porth:1891:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16151: ;;// porth.porth:1891:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16152: ;;// porth.porth:1892:17: OP_PUSH_STR 515
    mov rax, 13
    push rax
    lea rax, [str_515]
    push rax
addr_16153: ;;// porth.porth:1892:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16154: ;;// porth.porth:1892:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16155: ;;// porth.porth:1893:13: OP_ELSE 17
    jmp addr_16172
addr_16156: ;;// porth.porth:1893:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16157: ;;// porth.porth:1893:26: OP_PUSH_INT 17
    mov rax, 17
    push rax
addr_16158: ;;// porth.porth:1893:40: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16159: ;;// porth.porth:1893:42: OP_IFSTAR 14
    pop rax
    test rax, rax
    jz addr_16173
addr_16160: ;;// porth.porth:1894:17: OP_PUSH_STR 516
    mov rax, 12
    push rax
    lea rax, [str_516]
    push rax
addr_16161: ;;// porth.porth:1894:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16162: ;;// porth.porth:1894:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16163: ;;// porth.porth:1895:17: OP_PUSH_STR 517
    mov rax, 12
    push rax
    lea rax, [str_517]
    push rax
addr_16164: ;;// porth.porth:1895:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16165: ;;// porth.porth:1895:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16166: ;;// porth.porth:1896:17: OP_PUSH_STR 518
    mov rax, 17
    push rax
    lea rax, [str_518]
    push rax
addr_16167: ;;// porth.porth:1896:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16168: ;;// porth.porth:1896:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16169: ;;// porth.porth:1897:17: OP_PUSH_STR 519
    mov rax, 13
    push rax
    lea rax, [str_519]
    push rax
addr_16170: ;;// porth.porth:1897:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16171: ;;// porth.porth:1897:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16172: ;;// porth.porth:1898:13: OP_ELSE 14
    jmp addr_16186
addr_16173: ;;// porth.porth:1898:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16174: ;;// porth.porth:1898:26: OP_PUSH_INT 18
    mov rax, 18
    push rax
addr_16175: ;;// porth.porth:1898:40: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16176: ;;// porth.porth:1898:42: OP_IFSTAR 11
    pop rax
    test rax, rax
    jz addr_16187
addr_16177: ;;// porth.porth:1899:17: OP_PUSH_STR 520
    mov rax, 12
    push rax
    lea rax, [str_520]
    push rax
addr_16178: ;;// porth.porth:1899:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16179: ;;// porth.porth:1899:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16180: ;;// porth.porth:1900:17: OP_PUSH_STR 521
    mov rax, 12
    push rax
    lea rax, [str_521]
    push rax
addr_16181: ;;// porth.porth:1900:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16182: ;;// porth.porth:1900:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16183: ;;// porth.porth:1901:17: OP_PUSH_STR 522
    mov rax, 13
    push rax
    lea rax, [str_522]
    push rax
addr_16184: ;;// porth.porth:1901:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16185: ;;// porth.porth:1901:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16186: ;;// porth.porth:1902:13: OP_ELSE 11
    jmp addr_16197
addr_16187: ;;// porth.porth:1902:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16188: ;;// porth.porth:1902:26: OP_PUSH_INT 19
    mov rax, 19
    push rax
addr_16189: ;;// porth.porth:1902:42: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16190: ;;// porth.porth:1902:44: OP_IFSTAR 8
    pop rax
    test rax, rax
    jz addr_16198
addr_16191: ;;// porth.porth:1903:17: OP_PUSH_STR 523
    mov rax, 12
    push rax
    lea rax, [str_523]
    push rax
addr_16192: ;;// porth.porth:1903:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16193: ;;// porth.porth:1903:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16194: ;;// porth.porth:1904:17: OP_PUSH_STR 524
    mov rax, 15
    push rax
    lea rax, [str_524]
    push rax
addr_16195: ;;// porth.porth:1904:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16196: ;;// porth.porth:1904:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16197: ;;// porth.porth:1905:13: OP_ELSE 26
    jmp addr_16223
addr_16198: ;;// porth.porth:1905:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16199: ;;// porth.porth:1905:26: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_16200: ;;// porth.porth:1905:39: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16201: ;;// porth.porth:1905:41: OP_IFSTAR 23
    pop rax
    test rax, rax
    jz addr_16224
addr_16202: ;;// porth.porth:1906:17: OP_PUSH_STR 525
    mov rax, 15
    push rax
    lea rax, [str_525]
    push rax
addr_16203: ;;// porth.porth:1906:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16204: ;;// porth.porth:1906:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16205: ;;// porth.porth:1907:17: OP_PUSH_STR 526
    mov rax, 15
    push rax
    lea rax, [str_526]
    push rax
addr_16206: ;;// porth.porth:1907:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16207: ;;// porth.porth:1907:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16208: ;;// porth.porth:1908:17: OP_PUSH_STR 527
    mov rax, 12
    push rax
    lea rax, [str_527]
    push rax
addr_16209: ;;// porth.porth:1908:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16210: ;;// porth.porth:1908:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16211: ;;// porth.porth:1909:17: OP_PUSH_STR 528
    mov rax, 12
    push rax
    lea rax, [str_528]
    push rax
addr_16212: ;;// porth.porth:1909:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16213: ;;// porth.porth:1909:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16214: ;;// porth.porth:1910:17: OP_PUSH_STR 529
    mov rax, 17
    push rax
    lea rax, [str_529]
    push rax
addr_16215: ;;// porth.porth:1910:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16216: ;;// porth.porth:1910:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16217: ;;// porth.porth:1911:17: OP_PUSH_STR 530
    mov rax, 19
    push rax
    lea rax, [str_530]
    push rax
addr_16218: ;;// porth.porth:1911:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16219: ;;// porth.porth:1911:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16220: ;;// porth.porth:1912:17: OP_PUSH_STR 531
    mov rax, 13
    push rax
    lea rax, [str_531]
    push rax
addr_16221: ;;// porth.porth:1912:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16222: ;;// porth.porth:1912:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16223: ;;// porth.porth:1913:13: OP_ELSE 26
    jmp addr_16249
addr_16224: ;;// porth.porth:1913:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16225: ;;// porth.porth:1913:26: OP_PUSH_INT 9
    mov rax, 9
    push rax
addr_16226: ;;// porth.porth:1913:39: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16227: ;;// porth.porth:1913:41: OP_IFSTAR 23
    pop rax
    test rax, rax
    jz addr_16250
addr_16228: ;;// porth.porth:1914:17: OP_PUSH_STR 532
    mov rax, 15
    push rax
    lea rax, [str_532]
    push rax
addr_16229: ;;// porth.porth:1914:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16230: ;;// porth.porth:1914:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16231: ;;// porth.porth:1915:17: OP_PUSH_STR 533
    mov rax, 15
    push rax
    lea rax, [str_533]
    push rax
addr_16232: ;;// porth.porth:1915:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16233: ;;// porth.porth:1915:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16234: ;;// porth.porth:1916:17: OP_PUSH_STR 534
    mov rax, 12
    push rax
    lea rax, [str_534]
    push rax
addr_16235: ;;// porth.porth:1916:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16236: ;;// porth.porth:1916:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16237: ;;// porth.porth:1917:17: OP_PUSH_STR 535
    mov rax, 12
    push rax
    lea rax, [str_535]
    push rax
addr_16238: ;;// porth.porth:1917:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16239: ;;// porth.porth:1917:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16240: ;;// porth.porth:1918:17: OP_PUSH_STR 536
    mov rax, 17
    push rax
    lea rax, [str_536]
    push rax
addr_16241: ;;// porth.porth:1918:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16242: ;;// porth.porth:1918:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16243: ;;// porth.porth:1919:17: OP_PUSH_STR 537
    mov rax, 19
    push rax
    lea rax, [str_537]
    push rax
addr_16244: ;;// porth.porth:1919:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16245: ;;// porth.porth:1919:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16246: ;;// porth.porth:1920:17: OP_PUSH_STR 538
    mov rax, 13
    push rax
    lea rax, [str_538]
    push rax
addr_16247: ;;// porth.porth:1920:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16248: ;;// porth.porth:1920:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16249: ;;// porth.porth:1921:13: OP_ELSE 26
    jmp addr_16275
addr_16250: ;;// porth.porth:1921:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16251: ;;// porth.porth:1921:26: OP_PUSH_INT 10
    mov rax, 10
    push rax
addr_16252: ;;// porth.porth:1921:39: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16253: ;;// porth.porth:1921:41: OP_IFSTAR 23
    pop rax
    test rax, rax
    jz addr_16276
addr_16254: ;;// porth.porth:1922:17: OP_PUSH_STR 539
    mov rax, 15
    push rax
    lea rax, [str_539]
    push rax
addr_16255: ;;// porth.porth:1922:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16256: ;;// porth.porth:1922:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16257: ;;// porth.porth:1923:17: OP_PUSH_STR 540
    mov rax, 15
    push rax
    lea rax, [str_540]
    push rax
addr_16258: ;;// porth.porth:1923:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16259: ;;// porth.porth:1923:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16260: ;;// porth.porth:1924:17: OP_PUSH_STR 541
    mov rax, 12
    push rax
    lea rax, [str_541]
    push rax
addr_16261: ;;// porth.porth:1924:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16262: ;;// porth.porth:1924:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16263: ;;// porth.porth:1925:17: OP_PUSH_STR 542
    mov rax, 12
    push rax
    lea rax, [str_542]
    push rax
addr_16264: ;;// porth.porth:1925:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16265: ;;// porth.porth:1925:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16266: ;;// porth.porth:1926:17: OP_PUSH_STR 543
    mov rax, 17
    push rax
    lea rax, [str_543]
    push rax
addr_16267: ;;// porth.porth:1926:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16268: ;;// porth.porth:1926:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16269: ;;// porth.porth:1927:17: OP_PUSH_STR 544
    mov rax, 19
    push rax
    lea rax, [str_544]
    push rax
addr_16270: ;;// porth.porth:1927:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16271: ;;// porth.porth:1927:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16272: ;;// porth.porth:1928:17: OP_PUSH_STR 545
    mov rax, 13
    push rax
    lea rax, [str_545]
    push rax
addr_16273: ;;// porth.porth:1928:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16274: ;;// porth.porth:1928:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16275: ;;// porth.porth:1929:13: OP_ELSE 26
    jmp addr_16301
addr_16276: ;;// porth.porth:1929:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16277: ;;// porth.porth:1929:26: OP_PUSH_INT 11
    mov rax, 11
    push rax
addr_16278: ;;// porth.porth:1929:39: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16279: ;;// porth.porth:1929:41: OP_IFSTAR 23
    pop rax
    test rax, rax
    jz addr_16302
addr_16280: ;;// porth.porth:1930:17: OP_PUSH_STR 546
    mov rax, 15
    push rax
    lea rax, [str_546]
    push rax
addr_16281: ;;// porth.porth:1930:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16282: ;;// porth.porth:1930:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16283: ;;// porth.porth:1931:17: OP_PUSH_STR 547
    mov rax, 15
    push rax
    lea rax, [str_547]
    push rax
addr_16284: ;;// porth.porth:1931:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16285: ;;// porth.porth:1931:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16286: ;;// porth.porth:1932:17: OP_PUSH_STR 548
    mov rax, 12
    push rax
    lea rax, [str_548]
    push rax
addr_16287: ;;// porth.porth:1932:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16288: ;;// porth.porth:1932:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16289: ;;// porth.porth:1933:17: OP_PUSH_STR 549
    mov rax, 12
    push rax
    lea rax, [str_549]
    push rax
addr_16290: ;;// porth.porth:1933:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16291: ;;// porth.porth:1933:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16292: ;;// porth.porth:1934:17: OP_PUSH_STR 550
    mov rax, 17
    push rax
    lea rax, [str_550]
    push rax
addr_16293: ;;// porth.porth:1934:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16294: ;;// porth.porth:1934:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16295: ;;// porth.porth:1935:17: OP_PUSH_STR 551
    mov rax, 20
    push rax
    lea rax, [str_551]
    push rax
addr_16296: ;;// porth.porth:1935:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16297: ;;// porth.porth:1935:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16298: ;;// porth.porth:1936:17: OP_PUSH_STR 552
    mov rax, 13
    push rax
    lea rax, [str_552]
    push rax
addr_16299: ;;// porth.porth:1936:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16300: ;;// porth.porth:1936:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16301: ;;// porth.porth:1937:13: OP_ELSE 26
    jmp addr_16327
addr_16302: ;;// porth.porth:1937:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16303: ;;// porth.porth:1937:26: OP_PUSH_INT 12
    mov rax, 12
    push rax
addr_16304: ;;// porth.porth:1937:39: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16305: ;;// porth.porth:1937:41: OP_IFSTAR 23
    pop rax
    test rax, rax
    jz addr_16328
addr_16306: ;;// porth.porth:1938:17: OP_PUSH_STR 553
    mov rax, 15
    push rax
    lea rax, [str_553]
    push rax
addr_16307: ;;// porth.porth:1938:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16308: ;;// porth.porth:1938:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16309: ;;// porth.porth:1939:17: OP_PUSH_STR 554
    mov rax, 15
    push rax
    lea rax, [str_554]
    push rax
addr_16310: ;;// porth.porth:1939:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16311: ;;// porth.porth:1939:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16312: ;;// porth.porth:1940:17: OP_PUSH_STR 555
    mov rax, 12
    push rax
    lea rax, [str_555]
    push rax
addr_16313: ;;// porth.porth:1940:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16314: ;;// porth.porth:1940:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16315: ;;// porth.porth:1941:17: OP_PUSH_STR 556
    mov rax, 12
    push rax
    lea rax, [str_556]
    push rax
addr_16316: ;;// porth.porth:1941:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16317: ;;// porth.porth:1941:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16318: ;;// porth.porth:1942:17: OP_PUSH_STR 557
    mov rax, 17
    push rax
    lea rax, [str_557]
    push rax
addr_16319: ;;// porth.porth:1942:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16320: ;;// porth.porth:1942:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16321: ;;// porth.porth:1943:17: OP_PUSH_STR 558
    mov rax, 20
    push rax
    lea rax, [str_558]
    push rax
addr_16322: ;;// porth.porth:1943:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16323: ;;// porth.porth:1943:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16324: ;;// porth.porth:1944:17: OP_PUSH_STR 559
    mov rax, 13
    push rax
    lea rax, [str_559]
    push rax
addr_16325: ;;// porth.porth:1944:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16326: ;;// porth.porth:1944:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16327: ;;// porth.porth:1945:13: OP_ELSE 26
    jmp addr_16353
addr_16328: ;;// porth.porth:1945:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16329: ;;// porth.porth:1945:26: OP_PUSH_INT 13
    mov rax, 13
    push rax
addr_16330: ;;// porth.porth:1945:39: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16331: ;;// porth.porth:1945:41: OP_IFSTAR 23
    pop rax
    test rax, rax
    jz addr_16354
addr_16332: ;;// porth.porth:1946:17: OP_PUSH_STR 560
    mov rax, 15
    push rax
    lea rax, [str_560]
    push rax
addr_16333: ;;// porth.porth:1946:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16334: ;;// porth.porth:1946:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16335: ;;// porth.porth:1947:17: OP_PUSH_STR 561
    mov rax, 15
    push rax
    lea rax, [str_561]
    push rax
addr_16336: ;;// porth.porth:1947:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16337: ;;// porth.porth:1947:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16338: ;;// porth.porth:1948:17: OP_PUSH_STR 562
    mov rax, 12
    push rax
    lea rax, [str_562]
    push rax
addr_16339: ;;// porth.porth:1948:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16340: ;;// porth.porth:1948:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16341: ;;// porth.porth:1949:17: OP_PUSH_STR 563
    mov rax, 12
    push rax
    lea rax, [str_563]
    push rax
addr_16342: ;;// porth.porth:1949:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16343: ;;// porth.porth:1949:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16344: ;;// porth.porth:1950:17: OP_PUSH_STR 564
    mov rax, 17
    push rax
    lea rax, [str_564]
    push rax
addr_16345: ;;// porth.porth:1950:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16346: ;;// porth.porth:1950:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16347: ;;// porth.porth:1951:17: OP_PUSH_STR 565
    mov rax, 20
    push rax
    lea rax, [str_565]
    push rax
addr_16348: ;;// porth.porth:1951:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16349: ;;// porth.porth:1951:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16350: ;;// porth.porth:1952:17: OP_PUSH_STR 566
    mov rax, 13
    push rax
    lea rax, [str_566]
    push rax
addr_16351: ;;// porth.porth:1952:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16352: ;;// porth.porth:1952:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16353: ;;// porth.porth:1953:13: OP_ELSE 14
    jmp addr_16367
addr_16354: ;;// porth.porth:1953:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16355: ;;// porth.porth:1953:26: OP_PUSH_INT 20
    mov rax, 20
    push rax
addr_16356: ;;// porth.porth:1953:40: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16357: ;;// porth.porth:1953:42: OP_IFSTAR 11
    pop rax
    test rax, rax
    jz addr_16368
addr_16358: ;;// porth.porth:1954:17: OP_PUSH_STR 567
    mov rax, 12
    push rax
    lea rax, [str_567]
    push rax
addr_16359: ;;// porth.porth:1954:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16360: ;;// porth.porth:1954:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16361: ;;// porth.porth:1955:17: OP_PUSH_STR 568
    mov rax, 13
    push rax
    lea rax, [str_568]
    push rax
addr_16362: ;;// porth.porth:1955:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16363: ;;// porth.porth:1955:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16364: ;;// porth.porth:1956:17: OP_PUSH_STR 569
    mov rax, 13
    push rax
    lea rax, [str_569]
    push rax
addr_16365: ;;// porth.porth:1956:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16366: ;;// porth.porth:1956:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16367: ;;// porth.porth:1957:13: OP_ELSE 17
    jmp addr_16384
addr_16368: ;;// porth.porth:1957:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16369: ;;// porth.porth:1957:26: OP_PUSH_INT 21
    mov rax, 21
    push rax
addr_16370: ;;// porth.porth:1957:41: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16371: ;;// porth.porth:1957:43: OP_IFSTAR 14
    pop rax
    test rax, rax
    jz addr_16385
addr_16372: ;;// porth.porth:1958:17: OP_PUSH_STR 570
    mov rax, 12
    push rax
    lea rax, [str_570]
    push rax
addr_16373: ;;// porth.porth:1958:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16374: ;;// porth.porth:1958:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16375: ;;// porth.porth:1959:17: OP_PUSH_STR 571
    mov rax, 12
    push rax
    lea rax, [str_571]
    push rax
addr_16376: ;;// porth.porth:1959:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16377: ;;// porth.porth:1959:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16378: ;;// porth.porth:1960:17: OP_PUSH_STR 572
    mov rax, 13
    push rax
    lea rax, [str_572]
    push rax
addr_16379: ;;// porth.porth:1960:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16380: ;;// porth.porth:1960:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16381: ;;// porth.porth:1961:17: OP_PUSH_STR 573
    mov rax, 13
    push rax
    lea rax, [str_573]
    push rax
addr_16382: ;;// porth.porth:1961:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16383: ;;// porth.porth:1961:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16384: ;;// porth.porth:1962:13: OP_ELSE 8
    jmp addr_16392
addr_16385: ;;// porth.porth:1962:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16386: ;;// porth.porth:1962:26: OP_PUSH_INT 22
    mov rax, 22
    push rax
addr_16387: ;;// porth.porth:1962:41: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16388: ;;// porth.porth:1962:43: OP_IFSTAR 5
    pop rax
    test rax, rax
    jz addr_16393
addr_16389: ;;// porth.porth:1963:17: OP_PUSH_STR 574
    mov rax, 12
    push rax
    lea rax, [str_574]
    push rax
addr_16390: ;;// porth.porth:1963:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16391: ;;// porth.porth:1963:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16392: ;;// porth.porth:1964:13: OP_ELSE 20
    jmp addr_16412
addr_16393: ;;// porth.porth:1964:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16394: ;;// porth.porth:1964:26: OP_PUSH_INT 23
    mov rax, 23
    push rax
addr_16395: ;;// porth.porth:1964:41: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16396: ;;// porth.porth:1964:43: OP_IFSTAR 17
    pop rax
    test rax, rax
    jz addr_16413
addr_16397: ;;// porth.porth:1965:17: OP_PUSH_STR 575
    mov rax, 12
    push rax
    lea rax, [str_575]
    push rax
addr_16398: ;;// porth.porth:1965:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16399: ;;// porth.porth:1965:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16400: ;;// porth.porth:1966:17: OP_PUSH_STR 576
    mov rax, 12
    push rax
    lea rax, [str_576]
    push rax
addr_16401: ;;// porth.porth:1966:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16402: ;;// porth.porth:1966:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16403: ;;// porth.porth:1967:17: OP_PUSH_STR 577
    mov rax, 13
    push rax
    lea rax, [str_577]
    push rax
addr_16404: ;;// porth.porth:1967:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16405: ;;// porth.porth:1967:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16406: ;;// porth.porth:1968:17: OP_PUSH_STR 578
    mov rax, 13
    push rax
    lea rax, [str_578]
    push rax
addr_16407: ;;// porth.porth:1968:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16408: ;;// porth.porth:1968:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16409: ;;// porth.porth:1969:17: OP_PUSH_STR 579
    mov rax, 13
    push rax
    lea rax, [str_579]
    push rax
addr_16410: ;;// porth.porth:1969:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16411: ;;// porth.porth:1969:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16412: ;;// porth.porth:1970:13: OP_ELSE 23
    jmp addr_16435
addr_16413: ;;// porth.porth:1970:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16414: ;;// porth.porth:1970:26: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_16415: ;;// porth.porth:1970:40: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16416: ;;// porth.porth:1970:42: OP_IFSTAR 20
    pop rax
    test rax, rax
    jz addr_16436
addr_16417: ;;// porth.porth:1971:17: OP_PUSH_STR 580
    mov rax, 12
    push rax
    lea rax, [str_580]
    push rax
addr_16418: ;;// porth.porth:1971:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16419: ;;// porth.porth:1971:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16420: ;;// porth.porth:1972:17: OP_PUSH_STR 581
    mov rax, 12
    push rax
    lea rax, [str_581]
    push rax
addr_16421: ;;// porth.porth:1972:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16422: ;;// porth.porth:1972:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16423: ;;// porth.porth:1973:17: OP_PUSH_STR 582
    mov rax, 12
    push rax
    lea rax, [str_582]
    push rax
addr_16424: ;;// porth.porth:1973:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16425: ;;// porth.porth:1973:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16426: ;;// porth.porth:1974:17: OP_PUSH_STR 583
    mov rax, 13
    push rax
    lea rax, [str_583]
    push rax
addr_16427: ;;// porth.porth:1974:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16428: ;;// porth.porth:1974:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16429: ;;// porth.porth:1975:17: OP_PUSH_STR 584
    mov rax, 13
    push rax
    lea rax, [str_584]
    push rax
addr_16430: ;;// porth.porth:1975:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16431: ;;// porth.porth:1975:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16432: ;;// porth.porth:1976:17: OP_PUSH_STR 585
    mov rax, 13
    push rax
    lea rax, [str_585]
    push rax
addr_16433: ;;// porth.porth:1976:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16434: ;;// porth.porth:1976:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16435: ;;// porth.porth:1977:13: OP_ELSE 17
    jmp addr_16452
addr_16436: ;;// porth.porth:1977:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16437: ;;// porth.porth:1977:26: OP_PUSH_INT 25
    mov rax, 25
    push rax
addr_16438: ;;// porth.porth:1977:42: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16439: ;;// porth.porth:1977:44: OP_IFSTAR 14
    pop rax
    test rax, rax
    jz addr_16453
addr_16440: ;;// porth.porth:1978:17: OP_PUSH_STR 586
    mov rax, 12
    push rax
    lea rax, [str_586]
    push rax
addr_16441: ;;// porth.porth:1978:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16442: ;;// porth.porth:1978:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16443: ;;// porth.porth:1979:17: OP_PUSH_STR 587
    mov rax, 17
    push rax
    lea rax, [str_587]
    push rax
addr_16444: ;;// porth.porth:1979:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16445: ;;// porth.porth:1979:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16446: ;;// porth.porth:1980:17: OP_PUSH_STR 588
    mov rax, 18
    push rax
    lea rax, [str_588]
    push rax
addr_16447: ;;// porth.porth:1980:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16448: ;;// porth.porth:1980:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16449: ;;// porth.porth:1981:17: OP_PUSH_STR 589
    mov rax, 13
    push rax
    lea rax, [str_589]
    push rax
addr_16450: ;;// porth.porth:1981:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16451: ;;// porth.porth:1981:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16452: ;;// porth.porth:1982:13: OP_ELSE 14
    jmp addr_16466
addr_16453: ;;// porth.porth:1982:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16454: ;;// porth.porth:1982:26: OP_PUSH_INT 26
    mov rax, 26
    push rax
addr_16455: ;;// porth.porth:1982:43: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16456: ;;// porth.porth:1982:45: OP_IFSTAR 11
    pop rax
    test rax, rax
    jz addr_16467
addr_16457: ;;// porth.porth:1983:17: OP_PUSH_STR 590
    mov rax, 12
    push rax
    lea rax, [str_590]
    push rax
addr_16458: ;;// porth.porth:1983:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16459: ;;// porth.porth:1983:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16460: ;;// porth.porth:1984:17: OP_PUSH_STR 591
    mov rax, 12
    push rax
    lea rax, [str_591]
    push rax
addr_16461: ;;// porth.porth:1984:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16462: ;;// porth.porth:1984:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16463: ;;// porth.porth:1985:17: OP_PUSH_STR 592
    mov rax, 18
    push rax
    lea rax, [str_592]
    push rax
addr_16464: ;;// porth.porth:1985:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16465: ;;// porth.porth:1985:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16466: ;;// porth.porth:1986:13: OP_ELSE 17
    jmp addr_16483
addr_16467: ;;// porth.porth:1986:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16468: ;;// porth.porth:1986:26: OP_PUSH_INT 27
    mov rax, 27
    push rax
addr_16469: ;;// porth.porth:1986:43: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16470: ;;// porth.porth:1986:45: OP_IFSTAR 14
    pop rax
    test rax, rax
    jz addr_16484
addr_16471: ;;// porth.porth:1987:17: OP_PUSH_STR 593
    mov rax, 12
    push rax
    lea rax, [str_593]
    push rax
addr_16472: ;;// porth.porth:1987:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16473: ;;// porth.porth:1987:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16474: ;;// porth.porth:1988:17: OP_PUSH_STR 594
    mov rax, 17
    push rax
    lea rax, [str_594]
    push rax
addr_16475: ;;// porth.porth:1988:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16476: ;;// porth.porth:1988:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16477: ;;// porth.porth:1989:17: OP_PUSH_STR 595
    mov rax, 18
    push rax
    lea rax, [str_595]
    push rax
addr_16478: ;;// porth.porth:1989:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16479: ;;// porth.porth:1989:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16480: ;;// porth.porth:1990:17: OP_PUSH_STR 596
    mov rax, 13
    push rax
    lea rax, [str_596]
    push rax
addr_16481: ;;// porth.porth:1990:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16482: ;;// porth.porth:1990:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16483: ;;// porth.porth:1991:13: OP_ELSE 14
    jmp addr_16497
addr_16484: ;;// porth.porth:1991:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16485: ;;// porth.porth:1991:26: OP_PUSH_INT 28
    mov rax, 28
    push rax
addr_16486: ;;// porth.porth:1991:44: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16487: ;;// porth.porth:1991:46: OP_IFSTAR 11
    pop rax
    test rax, rax
    jz addr_16498
addr_16488: ;;// porth.porth:1992:17: OP_PUSH_STR 597
    mov rax, 12
    push rax
    lea rax, [str_597]
    push rax
addr_16489: ;;// porth.porth:1992:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16490: ;;// porth.porth:1992:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16491: ;;// porth.porth:1993:17: OP_PUSH_STR 598
    mov rax, 12
    push rax
    lea rax, [str_598]
    push rax
addr_16492: ;;// porth.porth:1993:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16493: ;;// porth.porth:1993:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16494: ;;// porth.porth:1994:17: OP_PUSH_STR 599
    mov rax, 18
    push rax
    lea rax, [str_599]
    push rax
addr_16495: ;;// porth.porth:1994:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16496: ;;// porth.porth:1994:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16497: ;;// porth.porth:1995:13: OP_ELSE 17
    jmp addr_16514
addr_16498: ;;// porth.porth:1995:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16499: ;;// porth.porth:1995:26: OP_PUSH_INT 29
    mov rax, 29
    push rax
addr_16500: ;;// porth.porth:1995:43: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16501: ;;// porth.porth:1995:45: OP_IFSTAR 14
    pop rax
    test rax, rax
    jz addr_16515
addr_16502: ;;// porth.porth:1996:17: OP_PUSH_STR 600
    mov rax, 12
    push rax
    lea rax, [str_600]
    push rax
addr_16503: ;;// porth.porth:1996:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16504: ;;// porth.porth:1996:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16505: ;;// porth.porth:1997:17: OP_PUSH_STR 601
    mov rax, 17
    push rax
    lea rax, [str_601]
    push rax
addr_16506: ;;// porth.porth:1997:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16507: ;;// porth.porth:1997:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16508: ;;// porth.porth:1998:17: OP_PUSH_STR 602
    mov rax, 19
    push rax
    lea rax, [str_602]
    push rax
addr_16509: ;;// porth.porth:1998:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16510: ;;// porth.porth:1998:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16511: ;;// porth.porth:1999:17: OP_PUSH_STR 603
    mov rax, 13
    push rax
    lea rax, [str_603]
    push rax
addr_16512: ;;// porth.porth:1999:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16513: ;;// porth.porth:1999:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16514: ;;// porth.porth:2000:13: OP_ELSE 14
    jmp addr_16528
addr_16515: ;;// porth.porth:2000:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16516: ;;// porth.porth:2000:26: OP_PUSH_INT 30
    mov rax, 30
    push rax
addr_16517: ;;// porth.porth:2000:44: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16518: ;;// porth.porth:2000:46: OP_IFSTAR 11
    pop rax
    test rax, rax
    jz addr_16529
addr_16519: ;;// porth.porth:2001:17: OP_PUSH_STR 604
    mov rax, 12
    push rax
    lea rax, [str_604]
    push rax
addr_16520: ;;// porth.porth:2001:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16521: ;;// porth.porth:2001:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16522: ;;// porth.porth:2002:17: OP_PUSH_STR 605
    mov rax, 12
    push rax
    lea rax, [str_605]
    push rax
addr_16523: ;;// porth.porth:2002:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16524: ;;// porth.porth:2002:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16525: ;;// porth.porth:2003:17: OP_PUSH_STR 606
    mov rax, 19
    push rax
    lea rax, [str_606]
    push rax
addr_16526: ;;// porth.porth:2003:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16527: ;;// porth.porth:2003:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16528: ;;// porth.porth:2004:13: OP_ELSE 17
    jmp addr_16545
addr_16529: ;;// porth.porth:2004:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16530: ;;// porth.porth:2004:26: OP_PUSH_INT 31
    mov rax, 31
    push rax
addr_16531: ;;// porth.porth:2004:43: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16532: ;;// porth.porth:2004:45: OP_IFSTAR 14
    pop rax
    test rax, rax
    jz addr_16546
addr_16533: ;;// porth.porth:2005:17: OP_PUSH_STR 607
    mov rax, 12
    push rax
    lea rax, [str_607]
    push rax
addr_16534: ;;// porth.porth:2005:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16535: ;;// porth.porth:2005:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16536: ;;// porth.porth:2006:17: OP_PUSH_STR 608
    mov rax, 17
    push rax
    lea rax, [str_608]
    push rax
addr_16537: ;;// porth.porth:2006:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16538: ;;// porth.porth:2006:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16539: ;;// porth.porth:2007:17: OP_PUSH_STR 609
    mov rax, 19
    push rax
    lea rax, [str_609]
    push rax
addr_16540: ;;// porth.porth:2007:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16541: ;;// porth.porth:2007:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16542: ;;// porth.porth:2008:17: OP_PUSH_STR 610
    mov rax, 13
    push rax
    lea rax, [str_610]
    push rax
addr_16543: ;;// porth.porth:2008:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16544: ;;// porth.porth:2008:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16545: ;;// porth.porth:2009:13: OP_ELSE 14
    jmp addr_16559
addr_16546: ;;// porth.porth:2009:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16547: ;;// porth.porth:2009:26: OP_PUSH_INT 32
    mov rax, 32
    push rax
addr_16548: ;;// porth.porth:2009:44: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16549: ;;// porth.porth:2009:46: OP_IFSTAR 11
    pop rax
    test rax, rax
    jz addr_16560
addr_16550: ;;// porth.porth:2010:17: OP_PUSH_STR 611
    mov rax, 12
    push rax
    lea rax, [str_611]
    push rax
addr_16551: ;;// porth.porth:2010:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16552: ;;// porth.porth:2010:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16553: ;;// porth.porth:2011:17: OP_PUSH_STR 612
    mov rax, 12
    push rax
    lea rax, [str_612]
    push rax
addr_16554: ;;// porth.porth:2011:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16555: ;;// porth.porth:2011:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16556: ;;// porth.porth:2012:17: OP_PUSH_STR 613
    mov rax, 19
    push rax
    lea rax, [str_613]
    push rax
addr_16557: ;;// porth.porth:2012:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16558: ;;// porth.porth:2012:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16559: ;;// porth.porth:2013:13: OP_ELSE 14
    jmp addr_16573
addr_16560: ;;// porth.porth:2013:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16561: ;;// porth.porth:2013:26: OP_PUSH_INT 39
    mov rax, 39
    push rax
addr_16562: ;;// porth.porth:2013:41: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16563: ;;// porth.porth:2013:43: OP_IFSTAR 11
    pop rax
    test rax, rax
    jz addr_16574
addr_16564: ;;// porth.porth:2014:17: OP_PUSH_STR 614
    mov rax, 24
    push rax
    lea rax, [str_614]
    push rax
addr_16565: ;;// porth.porth:2014:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16566: ;;// porth.porth:2014:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16567: ;;// porth.porth:2015:17: OP_PUSH_STR 615
    mov rax, 19
    push rax
    lea rax, [str_615]
    push rax
addr_16568: ;;// porth.porth:2015:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16569: ;;// porth.porth:2015:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16570: ;;// porth.porth:2016:17: OP_PUSH_STR 616
    mov rax, 13
    push rax
    lea rax, [str_616]
    push rax
addr_16571: ;;// porth.porth:2016:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16572: ;;// porth.porth:2016:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16573: ;;// porth.porth:2017:13: OP_ELSE 14
    jmp addr_16587
addr_16574: ;;// porth.porth:2017:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16575: ;;// porth.porth:2017:26: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_16576: ;;// porth.porth:2017:41: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16577: ;;// porth.porth:2017:43: OP_IFSTAR 11
    pop rax
    test rax, rax
    jz addr_16588
addr_16578: ;;// porth.porth:2018:17: OP_PUSH_STR 617
    mov rax, 24
    push rax
    lea rax, [str_617]
    push rax
addr_16579: ;;// porth.porth:2018:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16580: ;;// porth.porth:2018:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16581: ;;// porth.porth:2019:17: OP_PUSH_STR 618
    mov rax, 15
    push rax
    lea rax, [str_618]
    push rax
addr_16582: ;;// porth.porth:2019:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16583: ;;// porth.porth:2019:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16584: ;;// porth.porth:2020:17: OP_PUSH_STR 619
    mov rax, 13
    push rax
    lea rax, [str_619]
    push rax
addr_16585: ;;// porth.porth:2020:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16586: ;;// porth.porth:2020:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16587: ;;// porth.porth:2021:13: OP_ELSE 26
    jmp addr_16613
addr_16588: ;;// porth.porth:2021:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16589: ;;// porth.porth:2021:26: OP_PUSH_INT 41
    mov rax, 41
    push rax
addr_16590: ;;// porth.porth:2021:41: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16591: ;;// porth.porth:2021:43: OP_IFSTAR 23
    pop rax
    test rax, rax
    jz addr_16614
addr_16592: ;;// porth.porth:2022:17: OP_PUSH_STR 620
    mov rax, 24
    push rax
    lea rax, [str_620]
    push rax
addr_16593: ;;// porth.porth:2022:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16594: ;;// porth.porth:2022:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16595: ;;// porth.porth:2023:17: OP_PUSH_STR 621
    mov rax, 19
    push rax
    lea rax, [str_621]
    push rax
addr_16596: ;;// porth.porth:2023:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16597: ;;// porth.porth:2023:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16598: ;;// porth.porth:2024:17: OP_PUSH_STR 622
    mov rax, 15
    push rax
    lea rax, [str_622]
    push rax
addr_16599: ;;// porth.porth:2024:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16600: ;;// porth.porth:2024:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16601: ;;// porth.porth:2025:17: OP_PUSH_STR 623
    mov rax, 15
    push rax
    lea rax, [str_623]
    push rax
addr_16602: ;;// porth.porth:2025:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16603: ;;// porth.porth:2025:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16604: ;;// porth.porth:2026:17: OP_PUSH_STR 624
    mov rax, 24
    push rax
    lea rax, [str_624]
    push rax
addr_16605: ;;// porth.porth:2026:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16606: ;;// porth.porth:2026:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16607: ;;// porth.porth:2027:17: OP_PUSH_STR 625
    mov rax, 17
    push rax
    lea rax, [str_625]
    push rax
addr_16608: ;;// porth.porth:2027:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16609: ;;// porth.porth:2027:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16610: ;;// porth.porth:2028:17: OP_PUSH_STR 626
    mov rax, 13
    push rax
    lea rax, [str_626]
    push rax
addr_16611: ;;// porth.porth:2028:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16612: ;;// porth.porth:2028:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16613: ;;// porth.porth:2029:13: OP_ELSE 5
    jmp addr_16618
addr_16614: ;;// porth.porth:2029:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16615: ;;// porth.porth:2029:26: OP_PUSH_INT 33
    mov rax, 33
    push rax
addr_16616: ;;// porth.porth:2029:45: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16617: ;;// porth.porth:2029:47: OP_IFSTAR 2
    pop rax
    test rax, rax
    jz addr_16619
addr_16618: ;;// porth.porth:2030:13: OP_ELSE 5
    jmp addr_16623
addr_16619: ;;// porth.porth:2030:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16620: ;;// porth.porth:2030:26: OP_PUSH_INT 34
    mov rax, 34
    push rax
addr_16621: ;;// porth.porth:2030:45: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16622: ;;// porth.porth:2030:47: OP_IFSTAR 2
    pop rax
    test rax, rax
    jz addr_16624
addr_16623: ;;// porth.porth:2031:13: OP_ELSE 5
    jmp addr_16628
addr_16624: ;;// porth.porth:2031:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16625: ;;// porth.porth:2031:26: OP_PUSH_INT 37
    mov rax, 37
    push rax
addr_16626: ;;// porth.porth:2031:46: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16627: ;;// porth.porth:2031:48: OP_IFSTAR 2
    pop rax
    test rax, rax
    jz addr_16629
addr_16628: ;;// porth.porth:2032:13: OP_ELSE 5
    jmp addr_16633
addr_16629: ;;// porth.porth:2032:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16630: ;;// porth.porth:2032:26: OP_PUSH_INT 35
    mov rax, 35
    push rax
addr_16631: ;;// porth.porth:2032:47: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16632: ;;// porth.porth:2032:49: OP_IFSTAR 2
    pop rax
    test rax, rax
    jz addr_16634
addr_16633: ;;// porth.porth:2033:13: OP_ELSE 5
    jmp addr_16638
addr_16634: ;;// porth.porth:2033:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16635: ;;// porth.porth:2033:26: OP_PUSH_INT 36
    mov rax, 36
    push rax
addr_16636: ;;// porth.porth:2033:48: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16637: ;;// porth.porth:2033:50: OP_IFSTAR 2
    pop rax
    test rax, rax
    jz addr_16639
addr_16638: ;;// porth.porth:2034:13: OP_ELSE 5
    jmp addr_16643
addr_16639: ;;// porth.porth:2034:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16640: ;;// porth.porth:2034:26: OP_PUSH_INT 38
    mov rax, 38
    push rax
addr_16641: ;;// porth.porth:2034:46: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16642: ;;// porth.porth:2034:48: OP_IFSTAR 2
    pop rax
    test rax, rax
    jz addr_16644
addr_16643: ;;// porth.porth:2035:13: OP_ELSE 14
    jmp addr_16657
addr_16644: ;;// porth.porth:2035:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16645: ;;// porth.porth:2035:26: OP_PUSH_INT 42
    mov rax, 42
    push rax
addr_16646: ;;// porth.porth:2035:45: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16647: ;;// porth.porth:2035:47: OP_IFSTAR 11
    pop rax
    test rax, rax
    jz addr_16658
addr_16648: ;;// porth.porth:2036:17: OP_PUSH_STR 627
    mov rax, 12
    push rax
    lea rax, [str_627]
    push rax
addr_16649: ;;// porth.porth:2036:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16650: ;;// porth.porth:2036:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16651: ;;// porth.porth:2037:17: OP_PUSH_STR 628
    mov rax, 12
    push rax
    lea rax, [str_628]
    push rax
addr_16652: ;;// porth.porth:2037:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16653: ;;// porth.porth:2037:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16654: ;;// porth.porth:2038:17: OP_PUSH_STR 629
    mov rax, 13
    push rax
    lea rax, [str_629]
    push rax
addr_16655: ;;// porth.porth:2038:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16656: ;;// porth.porth:2038:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16657: ;;// porth.porth:2039:13: OP_ELSE 17
    jmp addr_16674
addr_16658: ;;// porth.porth:2039:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16659: ;;// porth.porth:2039:26: OP_PUSH_INT 43
    mov rax, 43
    push rax
addr_16660: ;;// porth.porth:2039:45: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16661: ;;// porth.porth:2039:47: OP_IFSTAR 14
    pop rax
    test rax, rax
    jz addr_16675
addr_16662: ;;// porth.porth:2040:17: OP_PUSH_STR 630
    mov rax, 12
    push rax
    lea rax, [str_630]
    push rax
addr_16663: ;;// porth.porth:2040:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16664: ;;// porth.porth:2040:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16665: ;;// porth.porth:2041:17: OP_PUSH_STR 631
    mov rax, 12
    push rax
    lea rax, [str_631]
    push rax
addr_16666: ;;// porth.porth:2041:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16667: ;;// porth.porth:2041:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16668: ;;// porth.porth:2042:17: OP_PUSH_STR 632
    mov rax, 12
    push rax
    lea rax, [str_632]
    push rax
addr_16669: ;;// porth.porth:2042:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16670: ;;// porth.porth:2042:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16671: ;;// porth.porth:2043:17: OP_PUSH_STR 633
    mov rax, 13
    push rax
    lea rax, [str_633]
    push rax
addr_16672: ;;// porth.porth:2043:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16673: ;;// porth.porth:2043:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16674: ;;// porth.porth:2044:13: OP_ELSE 20
    jmp addr_16694
addr_16675: ;;// porth.porth:2044:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16676: ;;// porth.porth:2044:26: OP_PUSH_INT 44
    mov rax, 44
    push rax
addr_16677: ;;// porth.porth:2044:45: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16678: ;;// porth.porth:2044:47: OP_IFSTAR 17
    pop rax
    test rax, rax
    jz addr_16695
addr_16679: ;;// porth.porth:2045:17: OP_PUSH_STR 634
    mov rax, 12
    push rax
    lea rax, [str_634]
    push rax
addr_16680: ;;// porth.porth:2045:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16681: ;;// porth.porth:2045:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16682: ;;// porth.porth:2046:17: OP_PUSH_STR 635
    mov rax, 12
    push rax
    lea rax, [str_635]
    push rax
addr_16683: ;;// porth.porth:2046:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16684: ;;// porth.porth:2046:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16685: ;;// porth.porth:2047:17: OP_PUSH_STR 636
    mov rax, 12
    push rax
    lea rax, [str_636]
    push rax
addr_16686: ;;// porth.porth:2047:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16687: ;;// porth.porth:2047:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16688: ;;// porth.porth:2048:17: OP_PUSH_STR 637
    mov rax, 12
    push rax
    lea rax, [str_637]
    push rax
addr_16689: ;;// porth.porth:2048:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16690: ;;// porth.porth:2048:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16691: ;;// porth.porth:2049:17: OP_PUSH_STR 638
    mov rax, 13
    push rax
    lea rax, [str_638]
    push rax
addr_16692: ;;// porth.porth:2049:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16693: ;;// porth.porth:2049:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16694: ;;// porth.porth:2050:13: OP_ELSE 23
    jmp addr_16717
addr_16695: ;;// porth.porth:2050:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16696: ;;// porth.porth:2050:26: OP_PUSH_INT 45
    mov rax, 45
    push rax
addr_16697: ;;// porth.porth:2050:45: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16698: ;;// porth.porth:2050:47: OP_IFSTAR 20
    pop rax
    test rax, rax
    jz addr_16718
addr_16699: ;;// porth.porth:2051:17: OP_PUSH_STR 639
    mov rax, 12
    push rax
    lea rax, [str_639]
    push rax
addr_16700: ;;// porth.porth:2051:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16701: ;;// porth.porth:2051:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16702: ;;// porth.porth:2052:17: OP_PUSH_STR 640
    mov rax, 12
    push rax
    lea rax, [str_640]
    push rax
addr_16703: ;;// porth.porth:2052:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16704: ;;// porth.porth:2052:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16705: ;;// porth.porth:2053:17: OP_PUSH_STR 641
    mov rax, 12
    push rax
    lea rax, [str_641]
    push rax
addr_16706: ;;// porth.porth:2053:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16707: ;;// porth.porth:2053:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16708: ;;// porth.porth:2054:17: OP_PUSH_STR 642
    mov rax, 12
    push rax
    lea rax, [str_642]
    push rax
addr_16709: ;;// porth.porth:2054:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16710: ;;// porth.porth:2054:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16711: ;;// porth.porth:2055:17: OP_PUSH_STR 643
    mov rax, 12
    push rax
    lea rax, [str_643]
    push rax
addr_16712: ;;// porth.porth:2055:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16713: ;;// porth.porth:2055:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16714: ;;// porth.porth:2056:17: OP_PUSH_STR 644
    mov rax, 13
    push rax
    lea rax, [str_644]
    push rax
addr_16715: ;;// porth.porth:2056:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16716: ;;// porth.porth:2056:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16717: ;;// porth.porth:2057:13: OP_ELSE 26
    jmp addr_16743
addr_16718: ;;// porth.porth:2057:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16719: ;;// porth.porth:2057:26: OP_PUSH_INT 46
    mov rax, 46
    push rax
addr_16720: ;;// porth.porth:2057:45: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16721: ;;// porth.porth:2057:47: OP_IFSTAR 23
    pop rax
    test rax, rax
    jz addr_16744
addr_16722: ;;// porth.porth:2058:17: OP_PUSH_STR 645
    mov rax, 12
    push rax
    lea rax, [str_645]
    push rax
addr_16723: ;;// porth.porth:2058:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16724: ;;// porth.porth:2058:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16725: ;;// porth.porth:2059:17: OP_PUSH_STR 646
    mov rax, 12
    push rax
    lea rax, [str_646]
    push rax
addr_16726: ;;// porth.porth:2059:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16727: ;;// porth.porth:2059:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16728: ;;// porth.porth:2060:17: OP_PUSH_STR 647
    mov rax, 12
    push rax
    lea rax, [str_647]
    push rax
addr_16729: ;;// porth.porth:2060:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16730: ;;// porth.porth:2060:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16731: ;;// porth.porth:2061:17: OP_PUSH_STR 648
    mov rax, 12
    push rax
    lea rax, [str_648]
    push rax
addr_16732: ;;// porth.porth:2061:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16733: ;;// porth.porth:2061:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16734: ;;// porth.porth:2062:17: OP_PUSH_STR 649
    mov rax, 12
    push rax
    lea rax, [str_649]
    push rax
addr_16735: ;;// porth.porth:2062:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16736: ;;// porth.porth:2062:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16737: ;;// porth.porth:2063:17: OP_PUSH_STR 650
    mov rax, 12
    push rax
    lea rax, [str_650]
    push rax
addr_16738: ;;// porth.porth:2063:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16739: ;;// porth.porth:2063:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16740: ;;// porth.porth:2064:17: OP_PUSH_STR 651
    mov rax, 13
    push rax
    lea rax, [str_651]
    push rax
addr_16741: ;;// porth.porth:2064:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16742: ;;// porth.porth:2064:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16743: ;;// porth.porth:2065:13: OP_ELSE 29
    jmp addr_16772
addr_16744: ;;// porth.porth:2065:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16745: ;;// porth.porth:2065:26: OP_PUSH_INT 47
    mov rax, 47
    push rax
addr_16746: ;;// porth.porth:2065:45: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16747: ;;// porth.porth:2065:47: OP_IFSTAR 26
    pop rax
    test rax, rax
    jz addr_16773
addr_16748: ;;// porth.porth:2066:17: OP_PUSH_STR 652
    mov rax, 12
    push rax
    lea rax, [str_652]
    push rax
addr_16749: ;;// porth.porth:2066:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16750: ;;// porth.porth:2066:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16751: ;;// porth.porth:2067:17: OP_PUSH_STR 653
    mov rax, 12
    push rax
    lea rax, [str_653]
    push rax
addr_16752: ;;// porth.porth:2067:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16753: ;;// porth.porth:2067:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16754: ;;// porth.porth:2068:17: OP_PUSH_STR 654
    mov rax, 12
    push rax
    lea rax, [str_654]
    push rax
addr_16755: ;;// porth.porth:2068:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16756: ;;// porth.porth:2068:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16757: ;;// porth.porth:2069:17: OP_PUSH_STR 655
    mov rax, 12
    push rax
    lea rax, [str_655]
    push rax
addr_16758: ;;// porth.porth:2069:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16759: ;;// porth.porth:2069:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16760: ;;// porth.porth:2070:17: OP_PUSH_STR 656
    mov rax, 12
    push rax
    lea rax, [str_656]
    push rax
addr_16761: ;;// porth.porth:2070:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16762: ;;// porth.porth:2070:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16763: ;;// porth.porth:2071:17: OP_PUSH_STR 657
    mov rax, 11
    push rax
    lea rax, [str_657]
    push rax
addr_16764: ;;// porth.porth:2071:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16765: ;;// porth.porth:2071:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16766: ;;// porth.porth:2072:17: OP_PUSH_STR 658
    mov rax, 12
    push rax
    lea rax, [str_658]
    push rax
addr_16767: ;;// porth.porth:2072:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16768: ;;// porth.porth:2072:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16769: ;;// porth.porth:2073:17: OP_PUSH_STR 659
    mov rax, 13
    push rax
    lea rax, [str_659]
    push rax
addr_16770: ;;// porth.porth:2073:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16771: ;;// porth.porth:2073:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16772: ;;// porth.porth:2074:13: OP_ELSE 32
    jmp addr_16804
addr_16773: ;;// porth.porth:2074:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16774: ;;// porth.porth:2074:26: OP_PUSH_INT 48
    mov rax, 48
    push rax
addr_16775: ;;// porth.porth:2074:45: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16776: ;;// porth.porth:2074:47: OP_IFSTAR 29
    pop rax
    test rax, rax
    jz addr_16805
addr_16777: ;;// porth.porth:2075:17: OP_PUSH_STR 660
    mov rax, 12
    push rax
    lea rax, [str_660]
    push rax
addr_16778: ;;// porth.porth:2075:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16779: ;;// porth.porth:2075:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16780: ;;// porth.porth:2076:17: OP_PUSH_STR 661
    mov rax, 12
    push rax
    lea rax, [str_661]
    push rax
addr_16781: ;;// porth.porth:2076:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16782: ;;// porth.porth:2076:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16783: ;;// porth.porth:2077:17: OP_PUSH_STR 662
    mov rax, 12
    push rax
    lea rax, [str_662]
    push rax
addr_16784: ;;// porth.porth:2077:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16785: ;;// porth.porth:2077:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16786: ;;// porth.porth:2078:17: OP_PUSH_STR 663
    mov rax, 12
    push rax
    lea rax, [str_663]
    push rax
addr_16787: ;;// porth.porth:2078:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16788: ;;// porth.porth:2078:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16789: ;;// porth.porth:2079:17: OP_PUSH_STR 664
    mov rax, 12
    push rax
    lea rax, [str_664]
    push rax
addr_16790: ;;// porth.porth:2079:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16791: ;;// porth.porth:2079:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16792: ;;// porth.porth:2080:17: OP_PUSH_STR 665
    mov rax, 11
    push rax
    lea rax, [str_665]
    push rax
addr_16793: ;;// porth.porth:2080:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16794: ;;// porth.porth:2080:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16795: ;;// porth.porth:2081:17: OP_PUSH_STR 666
    mov rax, 11
    push rax
    lea rax, [str_666]
    push rax
addr_16796: ;;// porth.porth:2081:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16797: ;;// porth.porth:2081:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16798: ;;// porth.porth:2082:17: OP_PUSH_STR 667
    mov rax, 12
    push rax
    lea rax, [str_667]
    push rax
addr_16799: ;;// porth.porth:2082:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16800: ;;// porth.porth:2082:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16801: ;;// porth.porth:2083:17: OP_PUSH_STR 668
    mov rax, 13
    push rax
    lea rax, [str_668]
    push rax
addr_16802: ;;// porth.porth:2083:45: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_16803: ;;// porth.porth:2083:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16804: ;;// porth.porth:2084:13: OP_ELSE 5
    jmp addr_16809
addr_16805: ;;// porth.porth:2084:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16806: ;;// porth.porth:2084:26: OP_PUSH_INT 49
    mov rax, 49
    push rax
addr_16807: ;;// porth.porth:2084:40: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16808: ;;// porth.porth:2084:42: OP_IFSTAR 2
    pop rax
    test rax, rax
    jz addr_16810
addr_16809: ;;// porth.porth:2085:13: OP_ELSE 22
    jmp addr_16831
addr_16810: ;;// porth.porth:2086:15: OP_PUSH_STR 669
    mov rax, 19
    push rax
    lea rax, [str_669]
    push rax
addr_16811: ;;// porth.porth:2086:20: OP_INLINED 676
addr_16812: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_16813: ;;// std/std.porth:50:37: OP_INLINED 662
addr_16814: ;;// std/std.porth:48:34: OP_INLINED 394
addr_16815: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_16816: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_16817: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_16818: ;;// porth.porth:2086:26: OP_PUSH_STR 670
    mov rax, 34
    push rax
    lea rax, [str_670]
    push rax
addr_16819: ;;// porth.porth:2086:64: OP_INLINED 676
addr_16820: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_16821: ;;// std/std.porth:50:37: OP_INLINED 662
addr_16822: ;;// std/std.porth:48:34: OP_INLINED 394
addr_16823: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_16824: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_16825: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_16826: ;;// porth.porth:2087:15: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_16827: ;;// porth.porth:2087:17: OP_INLINED 418
addr_16828: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_16829: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_16830: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_16831: ;;// porth.porth:2088:13: OP_END_IF 0
addr_16832: ;;// porth.porth:2089:9: OP_ELSE 22
    jmp addr_16854
addr_16833: ;;// porth.porth:2090:11: OP_PUSH_STR 671
    mov rax, 19
    push rax
    lea rax, [str_671]
    push rax
addr_16834: ;;// porth.porth:2090:16: OP_INLINED 676
addr_16835: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_16836: ;;// std/std.porth:50:37: OP_INLINED 662
addr_16837: ;;// std/std.porth:48:34: OP_INLINED 394
addr_16838: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_16839: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_16840: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_16841: ;;// porth.porth:2090:22: OP_PUSH_STR 672
    mov rax, 27
    push rax
    lea rax, [str_672]
    push rax
addr_16842: ;;// porth.porth:2090:53: OP_INLINED 676
addr_16843: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_16844: ;;// std/std.porth:50:37: OP_INLINED 662
addr_16845: ;;// std/std.porth:48:34: OP_INLINED 394
addr_16846: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_16847: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_16848: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_16849: ;;// porth.porth:2091:11: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_16850: ;;// porth.porth:2091:13: OP_INLINED 418
addr_16851: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_16852: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_16853: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_16854: ;;// porth.porth:2092:9: OP_END_IF 0
addr_16855: ;;// porth.porth:2093:7: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_16856: ;;// porth.porth:2094:5: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_16857: ;;// porth.porth:2095:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_16858: ;;// porth.porth:2096:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_16859: ;;// porth.porth:2102:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16860: ;;// porth.porth:2103:3: OP_PUSH_GLOBAL_MEM 15315088
    lea rax, [mem+15315088]
    push rax
addr_16861: ;;// porth.porth:2103:24: OP_INLINED 16
addr_16862: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_16863: ;;// porth.porth:2103:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_16864: ;;// porth.porth:2103:31: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_16865: ;;// porth.porth:2103:33: OP_PUSH_INT 256
    mov rax, 256
    push rax
addr_16866: ;;// porth.porth:2103:52: OP_INTRINSIC >=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovge rcx, rdx
    push rcx
addr_16867: ;;// porth.porth:2103:55: OP_IF 22
    pop rax
    test rax, rax
    jz addr_16889
addr_16868: ;;// porth.porth:2104:5: OP_PUSH_STR 673
    mov rax, 18
    push rax
    lea rax, [str_673]
    push rax
addr_16869: ;;// porth.porth:2104:10: OP_INLINED 676
addr_16870: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_16871: ;;// std/std.porth:50:37: OP_INLINED 662
addr_16872: ;;// std/std.porth:48:34: OP_INLINED 394
addr_16873: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_16874: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_16875: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_16876: ;;// porth.porth:2104:16: OP_PUSH_STR 674
    mov rax, 44
    push rax
    lea rax, [str_674]
    push rax
addr_16877: ;;// porth.porth:2104:64: OP_INLINED 676
addr_16878: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_16879: ;;// std/std.porth:50:37: OP_INLINED 662
addr_16880: ;;// std/std.porth:48:34: OP_INLINED 394
addr_16881: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_16882: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_16883: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_16884: ;;// porth.porth:2105:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_16885: ;;// porth.porth:2105:7: OP_INLINED 418
addr_16886: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_16887: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_16888: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_16889: ;;// porth.porth:2106:3: OP_END_IF 0
addr_16890: ;;// porth.porth:2108:3: OP_PUSH_GLOBAL_MEM 15315088
    lea rax, [mem+15315088]
    push rax
addr_16891: ;;// porth.porth:2108:24: OP_INLINED 16
addr_16892: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_16893: ;;// porth.porth:2109:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_16894: ;;// porth.porth:2110:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_16895: ;;// porth.porth:2110:11: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_16896: ;;// porth.porth:2110:23: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_16897: ;;// porth.porth:2110:25: OP_PUSH_GLOBAL_MEM 15310992
    lea rax, [mem+15310992]
    push rax
addr_16898: ;;// porth.porth:2110:40: OP_INLINED 73
addr_16899: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_16900: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_16901: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_16902: ;;// porth.porth:2110:45: OP_INLINED 782
addr_16903: ;;// std/std.porth:71:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_16904: ;;// std/std.porth:72:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_16905: ;;// std/std.porth:72:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_16906: ;;// std/std.porth:72:9: OP_INLINED 729
addr_16907: ;;// std/std.porth:60:35: OP_INLINED 684
addr_16908: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_16909: ;;// std/std.porth:56:57: OP_INLINED 36
addr_16910: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_16911: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_16912: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_16913: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_16914: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_16915: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_16916: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_16917: ;;// std/std.porth:73:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_16918: ;;// std/std.porth:73:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_16919: ;;// std/std.porth:73:9: OP_INLINED 741
addr_16920: ;;// std/std.porth:61:34: OP_INLINED 694
addr_16921: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_16922: ;;// std/std.porth:57:55: OP_INLINED 36
addr_16923: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_16924: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_16925: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_16926: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_16927: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_16928: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_16929: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_16930: ;;// std/std.porth:74:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_16931: ;;// porth.porth:2111:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_16932: ;;// porth.porth:2111:11: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_16933: ;;// porth.porth:2111:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_16934: ;;// porth.porth:2111:15: OP_PUSH_GLOBAL_MEM 15315088
    lea rax, [mem+15315088]
    push rax
addr_16935: ;;// porth.porth:2111:36: OP_INLINED 30
addr_16936: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_16937: ;;// porth.porth:2112:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_16938: ;;// porth.porth:2113:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_16939: ;;// porth.porth:2114:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_16940: ;;// porth.porth:2116:6: OP_PREP_PROC 8
    sub rsp, 8
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16941: ;;// porth.porth:2124:3: OP_PUSH_GLOBAL_MEM 15315088
    lea rax, [mem+15315088]
    push rax
addr_16942: ;;// porth.porth:2124:24: OP_INLINED 16
addr_16943: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_16944: ;;// porth.porth:2124:29: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_16945: ;;// porth.porth:2124:31: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_16946: ;;// porth.porth:2124:33: OP_IF 4
    pop rax
    test rax, rax
    jz addr_16950
addr_16947: ;;// porth.porth:2125:5: OP_CALL 16859
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_16859
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_16948: ;;// porth.porth:2126:5: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_16949: ;;// porth.porth:2127:3: OP_ELSE 97
    jmp addr_17046
addr_16950: ;;// porth.porth:2128:5: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_16951: ;;// porth.porth:2129:7: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_16952: ;;// porth.porth:2129:12: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_16953: ;;// porth.porth:2129:22: OP_INLINED 24
addr_16954: ;;// std/core.porth:26:31: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_16955: ;;// porth.porth:2130:7: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_16956: ;;// porth.porth:2130:9: OP_WHILE 72
addr_16957: ;;// porth.porth:2130:15: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_16958: ;;// porth.porth:2130:19: OP_PUSH_GLOBAL_MEM 15315088
    lea rax, [mem+15315088]
    push rax
addr_16959: ;;// porth.porth:2130:40: OP_INLINED 16
addr_16960: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_16961: ;;// porth.porth:2130:45: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_16962: ;;// porth.porth:2130:47: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_16963: ;;// porth.porth:2130:57: OP_INLINED 12
addr_16964: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_16965: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_16966: ;;// porth.porth:2130:63: OP_INLINED 138
addr_16967: ;;// std/core.porth:93:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_16968: ;;// std/core.porth:93:8: OP_INTRINSIC cast(int)
addr_16969: ;;// std/core.porth:94:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_16970: ;;// std/core.porth:94:8: OP_INTRINSIC cast(int)
addr_16971: ;;// std/core.porth:95:3: OP_INTRINSIC and
    pop rax
    pop rbx
    and rbx, rax
    push rbx
addr_16972: ;;// std/core.porth:96:3: OP_INTRINSIC cast(bool)
addr_16973: ;;// porth.porth:2130:68: OP_DO 55
    pop rax
    test rax, rax
    jz addr_17028
addr_16974: ;;// porth.porth:2131:9: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_16975: ;;// porth.porth:2132:11: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_16976: ;;// porth.porth:2132:13: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_16977: ;;// porth.porth:2132:25: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_16978: ;;// porth.porth:2132:27: OP_PUSH_GLOBAL_MEM 15310992
    lea rax, [mem+15310992]
    push rax
addr_16979: ;;// porth.porth:2132:42: OP_INLINED 73
addr_16980: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_16981: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_16982: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_16983: ;;// porth.porth:2132:47: OP_INLINED 753
addr_16984: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_16985: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_16986: ;;// std/std.porth:65:7: OP_INLINED 704
addr_16987: ;;// std/std.porth:58:38: OP_INLINED 684
addr_16988: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_16989: ;;// std/std.porth:56:57: OP_INLINED 36
addr_16990: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_16991: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_16992: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_16993: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_16994: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_16995: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_16996: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_16997: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_16998: ;;// std/std.porth:66:7: OP_INLINED 716
addr_16999: ;;// std/std.porth:59:37: OP_INLINED 694
addr_17000: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_17001: ;;// std/std.porth:57:55: OP_INLINED 36
addr_17002: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17003: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_17004: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17005: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_17006: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_17007: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_17008: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_17009: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_17010: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_17011: ;;// porth.porth:2133:11: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_17012: ;;// porth.porth:2133:13: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_17013: ;;// porth.porth:2133:15: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17014: ;;// porth.porth:2133:21: OP_INLINED 131
addr_17015: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_17016: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_17017: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17018: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_17019: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_17020: ;;// porth.porth:2133:26: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17021: ;;// porth.porth:2133:36: OP_INLINED 24
addr_17022: ;;// std/core.porth:26:31: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_17023: ;;// porth.porth:2134:11: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17024: ;;// porth.porth:2134:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_17025: ;;// porth.porth:2134:15: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_17026: ;;// porth.porth:2135:9: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_17027: ;;// porth.porth:2136:7: OP_END_WHILE 71
    jmp addr_16956
addr_17028: ;;// porth.porth:2138:7: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_17029: ;;// porth.porth:2138:17: OP_INLINED 12
addr_17030: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_17031: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_17032: ;;// porth.porth:2138:23: OP_IF 6
    pop rax
    test rax, rax
    jz addr_17038
addr_17033: ;;// porth.porth:2139:9: OP_INTRINSIC drop
    pop rax
addr_17034: ;;// porth.porth:2140:9: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17035: ;;// porth.porth:2140:11: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_17036: ;;// porth.porth:2140:13: OP_CALL 16859
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_16859
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17037: ;;// porth.porth:2141:7: OP_ELSE 3
    jmp addr_17040
addr_17038: ;;// porth.porth:2142:9: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_17039: ;;// porth.porth:2142:11: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_17040: ;;// porth.porth:2143:7: OP_END_IF 0
addr_17041: ;;// porth.porth:2145:7: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_17042: ;;// porth.porth:2145:17: OP_INLINED 12
addr_17043: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_17044: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_17045: ;;// porth.porth:2146:5: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_17046: ;;// porth.porth:2147:3: OP_END_IF 0
addr_17047: ;;// porth.porth:2148:1: OP_RET 8
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 8
    ret
addr_17048: ;;// porth.porth:2150:6: OP_PREP_PROC 24
    sub rsp, 24
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17049: ;;// porth.porth:2154:3: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_17050: ;;// porth.porth:2154:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_17051: ;;// porth.porth:2154:17: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_17052: ;;// porth.porth:2154:21: OP_CALL 2169
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2169
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17053: ;;// porth.porth:2154:28: OP_INTRINSIC drop
    pop rax
addr_17054: ;;// porth.porth:2156:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_17055: ;;// porth.porth:2157:5: OP_PUSH_GLOBAL_MEM 15310976
    lea rax, [mem+15310976]
    push rax
addr_17056: ;;// porth.porth:2157:12: OP_INLINED 12
addr_17057: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_17058: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_17059: ;;// porth.porth:2157:18: OP_INLINED 131
addr_17060: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_17061: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_17062: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17063: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_17064: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_17065: ;;// porth.porth:2157:23: OP_IF 29
    pop rax
    test rax, rax
    jz addr_17094
addr_17066: ;;// porth.porth:2158:7: OP_PUSH_STR 675
    mov rax, 18
    push rax
    lea rax, [str_675]
    push rax
addr_17067: ;;// porth.porth:2158:34: OP_INLINED 668
addr_17068: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_17069: ;;// std/std.porth:49:36: OP_INLINED 662
addr_17070: ;;// std/std.porth:48:34: OP_INLINED 394
addr_17071: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_17072: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_17073: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_17074: ;;// porth.porth:2159:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17075: ;;// porth.porth:2159:17: OP_INLINED 657
addr_17076: ;;// std/std.porth:45:43: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_17077: ;;// std/std.porth:45:47: OP_CALL 564
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_564
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17078: ;;// std/std.porth:45:55: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17079: ;;// porth.porth:2159:29: OP_INLINED 668
addr_17080: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_17081: ;;// std/std.porth:49:36: OP_INLINED 662
addr_17082: ;;// std/std.porth:48:34: OP_INLINED 394
addr_17083: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_17084: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_17085: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_17086: ;;// porth.porth:2160:7: OP_PUSH_STR 676
    mov rax, 1
    push rax
    lea rax, [str_676]
    push rax
addr_17087: ;;// porth.porth:2160:34: OP_INLINED 668
addr_17088: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_17089: ;;// std/std.porth:49:36: OP_INLINED 662
addr_17090: ;;// std/std.porth:48:34: OP_INLINED 394
addr_17091: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_17092: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_17093: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_17094: ;;// porth.porth:2161:5: OP_END_IF 0
addr_17095: ;;// porth.porth:2163:5: OP_PUSH_INT 420
    mov rax, 420
    push rax
addr_17096: ;;// porth.porth:2164:5: OP_PUSH_INT 64
    mov rax, 64
    push rax
addr_17097: ;;// porth.porth:2164:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_17098: ;;// porth.porth:2164:22: OP_INTRINSIC or
    pop rax
    pop rbx
    or rbx, rax
    push rbx
addr_17099: ;;// porth.porth:2164:25: OP_PUSH_INT 512
    mov rax, 512
    push rax
addr_17100: ;;// porth.porth:2164:33: OP_INTRINSIC or
    pop rax
    pop rbx
    or rbx, rax
    push rbx
addr_17101: ;;// porth.porth:2165:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17102: ;;// porth.porth:2166:5: OP_PUSH_INT 18446744073709551516
    mov rax, 18446744073709551516
    push rax
addr_17103: ;;// porth.porth:2167:5: OP_INLINED 402
addr_17104: ;;// std/linux.porth:416:46: OP_PUSH_INT 257
    mov rax, 257
    push rax
addr_17105: ;;// std/linux.porth:416:57: OP_INTRINSIC syscall4
    pop rax
    pop rdi
    pop rsi
    pop rdx
    pop r10
    syscall
    push rax
addr_17106: ;;// porth.porth:2169:5: OP_PUSH_INT 65536
    mov rax, 65536
    push rax
addr_17107: ;;// porth.porth:2169:13: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17108: ;;// porth.porth:2170:5: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_17109: ;;// porth.porth:2171:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17110: ;;// porth.porth:2171:12: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17111: ;;// porth.porth:2171:16: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_17112: ;;// porth.porth:2171:24: OP_INLINED 36
addr_17113: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17114: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_17115: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17116: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_17117: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_17118: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_17119: ;;// porth.porth:2171:29: OP_INLINED 30
addr_17120: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_17121: ;;// porth.porth:2172:7: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_17122: ;;// porth.porth:2172:12: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17123: ;;// porth.porth:2172:16: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_17124: ;;// porth.porth:2172:25: OP_INLINED 36
addr_17125: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17126: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_17127: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17128: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_17129: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_17130: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_17131: ;;// porth.porth:2172:30: OP_INLINED 27
addr_17132: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_17133: ;;// porth.porth:2174:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17134: ;;// porth.porth:2174:10: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_17135: ;;// porth.porth:2174:12: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_17136: ;;// porth.porth:2174:14: OP_IF 14
    pop rax
    test rax, rax
    jz addr_17150
addr_17137: ;;// porth.porth:2175:9: OP_PUSH_STR 677
    mov rax, 36
    push rax
    lea rax, [str_677]
    push rax
addr_17138: ;;// porth.porth:2175:49: OP_INLINED 676
addr_17139: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_17140: ;;// std/std.porth:50:37: OP_INLINED 662
addr_17141: ;;// std/std.porth:48:34: OP_INLINED 394
addr_17142: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_17143: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_17144: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_17145: ;;// porth.porth:2176:9: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_17146: ;;// porth.porth:2176:11: OP_INLINED 418
addr_17147: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_17148: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_17149: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_17150: ;;// porth.porth:2177:7: OP_END_IF 0
addr_17151: ;;// porth.porth:2179:7: OP_PUSH_STR 678
    mov rax, 23
    push rax
    lea rax, [str_678]
    push rax
addr_17152: ;;// porth.porth:2179:34: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17153: ;;// porth.porth:2179:38: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17154: ;;// porth.porth:2180:7: OP_PUSH_STR 679
    mov rax, 6
    push rax
    lea rax, [str_679]
    push rax
addr_17155: ;;// porth.porth:2180:17: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17156: ;;// porth.porth:2180:21: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17157: ;;// porth.porth:2181:7: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17158: ;;// porth.porth:2181:11: OP_CALL 14752
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_14752
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17159: ;;// porth.porth:2183:7: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_17160: ;;// porth.porth:2183:9: OP_WHILE 79
addr_17161: ;;// porth.porth:2183:15: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_17162: ;;// porth.porth:2183:19: OP_PUSH_GLOBAL_MEM 15073360
    lea rax, [mem+15073360]
    push rax
addr_17163: ;;// porth.porth:2183:31: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_17164: ;;// porth.porth:2183:35: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_17165: ;;// porth.porth:2183:37: OP_DO 74
    pop rax
    test rax, rax
    jz addr_17239
addr_17166: ;;// porth.porth:2184:9: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_17167: ;;// porth.porth:2184:13: OP_PUSH_INT 120
    mov rax, 120
    push rax
addr_17168: ;;// porth.porth:2184:26: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_17169: ;;// porth.porth:2184:28: OP_PUSH_GLOBAL_MEM 15073368
    lea rax, [mem+15073368]
    push rax
addr_17170: ;;// porth.porth:2184:34: OP_INLINED 73
addr_17171: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_17172: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_17173: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_17174: ;;// porth.porth:2185:9: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_17175: ;;// porth.porth:2186:11: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17176: ;;// porth.porth:2186:16: OP_PUSH_INT 104
    mov rax, 104
    push rax
addr_17177: ;;// porth.porth:2186:26: OP_INLINED 36
addr_17178: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17179: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_17180: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17181: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_17182: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_17183: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_17184: ;;// porth.porth:2186:31: OP_INLINED 16
addr_17185: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_17186: ;;// porth.porth:2186:36: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_17187: ;;// porth.porth:2186:48: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_17188: ;;// porth.porth:2186:50: OP_IF 46
    pop rax
    test rax, rax
    jz addr_17234
addr_17189: ;;// porth.porth:2187:13: OP_PUSH_STR 680
    mov rax, 8
    push rax
    lea rax, [str_680]
    push rax
addr_17190: ;;// porth.porth:2187:45: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_17191: ;;// porth.porth:2187:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17192: ;;// porth.porth:2188:13: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17193: ;;// porth.porth:2188:18: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_17194: ;;// porth.porth:2188:35: OP_INLINED 36
addr_17195: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17196: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_17197: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17198: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_17199: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_17200: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_17201: ;;// porth.porth:2188:40: OP_INLINED 753
addr_17202: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_17203: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17204: ;;// std/std.porth:65:7: OP_INLINED 704
addr_17205: ;;// std/std.porth:58:38: OP_INLINED 684
addr_17206: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_17207: ;;// std/std.porth:56:57: OP_INLINED 36
addr_17208: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17209: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_17210: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17211: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_17212: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_17213: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_17214: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_17215: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17216: ;;// std/std.porth:66:7: OP_INLINED 716
addr_17217: ;;// std/std.porth:59:37: OP_INLINED 694
addr_17218: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_17219: ;;// std/std.porth:57:55: OP_INLINED 36
addr_17220: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17221: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_17222: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17223: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_17224: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_17225: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_17226: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_17227: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_17228: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_17229: ;;// porth.porth:2188:45: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_17230: ;;// porth.porth:2188:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17231: ;;// porth.porth:2189:13: OP_PUSH_STR 681
    mov rax, 1
    push rax
    lea rax, [str_681]
    push rax
addr_17232: ;;// porth.porth:2189:45: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_17233: ;;// porth.porth:2189:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17234: ;;// porth.porth:2190:11: OP_END_IF 0
addr_17235: ;;// porth.porth:2191:9: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_17236: ;;// porth.porth:2192:9: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_17237: ;;// porth.porth:2192:11: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_17238: ;;// porth.porth:2193:7: OP_END_WHILE 78
    jmp addr_17160
addr_17239: ;;// porth.porth:2193:11: OP_INTRINSIC drop
    pop rax
addr_17240: ;;// porth.porth:2195:7: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_17241: ;;// porth.porth:2195:9: OP_WHILE 172
addr_17242: ;;// porth.porth:2195:15: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_17243: ;;// porth.porth:2195:19: OP_PUSH_GLOBAL_MEM 8421424
    lea rax, [mem+8421424]
    push rax
addr_17244: ;;// porth.porth:2195:29: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_17245: ;;// porth.porth:2195:33: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_17246: ;;// porth.porth:2195:35: OP_DO 167
    pop rax
    test rax, rax
    jz addr_17413
addr_17247: ;;// porth.porth:2196:9: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_17248: ;;// porth.porth:2197:11: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17249: ;;// porth.porth:2197:13: OP_PUSH_INT 88
    mov rax, 88
    push rax
addr_17250: ;;// porth.porth:2197:24: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_17251: ;;// porth.porth:2197:26: OP_PUSH_GLOBAL_MEM 8421432
    lea rax, [mem+8421432]
    push rax
addr_17252: ;;// porth.porth:2197:30: OP_INLINED 73
addr_17253: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_17254: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_17255: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_17256: ;;// porth.porth:2197:35: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_17257: ;;// porth.porth:2197:44: OP_INLINED 36
addr_17258: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17259: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_17260: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17261: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_17262: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_17263: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_17264: ;;// porth.porth:2197:49: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_17265: ;;// porth.porth:2197:59: OP_INLINED 36
addr_17266: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17267: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_17268: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17269: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_17270: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_17271: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_17272: ;;// porth.porth:2198:11: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_17273: ;;// porth.porth:2199:13: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17274: ;;// porth.porth:2199:17: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_17275: ;;// porth.porth:2199:31: OP_INLINED 36
addr_17276: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17277: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_17278: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17279: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_17280: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_17281: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_17282: ;;// porth.porth:2199:36: OP_INLINED 753
addr_17283: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_17284: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17285: ;;// std/std.porth:65:7: OP_INLINED 704
addr_17286: ;;// std/std.porth:58:38: OP_INLINED 684
addr_17287: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_17288: ;;// std/std.porth:56:57: OP_INLINED 36
addr_17289: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17290: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_17291: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17292: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_17293: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_17294: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_17295: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_17296: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17297: ;;// std/std.porth:66:7: OP_INLINED 716
addr_17298: ;;// std/std.porth:59:37: OP_INLINED 694
addr_17299: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_17300: ;;// std/std.porth:57:55: OP_INLINED 36
addr_17301: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17302: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_17303: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17304: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_17305: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_17306: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_17307: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_17308: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_17309: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_17310: ;;// porth.porth:2199:41: OP_CALL 16940
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_16940
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17311: ;;// porth.porth:2199:60: OP_IF 52
    pop rax
    test rax, rax
    jz addr_17363
addr_17312: ;;// porth.porth:2200:15: OP_PUSH_STR 682
    mov rax, 6
    push rax
    lea rax, [str_682]
    push rax
addr_17313: ;;// porth.porth:2200:43: OP_PUSH_LOCAL_MEM 40
    mov rax, [ret_stack_rsp]
    add rax, 40
    push rax
addr_17314: ;;// porth.porth:2200:47: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17315: ;;// porth.porth:2201:15: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_17316: ;;// porth.porth:2201:43: OP_PUSH_LOCAL_MEM 40
    mov rax, [ret_stack_rsp]
    add rax, 40
    push rax
addr_17317: ;;// porth.porth:2201:47: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17318: ;;// porth.porth:2202:15: OP_PUSH_STR 683
    mov rax, 2
    push rax
    lea rax, [str_683]
    push rax
addr_17319: ;;// porth.porth:2202:43: OP_PUSH_LOCAL_MEM 40
    mov rax, [ret_stack_rsp]
    add rax, 40
    push rax
addr_17320: ;;// porth.porth:2202:47: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17321: ;;// porth.porth:2203:15: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17322: ;;// porth.porth:2203:19: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_17323: ;;// porth.porth:2203:33: OP_INLINED 36
addr_17324: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17325: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_17326: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17327: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_17328: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_17329: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_17330: ;;// porth.porth:2203:38: OP_INLINED 753
addr_17331: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_17332: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17333: ;;// std/std.porth:65:7: OP_INLINED 704
addr_17334: ;;// std/std.porth:58:38: OP_INLINED 684
addr_17335: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_17336: ;;// std/std.porth:56:57: OP_INLINED 36
addr_17337: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17338: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_17339: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17340: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_17341: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_17342: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_17343: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_17344: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17345: ;;// std/std.porth:66:7: OP_INLINED 716
addr_17346: ;;// std/std.porth:59:37: OP_INLINED 694
addr_17347: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_17348: ;;// std/std.porth:57:55: OP_INLINED 36
addr_17349: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17350: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_17351: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17352: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_17353: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_17354: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_17355: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_17356: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_17357: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_17358: ;;// porth.porth:2203:43: OP_PUSH_LOCAL_MEM 40
    mov rax, [ret_stack_rsp]
    add rax, 40
    push rax
addr_17359: ;;// porth.porth:2203:47: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17360: ;;// porth.porth:2204:15: OP_PUSH_STR 684
    mov rax, 2
    push rax
    lea rax, [str_684]
    push rax
addr_17361: ;;// porth.porth:2204:43: OP_PUSH_LOCAL_MEM 40
    mov rax, [ret_stack_rsp]
    add rax, 40
    push rax
addr_17362: ;;// porth.porth:2204:47: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17363: ;;// porth.porth:2205:13: OP_END_IF 0
addr_17364: ;;// porth.porth:2206:13: OP_PUSH_STR 685
    mov rax, 5
    push rax
    lea rax, [str_685]
    push rax
addr_17365: ;;// porth.porth:2206:35: OP_PUSH_LOCAL_MEM 40
    mov rax, [ret_stack_rsp]
    add rax, 40
    push rax
addr_17366: ;;// porth.porth:2206:39: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17367: ;;// porth.porth:2207:35: OP_PUSH_LOCAL_MEM 40
    mov rax, [ret_stack_rsp]
    add rax, 40
    push rax
addr_17368: ;;// porth.porth:2207:39: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17369: ;;// porth.porth:2208:13: OP_PUSH_STR 686
    mov rax, 1
    push rax
    lea rax, [str_686]
    push rax
addr_17370: ;;// porth.porth:2208:35: OP_PUSH_LOCAL_MEM 40
    mov rax, [ret_stack_rsp]
    add rax, 40
    push rax
addr_17371: ;;// porth.porth:2208:39: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17372: ;;// porth.porth:2209:13: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17373: ;;// porth.porth:2209:17: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_17374: ;;// porth.porth:2209:25: OP_INLINED 36
addr_17375: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17376: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_17377: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17378: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_17379: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_17380: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_17381: ;;// porth.porth:2209:30: OP_INLINED 16
addr_17382: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_17383: ;;// porth.porth:2209:35: OP_PUSH_LOCAL_MEM 40
    mov rax, [ret_stack_rsp]
    add rax, 40
    push rax
addr_17384: ;;// porth.porth:2209:39: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17385: ;;// porth.porth:2210:13: OP_PUSH_STR 687
    mov rax, 1
    push rax
    lea rax, [str_687]
    push rax
addr_17386: ;;// porth.porth:2210:35: OP_PUSH_LOCAL_MEM 40
    mov rax, [ret_stack_rsp]
    add rax, 40
    push rax
addr_17387: ;;// porth.porth:2210:39: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17388: ;;// porth.porth:2211:13: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17389: ;;// porth.porth:2211:17: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_17390: ;;// porth.porth:2211:25: OP_INLINED 36
addr_17391: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17392: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_17393: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17394: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_17395: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_17396: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_17397: ;;// porth.porth:2211:30: OP_INLINED 16
addr_17398: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_17399: ;;// porth.porth:2211:35: OP_PUSH_LOCAL_MEM 40
    mov rax, [ret_stack_rsp]
    add rax, 40
    push rax
addr_17400: ;;// porth.porth:2211:39: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17401: ;;// porth.porth:2212:13: OP_PUSH_STR 688
    mov rax, 1
    push rax
    lea rax, [str_688]
    push rax
addr_17402: ;;// porth.porth:2212:35: OP_PUSH_LOCAL_MEM 40
    mov rax, [ret_stack_rsp]
    add rax, 40
    push rax
addr_17403: ;;// porth.porth:2212:39: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17404: ;;// porth.porth:2213:11: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_17405: ;;// porth.porth:2214:11: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17406: ;;// porth.porth:2214:13: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_17407: ;;// porth.porth:2214:17: OP_CALL 15079
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_15079
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17408: ;;// porth.porth:2215:11: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17409: ;;// porth.porth:2215:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_17410: ;;// porth.porth:2215:15: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_17411: ;;// porth.porth:2216:9: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_17412: ;;// porth.porth:2217:7: OP_END_WHILE 171
    jmp addr_17241
addr_17413: ;;// porth.porth:2217:11: OP_INTRINSIC drop
    pop rax
addr_17414: ;;// porth.porth:2219:7: OP_PUSH_STR 689
    mov rax, 5
    push rax
    lea rax, [str_689]
    push rax
addr_17415: ;;// porth.porth:2219:21: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17416: ;;// porth.porth:2219:25: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17417: ;;// porth.porth:2220:7: OP_PUSH_GLOBAL_MEM 8421424
    lea rax, [mem+8421424]
    push rax
addr_17418: ;;// porth.porth:2220:17: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_17419: ;;// porth.porth:2220:21: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17420: ;;// porth.porth:2220:25: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17421: ;;// porth.porth:2221:7: OP_PUSH_STR 690
    mov rax, 2
    push rax
    lea rax, [str_690]
    push rax
addr_17422: ;;// porth.porth:2221:21: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17423: ;;// porth.porth:2221:25: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17424: ;;// porth.porth:2223:7: OP_PUSH_STR 691
    mov rax, 13
    push rax
    lea rax, [str_691]
    push rax
addr_17425: ;;// porth.porth:2223:41: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17426: ;;// porth.porth:2223:45: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17427: ;;// porth.porth:2224:7: OP_PUSH_STR 692
    mov rax, 6
    push rax
    lea rax, [str_692]
    push rax
addr_17428: ;;// porth.porth:2224:41: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17429: ;;// porth.porth:2224:45: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17430: ;;// porth.porth:2225:7: OP_PUSH_STR 693
    mov rax, 21
    push rax
    lea rax, [str_693]
    push rax
addr_17431: ;;// porth.porth:2225:41: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17432: ;;// porth.porth:2225:45: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17433: ;;// porth.porth:2226:7: OP_PUSH_STR 694
    mov rax, 24
    push rax
    lea rax, [str_694]
    push rax
addr_17434: ;;// porth.porth:2226:41: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17435: ;;// porth.porth:2226:45: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17436: ;;// porth.porth:2227:7: OP_PUSH_STR 695
    mov rax, 24
    push rax
    lea rax, [str_695]
    push rax
addr_17437: ;;// porth.porth:2227:41: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17438: ;;// porth.porth:2227:45: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17439: ;;// porth.porth:2227:51: OP_PUSH_INT 65536
    mov rax, 65536
    push rax
addr_17440: ;;// porth.porth:2227:72: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17441: ;;// porth.porth:2227:76: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17442: ;;// porth.porth:2227:82: OP_PUSH_STR 696
    mov rax, 2
    push rax
    lea rax, [str_696]
    push rax
addr_17443: ;;// porth.porth:2227:88: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17444: ;;// porth.porth:2227:92: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17445: ;;// porth.porth:2228:7: OP_PUSH_STR 697
    mov rax, 29
    push rax
    lea rax, [str_697]
    push rax
addr_17446: ;;// porth.porth:2228:41: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17447: ;;// porth.porth:2228:45: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17448: ;;// porth.porth:2230:7: OP_PUSH_STR 698
    mov rax, 4
    push rax
    lea rax, [str_698]
    push rax
addr_17449: ;;// porth.porth:2230:14: OP_CALL 14004
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_14004
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17450: ;;// porth.porth:2231:7: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_17451: ;;// porth.porth:2232:9: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17452: ;;// porth.porth:2232:19: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_17453: ;;// porth.porth:2232:24: OP_INLINED 59
addr_17454: ;;// std/core.porth:52:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17455: ;;// std/core.porth:52:8: OP_INTRINSIC cast(int)
addr_17456: ;;// std/core.porth:53:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17457: ;;// std/core.porth:53:8: OP_INTRINSIC cast(int)
addr_17458: ;;// std/core.porth:54:3: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_17459: ;;// porth.porth:2232:29: OP_IF 22
    pop rax
    test rax, rax
    jz addr_17481
addr_17460: ;;// porth.porth:2233:11: OP_PUSH_STR 699
    mov rax, 19
    push rax
    lea rax, [str_699]
    push rax
addr_17461: ;;// porth.porth:2233:16: OP_INLINED 676
addr_17462: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_17463: ;;// std/std.porth:50:37: OP_INLINED 662
addr_17464: ;;// std/std.porth:48:34: OP_INLINED 394
addr_17465: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_17466: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_17467: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_17468: ;;// porth.porth:2233:22: OP_PUSH_STR 700
    mov rax, 87
    push rax
    lea rax, [str_700]
    push rax
addr_17469: ;;// porth.porth:2233:112: OP_INLINED 676
addr_17470: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_17471: ;;// std/std.porth:50:37: OP_INLINED 662
addr_17472: ;;// std/std.porth:48:34: OP_INLINED 394
addr_17473: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_17474: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_17475: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_17476: ;;// porth.porth:2234:11: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_17477: ;;// porth.porth:2234:13: OP_INLINED 418
addr_17478: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_17479: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_17480: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_17481: ;;// porth.porth:2235:9: OP_END_IF 0
addr_17482: ;;// porth.porth:2237:9: OP_PUSH_STR 701
    mov rax, 14
    push rax
    lea rax, [str_701]
    push rax
addr_17483: ;;// porth.porth:2237:39: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_17484: ;;// porth.porth:2237:43: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17485: ;;// porth.porth:2238:9: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17486: ;;// porth.porth:2238:19: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_17487: ;;// porth.porth:2238:29: OP_INLINED 36
addr_17488: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17489: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_17490: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17491: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_17492: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_17493: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_17494: ;;// porth.porth:2238:34: OP_INLINED 16
addr_17495: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_17496: ;;// porth.porth:2238:39: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_17497: ;;// porth.porth:2238:43: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17498: ;;// porth.porth:2239:9: OP_PUSH_STR 702
    mov rax, 1
    push rax
    lea rax, [str_702]
    push rax
addr_17499: ;;// porth.porth:2239:39: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_17500: ;;// porth.porth:2239:43: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17501: ;;// porth.porth:2240:7: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_17502: ;;// porth.porth:2242:7: OP_PUSH_STR 703
    mov rax, 16
    push rax
    lea rax, [str_703]
    push rax
addr_17503: ;;// porth.porth:2242:37: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17504: ;;// porth.porth:2242:41: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17505: ;;// porth.porth:2243:7: OP_PUSH_STR 704
    mov rax, 15
    push rax
    lea rax, [str_704]
    push rax
addr_17506: ;;// porth.porth:2243:37: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17507: ;;// porth.porth:2243:41: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17508: ;;// porth.porth:2244:7: OP_PUSH_STR 705
    mov rax, 12
    push rax
    lea rax, [str_705]
    push rax
addr_17509: ;;// porth.porth:2244:37: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17510: ;;// porth.porth:2244:41: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17511: ;;// porth.porth:2245:7: OP_PUSH_STR 706
    mov rax, 6
    push rax
    lea rax, [str_706]
    push rax
addr_17512: ;;// porth.porth:2245:17: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17513: ;;// porth.porth:2245:21: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17514: ;;// porth.porth:2246:7: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_17515: ;;// porth.porth:2246:9: OP_WHILE 89
addr_17516: ;;// porth.porth:2246:15: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_17517: ;;// porth.porth:2246:19: OP_PUSH_GLOBAL_MEM 14188600
    lea rax, [mem+14188600]
    push rax
addr_17518: ;;// porth.porth:2246:33: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_17519: ;;// porth.porth:2246:37: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_17520: ;;// porth.porth:2246:39: OP_DO 84
    pop rax
    test rax, rax
    jz addr_17604
addr_17521: ;;// porth.porth:2247:9: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_17522: ;;// porth.porth:2248:11: OP_PUSH_STR 707
    mov rax, 4
    push rax
    lea rax, [str_707]
    push rax
addr_17523: ;;// porth.porth:2248:18: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_17524: ;;// porth.porth:2248:22: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17525: ;;// porth.porth:2249:11: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17526: ;;// porth.porth:2249:18: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_17527: ;;// porth.porth:2249:22: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17528: ;;// porth.porth:2250:11: OP_PUSH_STR 708
    mov rax, 1
    push rax
    lea rax, [str_708]
    push rax
addr_17529: ;;// porth.porth:2250:18: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_17530: ;;// porth.porth:2250:22: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17531: ;;// porth.porth:2251:11: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17532: ;;// porth.porth:2251:13: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_17533: ;;// porth.porth:2251:25: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_17534: ;;// porth.porth:2251:27: OP_PUSH_GLOBAL_MEM 14188608
    lea rax, [mem+14188608]
    push rax
addr_17535: ;;// porth.porth:2251:35: OP_INLINED 73
addr_17536: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_17537: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_17538: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_17539: ;;// porth.porth:2252:11: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_17540: ;;// porth.porth:2253:13: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17541: ;;// porth.porth:2253:17: OP_INLINED 1483
addr_17542: ;;// std/std.porth:214:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_17543: ;;// std/std.porth:214:23: OP_INLINED 36
addr_17544: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17545: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_17546: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17547: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_17548: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_17549: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_17550: ;;// std/std.porth:215:3: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_17551: ;;// std/std.porth:216:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_17552: ;;// std/std.porth:216:5: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_17553: ;;// porth.porth:2253:28: OP_INLINED 131
addr_17554: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_17555: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_17556: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17557: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_17558: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_17559: ;;// porth.porth:2253:33: OP_IF 35
    pop rax
    test rax, rax
    jz addr_17594
addr_17560: ;;// porth.porth:2254:15: OP_PUSH_STR 709
    mov rax, 7
    push rax
    lea rax, [str_709]
    push rax
addr_17561: ;;// porth.porth:2254:27: OP_PUSH_LOCAL_MEM 40
    mov rax, [ret_stack_rsp]
    add rax, 40
    push rax
addr_17562: ;;// porth.porth:2254:31: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17563: ;;// porth.porth:2255:15: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17564: ;;// porth.porth:2255:19: OP_INLINED 753
addr_17565: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_17566: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17567: ;;// std/std.porth:65:7: OP_INLINED 704
addr_17568: ;;// std/std.porth:58:38: OP_INLINED 684
addr_17569: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_17570: ;;// std/std.porth:56:57: OP_INLINED 36
addr_17571: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17572: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_17573: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17574: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_17575: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_17576: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_17577: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_17578: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17579: ;;// std/std.porth:66:7: OP_INLINED 716
addr_17580: ;;// std/std.porth:59:37: OP_INLINED 694
addr_17581: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_17582: ;;// std/std.porth:57:55: OP_INLINED 36
addr_17583: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17584: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_17585: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17586: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_17587: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_17588: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_17589: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_17590: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_17591: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_17592: ;;// porth.porth:2255:24: OP_PUSH_LOCAL_MEM 40
    mov rax, [ret_stack_rsp]
    add rax, 40
    push rax
addr_17593: ;;// porth.porth:2255:28: OP_CALL 14705
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_14705
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17594: ;;// porth.porth:2256:13: OP_END_IF 0
addr_17595: ;;// porth.porth:2257:11: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_17596: ;;// porth.porth:2258:11: OP_PUSH_STR 710
    mov rax, 1
    push rax
    lea rax, [str_710]
    push rax
addr_17597: ;;// porth.porth:2258:16: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_17598: ;;// porth.porth:2258:20: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17599: ;;// porth.porth:2259:11: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17600: ;;// porth.porth:2259:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_17601: ;;// porth.porth:2259:15: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_17602: ;;// porth.porth:2260:9: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_17603: ;;// porth.porth:2261:7: OP_END_WHILE 88
    jmp addr_17515
addr_17604: ;;// porth.porth:2261:11: OP_INTRINSIC drop
    pop rax
addr_17605: ;;// porth.porth:2262:7: OP_PUSH_STR 711
    mov rax, 5
    push rax
    lea rax, [str_711]
    push rax
addr_17606: ;;// porth.porth:2262:16: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17607: ;;// porth.porth:2262:20: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17608: ;;// porth.porth:2263:7: OP_PUSH_STR 712
    mov rax, 18
    push rax
    lea rax, [str_712]
    push rax
addr_17609: ;;// porth.porth:2263:34: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17610: ;;// porth.porth:2263:38: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17611: ;;// porth.porth:2264:7: OP_PUSH_STR 713
    mov rax, 23
    push rax
    lea rax, [str_713]
    push rax
addr_17612: ;;// porth.porth:2264:34: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17613: ;;// porth.porth:2264:38: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17614: ;;// porth.porth:2265:7: OP_PUSH_STR 714
    mov rax, 17
    push rax
    lea rax, [str_714]
    push rax
addr_17615: ;;// porth.porth:2265:34: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17616: ;;// porth.porth:2265:38: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17617: ;;// porth.porth:2265:44: OP_PUSH_INT 65536
    mov rax, 65536
    push rax
addr_17618: ;;// porth.porth:2265:65: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17619: ;;// porth.porth:2265:69: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17620: ;;// porth.porth:2265:75: OP_PUSH_STR 715
    mov rax, 1
    push rax
    lea rax, [str_715]
    push rax
addr_17621: ;;// porth.porth:2265:80: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17622: ;;// porth.porth:2265:84: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17623: ;;// porth.porth:2266:7: OP_PUSH_STR 716
    mov rax, 11
    push rax
    lea rax, [str_716]
    push rax
addr_17624: ;;// porth.porth:2266:34: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17625: ;;// porth.porth:2266:38: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17626: ;;// porth.porth:2267:7: OP_PUSH_GLOBAL_MEM 15253608
    lea rax, [mem+15253608]
    push rax
addr_17627: ;;// porth.porth:2267:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_17628: ;;// porth.porth:2267:34: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17629: ;;// porth.porth:2267:38: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17630: ;;// porth.porth:2268:7: OP_PUSH_STR 717
    mov rax, 1
    push rax
    lea rax, [str_717]
    push rax
addr_17631: ;;// porth.porth:2268:34: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17632: ;;// porth.porth:2268:38: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17633: ;;// porth.porth:2270:7: OP_PUSH_STR 718
    mov rax, 25
    push rax
    lea rax, [str_718]
    push rax
addr_17634: ;;// porth.porth:2270:36: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17635: ;;// porth.porth:2270:40: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17636: ;;// porth.porth:2272:7: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17637: ;;// porth.porth:2272:11: OP_CALL 4951
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_4951
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17638: ;;// porth.porth:2273:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17639: ;;// porth.porth:2273:10: OP_INLINED 414
addr_17640: ;;// std/linux.porth:419:33: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_17641: ;;// std/linux.porth:419:43: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_17642: ;;// porth.porth:2273:16: OP_INTRINSIC drop
    pop rax
addr_17643: ;;// porth.porth:2274:7: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_17644: ;;// porth.porth:2274:12: OP_INLINED 2426
addr_17645: ;;// std/std.porth:509:31: OP_PUSH_GLOBAL_MEM 8
    lea rax, [mem+8]
    push rax
addr_17646: ;;// std/std.porth:509:41: OP_INLINED 78
addr_17647: ;;// std/core.porth:68:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17648: ;;// std/core.porth:68:8: OP_INTRINSIC cast(int)
addr_17649: ;;// std/core.porth:69:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17650: ;;// std/core.porth:69:8: OP_INTRINSIC cast(int)
addr_17651: ;;// std/core.porth:70:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_17652: ;;// std/std.porth:509:50: OP_PUSH_GLOBAL_MEM 8388616
    lea rax, [mem+8388616]
    push rax
addr_17653: ;;// std/std.porth:509:59: OP_INLINED 30
addr_17654: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_17655: ;;// porth.porth:2275:5: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_17656: ;;// porth.porth:2276:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_17657: ;;// porth.porth:2277:1: OP_RET 24
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 24
    ret
addr_17658: ;;// porth.porth:2279:6: OP_PREP_PROC 24
    sub rsp, 24
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17659: ;;// porth.porth:2283:3: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_17660: ;;// porth.porth:2283:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_17661: ;;// porth.porth:2283:17: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_17662: ;;// porth.porth:2283:21: OP_CALL 2169
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2169
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17663: ;;// porth.porth:2283:28: OP_INTRINSIC drop
    pop rax
addr_17664: ;;// porth.porth:2285:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_17665: ;;// porth.porth:2286:5: OP_PUSH_GLOBAL_MEM 15310976
    lea rax, [mem+15310976]
    push rax
addr_17666: ;;// porth.porth:2286:12: OP_INLINED 12
addr_17667: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_17668: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_17669: ;;// porth.porth:2286:18: OP_INLINED 131
addr_17670: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_17671: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_17672: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17673: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_17674: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_17675: ;;// porth.porth:2286:23: OP_IF 29
    pop rax
    test rax, rax
    jz addr_17704
addr_17676: ;;// porth.porth:2287:7: OP_PUSH_STR 719
    mov rax, 18
    push rax
    lea rax, [str_719]
    push rax
addr_17677: ;;// porth.porth:2287:34: OP_INLINED 668
addr_17678: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_17679: ;;// std/std.porth:49:36: OP_INLINED 662
addr_17680: ;;// std/std.porth:48:34: OP_INLINED 394
addr_17681: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_17682: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_17683: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_17684: ;;// porth.porth:2288:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17685: ;;// porth.porth:2288:17: OP_INLINED 657
addr_17686: ;;// std/std.porth:45:43: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_17687: ;;// std/std.porth:45:47: OP_CALL 564
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_564
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17688: ;;// std/std.porth:45:55: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17689: ;;// porth.porth:2288:29: OP_INLINED 668
addr_17690: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_17691: ;;// std/std.porth:49:36: OP_INLINED 662
addr_17692: ;;// std/std.porth:48:34: OP_INLINED 394
addr_17693: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_17694: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_17695: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_17696: ;;// porth.porth:2289:7: OP_PUSH_STR 720
    mov rax, 1
    push rax
    lea rax, [str_720]
    push rax
addr_17697: ;;// porth.porth:2289:34: OP_INLINED 668
addr_17698: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_17699: ;;// std/std.porth:49:36: OP_INLINED 662
addr_17700: ;;// std/std.porth:48:34: OP_INLINED 394
addr_17701: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_17702: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_17703: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_17704: ;;// porth.porth:2290:5: OP_END_IF 0
addr_17705: ;;// porth.porth:2292:5: OP_PUSH_INT 420
    mov rax, 420
    push rax
addr_17706: ;;// porth.porth:2293:5: OP_PUSH_INT 64
    mov rax, 64
    push rax
addr_17707: ;;// porth.porth:2293:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_17708: ;;// porth.porth:2293:22: OP_INTRINSIC or
    pop rax
    pop rbx
    or rbx, rax
    push rbx
addr_17709: ;;// porth.porth:2293:25: OP_PUSH_INT 512
    mov rax, 512
    push rax
addr_17710: ;;// porth.porth:2293:33: OP_INTRINSIC or
    pop rax
    pop rbx
    or rbx, rax
    push rbx
addr_17711: ;;// porth.porth:2294:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17712: ;;// porth.porth:2295:5: OP_PUSH_INT 18446744073709551516
    mov rax, 18446744073709551516
    push rax
addr_17713: ;;// porth.porth:2296:5: OP_INLINED 402
addr_17714: ;;// std/linux.porth:416:46: OP_PUSH_INT 257
    mov rax, 257
    push rax
addr_17715: ;;// std/linux.porth:416:57: OP_INTRINSIC syscall4
    pop rax
    pop rdi
    pop rsi
    pop rdx
    pop r10
    syscall
    push rax
addr_17716: ;;// porth.porth:2298:5: OP_PUSH_INT 65536
    mov rax, 65536
    push rax
addr_17717: ;;// porth.porth:2298:13: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17718: ;;// porth.porth:2299:5: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_17719: ;;// porth.porth:2300:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17720: ;;// porth.porth:2300:12: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17721: ;;// porth.porth:2300:16: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_17722: ;;// porth.porth:2300:24: OP_INLINED 36
addr_17723: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17724: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_17725: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17726: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_17727: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_17728: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_17729: ;;// porth.porth:2300:29: OP_INLINED 30
addr_17730: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_17731: ;;// porth.porth:2301:7: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_17732: ;;// porth.porth:2301:12: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17733: ;;// porth.porth:2301:16: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_17734: ;;// porth.porth:2301:25: OP_INLINED 36
addr_17735: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17736: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_17737: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17738: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_17739: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_17740: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_17741: ;;// porth.porth:2301:30: OP_INLINED 27
addr_17742: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_17743: ;;// porth.porth:2303:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17744: ;;// porth.porth:2303:10: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_17745: ;;// porth.porth:2303:12: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_17746: ;;// porth.porth:2303:14: OP_IF 14
    pop rax
    test rax, rax
    jz addr_17760
addr_17747: ;;// porth.porth:2304:9: OP_PUSH_STR 721
    mov rax, 36
    push rax
    lea rax, [str_721]
    push rax
addr_17748: ;;// porth.porth:2304:49: OP_INLINED 676
addr_17749: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_17750: ;;// std/std.porth:50:37: OP_INLINED 662
addr_17751: ;;// std/std.porth:48:34: OP_INLINED 394
addr_17752: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_17753: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_17754: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_17755: ;;// porth.porth:2305:9: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_17756: ;;// porth.porth:2305:11: OP_INLINED 418
addr_17757: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_17758: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_17759: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_17760: ;;// porth.porth:2306:7: OP_END_IF 0
addr_17761: ;;// porth.porth:2308:7: OP_PUSH_STR 722
    mov rax, 13
    push rax
    lea rax, [str_722]
    push rax
addr_17762: ;;// porth.porth:2308:26: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17763: ;;// porth.porth:2308:30: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17764: ;;// porth.porth:2309:7: OP_PUSH_STR 723
    mov rax, 27
    push rax
    lea rax, [str_723]
    push rax
addr_17765: ;;// porth.porth:2309:38: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17766: ;;// porth.porth:2309:42: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17767: ;;// porth.porth:2310:7: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17768: ;;// porth.porth:2310:11: OP_CALL 14752
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_14752
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17769: ;;// porth.porth:2312:7: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_17770: ;;// porth.porth:2312:9: OP_WHILE 79
addr_17771: ;;// porth.porth:2312:15: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_17772: ;;// porth.porth:2312:19: OP_PUSH_GLOBAL_MEM 15073360
    lea rax, [mem+15073360]
    push rax
addr_17773: ;;// porth.porth:2312:31: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_17774: ;;// porth.porth:2312:35: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_17775: ;;// porth.porth:2312:37: OP_DO 74
    pop rax
    test rax, rax
    jz addr_17849
addr_17776: ;;// porth.porth:2313:9: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_17777: ;;// porth.porth:2313:13: OP_PUSH_INT 120
    mov rax, 120
    push rax
addr_17778: ;;// porth.porth:2313:26: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_17779: ;;// porth.porth:2313:28: OP_PUSH_GLOBAL_MEM 15073368
    lea rax, [mem+15073368]
    push rax
addr_17780: ;;// porth.porth:2313:34: OP_INLINED 73
addr_17781: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_17782: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_17783: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_17784: ;;// porth.porth:2314:9: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_17785: ;;// porth.porth:2315:11: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17786: ;;// porth.porth:2315:16: OP_PUSH_INT 104
    mov rax, 104
    push rax
addr_17787: ;;// porth.porth:2315:26: OP_INLINED 36
addr_17788: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17789: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_17790: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17791: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_17792: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_17793: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_17794: ;;// porth.porth:2315:31: OP_INLINED 16
addr_17795: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_17796: ;;// porth.porth:2315:36: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_17797: ;;// porth.porth:2315:48: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_17798: ;;// porth.porth:2315:50: OP_IF 46
    pop rax
    test rax, rax
    jz addr_17844
addr_17799: ;;// porth.porth:2316:13: OP_PUSH_STR 724
    mov rax, 6
    push rax
    lea rax, [str_724]
    push rax
addr_17800: ;;// porth.porth:2316:45: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_17801: ;;// porth.porth:2316:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17802: ;;// porth.porth:2317:13: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17803: ;;// porth.porth:2317:18: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_17804: ;;// porth.porth:2317:35: OP_INLINED 36
addr_17805: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17806: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_17807: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17808: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_17809: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_17810: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_17811: ;;// porth.porth:2317:40: OP_INLINED 753
addr_17812: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_17813: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17814: ;;// std/std.porth:65:7: OP_INLINED 704
addr_17815: ;;// std/std.porth:58:38: OP_INLINED 684
addr_17816: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_17817: ;;// std/std.porth:56:57: OP_INLINED 36
addr_17818: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17819: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_17820: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17821: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_17822: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_17823: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_17824: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_17825: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17826: ;;// std/std.porth:66:7: OP_INLINED 716
addr_17827: ;;// std/std.porth:59:37: OP_INLINED 694
addr_17828: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_17829: ;;// std/std.porth:57:55: OP_INLINED 36
addr_17830: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17831: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_17832: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17833: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_17834: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_17835: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_17836: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_17837: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_17838: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_17839: ;;// porth.porth:2317:45: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_17840: ;;// porth.porth:2317:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17841: ;;// porth.porth:2318:13: OP_PUSH_STR 725
    mov rax, 1
    push rax
    lea rax, [str_725]
    push rax
addr_17842: ;;// porth.porth:2318:45: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_17843: ;;// porth.porth:2318:49: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17844: ;;// porth.porth:2319:11: OP_END_IF 0
addr_17845: ;;// porth.porth:2320:9: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_17846: ;;// porth.porth:2321:9: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_17847: ;;// porth.porth:2321:11: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_17848: ;;// porth.porth:2322:7: OP_END_WHILE 78
    jmp addr_17770
addr_17849: ;;// porth.porth:2322:11: OP_INTRINSIC drop
    pop rax
addr_17850: ;;// porth.porth:2324:7: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_17851: ;;// porth.porth:2324:9: OP_WHILE 12
addr_17852: ;;// porth.porth:2324:15: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_17853: ;;// porth.porth:2324:19: OP_PUSH_GLOBAL_MEM 8421424
    lea rax, [mem+8421424]
    push rax
addr_17854: ;;// porth.porth:2324:29: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_17855: ;;// porth.porth:2324:33: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_17856: ;;// porth.porth:2324:35: OP_DO 7
    pop rax
    test rax, rax
    jz addr_17863
addr_17857: ;;// porth.porth:2325:9: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_17858: ;;// porth.porth:2325:13: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17859: ;;// porth.porth:2325:17: OP_CALL 15079
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_15079
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17860: ;;// porth.porth:2326:9: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_17861: ;;// porth.porth:2326:11: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_17862: ;;// porth.porth:2327:7: OP_END_WHILE 11
    jmp addr_17851
addr_17863: ;;// porth.porth:2327:11: OP_INTRINSIC drop
    pop rax
addr_17864: ;;// porth.porth:2329:7: OP_PUSH_STR 726
    mov rax, 5
    push rax
    lea rax, [str_726]
    push rax
addr_17865: ;;// porth.porth:2329:21: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17866: ;;// porth.porth:2329:25: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17867: ;;// porth.porth:2330:7: OP_PUSH_GLOBAL_MEM 8421424
    lea rax, [mem+8421424]
    push rax
addr_17868: ;;// porth.porth:2330:17: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_17869: ;;// porth.porth:2330:21: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17870: ;;// porth.porth:2330:25: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17871: ;;// porth.porth:2331:7: OP_PUSH_STR 727
    mov rax, 2
    push rax
    lea rax, [str_727]
    push rax
addr_17872: ;;// porth.porth:2331:21: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17873: ;;// porth.porth:2331:25: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17874: ;;// porth.porth:2333:7: OP_PUSH_STR 728
    mov rax, 12
    push rax
    lea rax, [str_728]
    push rax
addr_17875: ;;// porth.porth:2333:41: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17876: ;;// porth.porth:2333:45: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17877: ;;// porth.porth:2334:7: OP_PUSH_STR 729
    mov rax, 6
    push rax
    lea rax, [str_729]
    push rax
addr_17878: ;;// porth.porth:2334:41: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17879: ;;// porth.porth:2334:45: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17880: ;;// porth.porth:2335:7: OP_PUSH_STR 730
    mov rax, 21
    push rax
    lea rax, [str_730]
    push rax
addr_17881: ;;// porth.porth:2335:41: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17882: ;;// porth.porth:2335:45: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17883: ;;// porth.porth:2336:7: OP_PUSH_STR 731
    mov rax, 24
    push rax
    lea rax, [str_731]
    push rax
addr_17884: ;;// porth.porth:2336:41: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17885: ;;// porth.porth:2336:45: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17886: ;;// porth.porth:2337:7: OP_PUSH_STR 732
    mov rax, 27
    push rax
    lea rax, [str_732]
    push rax
addr_17887: ;;// porth.porth:2337:41: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17888: ;;// porth.porth:2337:45: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17889: ;;// porth.porth:2338:7: OP_PUSH_STR 733
    mov rax, 29
    push rax
    lea rax, [str_733]
    push rax
addr_17890: ;;// porth.porth:2338:41: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17891: ;;// porth.porth:2338:45: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17892: ;;// porth.porth:2340:7: OP_PUSH_STR 734
    mov rax, 4
    push rax
    lea rax, [str_734]
    push rax
addr_17893: ;;// porth.porth:2340:14: OP_CALL 14004
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_14004
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17894: ;;// porth.porth:2341:7: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_17895: ;;// porth.porth:2342:9: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17896: ;;// porth.porth:2342:19: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_17897: ;;// porth.porth:2342:24: OP_INLINED 59
addr_17898: ;;// std/core.porth:52:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17899: ;;// std/core.porth:52:8: OP_INTRINSIC cast(int)
addr_17900: ;;// std/core.porth:53:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17901: ;;// std/core.porth:53:8: OP_INTRINSIC cast(int)
addr_17902: ;;// std/core.porth:54:3: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_17903: ;;// porth.porth:2342:29: OP_IF 22
    pop rax
    test rax, rax
    jz addr_17925
addr_17904: ;;// porth.porth:2343:11: OP_PUSH_STR 735
    mov rax, 19
    push rax
    lea rax, [str_735]
    push rax
addr_17905: ;;// porth.porth:2343:16: OP_INLINED 676
addr_17906: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_17907: ;;// std/std.porth:50:37: OP_INLINED 662
addr_17908: ;;// std/std.porth:48:34: OP_INLINED 394
addr_17909: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_17910: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_17911: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_17912: ;;// porth.porth:2343:22: OP_PUSH_STR 736
    mov rax, 87
    push rax
    lea rax, [str_736]
    push rax
addr_17913: ;;// porth.porth:2343:112: OP_INLINED 676
addr_17914: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_17915: ;;// std/std.porth:50:37: OP_INLINED 662
addr_17916: ;;// std/std.porth:48:34: OP_INLINED 394
addr_17917: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_17918: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_17919: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_17920: ;;// porth.porth:2344:11: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_17921: ;;// porth.porth:2344:13: OP_INLINED 418
addr_17922: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_17923: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_17924: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_17925: ;;// porth.porth:2345:9: OP_END_IF 0
addr_17926: ;;// porth.porth:2347:9: OP_PUSH_STR 737
    mov rax, 14
    push rax
    lea rax, [str_737]
    push rax
addr_17927: ;;// porth.porth:2347:39: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_17928: ;;// porth.porth:2347:43: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17929: ;;// porth.porth:2348:9: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17930: ;;// porth.porth:2348:19: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_17931: ;;// porth.porth:2348:29: OP_INLINED 36
addr_17932: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17933: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_17934: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17935: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_17936: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_17937: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_17938: ;;// porth.porth:2348:34: OP_INLINED 16
addr_17939: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_17940: ;;// porth.porth:2348:39: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_17941: ;;// porth.porth:2348:43: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17942: ;;// porth.porth:2349:9: OP_PUSH_STR 738
    mov rax, 1
    push rax
    lea rax, [str_738]
    push rax
addr_17943: ;;// porth.porth:2349:39: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_17944: ;;// porth.porth:2349:43: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17945: ;;// porth.porth:2350:7: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_17946: ;;// porth.porth:2352:7: OP_PUSH_STR 739
    mov rax, 16
    push rax
    lea rax, [str_739]
    push rax
addr_17947: ;;// porth.porth:2352:37: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17948: ;;// porth.porth:2352:41: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17949: ;;// porth.porth:2353:7: OP_PUSH_STR 740
    mov rax, 15
    push rax
    lea rax, [str_740]
    push rax
addr_17950: ;;// porth.porth:2353:37: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17951: ;;// porth.porth:2353:41: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17952: ;;// porth.porth:2354:7: OP_PUSH_STR 741
    mov rax, 12
    push rax
    lea rax, [str_741]
    push rax
addr_17953: ;;// porth.porth:2354:37: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17954: ;;// porth.porth:2354:41: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17955: ;;// porth.porth:2355:7: OP_PUSH_STR 742
    mov rax, 26
    push rax
    lea rax, [str_742]
    push rax
addr_17956: ;;// porth.porth:2355:37: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_17957: ;;// porth.porth:2355:41: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17958: ;;// porth.porth:2356:7: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_17959: ;;// porth.porth:2356:9: OP_WHILE 89
addr_17960: ;;// porth.porth:2356:15: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_17961: ;;// porth.porth:2356:19: OP_PUSH_GLOBAL_MEM 14188600
    lea rax, [mem+14188600]
    push rax
addr_17962: ;;// porth.porth:2356:33: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_17963: ;;// porth.porth:2356:37: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_17964: ;;// porth.porth:2356:39: OP_DO 84
    pop rax
    test rax, rax
    jz addr_18048
addr_17965: ;;// porth.porth:2357:9: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_17966: ;;// porth.porth:2358:11: OP_PUSH_STR 743
    mov rax, 4
    push rax
    lea rax, [str_743]
    push rax
addr_17967: ;;// porth.porth:2358:18: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_17968: ;;// porth.porth:2358:22: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17969: ;;// porth.porth:2359:11: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17970: ;;// porth.porth:2359:18: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_17971: ;;// porth.porth:2359:22: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17972: ;;// porth.porth:2360:11: OP_PUSH_STR 744
    mov rax, 1
    push rax
    lea rax, [str_744]
    push rax
addr_17973: ;;// porth.porth:2360:18: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_17974: ;;// porth.porth:2360:22: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_17975: ;;// porth.porth:2361:11: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17976: ;;// porth.porth:2361:13: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_17977: ;;// porth.porth:2361:25: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_17978: ;;// porth.porth:2361:27: OP_PUSH_GLOBAL_MEM 14188608
    lea rax, [mem+14188608]
    push rax
addr_17979: ;;// porth.porth:2361:35: OP_INLINED 73
addr_17980: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_17981: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_17982: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_17983: ;;// porth.porth:2362:11: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_17984: ;;// porth.porth:2363:13: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_17985: ;;// porth.porth:2363:17: OP_INLINED 1483
addr_17986: ;;// std/std.porth:214:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_17987: ;;// std/std.porth:214:23: OP_INLINED 36
addr_17988: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17989: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_17990: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_17991: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_17992: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_17993: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_17994: ;;// std/std.porth:215:3: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_17995: ;;// std/std.porth:216:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_17996: ;;// std/std.porth:216:5: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_17997: ;;// porth.porth:2363:28: OP_INLINED 131
addr_17998: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_17999: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18000: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18001: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_18002: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_18003: ;;// porth.porth:2363:33: OP_IF 35
    pop rax
    test rax, rax
    jz addr_18038
addr_18004: ;;// porth.porth:2364:15: OP_PUSH_STR 745
    mov rax, 4
    push rax
    lea rax, [str_745]
    push rax
addr_18005: ;;// porth.porth:2364:24: OP_PUSH_LOCAL_MEM 40
    mov rax, [ret_stack_rsp]
    add rax, 40
    push rax
addr_18006: ;;// porth.porth:2364:28: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_18007: ;;// porth.porth:2365:15: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_18008: ;;// porth.porth:2365:19: OP_INLINED 753
addr_18009: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_18010: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_18011: ;;// std/std.porth:65:7: OP_INLINED 704
addr_18012: ;;// std/std.porth:58:38: OP_INLINED 684
addr_18013: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_18014: ;;// std/std.porth:56:57: OP_INLINED 36
addr_18015: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18016: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18017: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18018: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18019: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18020: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18021: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18022: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_18023: ;;// std/std.porth:66:7: OP_INLINED 716
addr_18024: ;;// std/std.porth:59:37: OP_INLINED 694
addr_18025: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_18026: ;;// std/std.porth:57:55: OP_INLINED 36
addr_18027: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18028: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18029: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18030: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18031: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18032: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18033: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18034: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_18035: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_18036: ;;// porth.porth:2365:24: OP_PUSH_LOCAL_MEM 40
    mov rax, [ret_stack_rsp]
    add rax, 40
    push rax
addr_18037: ;;// porth.porth:2365:28: OP_CALL 14705
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_14705
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_18038: ;;// porth.porth:2366:13: OP_END_IF 0
addr_18039: ;;// porth.porth:2367:11: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_18040: ;;// porth.porth:2368:11: OP_PUSH_STR 746
    mov rax, 1
    push rax
    lea rax, [str_746]
    push rax
addr_18041: ;;// porth.porth:2368:16: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_18042: ;;// porth.porth:2368:20: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_18043: ;;// porth.porth:2369:11: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_18044: ;;// porth.porth:2369:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18045: ;;// porth.porth:2369:15: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18046: ;;// porth.porth:2370:9: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_18047: ;;// porth.porth:2371:7: OP_END_WHILE 88
    jmp addr_17959
addr_18048: ;;// porth.porth:2371:11: OP_INTRINSIC drop
    pop rax
addr_18049: ;;// porth.porth:2372:7: OP_PUSH_STR 747
    mov rax, 25
    push rax
    lea rax, [str_747]
    push rax
addr_18050: ;;// porth.porth:2372:36: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_18051: ;;// porth.porth:2372:40: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_18052: ;;// porth.porth:2373:7: OP_PUSH_STR 748
    mov rax, 15
    push rax
    lea rax, [str_748]
    push rax
addr_18053: ;;// porth.porth:2373:34: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_18054: ;;// porth.porth:2373:38: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_18055: ;;// porth.porth:2374:7: OP_PUSH_STR 749
    mov rax, 20
    push rax
    lea rax, [str_749]
    push rax
addr_18056: ;;// porth.porth:2374:34: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_18057: ;;// porth.porth:2374:38: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_18058: ;;// porth.porth:2375:7: OP_PUSH_STR 750
    mov rax, 14
    push rax
    lea rax, [str_750]
    push rax
addr_18059: ;;// porth.porth:2375:34: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_18060: ;;// porth.porth:2375:38: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_18061: ;;// porth.porth:2375:44: OP_PUSH_INT 65536
    mov rax, 65536
    push rax
addr_18062: ;;// porth.porth:2375:65: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_18063: ;;// porth.porth:2375:69: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_18064: ;;// porth.porth:2375:75: OP_PUSH_STR 751
    mov rax, 1
    push rax
    lea rax, [str_751]
    push rax
addr_18065: ;;// porth.porth:2375:80: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_18066: ;;// porth.porth:2375:84: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_18067: ;;// porth.porth:2376:7: OP_PUSH_STR 752
    mov rax, 15
    push rax
    lea rax, [str_752]
    push rax
addr_18068: ;;// porth.porth:2376:34: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_18069: ;;// porth.porth:2376:38: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_18070: ;;// porth.porth:2377:7: OP_PUSH_STR 753
    mov rax, 8
    push rax
    lea rax, [str_753]
    push rax
addr_18071: ;;// porth.porth:2377:34: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_18072: ;;// porth.porth:2377:38: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_18073: ;;// porth.porth:2378:7: OP_PUSH_GLOBAL_MEM 15253608
    lea rax, [mem+15253608]
    push rax
addr_18074: ;;// porth.porth:2378:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18075: ;;// porth.porth:2378:34: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_18076: ;;// porth.porth:2378:38: OP_CALL 5092
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5092
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_18077: ;;// porth.porth:2379:7: OP_PUSH_STR 754
    mov rax, 1
    push rax
    lea rax, [str_754]
    push rax
addr_18078: ;;// porth.porth:2379:34: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_18079: ;;// porth.porth:2379:38: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_18080: ;;// porth.porth:2381:7: OP_PUSH_STR 755
    mov rax, 36
    push rax
    lea rax, [str_755]
    push rax
addr_18081: ;;// porth.porth:2381:47: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_18082: ;;// porth.porth:2381:51: OP_CALL 5002
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_5002
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_18083: ;;// porth.porth:2383:7: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_18084: ;;// porth.porth:2383:11: OP_CALL 4951
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_4951
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_18085: ;;// porth.porth:2384:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_18086: ;;// porth.porth:2384:10: OP_INLINED 414
addr_18087: ;;// std/linux.porth:419:33: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_18088: ;;// std/linux.porth:419:43: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_18089: ;;// porth.porth:2384:16: OP_INTRINSIC drop
    pop rax
addr_18090: ;;// porth.porth:2385:7: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_18091: ;;// porth.porth:2385:12: OP_INLINED 2426
addr_18092: ;;// std/std.porth:509:31: OP_PUSH_GLOBAL_MEM 8
    lea rax, [mem+8]
    push rax
addr_18093: ;;// std/std.porth:509:41: OP_INLINED 78
addr_18094: ;;// std/core.porth:68:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18095: ;;// std/core.porth:68:8: OP_INTRINSIC cast(int)
addr_18096: ;;// std/core.porth:69:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18097: ;;// std/core.porth:69:8: OP_INTRINSIC cast(int)
addr_18098: ;;// std/core.porth:70:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_18099: ;;// std/std.porth:509:50: OP_PUSH_GLOBAL_MEM 8388616
    lea rax, [mem+8388616]
    push rax
addr_18100: ;;// std/std.porth:509:59: OP_INLINED 30
addr_18101: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_18102: ;;// porth.porth:2386:5: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_18103: ;;// porth.porth:2387:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_18104: ;;// porth.porth:2388:1: OP_RET 24
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 24
    ret
addr_18105: ;;// porth.porth:2400:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_18106: ;;// porth.porth:2400:31: OP_PUSH_GLOBAL_MEM 15315096
    lea rax, [mem+15315096]
    push rax
addr_18107: ;;// porth.porth:2400:41: OP_PUSH_GLOBAL_MEM 15347864
    lea rax, [mem+15347864]
    push rax
addr_18108: ;;// porth.porth:2400:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18109: ;;// porth.porth:2400:54: OP_INLINED 36
addr_18110: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18111: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18112: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18113: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18114: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18115: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18116: ;;// porth.porth:2400:59: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_18117: ;;// porth.porth:2401:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_18118: ;;// porth.porth:2401:31: OP_PUSH_GLOBAL_MEM 15315096
    lea rax, [mem+15315096]
    push rax
addr_18119: ;;// porth.porth:2401:41: OP_INLINED 78
addr_18120: ;;// std/core.porth:68:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18121: ;;// std/core.porth:68:8: OP_INTRINSIC cast(int)
addr_18122: ;;// std/core.porth:69:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18123: ;;// std/core.porth:69:8: OP_INTRINSIC cast(int)
addr_18124: ;;// std/core.porth:70:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_18125: ;;// porth.porth:2401:50: OP_PUSH_GLOBAL_MEM 15347864
    lea rax, [mem+15347864]
    push rax
addr_18126: ;;// porth.porth:2401:59: OP_INLINED 30
addr_18127: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_18128: ;;// porth.porth:2401:64: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_18129: ;;// porth.porth:2403:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_18130: ;;// porth.porth:2408:3: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_18131: ;;// porth.porth:2408:7: OP_PUSH_GLOBAL_MEM 15347864
    lea rax, [mem+15347864]
    push rax
addr_18132: ;;// porth.porth:2408:16: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18133: ;;// porth.porth:2408:20: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18134: ;;// porth.porth:2408:22: OP_PUSH_INT 32768
    mov rax, 32768
    push rax
addr_18135: ;;// porth.porth:2408:30: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_18136: ;;// porth.porth:2408:32: OP_IF 22
    pop rax
    test rax, rax
    jz addr_18158
addr_18137: ;;// porth.porth:2409:5: OP_PUSH_STR 756
    mov rax, 18
    push rax
    lea rax, [str_756]
    push rax
addr_18138: ;;// porth.porth:2409:10: OP_INLINED 676
addr_18139: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_18140: ;;// std/std.porth:50:37: OP_INLINED 662
addr_18141: ;;// std/std.porth:48:34: OP_INLINED 394
addr_18142: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18143: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_18144: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_18145: ;;// porth.porth:2409:16: OP_PUSH_STR 757
    mov rax, 38
    push rax
    lea rax, [str_757]
    push rax
addr_18146: ;;// porth.porth:2409:58: OP_INLINED 676
addr_18147: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_18148: ;;// std/std.porth:50:37: OP_INLINED 662
addr_18149: ;;// std/std.porth:48:34: OP_INLINED 394
addr_18150: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18151: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_18152: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_18153: ;;// porth.porth:2410:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18154: ;;// porth.porth:2410:7: OP_INLINED 418
addr_18155: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_18156: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_18157: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_18158: ;;// porth.porth:2411:3: OP_END_IF 0
addr_18159: ;;// porth.porth:2413:3: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_18160: ;;// porth.porth:2413:7: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_18161: ;;// porth.porth:2413:9: OP_INLINED 18105
addr_18162: ;;// porth.porth:2400:31: OP_PUSH_GLOBAL_MEM 15315096
    lea rax, [mem+15315096]
    push rax
addr_18163: ;;// porth.porth:2400:41: OP_PUSH_GLOBAL_MEM 15347864
    lea rax, [mem+15347864]
    push rax
addr_18164: ;;// porth.porth:2400:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18165: ;;// porth.porth:2400:54: OP_INLINED 36
addr_18166: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18167: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18168: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18169: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18170: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18171: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18172: ;;// porth.porth:2413:17: OP_CALL 2169
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2169
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_18173: ;;// porth.porth:2414:3: OP_PUSH_GLOBAL_MEM 15347864
    lea rax, [mem+15347864]
    push rax
addr_18174: ;;// porth.porth:2414:12: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18175: ;;// porth.porth:2414:16: OP_INTRINSIC rot
    pop rax
    pop rbx
    pop rcx
    push rbx
    push rax
    push rcx
addr_18176: ;;// porth.porth:2414:20: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18177: ;;// porth.porth:2414:22: OP_PUSH_GLOBAL_MEM 15347864
    lea rax, [mem+15347864]
    push rax
addr_18178: ;;// porth.porth:2414:31: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_18179: ;;// porth.porth:2415:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_18180: ;;// porth.porth:2417:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_18181: ;;// porth.porth:2417:42: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_18182: ;;// porth.porth:2417:47: OP_CALL 18129
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18129
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_18183: ;;// porth.porth:2417:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_18184: ;;// porth.porth:2417:64: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_18185: ;;// porth.porth:2425:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_18186: ;;// porth.porth:2426:3: OP_PUSH_GLOBAL_MEM 15347872
    lea rax, [mem+15347872]
    push rax
addr_18187: ;;// porth.porth:2426:27: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18188: ;;// porth.porth:2426:31: OP_PUSH_INT 1024
    mov rax, 1024
    push rax
addr_18189: ;;// porth.porth:2426:53: OP_INTRINSIC >=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovge rcx, rdx
    push rcx
addr_18190: ;;// porth.porth:2426:56: OP_IF 22
    pop rax
    test rax, rax
    jz addr_18212
addr_18191: ;;// porth.porth:2427:5: OP_PUSH_STR 758
    mov rax, 18
    push rax
    lea rax, [str_758]
    push rax
addr_18192: ;;// porth.porth:2427:10: OP_INLINED 676
addr_18193: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_18194: ;;// std/std.porth:50:37: OP_INLINED 662
addr_18195: ;;// std/std.porth:48:34: OP_INLINED 394
addr_18196: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18197: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_18198: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_18199: ;;// porth.porth:2427:16: OP_PUSH_STR 759
    mov rax, 36
    push rax
    lea rax, [str_759]
    push rax
addr_18200: ;;// porth.porth:2427:56: OP_INLINED 676
addr_18201: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_18202: ;;// std/std.porth:50:37: OP_INLINED 662
addr_18203: ;;// std/std.porth:48:34: OP_INLINED 394
addr_18204: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18205: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_18206: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_18207: ;;// porth.porth:2427:62: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18208: ;;// porth.porth:2427:64: OP_INLINED 418
addr_18209: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_18210: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_18211: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_18212: ;;// porth.porth:2428:3: OP_END_IF 0
addr_18213: ;;// porth.porth:2429:3: OP_PUSH_GLOBAL_MEM 15347880
    lea rax, [mem+15347880]
    push rax
addr_18214: ;;// porth.porth:2429:21: OP_PUSH_GLOBAL_MEM 15347872
    lea rax, [mem+15347872]
    push rax
addr_18215: ;;// porth.porth:2429:45: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18216: ;;// porth.porth:2429:49: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_18217: ;;// porth.porth:2429:61: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_18218: ;;// porth.porth:2429:63: OP_INLINED 36
addr_18219: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18220: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18221: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18222: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18223: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18224: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18225: ;;// porth.porth:2429:68: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_18226: ;;// porth.porth:2430:3: OP_PUSH_GLOBAL_MEM 15347872
    lea rax, [mem+15347872]
    push rax
addr_18227: ;;// porth.porth:2430:27: OP_INLINED 161
addr_18228: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_18229: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18230: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18231: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18232: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18233: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_18234: ;;// porth.porth:2431:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_18235: ;;// porth.porth:2433:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_18236: ;;// porth.porth:2434:3: OP_PUSH_GLOBAL_MEM 15347872
    lea rax, [mem+15347872]
    push rax
addr_18237: ;;// porth.porth:2434:27: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18238: ;;// porth.porth:2434:31: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_18239: ;;// porth.porth:2434:33: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_18240: ;;// porth.porth:2434:35: OP_IF 22
    pop rax
    test rax, rax
    jz addr_18262
addr_18241: ;;// porth.porth:2435:5: OP_PUSH_STR 760
    mov rax, 18
    push rax
    lea rax, [str_760]
    push rax
addr_18242: ;;// porth.porth:2435:10: OP_INLINED 676
addr_18243: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_18244: ;;// std/std.porth:50:37: OP_INLINED 662
addr_18245: ;;// std/std.porth:48:34: OP_INLINED 394
addr_18246: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18247: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_18248: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_18249: ;;// porth.porth:2435:16: OP_PUSH_STR 761
    mov rax, 37
    push rax
    lea rax, [str_761]
    push rax
addr_18250: ;;// porth.porth:2435:57: OP_INLINED 676
addr_18251: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_18252: ;;// std/std.porth:50:37: OP_INLINED 662
addr_18253: ;;// std/std.porth:48:34: OP_INLINED 394
addr_18254: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18255: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_18256: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_18257: ;;// porth.porth:2435:63: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18258: ;;// porth.porth:2435:65: OP_INLINED 418
addr_18259: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_18260: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_18261: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_18262: ;;// porth.porth:2436:3: OP_END_IF 0
addr_18263: ;;// porth.porth:2437:3: OP_PUSH_GLOBAL_MEM 15347872
    lea rax, [mem+15347872]
    push rax
addr_18264: ;;// porth.porth:2437:27: OP_INLINED 169
addr_18265: ;;// std/core.porth:108:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_18266: ;;// std/core.porth:108:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18267: ;;// std/core.porth:108:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18268: ;;// std/core.porth:108:36: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_18269: ;;// std/core.porth:108:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18270: ;;// std/core.porth:108:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_18271: ;;// porth.porth:2438:3: OP_PUSH_GLOBAL_MEM 15347880
    lea rax, [mem+15347880]
    push rax
addr_18272: ;;// porth.porth:2438:21: OP_PUSH_GLOBAL_MEM 15347872
    lea rax, [mem+15347872]
    push rax
addr_18273: ;;// porth.porth:2438:45: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18274: ;;// porth.porth:2438:49: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_18275: ;;// porth.porth:2438:61: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_18276: ;;// porth.porth:2438:63: OP_INLINED 36
addr_18277: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18278: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18279: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18280: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18281: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18282: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18283: ;;// porth.porth:2438:68: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18284: ;;// porth.porth:2439:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_18285: ;;// porth.porth:2441:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_18286: ;;// porth.porth:2442:3: OP_PUSH_GLOBAL_MEM 15347872
    lea rax, [mem+15347872]
    push rax
addr_18287: ;;// porth.porth:2442:27: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18288: ;;// porth.porth:2442:31: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_18289: ;;// porth.porth:2442:33: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_18290: ;;// porth.porth:2442:35: OP_IF 4
    pop rax
    test rax, rax
    jz addr_18294
addr_18291: ;;// porth.porth:2443:5: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_18292: ;;// porth.porth:2443:7: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_18293: ;;// porth.porth:2444:3: OP_ELSE 17
    jmp addr_18310
addr_18294: ;;// porth.porth:2445:5: OP_PUSH_GLOBAL_MEM 15347880
    lea rax, [mem+15347880]
    push rax
addr_18295: ;;// porth.porth:2445:23: OP_PUSH_GLOBAL_MEM 15347872
    lea rax, [mem+15347872]
    push rax
addr_18296: ;;// porth.porth:2445:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18297: ;;// porth.porth:2445:51: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18298: ;;// porth.porth:2445:53: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_18299: ;;// porth.porth:2445:55: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_18300: ;;// porth.porth:2445:67: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_18301: ;;// porth.porth:2445:69: OP_INLINED 36
addr_18302: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18303: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18304: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18305: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18306: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18307: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18308: ;;// porth.porth:2445:74: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18309: ;;// porth.porth:2446:5: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_18310: ;;// porth.porth:2447:3: OP_END_IF 0
addr_18311: ;;// porth.porth:2448:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_18312: ;;// porth.porth:2459:13: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_18313: ;;// porth.porth:2460:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_18314: ;;// porth.porth:2460:5: OP_PUSH_GLOBAL_MEM 15356072
    lea rax, [mem+15356072]
    push rax
addr_18315: ;;// porth.porth:2460:23: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_18316: ;;// porth.porth:2461:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_18317: ;;// porth.porth:2463:6: OP_PREP_PROC 16
    sub rsp, 16
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_18318: ;;// porth.porth:2468:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_18319: ;;// porth.porth:2468:9: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_18320: ;;// porth.porth:2468:26: OP_INLINED 36
addr_18321: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18322: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18323: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18324: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18325: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18326: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18327: ;;// porth.porth:2468:31: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_18328: ;;// porth.porth:2469:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_18329: ;;// porth.porth:2469:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_18330: ;;// porth.porth:2469:25: OP_INLINED 36
addr_18331: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18332: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18333: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18334: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18335: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18336: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18337: ;;// porth.porth:2469:30: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_18338: ;;// porth.porth:2471:3: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_18339: ;;// porth.porth:2471:22: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_18340: ;;// porth.porth:2471:28: OP_PUSH_INT 1024
    mov rax, 1024
    push rax
addr_18341: ;;// porth.porth:2471:44: OP_PUSH_GLOBAL_MEM 15356080
    lea rax, [mem+15356080]
    push rax
addr_18342: ;;// porth.porth:2471:56: OP_PUSH_GLOBAL_MEM 15356072
    lea rax, [mem+15356072]
    push rax
addr_18343: ;;// porth.porth:2471:74: OP_CALL 2731
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2731
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_18344: ;;// porth.porth:2471:86: OP_INLINED 131
addr_18345: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_18346: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18347: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18348: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_18349: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_18350: ;;// porth.porth:2471:91: OP_IF 22
    pop rax
    test rax, rax
    jz addr_18372
addr_18351: ;;// porth.porth:2472:5: OP_PUSH_STR 762
    mov rax, 18
    push rax
    lea rax, [str_762]
    push rax
addr_18352: ;;// porth.porth:2472:10: OP_INLINED 676
addr_18353: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_18354: ;;// std/std.porth:50:37: OP_INLINED 662
addr_18355: ;;// std/std.porth:48:34: OP_INLINED 394
addr_18356: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18357: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_18358: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_18359: ;;// porth.porth:2472:16: OP_PUSH_STR 763
    mov rax, 29
    push rax
    lea rax, [str_763]
    push rax
addr_18360: ;;// porth.porth:2472:49: OP_INLINED 676
addr_18361: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_18362: ;;// std/std.porth:50:37: OP_INLINED 662
addr_18363: ;;// std/std.porth:48:34: OP_INLINED 394
addr_18364: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18365: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_18366: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_18367: ;;// porth.porth:2473:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18368: ;;// porth.porth:2473:7: OP_INLINED 418
addr_18369: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_18370: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_18371: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_18372: ;;// porth.porth:2474:3: OP_END_IF 0
addr_18373: ;;// porth.porth:2475:3: OP_INTRINSIC drop
    pop rax
addr_18374: ;;// porth.porth:2476:1: OP_RET 16
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 16
    ret
addr_18375: ;;// porth.porth:2478:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_18376: ;;// porth.porth:2483:3: OP_PUSH_GLOBAL_MEM 15356072
    lea rax, [mem+15356072]
    push rax
addr_18377: ;;// porth.porth:2483:21: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18378: ;;// porth.porth:2483:25: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_18379: ;;// porth.porth:2483:27: OP_INTRINSIC <=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovle rcx, rdx
    push rcx
addr_18380: ;;// porth.porth:2483:30: OP_IF 22
    pop rax
    test rax, rax
    jz addr_18402
addr_18381: ;;// porth.porth:2484:5: OP_PUSH_STR 764
    mov rax, 18
    push rax
    lea rax, [str_764]
    push rax
addr_18382: ;;// porth.porth:2484:10: OP_INLINED 676
addr_18383: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_18384: ;;// std/std.porth:50:37: OP_INLINED 662
addr_18385: ;;// std/std.porth:48:34: OP_INLINED 394
addr_18386: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18387: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_18388: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_18389: ;;// porth.porth:2484:16: OP_PUSH_STR 765
    mov rax, 42
    push rax
    lea rax, [str_765]
    push rax
addr_18390: ;;// porth.porth:2484:62: OP_INLINED 676
addr_18391: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_18392: ;;// std/std.porth:50:37: OP_INLINED 662
addr_18393: ;;// std/std.porth:48:34: OP_INLINED 394
addr_18394: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18395: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_18396: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_18397: ;;// porth.porth:2485:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18398: ;;// porth.porth:2485:7: OP_INLINED 418
addr_18399: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_18400: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_18401: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_18402: ;;// porth.porth:2486:3: OP_END_IF 0
addr_18403: ;;// porth.porth:2488:3: OP_PUSH_GLOBAL_MEM 15356072
    lea rax, [mem+15356072]
    push rax
addr_18404: ;;// porth.porth:2488:21: OP_INLINED 169
addr_18405: ;;// std/core.porth:108:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_18406: ;;// std/core.porth:108:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18407: ;;// std/core.porth:108:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18408: ;;// std/core.porth:108:36: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_18409: ;;// std/core.porth:108:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18410: ;;// std/core.porth:108:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_18411: ;;// porth.porth:2489:3: OP_PUSH_GLOBAL_MEM 15356072
    lea rax, [mem+15356072]
    push rax
addr_18412: ;;// porth.porth:2489:21: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18413: ;;// porth.porth:2489:25: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_18414: ;;// porth.porth:2489:44: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_18415: ;;// porth.porth:2489:46: OP_PUSH_GLOBAL_MEM 15356080
    lea rax, [mem+15356080]
    push rax
addr_18416: ;;// porth.porth:2489:58: OP_INLINED 73
addr_18417: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_18418: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18419: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_18420: ;;// porth.porth:2490:3: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_18421: ;;// porth.porth:2490:7: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_18422: ;;// porth.porth:2490:23: OP_INLINED 36
addr_18423: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18424: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18425: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18426: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18427: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18428: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18429: ;;// porth.porth:2490:28: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18430: ;;// porth.porth:2491:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18431: ;;// porth.porth:2491:8: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_18432: ;;// porth.porth:2491:25: OP_INLINED 36
addr_18433: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18434: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18435: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18436: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18437: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18438: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18439: ;;// porth.porth:2491:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18440: ;;// porth.porth:2492:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_18441: ;;// porth.porth:2494:6: OP_PREP_PROC 8
    sub rsp, 8
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_18442: ;;// porth.porth:2499:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_18443: ;;// porth.porth:2499:9: OP_INLINED 27
addr_18444: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_18445: ;;// porth.porth:2501:3: OP_PUSH_GLOBAL_MEM 15356072
    lea rax, [mem+15356072]
    push rax
addr_18446: ;;// porth.porth:2501:21: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18447: ;;// porth.porth:2501:25: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_18448: ;;// porth.porth:2501:27: OP_IF 167
    pop rax
    test rax, rax
    jz addr_18615
addr_18449: ;;// porth.porth:2502:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_18450: ;;// porth.porth:2502:11: OP_INLINED 0
addr_18451: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18452: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_18453: ;;// porth.porth:2502:16: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_18454: ;;// porth.porth:2502:26: OP_INLINED 36
addr_18455: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18456: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18457: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18458: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18459: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18460: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18461: ;;// porth.porth:2502:43: OP_INLINED 5367
addr_18462: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_18463: ;;// porth.porth:32:35: OP_INLINED 5195
addr_18464: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_18465: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_18466: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_18467: ;;// porth.porth:24:23: OP_INLINED 36
addr_18468: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18469: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18470: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18471: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18472: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18473: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18474: ;;// porth.porth:24:28: OP_INLINED 753
addr_18475: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_18476: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_18477: ;;// std/std.porth:65:7: OP_INLINED 704
addr_18478: ;;// std/std.porth:58:38: OP_INLINED 684
addr_18479: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_18480: ;;// std/std.porth:56:57: OP_INLINED 36
addr_18481: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18482: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18483: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18484: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18485: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18486: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18487: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18488: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_18489: ;;// std/std.porth:66:7: OP_INLINED 716
addr_18490: ;;// std/std.porth:59:37: OP_INLINED 694
addr_18491: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_18492: ;;// std/std.porth:57:55: OP_INLINED 36
addr_18493: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18494: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18495: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18496: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18497: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18498: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18499: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18500: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_18501: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_18502: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_18503: ;;// porth.porth:24:36: OP_INLINED 662
addr_18504: ;;// std/std.porth:48:34: OP_INLINED 394
addr_18505: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18506: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_18507: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_18508: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_18509: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_18510: ;;// porth.porth:25:36: OP_INLINED 662
addr_18511: ;;// std/std.porth:48:34: OP_INLINED 394
addr_18512: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18513: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_18514: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_18515: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_18516: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_18517: ;;// porth.porth:26:17: OP_INLINED 36
addr_18518: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18519: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18520: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18521: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18522: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18523: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18524: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18525: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_18526: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_18527: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_18528: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_18529: ;;// porth.porth:27:36: OP_INLINED 662
addr_18530: ;;// std/std.porth:48:34: OP_INLINED 394
addr_18531: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18532: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_18533: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_18534: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_18535: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_18536: ;;// porth.porth:28:17: OP_INLINED 36
addr_18537: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18538: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18539: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18540: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18541: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18542: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18543: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18544: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_18545: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_18546: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_18547: ;;// porth.porth:2503:5: OP_PUSH_STR 766
    mov rax, 35
    push rax
    lea rax, [str_766]
    push rax
addr_18548: ;;// porth.porth:2503:43: OP_INLINED 676
addr_18549: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_18550: ;;// std/std.porth:50:37: OP_INLINED 662
addr_18551: ;;// std/std.porth:48:34: OP_INLINED 394
addr_18552: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18553: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_18554: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_18555: ;;// porth.porth:2504:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_18556: ;;// porth.porth:2504:11: OP_INLINED 0
addr_18557: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18558: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_18559: ;;// porth.porth:2504:16: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_18560: ;;// porth.porth:2504:27: OP_INLINED 36
addr_18561: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18562: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18563: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18564: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18565: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18566: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18567: ;;// porth.porth:2504:32: OP_INLINED 753
addr_18568: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_18569: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_18570: ;;// std/std.porth:65:7: OP_INLINED 704
addr_18571: ;;// std/std.porth:58:38: OP_INLINED 684
addr_18572: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_18573: ;;// std/std.porth:56:57: OP_INLINED 36
addr_18574: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18575: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18576: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18577: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18578: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18579: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18580: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18581: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_18582: ;;// std/std.porth:66:7: OP_INLINED 716
addr_18583: ;;// std/std.porth:59:37: OP_INLINED 694
addr_18584: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_18585: ;;// std/std.porth:57:55: OP_INLINED 36
addr_18586: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18587: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18588: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18589: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18590: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18591: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18592: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18593: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_18594: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_18595: ;;// porth.porth:2504:43: OP_INLINED 676
addr_18596: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_18597: ;;// std/std.porth:50:37: OP_INLINED 662
addr_18598: ;;// std/std.porth:48:34: OP_INLINED 394
addr_18599: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18600: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_18601: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_18602: ;;// porth.porth:2505:5: OP_PUSH_STR 767
    mov rax, 2
    push rax
    lea rax, [str_767]
    push rax
addr_18603: ;;// porth.porth:2505:43: OP_INLINED 676
addr_18604: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_18605: ;;// std/std.porth:50:37: OP_INLINED 662
addr_18606: ;;// std/std.porth:48:34: OP_INLINED 394
addr_18607: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18608: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_18609: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_18610: ;;// porth.porth:2506:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18611: ;;// porth.porth:2506:7: OP_INLINED 418
addr_18612: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_18613: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_18614: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_18615: ;;// porth.porth:2507:3: OP_END_IF 0
addr_18616: ;;// porth.porth:2508:1: OP_RET 8
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 8
    ret
addr_18617: ;;// porth.porth:2510:6: OP_PREP_PROC 88
    sub rsp, 88
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_18618: ;;// porth.porth:2516:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_18619: ;;// porth.porth:2516:9: OP_INLINED 27
addr_18620: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_18621: ;;// porth.porth:2519:3: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_18622: ;;// porth.porth:2519:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_18623: ;;// porth.porth:2519:15: OP_INLINED 0
addr_18624: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18625: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_18626: ;;// porth.porth:2519:20: OP_CALL 8340
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_8340
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_18627: ;;// porth.porth:2519:37: OP_INLINED 131
addr_18628: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_18629: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18630: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18631: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_18632: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_18633: ;;// porth.porth:2519:42: OP_IF 236
    pop rax
    test rax, rax
    jz addr_18869
addr_18634: ;;// porth.porth:2520:5: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_18635: ;;// porth.porth:2520:11: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_18636: ;;// porth.porth:2520:21: OP_INLINED 36
addr_18637: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18638: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18639: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18640: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18641: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18642: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18643: ;;// porth.porth:2520:26: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_18644: ;;// porth.porth:2520:32: OP_INLINED 0
addr_18645: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18646: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_18647: ;;// porth.porth:2520:37: OP_INLINED 6784
addr_18648: ;;// porth.porth:235:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_18649: ;;// porth.porth:237:5: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_18650: ;;// porth.porth:238:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_18651: ;;// porth.porth:238:11: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_18652: ;;// porth.porth:238:27: OP_INLINED 36
addr_18653: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18654: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18655: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18656: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18657: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18658: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18659: ;;// porth.porth:239:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_18660: ;;// porth.porth:239:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_18661: ;;// porth.porth:239:27: OP_INLINED 36
addr_18662: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18663: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18664: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18665: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18666: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18667: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18668: ;;// porth.porth:240:5: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_18669: ;;// porth.porth:241:5: OP_INTRINSIC drop
    pop rax
addr_18670: ;;// porth.porth:244:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_18671: ;;// porth.porth:244:11: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_18672: ;;// porth.porth:244:21: OP_INLINED 36
addr_18673: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18674: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18675: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18676: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18677: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18678: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18679: ;;// porth.porth:244:26: OP_INLINED 16
addr_18680: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18681: ;;// porth.porth:245:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_18682: ;;// porth.porth:245:11: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_18683: ;;// porth.porth:245:21: OP_INLINED 36
addr_18684: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18685: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18686: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18687: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18688: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18689: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18690: ;;// porth.porth:245:26: OP_INLINED 30
addr_18691: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_18692: ;;// porth.porth:248:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_18693: ;;// porth.porth:248:11: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_18694: ;;// porth.porth:248:22: OP_INLINED 36
addr_18695: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18696: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18697: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18698: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18699: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18700: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18701: ;;// porth.porth:248:27: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_18702: ;;// porth.porth:248:46: OP_INLINED 36
addr_18703: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18704: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18705: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18706: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18707: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18708: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18709: ;;// porth.porth:248:51: OP_INLINED 0
addr_18710: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18711: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_18712: ;;// porth.porth:249:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_18713: ;;// porth.porth:249:11: OP_PUSH_INT 32
    mov rax, 32
    push rax
addr_18714: ;;// porth.porth:249:28: OP_INLINED 36
addr_18715: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18716: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18717: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18718: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18719: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18720: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18721: ;;// porth.porth:249:33: OP_INLINED 0
addr_18722: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18723: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_18724: ;;// porth.porth:250:5: OP_INLINED 78
addr_18725: ;;// std/core.porth:68:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18726: ;;// std/core.porth:68:8: OP_INTRINSIC cast(int)
addr_18727: ;;// std/core.porth:69:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18728: ;;// std/core.porth:69:8: OP_INTRINSIC cast(int)
addr_18729: ;;// std/core.porth:70:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_18730: ;;// porth.porth:251:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18731: ;;// porth.porth:251:7: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18732: ;;// porth.porth:252:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_18733: ;;// porth.porth:252:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_18734: ;;// porth.porth:252:17: OP_INLINED 36
addr_18735: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18736: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18737: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18738: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18739: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18740: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18741: ;;// porth.porth:253:5: OP_INLINED 30
addr_18742: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_18743: ;;// porth.porth:254:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_18744: ;;// porth.porth:2521:5: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_18745: ;;// porth.porth:2521:11: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_18746: ;;// porth.porth:2521:21: OP_INLINED 36
addr_18747: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18748: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18749: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18750: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18751: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18752: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18753: ;;// porth.porth:2521:56: OP_INLINED 5367
addr_18754: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_18755: ;;// porth.porth:32:35: OP_INLINED 5195
addr_18756: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_18757: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_18758: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_18759: ;;// porth.porth:24:23: OP_INLINED 36
addr_18760: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18761: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18762: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18763: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18764: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18765: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18766: ;;// porth.porth:24:28: OP_INLINED 753
addr_18767: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_18768: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_18769: ;;// std/std.porth:65:7: OP_INLINED 704
addr_18770: ;;// std/std.porth:58:38: OP_INLINED 684
addr_18771: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_18772: ;;// std/std.porth:56:57: OP_INLINED 36
addr_18773: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18774: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18775: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18776: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18777: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18778: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18779: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18780: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_18781: ;;// std/std.porth:66:7: OP_INLINED 716
addr_18782: ;;// std/std.porth:59:37: OP_INLINED 694
addr_18783: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_18784: ;;// std/std.porth:57:55: OP_INLINED 36
addr_18785: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18786: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18787: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18788: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18789: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18790: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18791: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18792: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_18793: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_18794: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_18795: ;;// porth.porth:24:36: OP_INLINED 662
addr_18796: ;;// std/std.porth:48:34: OP_INLINED 394
addr_18797: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18798: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_18799: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_18800: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_18801: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_18802: ;;// porth.porth:25:36: OP_INLINED 662
addr_18803: ;;// std/std.porth:48:34: OP_INLINED 394
addr_18804: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18805: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_18806: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_18807: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_18808: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_18809: ;;// porth.porth:26:17: OP_INLINED 36
addr_18810: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18811: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18812: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18813: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18814: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18815: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18816: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18817: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_18818: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_18819: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_18820: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_18821: ;;// porth.porth:27:36: OP_INLINED 662
addr_18822: ;;// std/std.porth:48:34: OP_INLINED 394
addr_18823: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18824: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_18825: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_18826: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_18827: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_18828: ;;// porth.porth:28:17: OP_INLINED 36
addr_18829: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18830: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18831: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18832: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18833: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18834: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18835: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18836: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_18837: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_18838: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_18839: ;;// porth.porth:2522:5: OP_PUSH_STR 768
    mov rax, 48
    push rax
    lea rax, [str_768]
    push rax
addr_18840: ;;// porth.porth:2522:56: OP_INLINED 676
addr_18841: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_18842: ;;// std/std.porth:50:37: OP_INLINED 662
addr_18843: ;;// std/std.porth:48:34: OP_INLINED 394
addr_18844: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18845: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_18846: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_18847: ;;// porth.porth:2523:5: OP_PUSH_INT 18
    mov rax, 18
    push rax
addr_18848: ;;// porth.porth:2523:23: OP_CALL 6274
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_6274
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_18849: ;;// porth.porth:2523:56: OP_INLINED 676
addr_18850: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_18851: ;;// std/std.porth:50:37: OP_INLINED 662
addr_18852: ;;// std/std.porth:48:34: OP_INLINED 394
addr_18853: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18854: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_18855: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_18856: ;;// porth.porth:2524:5: OP_PUSH_STR 769
    mov rax, 20
    push rax
    lea rax, [str_769]
    push rax
addr_18857: ;;// porth.porth:2524:56: OP_INLINED 676
addr_18858: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_18859: ;;// std/std.porth:50:37: OP_INLINED 662
addr_18860: ;;// std/std.porth:48:34: OP_INLINED 394
addr_18861: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18862: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_18863: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_18864: ;;// porth.porth:2525:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18865: ;;// porth.porth:2525:7: OP_INLINED 418
addr_18866: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_18867: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_18868: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_18869: ;;// porth.porth:2526:3: OP_END_IF 0
addr_18870: ;;// porth.porth:2528:3: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_18871: ;;// porth.porth:2528:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_18872: ;;// porth.porth:2528:20: OP_INLINED 36
addr_18873: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18874: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18875: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18876: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18877: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18878: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18879: ;;// porth.porth:2528:25: OP_INLINED 16
addr_18880: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18881: ;;// porth.porth:2529:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_18882: ;;// porth.porth:2529:9: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18883: ;;// porth.porth:2529:20: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_18884: ;;// porth.porth:2529:23: OP_IF 162
    pop rax
    test rax, rax
    jz addr_19046
addr_18885: ;;// porth.porth:2530:7: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_18886: ;;// porth.porth:2530:13: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_18887: ;;// porth.porth:2530:23: OP_INLINED 36
addr_18888: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18889: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18890: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18891: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18892: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18893: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18894: ;;// porth.porth:2530:50: OP_INLINED 5367
addr_18895: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_18896: ;;// porth.porth:32:35: OP_INLINED 5195
addr_18897: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_18898: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_18899: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_18900: ;;// porth.porth:24:23: OP_INLINED 36
addr_18901: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18902: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18903: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18904: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18905: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18906: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18907: ;;// porth.porth:24:28: OP_INLINED 753
addr_18908: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_18909: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_18910: ;;// std/std.porth:65:7: OP_INLINED 704
addr_18911: ;;// std/std.porth:58:38: OP_INLINED 684
addr_18912: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_18913: ;;// std/std.porth:56:57: OP_INLINED 36
addr_18914: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18915: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18916: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18917: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18918: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18919: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18920: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18921: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_18922: ;;// std/std.porth:66:7: OP_INLINED 716
addr_18923: ;;// std/std.porth:59:37: OP_INLINED 694
addr_18924: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_18925: ;;// std/std.porth:57:55: OP_INLINED 36
addr_18926: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18927: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18928: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18929: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18930: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18931: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18932: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18933: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_18934: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_18935: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_18936: ;;// porth.porth:24:36: OP_INLINED 662
addr_18937: ;;// std/std.porth:48:34: OP_INLINED 394
addr_18938: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18939: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_18940: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_18941: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_18942: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_18943: ;;// porth.porth:25:36: OP_INLINED 662
addr_18944: ;;// std/std.porth:48:34: OP_INLINED 394
addr_18945: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18946: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_18947: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_18948: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_18949: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_18950: ;;// porth.porth:26:17: OP_INLINED 36
addr_18951: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18952: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18953: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18954: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18955: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18956: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18957: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18958: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_18959: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_18960: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_18961: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_18962: ;;// porth.porth:27:36: OP_INLINED 662
addr_18963: ;;// std/std.porth:48:34: OP_INLINED 394
addr_18964: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18965: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_18966: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_18967: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_18968: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_18969: ;;// porth.porth:28:17: OP_INLINED 36
addr_18970: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18971: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_18972: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_18973: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_18974: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_18975: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_18976: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_18977: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_18978: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_18979: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_18980: ;;// porth.porth:2531:7: OP_PUSH_STR 770
    mov rax, 18
    push rax
    lea rax, [str_770]
    push rax
addr_18981: ;;// porth.porth:2531:50: OP_INLINED 676
addr_18982: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_18983: ;;// std/std.porth:50:37: OP_INLINED 662
addr_18984: ;;// std/std.porth:48:34: OP_INLINED 394
addr_18985: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18986: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_18987: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_18988: ;;// porth.porth:2532:7: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18989: ;;// porth.porth:2532:18: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_18990: ;;// porth.porth:2532:33: OP_CALL 10127
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_10127
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_18991: ;;// porth.porth:2532:50: OP_INLINED 676
addr_18992: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_18993: ;;// std/std.porth:50:37: OP_INLINED 662
addr_18994: ;;// std/std.porth:48:34: OP_INLINED 394
addr_18995: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_18996: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_18997: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_18998: ;;// porth.porth:2533:7: OP_PUSH_STR 771
    mov rax, 16
    push rax
    lea rax, [str_771]
    push rax
addr_18999: ;;// porth.porth:2533:50: OP_INLINED 676
addr_19000: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_19001: ;;// std/std.porth:50:37: OP_INLINED 662
addr_19002: ;;// std/std.porth:48:34: OP_INLINED 394
addr_19003: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19004: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_19005: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_19006: ;;// porth.porth:2534:7: OP_PUSH_INT 18
    mov rax, 18
    push rax
addr_19007: ;;// porth.porth:2534:25: OP_CALL 6274
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_6274
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_19008: ;;// porth.porth:2534:50: OP_INLINED 676
addr_19009: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_19010: ;;// std/std.porth:50:37: OP_INLINED 662
addr_19011: ;;// std/std.porth:48:34: OP_INLINED 394
addr_19012: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19013: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_19014: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_19015: ;;// porth.porth:2535:7: OP_PUSH_STR 772
    mov rax, 10
    push rax
    lea rax, [str_772]
    push rax
addr_19016: ;;// porth.porth:2535:50: OP_INLINED 676
addr_19017: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_19018: ;;// std/std.porth:50:37: OP_INLINED 662
addr_19019: ;;// std/std.porth:48:34: OP_INLINED 394
addr_19020: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19021: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_19022: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_19023: ;;// porth.porth:2536:7: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_19024: ;;// porth.porth:2536:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_19025: ;;// porth.porth:2536:26: OP_CALL 10127
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_10127
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_19026: ;;// porth.porth:2536:50: OP_INLINED 676
addr_19027: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_19028: ;;// std/std.porth:50:37: OP_INLINED 662
addr_19029: ;;// std/std.porth:48:34: OP_INLINED 394
addr_19030: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19031: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_19032: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_19033: ;;// porth.porth:2537:7: OP_PUSH_STR 773
    mov rax, 1
    push rax
    lea rax, [str_773]
    push rax
addr_19034: ;;// porth.porth:2537:50: OP_INLINED 676
addr_19035: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_19036: ;;// std/std.porth:50:37: OP_INLINED 662
addr_19037: ;;// std/std.porth:48:34: OP_INLINED 394
addr_19038: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19039: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_19040: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_19041: ;;// porth.porth:2538:7: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19042: ;;// porth.porth:2538:9: OP_INLINED 418
addr_19043: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_19044: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_19045: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_19046: ;;// porth.porth:2539:5: OP_END_IF 0
addr_19047: ;;// porth.porth:2540:3: OP_INTRINSIC drop
    pop rax
addr_19048: ;;// porth.porth:2544:3: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_19049: ;;// porth.porth:2544:9: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_19050: ;;// porth.porth:2544:21: OP_INLINED 36
addr_19051: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19052: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19053: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19054: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19055: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19056: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19057: ;;// porth.porth:2545:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_19058: ;;// porth.porth:2545:9: OP_INLINED 753
addr_19059: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_19060: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_19061: ;;// std/std.porth:65:7: OP_INLINED 704
addr_19062: ;;// std/std.porth:58:38: OP_INLINED 684
addr_19063: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_19064: ;;// std/std.porth:56:57: OP_INLINED 36
addr_19065: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19066: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19067: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19068: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19069: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19070: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19071: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_19072: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_19073: ;;// std/std.porth:66:7: OP_INLINED 716
addr_19074: ;;// std/std.porth:59:37: OP_INLINED 694
addr_19075: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_19076: ;;// std/std.porth:57:55: OP_INLINED 36
addr_19077: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19078: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19079: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19080: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19081: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19082: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19083: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_19084: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_19085: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_19086: ;;// porth.porth:2545:14: OP_CALL 14004
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_14004
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_19087: ;;// porth.porth:2546:7: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_19088: ;;// porth.porth:2546:11: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_19089: ;;// porth.porth:2546:16: OP_INLINED 59
addr_19090: ;;// std/core.porth:52:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19091: ;;// std/core.porth:52:8: OP_INTRINSIC cast(int)
addr_19092: ;;// std/core.porth:53:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19093: ;;// std/core.porth:53:8: OP_INTRINSIC cast(int)
addr_19094: ;;// std/core.porth:54:3: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_19095: ;;// porth.porth:2546:21: OP_IF 153
    pop rax
    test rax, rax
    jz addr_19248
addr_19096: ;;// porth.porth:2547:9: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_19097: ;;// porth.porth:2547:15: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_19098: ;;// porth.porth:2547:25: OP_INLINED 36
addr_19099: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19100: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19101: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19102: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19103: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19104: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19105: ;;// porth.porth:2547:32: OP_INLINED 5367
addr_19106: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_19107: ;;// porth.porth:32:35: OP_INLINED 5195
addr_19108: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_19109: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_19110: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_19111: ;;// porth.porth:24:23: OP_INLINED 36
addr_19112: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19113: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19114: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19115: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19116: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19117: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19118: ;;// porth.porth:24:28: OP_INLINED 753
addr_19119: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_19120: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_19121: ;;// std/std.porth:65:7: OP_INLINED 704
addr_19122: ;;// std/std.porth:58:38: OP_INLINED 684
addr_19123: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_19124: ;;// std/std.porth:56:57: OP_INLINED 36
addr_19125: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19126: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19127: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19128: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19129: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19130: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19131: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_19132: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_19133: ;;// std/std.porth:66:7: OP_INLINED 716
addr_19134: ;;// std/std.porth:59:37: OP_INLINED 694
addr_19135: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_19136: ;;// std/std.porth:57:55: OP_INLINED 36
addr_19137: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19138: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19139: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19140: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19141: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19142: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19143: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_19144: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_19145: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_19146: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_19147: ;;// porth.porth:24:36: OP_INLINED 662
addr_19148: ;;// std/std.porth:48:34: OP_INLINED 394
addr_19149: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19150: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_19151: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_19152: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_19153: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_19154: ;;// porth.porth:25:36: OP_INLINED 662
addr_19155: ;;// std/std.porth:48:34: OP_INLINED 394
addr_19156: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19157: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_19158: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_19159: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_19160: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_19161: ;;// porth.porth:26:17: OP_INLINED 36
addr_19162: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19163: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19164: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19165: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19166: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19167: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19168: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_19169: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_19170: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_19171: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_19172: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_19173: ;;// porth.porth:27:36: OP_INLINED 662
addr_19174: ;;// std/std.porth:48:34: OP_INLINED 394
addr_19175: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19176: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_19177: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_19178: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_19179: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_19180: ;;// porth.porth:28:17: OP_INLINED 36
addr_19181: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19182: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19183: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19184: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19185: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19186: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19187: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_19188: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_19189: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_19190: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_19191: ;;// porth.porth:2548:9: OP_PUSH_STR 774
    mov rax, 20
    push rax
    lea rax, [str_774]
    push rax
addr_19192: ;;// porth.porth:2548:32: OP_INLINED 676
addr_19193: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_19194: ;;// std/std.porth:50:37: OP_INLINED 662
addr_19195: ;;// std/std.porth:48:34: OP_INLINED 394
addr_19196: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19197: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_19198: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_19199: ;;// porth.porth:2549:9: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_19200: ;;// porth.porth:2549:14: OP_INLINED 753
addr_19201: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_19202: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_19203: ;;// std/std.porth:65:7: OP_INLINED 704
addr_19204: ;;// std/std.porth:58:38: OP_INLINED 684
addr_19205: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_19206: ;;// std/std.porth:56:57: OP_INLINED 36
addr_19207: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19208: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19209: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19210: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19211: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19212: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19213: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_19214: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_19215: ;;// std/std.porth:66:7: OP_INLINED 716
addr_19216: ;;// std/std.porth:59:37: OP_INLINED 694
addr_19217: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_19218: ;;// std/std.porth:57:55: OP_INLINED 36
addr_19219: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19220: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19221: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19222: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19223: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19224: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19225: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_19226: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_19227: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_19228: ;;// porth.porth:2549:32: OP_INLINED 676
addr_19229: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_19230: ;;// std/std.porth:50:37: OP_INLINED 662
addr_19231: ;;// std/std.porth:48:34: OP_INLINED 394
addr_19232: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19233: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_19234: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_19235: ;;// porth.porth:2550:9: OP_PUSH_STR 775
    mov rax, 17
    push rax
    lea rax, [str_775]
    push rax
addr_19236: ;;// porth.porth:2550:32: OP_INLINED 676
addr_19237: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_19238: ;;// std/std.porth:50:37: OP_INLINED 662
addr_19239: ;;// std/std.porth:48:34: OP_INLINED 394
addr_19240: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19241: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_19242: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_19243: ;;// porth.porth:2551:9: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19244: ;;// porth.porth:2551:11: OP_INLINED 418
addr_19245: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_19246: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_19247: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_19248: ;;// porth.porth:2552:7: OP_END_IF 0
addr_19249: ;;// porth.porth:2554:7: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_19250: ;;// porth.porth:2554:11: OP_PUSH_GLOBAL_MEM 15073368
    lea rax, [mem+15073368]
    push rax
addr_19251: ;;// porth.porth:2554:17: OP_INLINED 78
addr_19252: ;;// std/core.porth:68:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19253: ;;// std/core.porth:68:8: OP_INTRINSIC cast(int)
addr_19254: ;;// std/core.porth:69:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19255: ;;// std/core.porth:69:8: OP_INTRINSIC cast(int)
addr_19256: ;;// std/core.porth:70:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_19257: ;;// porth.porth:2554:26: OP_PUSH_INT 120
    mov rax, 120
    push rax
addr_19258: ;;// porth.porth:2554:39: OP_INLINED 85
addr_19259: ;;// std/core.porth:73:36: OP_INTRINSIC divmod
    xor rdx, rdx
    pop rbx
    pop rax
    div rbx
    push rax
    push rdx
addr_19260: ;;// std/core.porth:73:43: OP_INTRINSIC drop
    pop rax
addr_19261: ;;// porth.porth:2554:41: OP_PUSH_LOCAL_MEM 80
    mov rax, [ret_stack_rsp]
    add rax, 80
    push rax
addr_19262: ;;// porth.porth:2554:48: OP_INLINED 30
addr_19263: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_19264: ;;// porth.porth:2555:5: OP_INTRINSIC drop
    pop rax
addr_19265: ;;// porth.porth:2556:3: OP_INTRINSIC drop
    pop rax
addr_19266: ;;// porth.porth:2558:3: OP_PUSH_LOCAL_MEM 80
    mov rax, [ret_stack_rsp]
    add rax, 80
    push rax
addr_19267: ;;// porth.porth:2558:10: OP_INLINED 16
addr_19268: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_19269: ;;// porth.porth:2559:1: OP_RET 88
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 88
    ret
addr_19270: ;;// porth.porth:2561:6: OP_PREP_PROC 88
    sub rsp, 88
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_19271: ;;// porth.porth:2567:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_19272: ;;// porth.porth:2567:9: OP_INLINED 27
addr_19273: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_19274: ;;// porth.porth:2570:3: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_19275: ;;// porth.porth:2570:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_19276: ;;// porth.porth:2570:15: OP_INLINED 0
addr_19277: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_19278: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_19279: ;;// porth.porth:2570:20: OP_CALL 8340
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_8340
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_19280: ;;// porth.porth:2570:37: OP_INLINED 131
addr_19281: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_19282: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19283: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19284: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_19285: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_19286: ;;// porth.porth:2570:42: OP_IF 236
    pop rax
    test rax, rax
    jz addr_19522
addr_19287: ;;// porth.porth:2571:5: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_19288: ;;// porth.porth:2571:11: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_19289: ;;// porth.porth:2571:21: OP_INLINED 36
addr_19290: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19291: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19292: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19293: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19294: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19295: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19296: ;;// porth.porth:2571:26: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_19297: ;;// porth.porth:2571:32: OP_INLINED 0
addr_19298: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_19299: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_19300: ;;// porth.porth:2571:37: OP_INLINED 6784
addr_19301: ;;// porth.porth:235:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_19302: ;;// porth.porth:237:5: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_19303: ;;// porth.porth:238:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_19304: ;;// porth.porth:238:11: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_19305: ;;// porth.porth:238:27: OP_INLINED 36
addr_19306: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19307: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19308: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19309: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19310: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19311: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19312: ;;// porth.porth:239:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_19313: ;;// porth.porth:239:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_19314: ;;// porth.porth:239:27: OP_INLINED 36
addr_19315: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19316: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19317: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19318: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19319: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19320: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19321: ;;// porth.porth:240:5: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_19322: ;;// porth.porth:241:5: OP_INTRINSIC drop
    pop rax
addr_19323: ;;// porth.porth:244:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_19324: ;;// porth.porth:244:11: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_19325: ;;// porth.porth:244:21: OP_INLINED 36
addr_19326: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19327: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19328: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19329: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19330: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19331: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19332: ;;// porth.porth:244:26: OP_INLINED 16
addr_19333: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_19334: ;;// porth.porth:245:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_19335: ;;// porth.porth:245:11: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_19336: ;;// porth.porth:245:21: OP_INLINED 36
addr_19337: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19338: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19339: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19340: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19341: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19342: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19343: ;;// porth.porth:245:26: OP_INLINED 30
addr_19344: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_19345: ;;// porth.porth:248:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_19346: ;;// porth.porth:248:11: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_19347: ;;// porth.porth:248:22: OP_INLINED 36
addr_19348: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19349: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19350: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19351: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19352: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19353: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19354: ;;// porth.porth:248:27: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_19355: ;;// porth.porth:248:46: OP_INLINED 36
addr_19356: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19357: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19358: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19359: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19360: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19361: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19362: ;;// porth.porth:248:51: OP_INLINED 0
addr_19363: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_19364: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_19365: ;;// porth.porth:249:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_19366: ;;// porth.porth:249:11: OP_PUSH_INT 32
    mov rax, 32
    push rax
addr_19367: ;;// porth.porth:249:28: OP_INLINED 36
addr_19368: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19369: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19370: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19371: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19372: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19373: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19374: ;;// porth.porth:249:33: OP_INLINED 0
addr_19375: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_19376: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_19377: ;;// porth.porth:250:5: OP_INLINED 78
addr_19378: ;;// std/core.porth:68:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19379: ;;// std/core.porth:68:8: OP_INTRINSIC cast(int)
addr_19380: ;;// std/core.porth:69:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19381: ;;// std/core.porth:69:8: OP_INTRINSIC cast(int)
addr_19382: ;;// std/core.porth:70:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_19383: ;;// porth.porth:251:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19384: ;;// porth.porth:251:7: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19385: ;;// porth.porth:252:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_19386: ;;// porth.porth:252:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_19387: ;;// porth.porth:252:17: OP_INLINED 36
addr_19388: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19389: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19390: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19391: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19392: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19393: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19394: ;;// porth.porth:253:5: OP_INLINED 30
addr_19395: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_19396: ;;// porth.porth:254:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_19397: ;;// porth.porth:2572:5: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_19398: ;;// porth.porth:2572:11: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_19399: ;;// porth.porth:2572:21: OP_INLINED 36
addr_19400: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19401: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19402: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19403: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19404: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19405: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19406: ;;// porth.porth:2572:56: OP_INLINED 5367
addr_19407: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_19408: ;;// porth.porth:32:35: OP_INLINED 5195
addr_19409: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_19410: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_19411: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_19412: ;;// porth.porth:24:23: OP_INLINED 36
addr_19413: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19414: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19415: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19416: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19417: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19418: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19419: ;;// porth.porth:24:28: OP_INLINED 753
addr_19420: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_19421: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_19422: ;;// std/std.porth:65:7: OP_INLINED 704
addr_19423: ;;// std/std.porth:58:38: OP_INLINED 684
addr_19424: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_19425: ;;// std/std.porth:56:57: OP_INLINED 36
addr_19426: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19427: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19428: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19429: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19430: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19431: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19432: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_19433: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_19434: ;;// std/std.porth:66:7: OP_INLINED 716
addr_19435: ;;// std/std.porth:59:37: OP_INLINED 694
addr_19436: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_19437: ;;// std/std.porth:57:55: OP_INLINED 36
addr_19438: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19439: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19440: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19441: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19442: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19443: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19444: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_19445: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_19446: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_19447: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_19448: ;;// porth.porth:24:36: OP_INLINED 662
addr_19449: ;;// std/std.porth:48:34: OP_INLINED 394
addr_19450: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19451: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_19452: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_19453: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_19454: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_19455: ;;// porth.porth:25:36: OP_INLINED 662
addr_19456: ;;// std/std.porth:48:34: OP_INLINED 394
addr_19457: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19458: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_19459: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_19460: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_19461: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_19462: ;;// porth.porth:26:17: OP_INLINED 36
addr_19463: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19464: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19465: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19466: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19467: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19468: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19469: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_19470: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_19471: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_19472: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_19473: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_19474: ;;// porth.porth:27:36: OP_INLINED 662
addr_19475: ;;// std/std.porth:48:34: OP_INLINED 394
addr_19476: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19477: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_19478: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_19479: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_19480: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_19481: ;;// porth.porth:28:17: OP_INLINED 36
addr_19482: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19483: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19484: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19485: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19486: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19487: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19488: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_19489: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_19490: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_19491: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_19492: ;;// porth.porth:2573:5: OP_PUSH_STR 776
    mov rax, 48
    push rax
    lea rax, [str_776]
    push rax
addr_19493: ;;// porth.porth:2573:56: OP_INLINED 676
addr_19494: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_19495: ;;// std/std.porth:50:37: OP_INLINED 662
addr_19496: ;;// std/std.porth:48:34: OP_INLINED 394
addr_19497: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19498: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_19499: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_19500: ;;// porth.porth:2574:5: OP_PUSH_INT 17
    mov rax, 17
    push rax
addr_19501: ;;// porth.porth:2574:21: OP_CALL 6274
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_6274
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_19502: ;;// porth.porth:2574:56: OP_INLINED 676
addr_19503: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_19504: ;;// std/std.porth:50:37: OP_INLINED 662
addr_19505: ;;// std/std.porth:48:34: OP_INLINED 394
addr_19506: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19507: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_19508: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_19509: ;;// porth.porth:2575:5: OP_PUSH_STR 777
    mov rax, 20
    push rax
    lea rax, [str_777]
    push rax
addr_19510: ;;// porth.porth:2575:56: OP_INLINED 676
addr_19511: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_19512: ;;// std/std.porth:50:37: OP_INLINED 662
addr_19513: ;;// std/std.porth:48:34: OP_INLINED 394
addr_19514: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19515: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_19516: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_19517: ;;// porth.porth:2576:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19518: ;;// porth.porth:2576:7: OP_INLINED 418
addr_19519: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_19520: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_19521: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_19522: ;;// porth.porth:2577:3: OP_END_IF 0
addr_19523: ;;// porth.porth:2579:3: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_19524: ;;// porth.porth:2579:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_19525: ;;// porth.porth:2579:20: OP_INLINED 36
addr_19526: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19527: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19528: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19529: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19530: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19531: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19532: ;;// porth.porth:2579:25: OP_INLINED 16
addr_19533: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_19534: ;;// porth.porth:2580:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_19535: ;;// porth.porth:2580:9: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19536: ;;// porth.porth:2580:20: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_19537: ;;// porth.porth:2580:23: OP_IF 162
    pop rax
    test rax, rax
    jz addr_19699
addr_19538: ;;// porth.porth:2581:7: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_19539: ;;// porth.porth:2581:13: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_19540: ;;// porth.porth:2581:23: OP_INLINED 36
addr_19541: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19542: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19543: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19544: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19545: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19546: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19547: ;;// porth.porth:2581:50: OP_INLINED 5367
addr_19548: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_19549: ;;// porth.porth:32:35: OP_INLINED 5195
addr_19550: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_19551: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_19552: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_19553: ;;// porth.porth:24:23: OP_INLINED 36
addr_19554: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19555: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19556: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19557: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19558: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19559: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19560: ;;// porth.porth:24:28: OP_INLINED 753
addr_19561: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_19562: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_19563: ;;// std/std.porth:65:7: OP_INLINED 704
addr_19564: ;;// std/std.porth:58:38: OP_INLINED 684
addr_19565: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_19566: ;;// std/std.porth:56:57: OP_INLINED 36
addr_19567: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19568: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19569: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19570: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19571: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19572: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19573: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_19574: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_19575: ;;// std/std.porth:66:7: OP_INLINED 716
addr_19576: ;;// std/std.porth:59:37: OP_INLINED 694
addr_19577: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_19578: ;;// std/std.porth:57:55: OP_INLINED 36
addr_19579: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19580: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19581: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19582: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19583: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19584: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19585: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_19586: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_19587: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_19588: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_19589: ;;// porth.porth:24:36: OP_INLINED 662
addr_19590: ;;// std/std.porth:48:34: OP_INLINED 394
addr_19591: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19592: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_19593: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_19594: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_19595: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_19596: ;;// porth.porth:25:36: OP_INLINED 662
addr_19597: ;;// std/std.porth:48:34: OP_INLINED 394
addr_19598: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19599: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_19600: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_19601: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_19602: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_19603: ;;// porth.porth:26:17: OP_INLINED 36
addr_19604: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19605: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19606: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19607: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19608: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19609: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19610: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_19611: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_19612: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_19613: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_19614: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_19615: ;;// porth.porth:27:36: OP_INLINED 662
addr_19616: ;;// std/std.porth:48:34: OP_INLINED 394
addr_19617: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19618: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_19619: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_19620: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_19621: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_19622: ;;// porth.porth:28:17: OP_INLINED 36
addr_19623: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19624: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19625: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19626: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19627: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19628: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19629: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_19630: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_19631: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_19632: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_19633: ;;// porth.porth:2582:7: OP_PUSH_STR 778
    mov rax, 18
    push rax
    lea rax, [str_778]
    push rax
addr_19634: ;;// porth.porth:2582:50: OP_INLINED 676
addr_19635: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_19636: ;;// std/std.porth:50:37: OP_INLINED 662
addr_19637: ;;// std/std.porth:48:34: OP_INLINED 394
addr_19638: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19639: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_19640: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_19641: ;;// porth.porth:2583:7: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19642: ;;// porth.porth:2583:18: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_19643: ;;// porth.porth:2583:33: OP_CALL 10127
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_10127
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_19644: ;;// porth.porth:2583:50: OP_INLINED 676
addr_19645: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_19646: ;;// std/std.porth:50:37: OP_INLINED 662
addr_19647: ;;// std/std.porth:48:34: OP_INLINED 394
addr_19648: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19649: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_19650: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_19651: ;;// porth.porth:2584:7: OP_PUSH_STR 779
    mov rax, 16
    push rax
    lea rax, [str_779]
    push rax
addr_19652: ;;// porth.porth:2584:50: OP_INLINED 676
addr_19653: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_19654: ;;// std/std.porth:50:37: OP_INLINED 662
addr_19655: ;;// std/std.porth:48:34: OP_INLINED 394
addr_19656: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19657: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_19658: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_19659: ;;// porth.porth:2585:7: OP_PUSH_INT 17
    mov rax, 17
    push rax
addr_19660: ;;// porth.porth:2585:23: OP_CALL 6274
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_6274
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_19661: ;;// porth.porth:2585:50: OP_INLINED 676
addr_19662: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_19663: ;;// std/std.porth:50:37: OP_INLINED 662
addr_19664: ;;// std/std.porth:48:34: OP_INLINED 394
addr_19665: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19666: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_19667: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_19668: ;;// porth.porth:2586:7: OP_PUSH_STR 780
    mov rax, 10
    push rax
    lea rax, [str_780]
    push rax
addr_19669: ;;// porth.porth:2586:50: OP_INLINED 676
addr_19670: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_19671: ;;// std/std.porth:50:37: OP_INLINED 662
addr_19672: ;;// std/std.porth:48:34: OP_INLINED 394
addr_19673: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19674: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_19675: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_19676: ;;// porth.porth:2587:7: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_19677: ;;// porth.porth:2587:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_19678: ;;// porth.porth:2587:26: OP_CALL 10127
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_10127
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_19679: ;;// porth.porth:2587:50: OP_INLINED 676
addr_19680: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_19681: ;;// std/std.porth:50:37: OP_INLINED 662
addr_19682: ;;// std/std.porth:48:34: OP_INLINED 394
addr_19683: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19684: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_19685: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_19686: ;;// porth.porth:2588:7: OP_PUSH_STR 781
    mov rax, 1
    push rax
    lea rax, [str_781]
    push rax
addr_19687: ;;// porth.porth:2588:50: OP_INLINED 676
addr_19688: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_19689: ;;// std/std.porth:50:37: OP_INLINED 662
addr_19690: ;;// std/std.porth:48:34: OP_INLINED 394
addr_19691: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19692: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_19693: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_19694: ;;// porth.porth:2589:7: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19695: ;;// porth.porth:2589:9: OP_INLINED 418
addr_19696: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_19697: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_19698: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_19699: ;;// porth.porth:2590:5: OP_END_IF 0
addr_19700: ;;// porth.porth:2591:3: OP_INTRINSIC drop
    pop rax
addr_19701: ;;// porth.porth:2595:3: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_19702: ;;// porth.porth:2595:9: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_19703: ;;// porth.porth:2595:21: OP_INLINED 36
addr_19704: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19705: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19706: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19707: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19708: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19709: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19710: ;;// porth.porth:2596:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_19711: ;;// porth.porth:2596:9: OP_INLINED 753
addr_19712: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_19713: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_19714: ;;// std/std.porth:65:7: OP_INLINED 704
addr_19715: ;;// std/std.porth:58:38: OP_INLINED 684
addr_19716: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_19717: ;;// std/std.porth:56:57: OP_INLINED 36
addr_19718: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19719: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19720: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19721: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19722: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19723: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19724: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_19725: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_19726: ;;// std/std.porth:66:7: OP_INLINED 716
addr_19727: ;;// std/std.porth:59:37: OP_INLINED 694
addr_19728: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_19729: ;;// std/std.porth:57:55: OP_INLINED 36
addr_19730: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19731: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19732: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19733: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19734: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19735: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19736: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_19737: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_19738: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_19739: ;;// porth.porth:2596:14: OP_CALL 14004
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_14004
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_19740: ;;// porth.porth:2597:7: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_19741: ;;// porth.porth:2597:11: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_19742: ;;// porth.porth:2597:16: OP_INLINED 59
addr_19743: ;;// std/core.porth:52:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19744: ;;// std/core.porth:52:8: OP_INTRINSIC cast(int)
addr_19745: ;;// std/core.porth:53:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19746: ;;// std/core.porth:53:8: OP_INTRINSIC cast(int)
addr_19747: ;;// std/core.porth:54:3: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_19748: ;;// porth.porth:2597:21: OP_IF 153
    pop rax
    test rax, rax
    jz addr_19901
addr_19749: ;;// porth.porth:2598:9: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_19750: ;;// porth.porth:2598:15: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_19751: ;;// porth.porth:2598:25: OP_INLINED 36
addr_19752: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19753: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19754: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19755: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19756: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19757: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19758: ;;// porth.porth:2598:32: OP_INLINED 5367
addr_19759: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_19760: ;;// porth.porth:32:35: OP_INLINED 5195
addr_19761: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_19762: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_19763: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_19764: ;;// porth.porth:24:23: OP_INLINED 36
addr_19765: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19766: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19767: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19768: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19769: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19770: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19771: ;;// porth.porth:24:28: OP_INLINED 753
addr_19772: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_19773: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_19774: ;;// std/std.porth:65:7: OP_INLINED 704
addr_19775: ;;// std/std.porth:58:38: OP_INLINED 684
addr_19776: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_19777: ;;// std/std.porth:56:57: OP_INLINED 36
addr_19778: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19779: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19780: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19781: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19782: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19783: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19784: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_19785: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_19786: ;;// std/std.porth:66:7: OP_INLINED 716
addr_19787: ;;// std/std.porth:59:37: OP_INLINED 694
addr_19788: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_19789: ;;// std/std.porth:57:55: OP_INLINED 36
addr_19790: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19791: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19792: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19793: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19794: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19795: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19796: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_19797: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_19798: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_19799: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_19800: ;;// porth.porth:24:36: OP_INLINED 662
addr_19801: ;;// std/std.porth:48:34: OP_INLINED 394
addr_19802: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19803: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_19804: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_19805: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_19806: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_19807: ;;// porth.porth:25:36: OP_INLINED 662
addr_19808: ;;// std/std.porth:48:34: OP_INLINED 394
addr_19809: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19810: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_19811: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_19812: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_19813: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_19814: ;;// porth.porth:26:17: OP_INLINED 36
addr_19815: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19816: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19817: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19818: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19819: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19820: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19821: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_19822: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_19823: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_19824: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_19825: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_19826: ;;// porth.porth:27:36: OP_INLINED 662
addr_19827: ;;// std/std.porth:48:34: OP_INLINED 394
addr_19828: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19829: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_19830: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_19831: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_19832: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_19833: ;;// porth.porth:28:17: OP_INLINED 36
addr_19834: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19835: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19836: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19837: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19838: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19839: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19840: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_19841: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_19842: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_19843: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_19844: ;;// porth.porth:2599:9: OP_PUSH_STR 782
    mov rax, 20
    push rax
    lea rax, [str_782]
    push rax
addr_19845: ;;// porth.porth:2599:32: OP_INLINED 676
addr_19846: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_19847: ;;// std/std.porth:50:37: OP_INLINED 662
addr_19848: ;;// std/std.porth:48:34: OP_INLINED 394
addr_19849: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19850: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_19851: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_19852: ;;// porth.porth:2600:9: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_19853: ;;// porth.porth:2600:14: OP_INLINED 753
addr_19854: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_19855: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_19856: ;;// std/std.porth:65:7: OP_INLINED 704
addr_19857: ;;// std/std.porth:58:38: OP_INLINED 684
addr_19858: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_19859: ;;// std/std.porth:56:57: OP_INLINED 36
addr_19860: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19861: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19862: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19863: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19864: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19865: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19866: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_19867: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_19868: ;;// std/std.porth:66:7: OP_INLINED 716
addr_19869: ;;// std/std.porth:59:37: OP_INLINED 694
addr_19870: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_19871: ;;// std/std.porth:57:55: OP_INLINED 36
addr_19872: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19873: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19874: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19875: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19876: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19877: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19878: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_19879: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_19880: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_19881: ;;// porth.porth:2600:32: OP_INLINED 676
addr_19882: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_19883: ;;// std/std.porth:50:37: OP_INLINED 662
addr_19884: ;;// std/std.porth:48:34: OP_INLINED 394
addr_19885: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19886: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_19887: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_19888: ;;// porth.porth:2601:9: OP_PUSH_STR 783
    mov rax, 17
    push rax
    lea rax, [str_783]
    push rax
addr_19889: ;;// porth.porth:2601:32: OP_INLINED 676
addr_19890: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_19891: ;;// std/std.porth:50:37: OP_INLINED 662
addr_19892: ;;// std/std.porth:48:34: OP_INLINED 394
addr_19893: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19894: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_19895: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_19896: ;;// porth.porth:2602:9: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19897: ;;// porth.porth:2602:11: OP_INLINED 418
addr_19898: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_19899: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_19900: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_19901: ;;// porth.porth:2603:7: OP_END_IF 0
addr_19902: ;;// porth.porth:2605:7: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_19903: ;;// porth.porth:2605:11: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_19904: ;;// porth.porth:2605:21: OP_INLINED 36
addr_19905: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19906: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19907: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19908: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19909: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19910: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19911: ;;// porth.porth:2605:26: OP_INLINED 16
addr_19912: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_19913: ;;// porth.porth:2605:31: OP_PUSH_LOCAL_MEM 80
    mov rax, [ret_stack_rsp]
    add rax, 80
    push rax
addr_19914: ;;// porth.porth:2605:38: OP_INLINED 30
addr_19915: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_19916: ;;// porth.porth:2606:5: OP_INTRINSIC drop
    pop rax
addr_19917: ;;// porth.porth:2607:3: OP_INTRINSIC drop
    pop rax
addr_19918: ;;// porth.porth:2609:3: OP_PUSH_LOCAL_MEM 80
    mov rax, [ret_stack_rsp]
    add rax, 80
    push rax
addr_19919: ;;// porth.porth:2609:10: OP_INLINED 16
addr_19920: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_19921: ;;// porth.porth:2610:1: OP_RET 88
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 88
    ret
addr_19922: ;;// porth.porth:2612:6: OP_PREP_PROC 88
    sub rsp, 88
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_19923: ;;// porth.porth:2619:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_19924: ;;// porth.porth:2619:9: OP_INLINED 27
addr_19925: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_19926: ;;// porth.porth:2623:3: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_19927: ;;// porth.porth:2623:9: OP_PUSH_LOCAL_MEM 80
    mov rax, [ret_stack_rsp]
    add rax, 80
    push rax
addr_19928: ;;// porth.porth:2623:14: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_19929: ;;// porth.porth:2625:3: OP_INLINED 18312
addr_19930: ;;// porth.porth:2460:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_19931: ;;// porth.porth:2460:5: OP_PUSH_GLOBAL_MEM 15356072
    lea rax, [mem+15356072]
    push rax
addr_19932: ;;// porth.porth:2460:23: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_19933: ;;// porth.porth:2627:3: OP_WHILE 1137
addr_19934: ;;// porth.porth:2628:5: OP_PUSH_LOCAL_MEM 80
    mov rax, [ret_stack_rsp]
    add rax, 80
    push rax
addr_19935: ;;// porth.porth:2628:10: OP_INLINED 12
addr_19936: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_19937: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_19938: ;;// porth.porth:2628:16: OP_INLINED 131
addr_19939: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_19940: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19941: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19942: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_19943: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_19944: ;;// porth.porth:2628:21: OP_IF 8
    pop rax
    test rax, rax
    jz addr_19952
addr_19945: ;;// porth.porth:2629:7: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_19946: ;;// porth.porth:2629:13: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_19947: ;;// porth.porth:2629:19: OP_INLINED 0
addr_19948: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_19949: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_19950: ;;// porth.porth:2629:24: OP_CALL 8340
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_8340
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_19951: ;;// porth.porth:2630:5: OP_ELSE 2
    jmp addr_19953
addr_19952: ;;// porth.porth:2630:10: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_19953: ;;// porth.porth:2630:16: OP_END_IF 0
addr_19954: ;;// porth.porth:2631:3: OP_DO 1116
    pop rax
    test rax, rax
    jz addr_21070
addr_19955: ;;// porth.porth:2632:5: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_19956: ;;// porth.porth:2632:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_19957: ;;// porth.porth:2632:22: OP_INLINED 36
addr_19958: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19959: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19960: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19961: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19962: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19963: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19964: ;;// porth.porth:2632:27: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_19965: ;;// porth.porth:2632:31: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_19966: ;;// porth.porth:2632:41: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_19967: ;;// porth.porth:2632:43: OP_IF 14
    pop rax
    test rax, rax
    jz addr_19981
addr_19968: ;;// porth.porth:2633:7: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_19969: ;;// porth.porth:2633:20: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_19970: ;;// porth.porth:2633:26: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_19971: ;;// porth.porth:2633:38: OP_INLINED 36
addr_19972: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19973: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19974: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19975: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19976: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19977: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19978: ;;// porth.porth:2633:43: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_19979: ;;// porth.porth:2633:47: OP_CALL 18317
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18317
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_19980: ;;// porth.porth:2634:5: OP_ELSE 744
    jmp addr_20724
addr_19981: ;;// porth.porth:2634:10: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_19982: ;;// porth.porth:2634:16: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_19983: ;;// porth.porth:2634:27: OP_INLINED 36
addr_19984: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19985: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19986: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19987: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_19988: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_19989: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_19990: ;;// porth.porth:2634:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_19991: ;;// porth.porth:2634:36: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_19992: ;;// porth.porth:2634:47: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_19993: ;;// porth.porth:2634:49: OP_IFSTAR 732
    pop rax
    test rax, rax
    jz addr_20725
addr_19994: ;;// porth.porth:2635:7: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_19995: ;;// porth.porth:2635:13: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_19996: ;;// porth.porth:2635:25: OP_INLINED 36
addr_19997: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_19998: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_19999: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20000: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_20001: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20002: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_20003: ;;// porth.porth:2635:30: OP_INLINED 753
addr_20004: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_20005: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_20006: ;;// std/std.porth:65:7: OP_INLINED 704
addr_20007: ;;// std/std.porth:58:38: OP_INLINED 684
addr_20008: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_20009: ;;// std/std.porth:56:57: OP_INLINED 36
addr_20010: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20011: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_20012: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20013: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_20014: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20015: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_20016: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_20017: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_20018: ;;// std/std.porth:66:7: OP_INLINED 716
addr_20019: ;;// std/std.porth:59:37: OP_INLINED 694
addr_20020: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_20021: ;;// std/std.porth:57:55: OP_INLINED 36
addr_20022: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20023: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_20024: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20025: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_20026: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20027: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_20028: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_20029: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_20030: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_20031: ;;// porth.porth:2635:35: OP_CALL 10987
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_10987
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20032: ;;// porth.porth:2635:53: OP_IF 415
    pop rax
    test rax, rax
    jz addr_20447
addr_20033: ;;// porth.porth:2637:9: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_20034: ;;// porth.porth:2637:13: OP_PUSH_INT 33
    mov rax, 33
    push rax
addr_20035: ;;// porth.porth:2637:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_20036: ;;// porth.porth:2637:34: OP_IF 11
    pop rax
    test rax, rax
    jz addr_20047
addr_20037: ;;// porth.porth:2638:11: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_20038: ;;// porth.porth:2638:13: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_20039: ;;// porth.porth:2638:19: OP_CALL 18441
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18441
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20040: ;;// porth.porth:2639:11: OP_CALL 18375
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18375
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20041: ;;// porth.porth:2640:11: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20042: ;;// porth.porth:2640:16: OP_INTRINSIC drop
    pop rax
addr_20043: ;;// porth.porth:2641:11: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_20044: ;;// porth.porth:2641:24: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20045: ;;// porth.porth:2642:11: OP_CALL 18317
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18317
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20046: ;;// porth.porth:2643:9: OP_ELSE 14
    jmp addr_20060
addr_20047: ;;// porth.porth:2643:14: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_20048: ;;// porth.porth:2643:18: OP_PUSH_INT 37
    mov rax, 37
    push rax
addr_20049: ;;// porth.porth:2643:38: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_20050: ;;// porth.porth:2643:40: OP_IFSTAR 11
    pop rax
    test rax, rax
    jz addr_20061
addr_20051: ;;// porth.porth:2644:11: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_20052: ;;// porth.porth:2644:13: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_20053: ;;// porth.porth:2644:19: OP_CALL 18441
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18441
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20054: ;;// porth.porth:2645:11: OP_CALL 18375
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18375
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20055: ;;// porth.porth:2646:11: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20056: ;;// porth.porth:2646:16: OP_INTRINSIC drop
    pop rax
addr_20057: ;;// porth.porth:2647:11: OP_PUSH_INT 4
    mov rax, 4
    push rax
addr_20058: ;;// porth.porth:2647:25: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20059: ;;// porth.porth:2648:11: OP_CALL 18317
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18317
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20060: ;;// porth.porth:2649:9: OP_ELSE 14
    jmp addr_20074
addr_20061: ;;// porth.porth:2649:14: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_20062: ;;// porth.porth:2649:18: OP_PUSH_INT 35
    mov rax, 35
    push rax
addr_20063: ;;// porth.porth:2649:39: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_20064: ;;// porth.porth:2649:41: OP_IFSTAR 11
    pop rax
    test rax, rax
    jz addr_20075
addr_20065: ;;// porth.porth:2650:11: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_20066: ;;// porth.porth:2650:13: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_20067: ;;// porth.porth:2650:19: OP_CALL 18441
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18441
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20068: ;;// porth.porth:2651:11: OP_CALL 18375
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18375
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20069: ;;// porth.porth:2652:11: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20070: ;;// porth.porth:2652:16: OP_INTRINSIC drop
    pop rax
addr_20071: ;;// porth.porth:2653:11: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_20072: ;;// porth.porth:2653:26: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20073: ;;// porth.porth:2654:11: OP_CALL 18317
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18317
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20074: ;;// porth.porth:2655:9: OP_ELSE 14
    jmp addr_20088
addr_20075: ;;// porth.porth:2655:14: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_20076: ;;// porth.porth:2655:18: OP_PUSH_INT 36
    mov rax, 36
    push rax
addr_20077: ;;// porth.porth:2655:40: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_20078: ;;// porth.porth:2655:42: OP_IFSTAR 11
    pop rax
    test rax, rax
    jz addr_20089
addr_20079: ;;// porth.porth:2656:11: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_20080: ;;// porth.porth:2656:13: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_20081: ;;// porth.porth:2656:19: OP_CALL 18441
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18441
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20082: ;;// porth.porth:2657:11: OP_CALL 18375
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18375
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20083: ;;// porth.porth:2658:11: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20084: ;;// porth.porth:2658:16: OP_INTRINSIC drop
    pop rax
addr_20085: ;;// porth.porth:2659:11: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_20086: ;;// porth.porth:2659:27: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20087: ;;// porth.porth:2660:11: OP_CALL 18317
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18317
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20088: ;;// porth.porth:2661:9: OP_ELSE 14
    jmp addr_20102
addr_20089: ;;// porth.porth:2661:14: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_20090: ;;// porth.porth:2661:18: OP_PUSH_INT 38
    mov rax, 38
    push rax
addr_20091: ;;// porth.porth:2661:38: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_20092: ;;// porth.porth:2661:40: OP_IFSTAR 11
    pop rax
    test rax, rax
    jz addr_20103
addr_20093: ;;// porth.porth:2662:11: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_20094: ;;// porth.porth:2662:13: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_20095: ;;// porth.porth:2662:19: OP_CALL 18441
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18441
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20096: ;;// porth.porth:2663:11: OP_CALL 18375
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18375
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20097: ;;// porth.porth:2664:11: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20098: ;;// porth.porth:2664:16: OP_INTRINSIC drop
    pop rax
addr_20099: ;;// porth.porth:2665:11: OP_PUSH_INT 5
    mov rax, 5
    push rax
addr_20100: ;;// porth.porth:2665:25: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20101: ;;// porth.porth:2666:11: OP_CALL 18317
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18317
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20102: ;;// porth.porth:2667:9: OP_ELSE 14
    jmp addr_20116
addr_20103: ;;// porth.porth:2667:14: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_20104: ;;// porth.porth:2667:18: OP_PUSH_INT 34
    mov rax, 34
    push rax
addr_20105: ;;// porth.porth:2667:37: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_20106: ;;// porth.porth:2667:39: OP_IFSTAR 11
    pop rax
    test rax, rax
    jz addr_20117
addr_20107: ;;// porth.porth:2668:11: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_20108: ;;// porth.porth:2668:13: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_20109: ;;// porth.porth:2668:19: OP_CALL 18441
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18441
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20110: ;;// porth.porth:2669:11: OP_CALL 18375
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18375
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20111: ;;// porth.porth:2670:11: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20112: ;;// porth.porth:2670:16: OP_INTRINSIC drop
    pop rax
addr_20113: ;;// porth.porth:2671:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_20114: ;;// porth.porth:2671:24: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20115: ;;// porth.porth:2672:11: OP_CALL 18317
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18317
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20116: ;;// porth.porth:2673:9: OP_ELSE 19
    jmp addr_20135
addr_20117: ;;// porth.porth:2673:14: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_20118: ;;// porth.porth:2673:18: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_20119: ;;// porth.porth:2673:34: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_20120: ;;// porth.porth:2673:36: OP_IFSTAR 16
    pop rax
    test rax, rax
    jz addr_20136
addr_20121: ;;// porth.porth:2674:11: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_20122: ;;// porth.porth:2674:13: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_20123: ;;// porth.porth:2674:19: OP_CALL 18441
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18441
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20124: ;;// porth.porth:2676:11: OP_CALL 18375
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18375
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20125: ;;// porth.porth:2676:27: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20126: ;;// porth.porth:2676:32: OP_INTRINSIC drop
    pop rax
addr_20127: ;;// porth.porth:2677:11: OP_CALL 18375
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18375
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20128: ;;// porth.porth:2677:27: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20129: ;;// porth.porth:2677:32: OP_INTRINSIC drop
    pop rax
addr_20130: ;;// porth.porth:2678:11: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20131: ;;// porth.porth:2679:11: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_20132: ;;// porth.porth:2680:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_20133: ;;// porth.porth:2680:24: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20134: ;;// porth.porth:2680:29: OP_CALL 18317
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18317
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20135: ;;// porth.porth:2681:9: OP_ELSE 19
    jmp addr_20154
addr_20136: ;;// porth.porth:2681:14: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_20137: ;;// porth.porth:2681:18: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_20138: ;;// porth.porth:2681:33: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_20139: ;;// porth.porth:2681:35: OP_IFSTAR 16
    pop rax
    test rax, rax
    jz addr_20155
addr_20140: ;;// porth.porth:2682:11: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_20141: ;;// porth.porth:2682:13: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_20142: ;;// porth.porth:2682:19: OP_CALL 18441
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18441
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20143: ;;// porth.porth:2684:11: OP_CALL 18375
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18375
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20144: ;;// porth.porth:2684:27: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20145: ;;// porth.porth:2684:32: OP_INTRINSIC drop
    pop rax
addr_20146: ;;// porth.porth:2685:11: OP_CALL 18375
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18375
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20147: ;;// porth.porth:2685:27: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20148: ;;// porth.porth:2685:32: OP_INTRINSIC drop
    pop rax
addr_20149: ;;// porth.porth:2686:11: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20150: ;;// porth.porth:2687:11: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20151: ;;// porth.porth:2688:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_20152: ;;// porth.porth:2688:24: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20153: ;;// porth.porth:2688:29: OP_CALL 18317
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18317
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20154: ;;// porth.porth:2689:9: OP_ELSE 19
    jmp addr_20173
addr_20155: ;;// porth.porth:2689:14: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_20156: ;;// porth.porth:2689:18: OP_PUSH_INT 4
    mov rax, 4
    push rax
addr_20157: ;;// porth.porth:2689:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_20158: ;;// porth.porth:2689:34: OP_IFSTAR 16
    pop rax
    test rax, rax
    jz addr_20174
addr_20159: ;;// porth.porth:2690:11: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_20160: ;;// porth.porth:2690:13: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_20161: ;;// porth.porth:2690:19: OP_CALL 18441
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18441
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20162: ;;// porth.porth:2692:11: OP_CALL 18375
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18375
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20163: ;;// porth.porth:2692:27: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20164: ;;// porth.porth:2692:32: OP_INTRINSIC drop
    pop rax
addr_20165: ;;// porth.porth:2693:11: OP_CALL 18375
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18375
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20166: ;;// porth.porth:2693:27: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20167: ;;// porth.porth:2693:32: OP_INTRINSIC drop
    pop rax
addr_20168: ;;// porth.porth:2694:11: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20169: ;;// porth.porth:2695:11: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_20170: ;;// porth.porth:2696:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_20171: ;;// porth.porth:2696:24: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20172: ;;// porth.porth:2696:29: OP_CALL 18317
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18317
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20173: ;;// porth.porth:2697:9: OP_ELSE 19
    jmp addr_20192
addr_20174: ;;// porth.porth:2697:14: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_20175: ;;// porth.porth:2697:18: OP_PUSH_INT 15
    mov rax, 15
    push rax
addr_20176: ;;// porth.porth:2697:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_20177: ;;// porth.porth:2697:34: OP_IFSTAR 16
    pop rax
    test rax, rax
    jz addr_20193
addr_20178: ;;// porth.porth:2698:11: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_20179: ;;// porth.porth:2698:13: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_20180: ;;// porth.porth:2698:19: OP_CALL 18441
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18441
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20181: ;;// porth.porth:2700:11: OP_CALL 18375
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18375
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20182: ;;// porth.porth:2700:27: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20183: ;;// porth.porth:2700:32: OP_INTRINSIC drop
    pop rax
addr_20184: ;;// porth.porth:2701:11: OP_CALL 18375
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18375
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20185: ;;// porth.porth:2701:27: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20186: ;;// porth.porth:2701:32: OP_INTRINSIC drop
    pop rax
addr_20187: ;;// porth.porth:2702:11: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20188: ;;// porth.porth:2703:11: OP_INTRINSIC shl
    pop rcx
    pop rbx
    shl rbx, cl
    push rbx
addr_20189: ;;// porth.porth:2704:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_20190: ;;// porth.porth:2704:24: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20191: ;;// porth.porth:2704:29: OP_CALL 18317
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18317
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20192: ;;// porth.porth:2705:9: OP_ELSE 19
    jmp addr_20211
addr_20193: ;;// porth.porth:2705:14: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_20194: ;;// porth.porth:2705:18: OP_PUSH_INT 14
    mov rax, 14
    push rax
addr_20195: ;;// porth.porth:2705:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_20196: ;;// porth.porth:2705:34: OP_IFSTAR 16
    pop rax
    test rax, rax
    jz addr_20212
addr_20197: ;;// porth.porth:2706:11: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_20198: ;;// porth.porth:2706:13: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_20199: ;;// porth.porth:2706:19: OP_CALL 18441
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18441
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20200: ;;// porth.porth:2708:11: OP_CALL 18375
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18375
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20201: ;;// porth.porth:2708:27: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20202: ;;// porth.porth:2708:32: OP_INTRINSIC drop
    pop rax
addr_20203: ;;// porth.porth:2709:11: OP_CALL 18375
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18375
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20204: ;;// porth.porth:2709:27: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20205: ;;// porth.porth:2709:32: OP_INTRINSIC drop
    pop rax
addr_20206: ;;// porth.porth:2710:11: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20207: ;;// porth.porth:2711:11: OP_INTRINSIC shr
    pop rcx
    pop rbx
    shr rbx, cl
    push rbx
addr_20208: ;;// porth.porth:2712:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_20209: ;;// porth.porth:2712:24: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20210: ;;// porth.porth:2712:29: OP_CALL 18317
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18317
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20211: ;;// porth.porth:2713:9: OP_ELSE 20
    jmp addr_20231
addr_20212: ;;// porth.porth:2713:14: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_20213: ;;// porth.porth:2713:18: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_20214: ;;// porth.porth:2713:31: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_20215: ;;// porth.porth:2713:33: OP_IFSTAR 17
    pop rax
    test rax, rax
    jz addr_20232
addr_20216: ;;// porth.porth:2714:11: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_20217: ;;// porth.porth:2714:13: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_20218: ;;// porth.porth:2714:19: OP_CALL 18441
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18441
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20219: ;;// porth.porth:2716:11: OP_CALL 18375
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18375
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20220: ;;// porth.porth:2716:27: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20221: ;;// porth.porth:2716:32: OP_INTRINSIC drop
    pop rax
addr_20222: ;;// porth.porth:2717:11: OP_CALL 18375
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18375
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20223: ;;// porth.porth:2717:27: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20224: ;;// porth.porth:2717:32: OP_INTRINSIC drop
    pop rax
addr_20225: ;;// porth.porth:2718:11: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20226: ;;// porth.porth:2719:11: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_20227: ;;// porth.porth:2719:13: OP_INTRINSIC cast(int)
addr_20228: ;;// porth.porth:2720:11: OP_PUSH_INT 4
    mov rax, 4
    push rax
addr_20229: ;;// porth.porth:2720:25: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20230: ;;// porth.porth:2720:30: OP_CALL 18317
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18317
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20231: ;;// porth.porth:2721:9: OP_ELSE 19
    jmp addr_20250
addr_20232: ;;// porth.porth:2721:14: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_20233: ;;// porth.porth:2721:18: OP_PUSH_INT 7
    mov rax, 7
    push rax
addr_20234: ;;// porth.porth:2721:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_20235: ;;// porth.porth:2721:34: OP_IFSTAR 16
    pop rax
    test rax, rax
    jz addr_20251
addr_20236: ;;// porth.porth:2722:11: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_20237: ;;// porth.porth:2722:13: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_20238: ;;// porth.porth:2722:19: OP_CALL 18441
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18441
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20239: ;;// porth.porth:2724:11: OP_CALL 18375
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18375
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20240: ;;// porth.porth:2724:27: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20241: ;;// porth.porth:2724:32: OP_INTRINSIC drop
    pop rax
addr_20242: ;;// porth.porth:2725:11: OP_CALL 18375
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18375
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20243: ;;// porth.porth:2725:27: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20244: ;;// porth.porth:2725:32: OP_INTRINSIC drop
    pop rax
addr_20245: ;;// porth.porth:2726:11: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20246: ;;// porth.porth:2727:11: OP_INTRINSIC max
    pop rax
    pop rbx
    cmp rbx, rax
    cmovge rax, rbx
    push rax
addr_20247: ;;// porth.porth:2728:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_20248: ;;// porth.porth:2728:24: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20249: ;;// porth.porth:2728:29: OP_CALL 18317
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18317
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20250: ;;// porth.porth:2729:9: OP_ELSE 23
    jmp addr_20273
addr_20251: ;;// porth.porth:2729:14: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_20252: ;;// porth.porth:2729:18: OP_PUSH_INT 5
    mov rax, 5
    push rax
addr_20253: ;;// porth.porth:2729:35: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_20254: ;;// porth.porth:2729:37: OP_IFSTAR 20
    pop rax
    test rax, rax
    jz addr_20274
addr_20255: ;;// porth.porth:2730:11: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_20256: ;;// porth.porth:2730:13: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_20257: ;;// porth.porth:2730:19: OP_CALL 18441
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18441
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20258: ;;// porth.porth:2732:11: OP_CALL 18375
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18375
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20259: ;;// porth.porth:2732:27: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20260: ;;// porth.porth:2732:32: OP_INTRINSIC drop
    pop rax
addr_20261: ;;// porth.porth:2733:11: OP_CALL 18375
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18375
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20262: ;;// porth.porth:2733:27: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20263: ;;// porth.porth:2733:32: OP_INTRINSIC drop
    pop rax
addr_20264: ;;// porth.porth:2734:11: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20265: ;;// porth.porth:2735:11: OP_INTRINSIC divmod
    xor rdx, rdx
    pop rbx
    pop rax
    div rbx
    push rax
    push rdx
addr_20266: ;;// porth.porth:2736:11: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20267: ;;// porth.porth:2737:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_20268: ;;// porth.porth:2737:24: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20269: ;;// porth.porth:2737:29: OP_CALL 18317
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18317
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20270: ;;// porth.porth:2738:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_20271: ;;// porth.porth:2738:24: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20272: ;;// porth.porth:2738:29: OP_CALL 18317
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18317
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20273: ;;// porth.porth:2739:9: OP_ELSE 11
    jmp addr_20284
addr_20274: ;;// porth.porth:2739:14: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_20275: ;;// porth.porth:2739:18: OP_PUSH_INT 22
    mov rax, 22
    push rax
addr_20276: ;;// porth.porth:2739:33: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_20277: ;;// porth.porth:2739:35: OP_IFSTAR 8
    pop rax
    test rax, rax
    jz addr_20285
addr_20278: ;;// porth.porth:2740:11: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_20279: ;;// porth.porth:2740:13: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_20280: ;;// porth.porth:2740:19: OP_CALL 18441
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18441
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20281: ;;// porth.porth:2741:11: OP_CALL 18375
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18375
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20282: ;;// porth.porth:2741:27: OP_INTRINSIC drop
    pop rax
addr_20283: ;;// porth.porth:2741:32: OP_INTRINSIC drop
    pop rax
addr_20284: ;;// porth.porth:2742:9: OP_ELSE 161
    jmp addr_20445
addr_20285: ;;// porth.porth:2743:11: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_20286: ;;// porth.porth:2743:17: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_20287: ;;// porth.porth:2743:27: OP_INLINED 36
addr_20288: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20289: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_20290: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20291: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_20292: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20293: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_20294: ;;// porth.porth:2743:32: OP_INLINED 5367
addr_20295: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_20296: ;;// porth.porth:32:35: OP_INLINED 5195
addr_20297: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_20298: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_20299: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_20300: ;;// porth.porth:24:23: OP_INLINED 36
addr_20301: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20302: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_20303: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20304: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_20305: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20306: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_20307: ;;// porth.porth:24:28: OP_INLINED 753
addr_20308: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_20309: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_20310: ;;// std/std.porth:65:7: OP_INLINED 704
addr_20311: ;;// std/std.porth:58:38: OP_INLINED 684
addr_20312: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_20313: ;;// std/std.porth:56:57: OP_INLINED 36
addr_20314: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20315: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_20316: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20317: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_20318: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20319: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_20320: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_20321: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_20322: ;;// std/std.porth:66:7: OP_INLINED 716
addr_20323: ;;// std/std.porth:59:37: OP_INLINED 694
addr_20324: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_20325: ;;// std/std.porth:57:55: OP_INLINED 36
addr_20326: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20327: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_20328: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20329: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_20330: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20331: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_20332: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_20333: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_20334: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_20335: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_20336: ;;// porth.porth:24:36: OP_INLINED 662
addr_20337: ;;// std/std.porth:48:34: OP_INLINED 394
addr_20338: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_20339: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_20340: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_20341: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_20342: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_20343: ;;// porth.porth:25:36: OP_INLINED 662
addr_20344: ;;// std/std.porth:48:34: OP_INLINED 394
addr_20345: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_20346: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_20347: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_20348: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_20349: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_20350: ;;// porth.porth:26:17: OP_INLINED 36
addr_20351: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20352: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_20353: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20354: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_20355: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20356: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_20357: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_20358: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_20359: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20360: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_20361: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_20362: ;;// porth.porth:27:36: OP_INLINED 662
addr_20363: ;;// std/std.porth:48:34: OP_INLINED 394
addr_20364: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_20365: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_20366: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_20367: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_20368: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_20369: ;;// porth.porth:28:17: OP_INLINED 36
addr_20370: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20371: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_20372: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20373: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_20374: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20375: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_20376: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_20377: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_20378: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20379: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_20380: ;;// porth.porth:2743:40: OP_PUSH_STR 784
    mov rax, 20
    push rax
    lea rax, [str_784]
    push rax
addr_20381: ;;// porth.porth:2743:63: OP_INLINED 676
addr_20382: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_20383: ;;// std/std.porth:50:37: OP_INLINED 662
addr_20384: ;;// std/std.porth:48:34: OP_INLINED 394
addr_20385: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_20386: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_20387: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_20388: ;;// porth.porth:2743:69: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_20389: ;;// porth.porth:2743:75: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_20390: ;;// porth.porth:2743:87: OP_INLINED 36
addr_20391: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20392: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_20393: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20394: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_20395: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20396: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_20397: ;;// porth.porth:2743:92: OP_INLINED 753
addr_20398: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_20399: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_20400: ;;// std/std.porth:65:7: OP_INLINED 704
addr_20401: ;;// std/std.porth:58:38: OP_INLINED 684
addr_20402: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_20403: ;;// std/std.porth:56:57: OP_INLINED 36
addr_20404: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20405: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_20406: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20407: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_20408: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20409: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_20410: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_20411: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_20412: ;;// std/std.porth:66:7: OP_INLINED 716
addr_20413: ;;// std/std.porth:59:37: OP_INLINED 694
addr_20414: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_20415: ;;// std/std.porth:57:55: OP_INLINED 36
addr_20416: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20417: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_20418: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20419: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_20420: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20421: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_20422: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_20423: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_20424: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_20425: ;;// porth.porth:2743:97: OP_INLINED 676
addr_20426: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_20427: ;;// std/std.porth:50:37: OP_INLINED 662
addr_20428: ;;// std/std.porth:48:34: OP_INLINED 394
addr_20429: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_20430: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_20431: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_20432: ;;// porth.porth:2743:103: OP_PUSH_STR 785
    mov rax, 46
    push rax
    lea rax, [str_785]
    push rax
addr_20433: ;;// porth.porth:2743:153: OP_INLINED 676
addr_20434: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_20435: ;;// std/std.porth:50:37: OP_INLINED 662
addr_20436: ;;// std/std.porth:48:34: OP_INLINED 394
addr_20437: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_20438: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_20439: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_20440: ;;// porth.porth:2744:11: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_20441: ;;// porth.porth:2744:13: OP_INLINED 418
addr_20442: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_20443: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_20444: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_20445: ;;// porth.porth:2745:9: OP_END_IF 0
addr_20446: ;;// porth.porth:2746:7: OP_ELSE 69
    jmp addr_20515
addr_20447: ;;// porth.porth:2746:12: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_20448: ;;// porth.porth:2746:18: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_20449: ;;// porth.porth:2746:30: OP_INLINED 36
addr_20450: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20451: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_20452: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20453: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_20454: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20455: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_20456: ;;// porth.porth:2746:35: OP_INLINED 753
addr_20457: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_20458: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_20459: ;;// std/std.porth:65:7: OP_INLINED 704
addr_20460: ;;// std/std.porth:58:38: OP_INLINED 684
addr_20461: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_20462: ;;// std/std.porth:56:57: OP_INLINED 36
addr_20463: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20464: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_20465: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20466: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_20467: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20468: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_20469: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_20470: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_20471: ;;// std/std.porth:66:7: OP_INLINED 716
addr_20472: ;;// std/std.porth:59:37: OP_INLINED 694
addr_20473: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_20474: ;;// std/std.porth:57:55: OP_INLINED 36
addr_20475: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20476: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_20477: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20478: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_20479: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20480: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_20481: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_20482: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_20483: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_20484: ;;// porth.porth:2746:40: OP_CALL 13324
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13324
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20485: ;;// porth.porth:2746:53: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_20486: ;;// porth.porth:2746:57: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_20487: ;;// porth.porth:2746:62: OP_INLINED 52
addr_20488: ;;// std/core.porth:46:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20489: ;;// std/core.porth:46:8: OP_INTRINSIC cast(int)
addr_20490: ;;// std/core.porth:47:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20491: ;;// std/core.porth:47:8: OP_INTRINSIC cast(int)
addr_20492: ;;// std/core.porth:48:3: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_20493: ;;// porth.porth:2746:68: OP_IFSTAR 23
    pop rax
    test rax, rax
    jz addr_20516
addr_20494: ;;// porth.porth:2747:9: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_20495: ;;// porth.porth:2747:13: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_20496: ;;// porth.porth:2747:24: OP_INLINED 36
addr_20497: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20498: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_20499: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20500: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_20501: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20502: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_20503: ;;// porth.porth:2747:29: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_20504: ;;// porth.porth:2748:9: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20505: ;;// porth.porth:2748:14: OP_PUSH_INT 48
    mov rax, 48
    push rax
addr_20506: ;;// porth.porth:2748:26: OP_INLINED 36
addr_20507: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20508: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_20509: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20510: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_20511: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20512: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_20513: ;;// porth.porth:2748:31: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_20514: ;;// porth.porth:2749:9: OP_CALL 18317
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18317
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20515: ;;// porth.porth:2750:7: OP_ELSE 44
    jmp addr_20559
addr_20516: ;;// porth.porth:2750:12: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_20517: ;;// porth.porth:2750:18: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_20518: ;;// porth.porth:2750:30: OP_INLINED 36
addr_20519: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20520: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_20521: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20522: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_20523: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20524: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_20525: ;;// porth.porth:2750:35: OP_INLINED 753
addr_20526: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_20527: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_20528: ;;// std/std.porth:65:7: OP_INLINED 704
addr_20529: ;;// std/std.porth:58:38: OP_INLINED 684
addr_20530: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_20531: ;;// std/std.porth:56:57: OP_INLINED 36
addr_20532: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20533: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_20534: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20535: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_20536: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20537: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_20538: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_20539: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_20540: ;;// std/std.porth:66:7: OP_INLINED 716
addr_20541: ;;// std/std.porth:59:37: OP_INLINED 694
addr_20542: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_20543: ;;// std/std.porth:57:55: OP_INLINED 36
addr_20544: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20545: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_20546: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20547: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_20548: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20549: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_20550: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_20551: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_20552: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_20553: ;;// porth.porth:2750:40: OP_CALL 1796
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1796
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20554: ;;// porth.porth:2750:54: OP_IFSTAR 6
    pop rax
    test rax, rax
    jz addr_20560
addr_20555: ;;// porth.porth:2751:9: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_20556: ;;// porth.porth:2751:22: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20557: ;;// porth.porth:2751:27: OP_CALL 18317
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18317
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20558: ;;// porth.porth:2752:9: OP_INTRINSIC drop
    pop rax
addr_20559: ;;// porth.porth:2753:7: OP_ELSE 163
    jmp addr_20722
addr_20560: ;;// porth.porth:2754:9: OP_INTRINSIC drop
    pop rax
addr_20561: ;;// porth.porth:2755:9: OP_INTRINSIC drop
    pop rax
addr_20562: ;;// porth.porth:2756:9: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_20563: ;;// porth.porth:2756:15: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_20564: ;;// porth.porth:2756:25: OP_INLINED 36
addr_20565: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20566: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_20567: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20568: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_20569: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20570: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_20571: ;;// porth.porth:2756:42: OP_INLINED 5367
addr_20572: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_20573: ;;// porth.porth:32:35: OP_INLINED 5195
addr_20574: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_20575: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_20576: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_20577: ;;// porth.porth:24:23: OP_INLINED 36
addr_20578: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20579: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_20580: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20581: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_20582: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20583: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_20584: ;;// porth.porth:24:28: OP_INLINED 753
addr_20585: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_20586: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_20587: ;;// std/std.porth:65:7: OP_INLINED 704
addr_20588: ;;// std/std.porth:58:38: OP_INLINED 684
addr_20589: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_20590: ;;// std/std.porth:56:57: OP_INLINED 36
addr_20591: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20592: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_20593: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20594: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_20595: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20596: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_20597: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_20598: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_20599: ;;// std/std.porth:66:7: OP_INLINED 716
addr_20600: ;;// std/std.porth:59:37: OP_INLINED 694
addr_20601: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_20602: ;;// std/std.porth:57:55: OP_INLINED 36
addr_20603: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20604: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_20605: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20606: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_20607: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20608: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_20609: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_20610: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_20611: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_20612: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_20613: ;;// porth.porth:24:36: OP_INLINED 662
addr_20614: ;;// std/std.porth:48:34: OP_INLINED 394
addr_20615: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_20616: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_20617: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_20618: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_20619: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_20620: ;;// porth.porth:25:36: OP_INLINED 662
addr_20621: ;;// std/std.porth:48:34: OP_INLINED 394
addr_20622: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_20623: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_20624: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_20625: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_20626: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_20627: ;;// porth.porth:26:17: OP_INLINED 36
addr_20628: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20629: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_20630: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20631: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_20632: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20633: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_20634: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_20635: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_20636: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20637: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_20638: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_20639: ;;// porth.porth:27:36: OP_INLINED 662
addr_20640: ;;// std/std.porth:48:34: OP_INLINED 394
addr_20641: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_20642: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_20643: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_20644: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_20645: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_20646: ;;// porth.porth:28:17: OP_INLINED 36
addr_20647: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20648: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_20649: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20650: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_20651: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20652: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_20653: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_20654: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_20655: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20656: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_20657: ;;// porth.porth:2757:9: OP_PUSH_STR 786
    mov rax, 27
    push rax
    lea rax, [str_786]
    push rax
addr_20658: ;;// porth.porth:2757:42: OP_INLINED 676
addr_20659: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_20660: ;;// std/std.porth:50:37: OP_INLINED 662
addr_20661: ;;// std/std.porth:48:34: OP_INLINED 394
addr_20662: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_20663: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_20664: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_20665: ;;// porth.porth:2758:9: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_20666: ;;// porth.porth:2758:15: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_20667: ;;// porth.porth:2758:27: OP_INLINED 36
addr_20668: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20669: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_20670: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20671: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_20672: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20673: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_20674: ;;// porth.porth:2758:32: OP_INLINED 753
addr_20675: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_20676: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_20677: ;;// std/std.porth:65:7: OP_INLINED 704
addr_20678: ;;// std/std.porth:58:38: OP_INLINED 684
addr_20679: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_20680: ;;// std/std.porth:56:57: OP_INLINED 36
addr_20681: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20682: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_20683: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20684: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_20685: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20686: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_20687: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_20688: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_20689: ;;// std/std.porth:66:7: OP_INLINED 716
addr_20690: ;;// std/std.porth:59:37: OP_INLINED 694
addr_20691: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_20692: ;;// std/std.porth:57:55: OP_INLINED 36
addr_20693: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20694: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_20695: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20696: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_20697: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20698: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_20699: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_20700: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_20701: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_20702: ;;// porth.porth:2758:42: OP_INLINED 676
addr_20703: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_20704: ;;// std/std.porth:50:37: OP_INLINED 662
addr_20705: ;;// std/std.porth:48:34: OP_INLINED 394
addr_20706: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_20707: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_20708: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_20709: ;;// porth.porth:2759:9: OP_PUSH_STR 787
    mov rax, 29
    push rax
    lea rax, [str_787]
    push rax
addr_20710: ;;// porth.porth:2759:42: OP_INLINED 676
addr_20711: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_20712: ;;// std/std.porth:50:37: OP_INLINED 662
addr_20713: ;;// std/std.porth:48:34: OP_INLINED 394
addr_20714: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_20715: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_20716: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_20717: ;;// porth.porth:2760:9: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_20718: ;;// porth.porth:2760:11: OP_INLINED 418
addr_20719: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_20720: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_20721: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_20722: ;;// porth.porth:2761:7: OP_END_IF 0
addr_20723: ;;// porth.porth:2762:7: OP_INTRINSIC drop
    pop rax
addr_20724: ;;// porth.porth:2763:5: OP_ELSE 208
    jmp addr_20932
addr_20725: ;;// porth.porth:2763:10: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_20726: ;;// porth.porth:2763:16: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_20727: ;;// porth.porth:2763:27: OP_INLINED 36
addr_20728: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20729: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_20730: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20731: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_20732: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20733: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_20734: ;;// porth.porth:2763:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_20735: ;;// porth.porth:2763:36: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_20736: ;;// porth.porth:2763:50: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_20737: ;;// porth.porth:2763:52: OP_IFSTAR 196
    pop rax
    test rax, rax
    jz addr_20933
addr_20738: ;;// porth.porth:2765:7: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_20739: ;;// porth.porth:2765:13: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_20740: ;;// porth.porth:2765:25: OP_INLINED 36
addr_20741: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20742: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_20743: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20744: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_20745: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20746: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_20747: ;;// porth.porth:2765:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_20748: ;;// porth.porth:2766:9: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_20749: ;;// porth.porth:2766:13: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_20750: ;;// porth.porth:2766:25: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_20751: ;;// porth.porth:2766:27: OP_IF 5
    pop rax
    test rax, rax
    jz addr_20756
addr_20752: ;;// porth.porth:2767:11: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_20753: ;;// porth.porth:2767:16: OP_PUSH_LOCAL_MEM 80
    mov rax, [ret_stack_rsp]
    add rax, 80
    push rax
addr_20754: ;;// porth.porth:2767:21: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_20755: ;;// porth.porth:2768:9: OP_ELSE 23
    jmp addr_20778
addr_20756: ;;// porth.porth:2768:14: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_20757: ;;// porth.porth:2768:18: OP_PUSH_INT 10
    mov rax, 10
    push rax
addr_20758: ;;// porth.porth:2768:33: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_20759: ;;// porth.porth:2768:35: OP_IFSTAR 20
    pop rax
    test rax, rax
    jz addr_20779
addr_20760: ;;// porth.porth:2769:11: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_20761: ;;// porth.porth:2769:13: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_20762: ;;// porth.porth:2769:19: OP_CALL 18441
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18441
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20763: ;;// porth.porth:2770:11: OP_CALL 18375
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18375
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20764: ;;// porth.porth:2770:27: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20765: ;;// porth.porth:2770:32: OP_INTRINSIC drop
    pop rax
addr_20766: ;;// porth.porth:2771:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_20767: ;;// porth.porth:2771:24: OP_PUSH_GLOBAL_MEM 15372464
    lea rax, [mem+15372464]
    push rax
addr_20768: ;;// porth.porth:2771:29: OP_INLINED 16
addr_20769: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_20770: ;;// porth.porth:2771:34: OP_CALL 18317
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18317
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20771: ;;// porth.porth:2772:11: OP_PUSH_GLOBAL_MEM 15372464
    lea rax, [mem+15372464]
    push rax
addr_20772: ;;// porth.porth:2772:16: OP_INLINED 16
addr_20773: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_20774: ;;// porth.porth:2772:21: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20775: ;;// porth.porth:2772:23: OP_PUSH_GLOBAL_MEM 15372464
    lea rax, [mem+15372464]
    push rax
addr_20776: ;;// porth.porth:2772:28: OP_INLINED 30
addr_20777: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_20778: ;;// porth.porth:2773:9: OP_ELSE 14
    jmp addr_20792
addr_20779: ;;// porth.porth:2773:14: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_20780: ;;// porth.porth:2773:18: OP_PUSH_INT 11
    mov rax, 11
    push rax
addr_20781: ;;// porth.porth:2773:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_20782: ;;// porth.porth:2773:34: OP_IFSTAR 11
    pop rax
    test rax, rax
    jz addr_20793
addr_20783: ;;// porth.porth:2774:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_20784: ;;// porth.porth:2774:24: OP_PUSH_GLOBAL_MEM 15372464
    lea rax, [mem+15372464]
    push rax
addr_20785: ;;// porth.porth:2774:29: OP_INLINED 16
addr_20786: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_20787: ;;// porth.porth:2774:34: OP_CALL 18317
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18317
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20788: ;;// porth.porth:2775:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_20789: ;;// porth.porth:2775:13: OP_PUSH_GLOBAL_MEM 15372464
    lea rax, [mem+15372464]
    push rax
addr_20790: ;;// porth.porth:2775:18: OP_INLINED 30
addr_20791: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_20792: ;;// porth.porth:2776:9: OP_ELSE 12
    jmp addr_20804
addr_20793: ;;// porth.porth:2776:14: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_20794: ;;// porth.porth:2776:18: OP_PUSH_INT 17
    mov rax, 17
    push rax
addr_20795: ;;// porth.porth:2776:34: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_20796: ;;// porth.porth:2776:36: OP_IFSTAR 9
    pop rax
    test rax, rax
    jz addr_20805
addr_20797: ;;// porth.porth:2777:11: OP_PUSH_INT 5
    mov rax, 5
    push rax
addr_20798: ;;// porth.porth:2778:11: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_20799: ;;// porth.porth:2778:17: OP_INLINED 0
addr_20800: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_20801: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_20802: ;;// porth.porth:2778:22: OP_CALL 19270
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_19270
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20803: ;;// porth.porth:2779:11: OP_CALL 18317
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18317
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20804: ;;// porth.porth:2780:9: OP_ELSE 126
    jmp addr_20930
addr_20805: ;;// porth.porth:2781:11: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_20806: ;;// porth.porth:2781:17: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_20807: ;;// porth.porth:2781:27: OP_INLINED 36
addr_20808: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20809: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_20810: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20811: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_20812: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20813: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_20814: ;;// porth.porth:2781:44: OP_INLINED 5367
addr_20815: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_20816: ;;// porth.porth:32:35: OP_INLINED 5195
addr_20817: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_20818: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_20819: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_20820: ;;// porth.porth:24:23: OP_INLINED 36
addr_20821: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20822: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_20823: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20824: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_20825: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20826: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_20827: ;;// porth.porth:24:28: OP_INLINED 753
addr_20828: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_20829: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_20830: ;;// std/std.porth:65:7: OP_INLINED 704
addr_20831: ;;// std/std.porth:58:38: OP_INLINED 684
addr_20832: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_20833: ;;// std/std.porth:56:57: OP_INLINED 36
addr_20834: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20835: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_20836: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20837: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_20838: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20839: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_20840: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_20841: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_20842: ;;// std/std.porth:66:7: OP_INLINED 716
addr_20843: ;;// std/std.porth:59:37: OP_INLINED 694
addr_20844: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_20845: ;;// std/std.porth:57:55: OP_INLINED 36
addr_20846: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20847: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_20848: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20849: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_20850: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20851: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_20852: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_20853: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_20854: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_20855: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_20856: ;;// porth.porth:24:36: OP_INLINED 662
addr_20857: ;;// std/std.porth:48:34: OP_INLINED 394
addr_20858: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_20859: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_20860: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_20861: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_20862: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_20863: ;;// porth.porth:25:36: OP_INLINED 662
addr_20864: ;;// std/std.porth:48:34: OP_INLINED 394
addr_20865: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_20866: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_20867: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_20868: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_20869: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_20870: ;;// porth.porth:26:17: OP_INLINED 36
addr_20871: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20872: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_20873: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20874: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_20875: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20876: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_20877: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_20878: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_20879: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20880: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_20881: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_20882: ;;// porth.porth:27:36: OP_INLINED 662
addr_20883: ;;// std/std.porth:48:34: OP_INLINED 394
addr_20884: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_20885: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_20886: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_20887: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_20888: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_20889: ;;// porth.porth:28:17: OP_INLINED 36
addr_20890: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20891: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_20892: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20893: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_20894: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20895: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_20896: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_20897: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_20898: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20899: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_20900: ;;// porth.porth:2782:11: OP_PUSH_STR 788
    mov rax, 30
    push rax
    lea rax, [str_788]
    push rax
addr_20901: ;;// porth.porth:2782:44: OP_INLINED 676
addr_20902: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_20903: ;;// std/std.porth:50:37: OP_INLINED 662
addr_20904: ;;// std/std.porth:48:34: OP_INLINED 394
addr_20905: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_20906: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_20907: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_20908: ;;// porth.porth:2783:11: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_20909: ;;// porth.porth:2783:15: OP_CALL 6274
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_6274
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_20910: ;;// porth.porth:2783:44: OP_INLINED 676
addr_20911: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_20912: ;;// std/std.porth:50:37: OP_INLINED 662
addr_20913: ;;// std/std.porth:48:34: OP_INLINED 394
addr_20914: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_20915: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_20916: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_20917: ;;// porth.porth:2784:11: OP_PUSH_STR 789
    mov rax, 29
    push rax
    lea rax, [str_789]
    push rax
addr_20918: ;;// porth.porth:2784:44: OP_INLINED 676
addr_20919: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_20920: ;;// std/std.porth:50:37: OP_INLINED 662
addr_20921: ;;// std/std.porth:48:34: OP_INLINED 394
addr_20922: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_20923: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_20924: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_20925: ;;// porth.porth:2785:11: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_20926: ;;// porth.porth:2785:13: OP_INLINED 418
addr_20927: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_20928: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_20929: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_20930: ;;// porth.porth:2786:9: OP_END_IF 0
addr_20931: ;;// porth.porth:2787:7: OP_INTRINSIC drop
    pop rax
addr_20932: ;;// porth.porth:2788:5: OP_ELSE 136
    jmp addr_21068
addr_20933: ;;// porth.porth:2789:7: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_20934: ;;// porth.porth:2789:13: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_20935: ;;// porth.porth:2789:23: OP_INLINED 36
addr_20936: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20937: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_20938: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20939: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_20940: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20941: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_20942: ;;// porth.porth:2789:63: OP_INLINED 5367
addr_20943: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_20944: ;;// porth.porth:32:35: OP_INLINED 5195
addr_20945: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_20946: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_20947: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_20948: ;;// porth.porth:24:23: OP_INLINED 36
addr_20949: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20950: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_20951: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20952: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_20953: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20954: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_20955: ;;// porth.porth:24:28: OP_INLINED 753
addr_20956: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_20957: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_20958: ;;// std/std.porth:65:7: OP_INLINED 704
addr_20959: ;;// std/std.porth:58:38: OP_INLINED 684
addr_20960: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_20961: ;;// std/std.porth:56:57: OP_INLINED 36
addr_20962: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20963: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_20964: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20965: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_20966: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20967: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_20968: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_20969: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_20970: ;;// std/std.porth:66:7: OP_INLINED 716
addr_20971: ;;// std/std.porth:59:37: OP_INLINED 694
addr_20972: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_20973: ;;// std/std.porth:57:55: OP_INLINED 36
addr_20974: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20975: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_20976: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_20977: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_20978: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_20979: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_20980: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_20981: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_20982: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_20983: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_20984: ;;// porth.porth:24:36: OP_INLINED 662
addr_20985: ;;// std/std.porth:48:34: OP_INLINED 394
addr_20986: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_20987: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_20988: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_20989: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_20990: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_20991: ;;// porth.porth:25:36: OP_INLINED 662
addr_20992: ;;// std/std.porth:48:34: OP_INLINED 394
addr_20993: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_20994: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_20995: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_20996: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_20997: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_20998: ;;// porth.porth:26:17: OP_INLINED 36
addr_20999: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21000: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21001: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21002: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21003: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21004: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21005: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_21006: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_21007: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_21008: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_21009: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_21010: ;;// porth.porth:27:36: OP_INLINED 662
addr_21011: ;;// std/std.porth:48:34: OP_INLINED 394
addr_21012: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21013: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_21014: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_21015: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21016: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_21017: ;;// porth.porth:28:17: OP_INLINED 36
addr_21018: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21019: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21020: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21021: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21022: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21023: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21024: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_21025: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_21026: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_21027: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_21028: ;;// porth.porth:2790:7: OP_PUSH_STR 790
    mov rax, 9
    push rax
    lea rax, [str_790]
    push rax
addr_21029: ;;// porth.porth:2790:63: OP_INLINED 676
addr_21030: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_21031: ;;// std/std.porth:50:37: OP_INLINED 662
addr_21032: ;;// std/std.porth:48:34: OP_INLINED 394
addr_21033: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21034: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_21035: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_21036: ;;// porth.porth:2791:7: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_21037: ;;// porth.porth:2791:13: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_21038: ;;// porth.porth:2791:24: OP_INLINED 36
addr_21039: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21040: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21041: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21042: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21043: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21044: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21045: ;;// porth.porth:2791:29: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_21046: ;;// porth.porth:2791:33: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21047: ;;// porth.porth:2791:46: OP_CALL 10127
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_10127
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_21048: ;;// porth.porth:2791:63: OP_INLINED 676
addr_21049: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_21050: ;;// std/std.porth:50:37: OP_INLINED 662
addr_21051: ;;// std/std.porth:48:34: OP_INLINED 394
addr_21052: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21053: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_21054: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_21055: ;;// porth.porth:2792:7: OP_PUSH_STR 791
    mov rax, 46
    push rax
    lea rax, [str_791]
    push rax
addr_21056: ;;// porth.porth:2792:63: OP_INLINED 676
addr_21057: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_21058: ;;// std/std.porth:50:37: OP_INLINED 662
addr_21059: ;;// std/std.porth:48:34: OP_INLINED 394
addr_21060: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21061: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_21062: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_21063: ;;// porth.porth:2793:7: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21064: ;;// porth.porth:2793:9: OP_INLINED 418
addr_21065: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_21066: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_21067: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_21068: ;;// porth.porth:2794:5: OP_END_IF 0
addr_21069: ;;// porth.porth:2795:3: OP_END_WHILE 1136
    jmp addr_19933
addr_21070: ;;// porth.porth:2797:3: OP_PUSH_LOCAL_MEM 80
    mov rax, [ret_stack_rsp]
    add rax, 80
    push rax
addr_21071: ;;// porth.porth:2797:8: OP_INLINED 12
addr_21072: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_21073: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_21074: ;;// porth.porth:2797:14: OP_IF 117
    pop rax
    test rax, rax
    jz addr_21191
addr_21075: ;;// porth.porth:2798:5: OP_PUSH_GLOBAL_MEM 15356072
    lea rax, [mem+15356072]
    push rax
addr_21076: ;;// porth.porth:2798:23: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_21077: ;;// porth.porth:2798:27: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21078: ;;// porth.porth:2798:29: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_21079: ;;// porth.porth:2798:32: OP_IF 109
    pop rax
    test rax, rax
    jz addr_21188
addr_21080: ;;// porth.porth:2799:7: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_21081: ;;// porth.porth:2799:13: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_21082: ;;// porth.porth:2799:23: OP_INLINED 36
addr_21083: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21084: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21085: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21086: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21087: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21088: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21089: ;;// porth.porth:2799:28: OP_INLINED 5367
addr_21090: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_21091: ;;// porth.porth:32:35: OP_INLINED 5195
addr_21092: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_21093: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21094: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_21095: ;;// porth.porth:24:23: OP_INLINED 36
addr_21096: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21097: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21098: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21099: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21100: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21101: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21102: ;;// porth.porth:24:28: OP_INLINED 753
addr_21103: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_21104: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21105: ;;// std/std.porth:65:7: OP_INLINED 704
addr_21106: ;;// std/std.porth:58:38: OP_INLINED 684
addr_21107: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_21108: ;;// std/std.porth:56:57: OP_INLINED 36
addr_21109: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21110: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21111: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21112: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21113: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21114: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21115: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_21116: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21117: ;;// std/std.porth:66:7: OP_INLINED 716
addr_21118: ;;// std/std.porth:59:37: OP_INLINED 694
addr_21119: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_21120: ;;// std/std.porth:57:55: OP_INLINED 36
addr_21121: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21122: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21123: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21124: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21125: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21126: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21127: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_21128: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_21129: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_21130: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_21131: ;;// porth.porth:24:36: OP_INLINED 662
addr_21132: ;;// std/std.porth:48:34: OP_INLINED 394
addr_21133: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21134: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_21135: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_21136: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_21137: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_21138: ;;// porth.porth:25:36: OP_INLINED 662
addr_21139: ;;// std/std.porth:48:34: OP_INLINED 394
addr_21140: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21141: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_21142: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_21143: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21144: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_21145: ;;// porth.porth:26:17: OP_INLINED 36
addr_21146: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21147: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21148: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21149: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21150: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21151: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21152: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_21153: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_21154: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_21155: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_21156: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_21157: ;;// porth.porth:27:36: OP_INLINED 662
addr_21158: ;;// std/std.porth:48:34: OP_INLINED 394
addr_21159: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21160: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_21161: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_21162: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21163: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_21164: ;;// porth.porth:28:17: OP_INLINED 36
addr_21165: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21166: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21167: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21168: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21169: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21170: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21171: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_21172: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_21173: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_21174: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_21175: ;;// porth.porth:2800:7: OP_PUSH_STR 792
    mov rax, 85
    push rax
    lea rax, [str_792]
    push rax
addr_21176: ;;// porth.porth:2800:96: OP_INLINED 676
addr_21177: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_21178: ;;// std/std.porth:50:37: OP_INLINED 662
addr_21179: ;;// std/std.porth:48:34: OP_INLINED 394
addr_21180: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21181: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_21182: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_21183: ;;// porth.porth:2801:7: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21184: ;;// porth.porth:2801:9: OP_INLINED 418
addr_21185: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_21186: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_21187: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_21188: ;;// porth.porth:2802:5: OP_END_IF 0
addr_21189: ;;// porth.porth:2804:5: OP_CALL 18375
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18375
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_21190: ;;// porth.porth:2805:3: OP_ELSE 24
    jmp addr_21214
addr_21191: ;;// porth.porth:2806:5: OP_PUSH_STR 793
    mov rax, 18
    push rax
    lea rax, [str_793]
    push rax
addr_21192: ;;// porth.porth:2806:10: OP_INLINED 676
addr_21193: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_21194: ;;// std/std.porth:50:37: OP_INLINED 662
addr_21195: ;;// std/std.porth:48:34: OP_INLINED 394
addr_21196: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21197: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_21198: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_21199: ;;// porth.porth:2806:16: OP_PUSH_STR 794
    mov rax, 49
    push rax
    lea rax, [str_794]
    push rax
addr_21200: ;;// porth.porth:2806:69: OP_INLINED 676
addr_21201: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_21202: ;;// std/std.porth:50:37: OP_INLINED 662
addr_21203: ;;// std/std.porth:48:34: OP_INLINED 394
addr_21204: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21205: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_21206: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_21207: ;;// porth.porth:2807:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21208: ;;// porth.porth:2807:7: OP_INLINED 418
addr_21209: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_21210: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_21211: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_21212: ;;// porth.porth:2808:5: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_21213: ;;// porth.porth:2808:7: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_21214: ;;// porth.porth:2809:3: OP_END_IF 0
addr_21215: ;;// porth.porth:2810:1: OP_RET 88
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 88
    ret
addr_21216: ;;// porth.porth:2812:6: OP_PREP_PROC 48
    sub rsp, 48
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_21217: ;;// porth.porth:2817:3: OP_PUSH_INT 32
    mov rax, 32
    push rax
addr_21218: ;;// porth.porth:2817:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21219: ;;// porth.porth:2817:20: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_21220: ;;// porth.porth:2817:24: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_21221: ;;// porth.porth:2817:31: OP_INTRINSIC drop
    pop rax
addr_21222: ;;// porth.porth:2819:3: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_21223: ;;// porth.porth:2819:8: OP_INLINED 782
addr_21224: ;;// std/std.porth:71:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_21225: ;;// std/std.porth:72:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21226: ;;// std/std.porth:72:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_21227: ;;// std/std.porth:72:9: OP_INLINED 729
addr_21228: ;;// std/std.porth:60:35: OP_INLINED 684
addr_21229: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_21230: ;;// std/std.porth:56:57: OP_INLINED 36
addr_21231: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21232: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21233: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21234: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21235: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21236: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21237: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_21238: ;;// std/std.porth:73:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_21239: ;;// std/std.porth:73:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_21240: ;;// std/std.porth:73:9: OP_INLINED 741
addr_21241: ;;// std/std.porth:61:34: OP_INLINED 694
addr_21242: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_21243: ;;// std/std.porth:57:55: OP_INLINED 36
addr_21244: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21245: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21246: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21247: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21248: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21249: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21250: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_21251: ;;// std/std.porth:74:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_21252: ;;// porth.porth:2821:3: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_21253: ;;// porth.porth:2821:8: OP_INLINED 753
addr_21254: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_21255: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21256: ;;// std/std.porth:65:7: OP_INLINED 704
addr_21257: ;;// std/std.porth:58:38: OP_INLINED 684
addr_21258: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_21259: ;;// std/std.porth:56:57: OP_INLINED 36
addr_21260: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21261: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21262: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21263: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21264: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21265: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21266: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_21267: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21268: ;;// std/std.porth:66:7: OP_INLINED 716
addr_21269: ;;// std/std.porth:59:37: OP_INLINED 694
addr_21270: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_21271: ;;// std/std.porth:57:55: OP_INLINED 36
addr_21272: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21273: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21274: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21275: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21276: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21277: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21278: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_21279: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_21280: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_21281: ;;// porth.porth:2821:13: OP_CALL 10987
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_10987
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_21282: ;;// porth.porth:2821:31: OP_IF 145
    pop rax
    test rax, rax
    jz addr_21427
addr_21283: ;;// porth.porth:2822:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_21284: ;;// porth.porth:2822:52: OP_INLINED 5367
addr_21285: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_21286: ;;// porth.porth:32:35: OP_INLINED 5195
addr_21287: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_21288: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21289: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_21290: ;;// porth.porth:24:23: OP_INLINED 36
addr_21291: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21292: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21293: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21294: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21295: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21296: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21297: ;;// porth.porth:24:28: OP_INLINED 753
addr_21298: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_21299: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21300: ;;// std/std.porth:65:7: OP_INLINED 704
addr_21301: ;;// std/std.porth:58:38: OP_INLINED 684
addr_21302: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_21303: ;;// std/std.porth:56:57: OP_INLINED 36
addr_21304: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21305: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21306: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21307: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21308: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21309: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21310: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_21311: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21312: ;;// std/std.porth:66:7: OP_INLINED 716
addr_21313: ;;// std/std.porth:59:37: OP_INLINED 694
addr_21314: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_21315: ;;// std/std.porth:57:55: OP_INLINED 36
addr_21316: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21317: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21318: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21319: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21320: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21321: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21322: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_21323: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_21324: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_21325: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_21326: ;;// porth.porth:24:36: OP_INLINED 662
addr_21327: ;;// std/std.porth:48:34: OP_INLINED 394
addr_21328: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21329: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_21330: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_21331: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_21332: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_21333: ;;// porth.porth:25:36: OP_INLINED 662
addr_21334: ;;// std/std.porth:48:34: OP_INLINED 394
addr_21335: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21336: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_21337: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_21338: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21339: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_21340: ;;// porth.porth:26:17: OP_INLINED 36
addr_21341: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21342: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21343: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21344: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21345: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21346: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21347: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_21348: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_21349: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_21350: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_21351: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_21352: ;;// porth.porth:27:36: OP_INLINED 662
addr_21353: ;;// std/std.porth:48:34: OP_INLINED 394
addr_21354: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21355: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_21356: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_21357: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21358: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_21359: ;;// porth.porth:28:17: OP_INLINED 36
addr_21360: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21361: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21362: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21363: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21364: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21365: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21366: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_21367: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_21368: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_21369: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_21370: ;;// porth.porth:2823:5: OP_PUSH_STR 795
    mov rax, 44
    push rax
    lea rax, [str_795]
    push rax
addr_21371: ;;// porth.porth:2823:52: OP_INLINED 676
addr_21372: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_21373: ;;// std/std.porth:50:37: OP_INLINED 662
addr_21374: ;;// std/std.porth:48:34: OP_INLINED 394
addr_21375: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21376: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_21377: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_21378: ;;// porth.porth:2824:5: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_21379: ;;// porth.porth:2824:10: OP_INLINED 753
addr_21380: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_21381: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21382: ;;// std/std.porth:65:7: OP_INLINED 704
addr_21383: ;;// std/std.porth:58:38: OP_INLINED 684
addr_21384: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_21385: ;;// std/std.porth:56:57: OP_INLINED 36
addr_21386: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21387: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21388: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21389: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21390: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21391: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21392: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_21393: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21394: ;;// std/std.porth:66:7: OP_INLINED 716
addr_21395: ;;// std/std.porth:59:37: OP_INLINED 694
addr_21396: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_21397: ;;// std/std.porth:57:55: OP_INLINED 36
addr_21398: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21399: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21400: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21401: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21402: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21403: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21404: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_21405: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_21406: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_21407: ;;// porth.porth:2824:52: OP_INLINED 676
addr_21408: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_21409: ;;// std/std.porth:50:37: OP_INLINED 662
addr_21410: ;;// std/std.porth:48:34: OP_INLINED 394
addr_21411: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21412: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_21413: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_21414: ;;// porth.porth:2825:5: OP_PUSH_STR 796
    mov rax, 2
    push rax
    lea rax, [str_796]
    push rax
addr_21415: ;;// porth.porth:2825:52: OP_INLINED 676
addr_21416: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_21417: ;;// std/std.porth:50:37: OP_INLINED 662
addr_21418: ;;// std/std.porth:48:34: OP_INLINED 394
addr_21419: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21420: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_21421: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_21422: ;;// porth.porth:2826:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21423: ;;// porth.porth:2826:7: OP_INLINED 418
addr_21424: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_21425: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_21426: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_21427: ;;// porth.porth:2827:3: OP_END_IF 0
addr_21428: ;;// porth.porth:2827:7: OP_INTRINSIC drop
    pop rax
addr_21429: ;;// porth.porth:2829:3: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_21430: ;;// porth.porth:2829:8: OP_INLINED 753
addr_21431: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_21432: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21433: ;;// std/std.porth:65:7: OP_INLINED 704
addr_21434: ;;// std/std.porth:58:38: OP_INLINED 684
addr_21435: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_21436: ;;// std/std.porth:56:57: OP_INLINED 36
addr_21437: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21438: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21439: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21440: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21441: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21442: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21443: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_21444: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21445: ;;// std/std.porth:66:7: OP_INLINED 716
addr_21446: ;;// std/std.porth:59:37: OP_INLINED 694
addr_21447: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_21448: ;;// std/std.porth:57:55: OP_INLINED 36
addr_21449: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21450: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21451: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21452: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21453: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21454: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21455: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_21456: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_21457: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_21458: ;;// porth.porth:2829:13: OP_CALL 13324
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13324
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_21459: ;;// porth.porth:2829:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_21460: ;;// porth.porth:2829:30: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_21461: ;;// porth.porth:2829:35: OP_INLINED 52
addr_21462: ;;// std/core.porth:46:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21463: ;;// std/core.porth:46:8: OP_INTRINSIC cast(int)
addr_21464: ;;// std/core.porth:47:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21465: ;;// std/core.porth:47:8: OP_INTRINSIC cast(int)
addr_21466: ;;// std/core.porth:48:3: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_21467: ;;// porth.porth:2829:41: OP_IF 248
    pop rax
    test rax, rax
    jz addr_21715
addr_21468: ;;// porth.porth:2830:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_21469: ;;// porth.porth:2830:9: OP_INLINED 5367
addr_21470: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_21471: ;;// porth.porth:32:35: OP_INLINED 5195
addr_21472: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_21473: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21474: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_21475: ;;// porth.porth:24:23: OP_INLINED 36
addr_21476: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21477: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21478: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21479: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21480: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21481: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21482: ;;// porth.porth:24:28: OP_INLINED 753
addr_21483: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_21484: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21485: ;;// std/std.porth:65:7: OP_INLINED 704
addr_21486: ;;// std/std.porth:58:38: OP_INLINED 684
addr_21487: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_21488: ;;// std/std.porth:56:57: OP_INLINED 36
addr_21489: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21490: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21491: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21492: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21493: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21494: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21495: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_21496: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21497: ;;// std/std.porth:66:7: OP_INLINED 716
addr_21498: ;;// std/std.porth:59:37: OP_INLINED 694
addr_21499: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_21500: ;;// std/std.porth:57:55: OP_INLINED 36
addr_21501: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21502: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21503: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21504: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21505: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21506: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21507: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_21508: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_21509: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_21510: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_21511: ;;// porth.porth:24:36: OP_INLINED 662
addr_21512: ;;// std/std.porth:48:34: OP_INLINED 394
addr_21513: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21514: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_21515: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_21516: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_21517: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_21518: ;;// porth.porth:25:36: OP_INLINED 662
addr_21519: ;;// std/std.porth:48:34: OP_INLINED 394
addr_21520: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21521: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_21522: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_21523: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21524: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_21525: ;;// porth.porth:26:17: OP_INLINED 36
addr_21526: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21527: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21528: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21529: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21530: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21531: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21532: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_21533: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_21534: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_21535: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_21536: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_21537: ;;// porth.porth:27:36: OP_INLINED 662
addr_21538: ;;// std/std.porth:48:34: OP_INLINED 394
addr_21539: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21540: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_21541: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_21542: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21543: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_21544: ;;// porth.porth:28:17: OP_INLINED 36
addr_21545: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21546: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21547: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21548: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21549: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21550: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21551: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_21552: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_21553: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_21554: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_21555: ;;// porth.porth:2830:17: OP_PUSH_STR 797
    mov rax, 37
    push rax
    lea rax, [str_797]
    push rax
addr_21556: ;;// porth.porth:2830:57: OP_INLINED 676
addr_21557: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_21558: ;;// std/std.porth:50:37: OP_INLINED 662
addr_21559: ;;// std/std.porth:48:34: OP_INLINED 394
addr_21560: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21561: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_21562: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_21563: ;;// porth.porth:2830:63: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_21564: ;;// porth.porth:2830:68: OP_INLINED 753
addr_21565: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_21566: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21567: ;;// std/std.porth:65:7: OP_INLINED 704
addr_21568: ;;// std/std.porth:58:38: OP_INLINED 684
addr_21569: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_21570: ;;// std/std.porth:56:57: OP_INLINED 36
addr_21571: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21572: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21573: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21574: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21575: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21576: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21577: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_21578: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21579: ;;// std/std.porth:66:7: OP_INLINED 716
addr_21580: ;;// std/std.porth:59:37: OP_INLINED 694
addr_21581: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_21582: ;;// std/std.porth:57:55: OP_INLINED 36
addr_21583: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21584: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21585: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21586: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21587: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21588: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21589: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_21590: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_21591: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_21592: ;;// porth.porth:2830:73: OP_INLINED 676
addr_21593: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_21594: ;;// std/std.porth:50:37: OP_INLINED 662
addr_21595: ;;// std/std.porth:48:34: OP_INLINED 394
addr_21596: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21597: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_21598: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_21599: ;;// porth.porth:2830:79: OP_PUSH_STR 798
    mov rax, 2
    push rax
    lea rax, [str_798]
    push rax
addr_21600: ;;// porth.porth:2830:85: OP_INLINED 676
addr_21601: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_21602: ;;// std/std.porth:50:37: OP_INLINED 662
addr_21603: ;;// std/std.porth:48:34: OP_INLINED 394
addr_21604: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21605: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_21606: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_21607: ;;// porth.porth:2831:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_21608: ;;// porth.porth:2831:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_21609: ;;// porth.porth:2831:19: OP_INLINED 36
addr_21610: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21611: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21612: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21613: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21614: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21615: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21616: ;;// porth.porth:2831:24: OP_INLINED 5367
addr_21617: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_21618: ;;// porth.porth:32:35: OP_INLINED 5195
addr_21619: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_21620: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21621: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_21622: ;;// porth.porth:24:23: OP_INLINED 36
addr_21623: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21624: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21625: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21626: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21627: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21628: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21629: ;;// porth.porth:24:28: OP_INLINED 753
addr_21630: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_21631: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21632: ;;// std/std.porth:65:7: OP_INLINED 704
addr_21633: ;;// std/std.porth:58:38: OP_INLINED 684
addr_21634: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_21635: ;;// std/std.porth:56:57: OP_INLINED 36
addr_21636: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21637: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21638: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21639: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21640: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21641: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21642: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_21643: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21644: ;;// std/std.porth:66:7: OP_INLINED 716
addr_21645: ;;// std/std.porth:59:37: OP_INLINED 694
addr_21646: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_21647: ;;// std/std.porth:57:55: OP_INLINED 36
addr_21648: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21649: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21650: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21651: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21652: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21653: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21654: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_21655: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_21656: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_21657: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_21658: ;;// porth.porth:24:36: OP_INLINED 662
addr_21659: ;;// std/std.porth:48:34: OP_INLINED 394
addr_21660: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21661: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_21662: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_21663: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_21664: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_21665: ;;// porth.porth:25:36: OP_INLINED 662
addr_21666: ;;// std/std.porth:48:34: OP_INLINED 394
addr_21667: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21668: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_21669: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_21670: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21671: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_21672: ;;// porth.porth:26:17: OP_INLINED 36
addr_21673: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21674: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21675: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21676: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21677: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21678: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21679: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_21680: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_21681: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_21682: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_21683: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_21684: ;;// porth.porth:27:36: OP_INLINED 662
addr_21685: ;;// std/std.porth:48:34: OP_INLINED 394
addr_21686: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21687: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_21688: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_21689: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21690: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_21691: ;;// porth.porth:28:17: OP_INLINED 36
addr_21692: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21693: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21694: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21695: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21696: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21697: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21698: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_21699: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_21700: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_21701: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_21702: ;;// porth.porth:2831:32: OP_PUSH_STR 799
    mov rax, 48
    push rax
    lea rax, [str_799]
    push rax
addr_21703: ;;// porth.porth:2831:84: OP_INLINED 676
addr_21704: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_21705: ;;// std/std.porth:50:37: OP_INLINED 662
addr_21706: ;;// std/std.porth:48:34: OP_INLINED 394
addr_21707: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21708: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_21709: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_21710: ;;// porth.porth:2832:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21711: ;;// porth.porth:2832:7: OP_INLINED 418
addr_21712: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_21713: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_21714: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_21715: ;;// porth.porth:2833:3: OP_END_IF 0
addr_21716: ;;// porth.porth:2833:7: OP_INTRINSIC drop
    pop rax
addr_21717: ;;// porth.porth:2835:3: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_21718: ;;// porth.porth:2835:8: OP_INLINED 753
addr_21719: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_21720: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21721: ;;// std/std.porth:65:7: OP_INLINED 704
addr_21722: ;;// std/std.porth:58:38: OP_INLINED 684
addr_21723: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_21724: ;;// std/std.porth:56:57: OP_INLINED 36
addr_21725: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21726: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21727: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21728: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21729: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21730: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21731: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_21732: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21733: ;;// std/std.porth:66:7: OP_INLINED 716
addr_21734: ;;// std/std.porth:59:37: OP_INLINED 694
addr_21735: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_21736: ;;// std/std.porth:57:55: OP_INLINED 36
addr_21737: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21738: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21739: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21740: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21741: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21742: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21743: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_21744: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_21745: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_21746: ;;// porth.porth:2835:13: OP_CALL 14004
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_14004
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_21747: ;;// porth.porth:2835:33: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_21748: ;;// porth.porth:2835:37: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_21749: ;;// porth.porth:2835:42: OP_INLINED 52
addr_21750: ;;// std/core.porth:46:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21751: ;;// std/core.porth:46:8: OP_INTRINSIC cast(int)
addr_21752: ;;// std/core.porth:47:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21753: ;;// std/core.porth:47:8: OP_INTRINSIC cast(int)
addr_21754: ;;// std/core.porth:48:3: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_21755: ;;// porth.porth:2835:48: OP_IF 248
    pop rax
    test rax, rax
    jz addr_22003
addr_21756: ;;// porth.porth:2836:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_21757: ;;// porth.porth:2836:9: OP_INLINED 5367
addr_21758: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_21759: ;;// porth.porth:32:35: OP_INLINED 5195
addr_21760: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_21761: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21762: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_21763: ;;// porth.porth:24:23: OP_INLINED 36
addr_21764: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21765: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21766: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21767: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21768: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21769: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21770: ;;// porth.porth:24:28: OP_INLINED 753
addr_21771: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_21772: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21773: ;;// std/std.porth:65:7: OP_INLINED 704
addr_21774: ;;// std/std.porth:58:38: OP_INLINED 684
addr_21775: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_21776: ;;// std/std.porth:56:57: OP_INLINED 36
addr_21777: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21778: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21779: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21780: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21781: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21782: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21783: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_21784: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21785: ;;// std/std.porth:66:7: OP_INLINED 716
addr_21786: ;;// std/std.porth:59:37: OP_INLINED 694
addr_21787: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_21788: ;;// std/std.porth:57:55: OP_INLINED 36
addr_21789: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21790: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21791: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21792: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21793: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21794: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21795: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_21796: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_21797: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_21798: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_21799: ;;// porth.porth:24:36: OP_INLINED 662
addr_21800: ;;// std/std.porth:48:34: OP_INLINED 394
addr_21801: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21802: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_21803: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_21804: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_21805: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_21806: ;;// porth.porth:25:36: OP_INLINED 662
addr_21807: ;;// std/std.porth:48:34: OP_INLINED 394
addr_21808: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21809: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_21810: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_21811: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21812: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_21813: ;;// porth.porth:26:17: OP_INLINED 36
addr_21814: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21815: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21816: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21817: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21818: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21819: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21820: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_21821: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_21822: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_21823: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_21824: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_21825: ;;// porth.porth:27:36: OP_INLINED 662
addr_21826: ;;// std/std.porth:48:34: OP_INLINED 394
addr_21827: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21828: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_21829: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_21830: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21831: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_21832: ;;// porth.porth:28:17: OP_INLINED 36
addr_21833: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21834: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21835: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21836: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21837: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21838: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21839: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_21840: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_21841: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_21842: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_21843: ;;// porth.porth:2836:17: OP_PUSH_STR 800
    mov rax, 38
    push rax
    lea rax, [str_800]
    push rax
addr_21844: ;;// porth.porth:2836:58: OP_INLINED 676
addr_21845: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_21846: ;;// std/std.porth:50:37: OP_INLINED 662
addr_21847: ;;// std/std.porth:48:34: OP_INLINED 394
addr_21848: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21849: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_21850: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_21851: ;;// porth.porth:2836:64: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_21852: ;;// porth.porth:2836:69: OP_INLINED 753
addr_21853: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_21854: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21855: ;;// std/std.porth:65:7: OP_INLINED 704
addr_21856: ;;// std/std.porth:58:38: OP_INLINED 684
addr_21857: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_21858: ;;// std/std.porth:56:57: OP_INLINED 36
addr_21859: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21860: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21861: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21862: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21863: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21864: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21865: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_21866: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21867: ;;// std/std.porth:66:7: OP_INLINED 716
addr_21868: ;;// std/std.porth:59:37: OP_INLINED 694
addr_21869: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_21870: ;;// std/std.porth:57:55: OP_INLINED 36
addr_21871: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21872: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21873: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21874: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21875: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21876: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21877: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_21878: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_21879: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_21880: ;;// porth.porth:2836:74: OP_INLINED 676
addr_21881: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_21882: ;;// std/std.porth:50:37: OP_INLINED 662
addr_21883: ;;// std/std.porth:48:34: OP_INLINED 394
addr_21884: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21885: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_21886: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_21887: ;;// porth.porth:2836:80: OP_PUSH_STR 801
    mov rax, 2
    push rax
    lea rax, [str_801]
    push rax
addr_21888: ;;// porth.porth:2836:86: OP_INLINED 676
addr_21889: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_21890: ;;// std/std.porth:50:37: OP_INLINED 662
addr_21891: ;;// std/std.porth:48:34: OP_INLINED 394
addr_21892: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21893: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_21894: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_21895: ;;// porth.porth:2837:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_21896: ;;// porth.porth:2837:9: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_21897: ;;// porth.porth:2837:18: OP_INLINED 36
addr_21898: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21899: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21900: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21901: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21902: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21903: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21904: ;;// porth.porth:2837:23: OP_INLINED 5367
addr_21905: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_21906: ;;// porth.porth:32:35: OP_INLINED 5195
addr_21907: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_21908: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21909: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_21910: ;;// porth.porth:24:23: OP_INLINED 36
addr_21911: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21912: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21913: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21914: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21915: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21916: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21917: ;;// porth.porth:24:28: OP_INLINED 753
addr_21918: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_21919: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21920: ;;// std/std.porth:65:7: OP_INLINED 704
addr_21921: ;;// std/std.porth:58:38: OP_INLINED 684
addr_21922: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_21923: ;;// std/std.porth:56:57: OP_INLINED 36
addr_21924: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21925: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21926: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21927: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21928: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21929: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21930: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_21931: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21932: ;;// std/std.porth:66:7: OP_INLINED 716
addr_21933: ;;// std/std.porth:59:37: OP_INLINED 694
addr_21934: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_21935: ;;// std/std.porth:57:55: OP_INLINED 36
addr_21936: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21937: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21938: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21939: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21940: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21941: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21942: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_21943: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_21944: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_21945: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_21946: ;;// porth.porth:24:36: OP_INLINED 662
addr_21947: ;;// std/std.porth:48:34: OP_INLINED 394
addr_21948: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21949: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_21950: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_21951: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_21952: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_21953: ;;// porth.porth:25:36: OP_INLINED 662
addr_21954: ;;// std/std.porth:48:34: OP_INLINED 394
addr_21955: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21956: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_21957: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_21958: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21959: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_21960: ;;// porth.porth:26:17: OP_INLINED 36
addr_21961: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21962: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21963: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21964: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21965: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21966: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21967: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_21968: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_21969: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_21970: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_21971: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_21972: ;;// porth.porth:27:36: OP_INLINED 662
addr_21973: ;;// std/std.porth:48:34: OP_INLINED 394
addr_21974: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21975: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_21976: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_21977: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_21978: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_21979: ;;// porth.porth:28:17: OP_INLINED 36
addr_21980: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21981: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_21982: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_21983: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_21984: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_21985: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_21986: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_21987: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_21988: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_21989: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_21990: ;;// porth.porth:2837:31: OP_PUSH_STR 802
    mov rax, 48
    push rax
    lea rax, [str_802]
    push rax
addr_21991: ;;// porth.porth:2837:83: OP_INLINED 676
addr_21992: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_21993: ;;// std/std.porth:50:37: OP_INLINED 662
addr_21994: ;;// std/std.porth:48:34: OP_INLINED 394
addr_21995: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21996: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_21997: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_21998: ;;// porth.porth:2838:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_21999: ;;// porth.porth:2838:7: OP_INLINED 418
addr_22000: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_22001: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_22002: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_22003: ;;// porth.porth:2839:3: OP_END_IF 0
addr_22004: ;;// porth.porth:2839:7: OP_INTRINSIC drop
    pop rax
addr_22005: ;;// porth.porth:2841:3: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_22006: ;;// porth.porth:2841:8: OP_INLINED 753
addr_22007: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_22008: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22009: ;;// std/std.porth:65:7: OP_INLINED 704
addr_22010: ;;// std/std.porth:58:38: OP_INLINED 684
addr_22011: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_22012: ;;// std/std.porth:56:57: OP_INLINED 36
addr_22013: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22014: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22015: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22016: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22017: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22018: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22019: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22020: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22021: ;;// std/std.porth:66:7: OP_INLINED 716
addr_22022: ;;// std/std.porth:59:37: OP_INLINED 694
addr_22023: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_22024: ;;// std/std.porth:57:55: OP_INLINED 36
addr_22025: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22026: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22027: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22028: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22029: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22030: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22031: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22032: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_22033: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_22034: ;;// porth.porth:2841:13: OP_CALL 14249
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_14249
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_22035: ;;// porth.porth:2841:35: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_22036: ;;// porth.porth:2841:39: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_22037: ;;// porth.porth:2841:44: OP_INLINED 52
addr_22038: ;;// std/core.porth:46:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22039: ;;// std/core.porth:46:8: OP_INTRINSIC cast(int)
addr_22040: ;;// std/core.porth:47:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22041: ;;// std/core.porth:47:8: OP_INTRINSIC cast(int)
addr_22042: ;;// std/core.porth:48:3: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_22043: ;;// porth.porth:2841:50: OP_IF 248
    pop rax
    test rax, rax
    jz addr_22291
addr_22044: ;;// porth.porth:2842:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_22045: ;;// porth.porth:2842:9: OP_INLINED 5367
addr_22046: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_22047: ;;// porth.porth:32:35: OP_INLINED 5195
addr_22048: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_22049: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22050: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_22051: ;;// porth.porth:24:23: OP_INLINED 36
addr_22052: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22053: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22054: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22055: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22056: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22057: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22058: ;;// porth.porth:24:28: OP_INLINED 753
addr_22059: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_22060: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22061: ;;// std/std.porth:65:7: OP_INLINED 704
addr_22062: ;;// std/std.porth:58:38: OP_INLINED 684
addr_22063: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_22064: ;;// std/std.porth:56:57: OP_INLINED 36
addr_22065: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22066: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22067: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22068: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22069: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22070: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22071: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22072: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22073: ;;// std/std.porth:66:7: OP_INLINED 716
addr_22074: ;;// std/std.porth:59:37: OP_INLINED 694
addr_22075: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_22076: ;;// std/std.porth:57:55: OP_INLINED 36
addr_22077: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22078: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22079: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22080: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22081: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22082: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22083: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22084: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_22085: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_22086: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_22087: ;;// porth.porth:24:36: OP_INLINED 662
addr_22088: ;;// std/std.porth:48:34: OP_INLINED 394
addr_22089: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_22090: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_22091: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_22092: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_22093: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_22094: ;;// porth.porth:25:36: OP_INLINED 662
addr_22095: ;;// std/std.porth:48:34: OP_INLINED 394
addr_22096: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_22097: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_22098: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_22099: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22100: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_22101: ;;// porth.porth:26:17: OP_INLINED 36
addr_22102: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22103: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22104: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22105: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22106: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22107: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22108: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22109: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_22110: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_22111: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_22112: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_22113: ;;// porth.porth:27:36: OP_INLINED 662
addr_22114: ;;// std/std.porth:48:34: OP_INLINED 394
addr_22115: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_22116: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_22117: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_22118: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22119: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_22120: ;;// porth.porth:28:17: OP_INLINED 36
addr_22121: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22122: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22123: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22124: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22125: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22126: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22127: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22128: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_22129: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_22130: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_22131: ;;// porth.porth:2842:17: OP_PUSH_STR 803
    mov rax, 48
    push rax
    lea rax, [str_803]
    push rax
addr_22132: ;;// porth.porth:2842:68: OP_INLINED 676
addr_22133: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_22134: ;;// std/std.porth:50:37: OP_INLINED 662
addr_22135: ;;// std/std.porth:48:34: OP_INLINED 394
addr_22136: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_22137: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_22138: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_22139: ;;// porth.porth:2842:74: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_22140: ;;// porth.porth:2842:79: OP_INLINED 753
addr_22141: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_22142: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22143: ;;// std/std.porth:65:7: OP_INLINED 704
addr_22144: ;;// std/std.porth:58:38: OP_INLINED 684
addr_22145: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_22146: ;;// std/std.porth:56:57: OP_INLINED 36
addr_22147: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22148: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22149: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22150: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22151: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22152: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22153: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22154: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22155: ;;// std/std.porth:66:7: OP_INLINED 716
addr_22156: ;;// std/std.porth:59:37: OP_INLINED 694
addr_22157: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_22158: ;;// std/std.porth:57:55: OP_INLINED 36
addr_22159: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22160: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22161: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22162: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22163: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22164: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22165: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22166: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_22167: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_22168: ;;// porth.porth:2842:84: OP_INLINED 676
addr_22169: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_22170: ;;// std/std.porth:50:37: OP_INLINED 662
addr_22171: ;;// std/std.porth:48:34: OP_INLINED 394
addr_22172: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_22173: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_22174: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_22175: ;;// porth.porth:2842:90: OP_PUSH_STR 804
    mov rax, 2
    push rax
    lea rax, [str_804]
    push rax
addr_22176: ;;// porth.porth:2842:96: OP_INLINED 676
addr_22177: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_22178: ;;// std/std.porth:50:37: OP_INLINED 662
addr_22179: ;;// std/std.porth:48:34: OP_INLINED 394
addr_22180: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_22181: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_22182: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_22183: ;;// porth.porth:2843:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_22184: ;;// porth.porth:2843:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_22185: ;;// porth.porth:2843:20: OP_INLINED 36
addr_22186: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22187: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22188: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22189: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22190: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22191: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22192: ;;// porth.porth:2843:25: OP_INLINED 5367
addr_22193: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_22194: ;;// porth.porth:32:35: OP_INLINED 5195
addr_22195: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_22196: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22197: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_22198: ;;// porth.porth:24:23: OP_INLINED 36
addr_22199: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22200: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22201: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22202: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22203: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22204: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22205: ;;// porth.porth:24:28: OP_INLINED 753
addr_22206: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_22207: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22208: ;;// std/std.porth:65:7: OP_INLINED 704
addr_22209: ;;// std/std.porth:58:38: OP_INLINED 684
addr_22210: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_22211: ;;// std/std.porth:56:57: OP_INLINED 36
addr_22212: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22213: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22214: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22215: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22216: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22217: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22218: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22219: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22220: ;;// std/std.porth:66:7: OP_INLINED 716
addr_22221: ;;// std/std.porth:59:37: OP_INLINED 694
addr_22222: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_22223: ;;// std/std.porth:57:55: OP_INLINED 36
addr_22224: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22225: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22226: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22227: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22228: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22229: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22230: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22231: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_22232: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_22233: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_22234: ;;// porth.porth:24:36: OP_INLINED 662
addr_22235: ;;// std/std.porth:48:34: OP_INLINED 394
addr_22236: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_22237: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_22238: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_22239: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_22240: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_22241: ;;// porth.porth:25:36: OP_INLINED 662
addr_22242: ;;// std/std.porth:48:34: OP_INLINED 394
addr_22243: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_22244: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_22245: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_22246: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22247: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_22248: ;;// porth.porth:26:17: OP_INLINED 36
addr_22249: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22250: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22251: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22252: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22253: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22254: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22255: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22256: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_22257: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_22258: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_22259: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_22260: ;;// porth.porth:27:36: OP_INLINED 662
addr_22261: ;;// std/std.porth:48:34: OP_INLINED 394
addr_22262: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_22263: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_22264: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_22265: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22266: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_22267: ;;// porth.porth:28:17: OP_INLINED 36
addr_22268: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22269: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22270: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22271: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22272: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22273: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22274: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22275: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_22276: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_22277: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_22278: ;;// porth.porth:2843:33: OP_PUSH_STR 805
    mov rax, 48
    push rax
    lea rax, [str_805]
    push rax
addr_22279: ;;// porth.porth:2843:85: OP_INLINED 676
addr_22280: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_22281: ;;// std/std.porth:50:37: OP_INLINED 662
addr_22282: ;;// std/std.porth:48:34: OP_INLINED 394
addr_22283: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_22284: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_22285: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_22286: ;;// porth.porth:2844:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_22287: ;;// porth.porth:2844:7: OP_INLINED 418
addr_22288: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_22289: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_22290: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_22291: ;;// porth.porth:2845:3: OP_END_IF 0
addr_22292: ;;// porth.porth:2845:7: OP_INTRINSIC drop
    pop rax
addr_22293: ;;// porth.porth:2847:3: OP_PUSH_GLOBAL_MEM 15196248
    lea rax, [mem+15196248]
    push rax
addr_22294: ;;// porth.porth:2847:15: OP_INLINED 12
addr_22295: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22296: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_22297: ;;// porth.porth:2847:21: OP_INLINED 131
addr_22298: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_22299: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_22300: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22301: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_22302: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_22303: ;;// porth.porth:2847:26: OP_IF 289
    pop rax
    test rax, rax
    jz addr_22592
addr_22304: ;;// porth.porth:2848:5: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_22305: ;;// porth.porth:2848:10: OP_INLINED 753
addr_22306: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_22307: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22308: ;;// std/std.porth:65:7: OP_INLINED 704
addr_22309: ;;// std/std.porth:58:38: OP_INLINED 684
addr_22310: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_22311: ;;// std/std.porth:56:57: OP_INLINED 36
addr_22312: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22313: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22314: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22315: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22316: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22317: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22318: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22319: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22320: ;;// std/std.porth:66:7: OP_INLINED 716
addr_22321: ;;// std/std.porth:59:37: OP_INLINED 694
addr_22322: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_22323: ;;// std/std.porth:57:55: OP_INLINED 36
addr_22324: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22325: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22326: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22327: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22328: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22329: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22330: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22331: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_22332: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_22333: ;;// porth.porth:2848:15: OP_CALL 14391
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_14391
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_22334: ;;// porth.porth:2848:38: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_22335: ;;// porth.porth:2848:42: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_22336: ;;// porth.porth:2848:47: OP_INLINED 52
addr_22337: ;;// std/core.porth:46:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22338: ;;// std/core.porth:46:8: OP_INTRINSIC cast(int)
addr_22339: ;;// std/core.porth:47:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22340: ;;// std/core.porth:47:8: OP_INTRINSIC cast(int)
addr_22341: ;;// std/core.porth:48:3: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_22342: ;;// porth.porth:2848:53: OP_IF 248
    pop rax
    test rax, rax
    jz addr_22590
addr_22343: ;;// porth.porth:2849:7: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_22344: ;;// porth.porth:2849:11: OP_INLINED 5367
addr_22345: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_22346: ;;// porth.porth:32:35: OP_INLINED 5195
addr_22347: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_22348: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22349: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_22350: ;;// porth.porth:24:23: OP_INLINED 36
addr_22351: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22352: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22353: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22354: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22355: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22356: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22357: ;;// porth.porth:24:28: OP_INLINED 753
addr_22358: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_22359: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22360: ;;// std/std.porth:65:7: OP_INLINED 704
addr_22361: ;;// std/std.porth:58:38: OP_INLINED 684
addr_22362: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_22363: ;;// std/std.porth:56:57: OP_INLINED 36
addr_22364: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22365: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22366: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22367: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22368: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22369: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22370: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22371: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22372: ;;// std/std.porth:66:7: OP_INLINED 716
addr_22373: ;;// std/std.porth:59:37: OP_INLINED 694
addr_22374: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_22375: ;;// std/std.porth:57:55: OP_INLINED 36
addr_22376: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22377: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22378: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22379: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22380: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22381: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22382: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22383: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_22384: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_22385: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_22386: ;;// porth.porth:24:36: OP_INLINED 662
addr_22387: ;;// std/std.porth:48:34: OP_INLINED 394
addr_22388: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_22389: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_22390: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_22391: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_22392: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_22393: ;;// porth.porth:25:36: OP_INLINED 662
addr_22394: ;;// std/std.porth:48:34: OP_INLINED 394
addr_22395: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_22396: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_22397: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_22398: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22399: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_22400: ;;// porth.porth:26:17: OP_INLINED 36
addr_22401: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22402: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22403: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22404: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22405: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22406: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22407: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22408: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_22409: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_22410: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_22411: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_22412: ;;// porth.porth:27:36: OP_INLINED 662
addr_22413: ;;// std/std.porth:48:34: OP_INLINED 394
addr_22414: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_22415: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_22416: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_22417: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22418: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_22419: ;;// porth.porth:28:17: OP_INLINED 36
addr_22420: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22421: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22422: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22423: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22424: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22425: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22426: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22427: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_22428: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_22429: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_22430: ;;// porth.porth:2849:19: OP_PUSH_STR 806
    mov rax, 49
    push rax
    lea rax, [str_806]
    push rax
addr_22431: ;;// porth.porth:2849:71: OP_INLINED 676
addr_22432: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_22433: ;;// std/std.porth:50:37: OP_INLINED 662
addr_22434: ;;// std/std.porth:48:34: OP_INLINED 394
addr_22435: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_22436: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_22437: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_22438: ;;// porth.porth:2849:77: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_22439: ;;// porth.porth:2849:82: OP_INLINED 753
addr_22440: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_22441: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22442: ;;// std/std.porth:65:7: OP_INLINED 704
addr_22443: ;;// std/std.porth:58:38: OP_INLINED 684
addr_22444: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_22445: ;;// std/std.porth:56:57: OP_INLINED 36
addr_22446: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22447: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22448: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22449: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22450: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22451: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22452: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22453: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22454: ;;// std/std.porth:66:7: OP_INLINED 716
addr_22455: ;;// std/std.porth:59:37: OP_INLINED 694
addr_22456: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_22457: ;;// std/std.porth:57:55: OP_INLINED 36
addr_22458: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22459: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22460: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22461: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22462: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22463: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22464: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22465: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_22466: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_22467: ;;// porth.porth:2849:87: OP_INLINED 676
addr_22468: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_22469: ;;// std/std.porth:50:37: OP_INLINED 662
addr_22470: ;;// std/std.porth:48:34: OP_INLINED 394
addr_22471: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_22472: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_22473: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_22474: ;;// porth.porth:2849:93: OP_PUSH_STR 807
    mov rax, 2
    push rax
    lea rax, [str_807]
    push rax
addr_22475: ;;// porth.porth:2849:99: OP_INLINED 676
addr_22476: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_22477: ;;// std/std.porth:50:37: OP_INLINED 662
addr_22478: ;;// std/std.porth:48:34: OP_INLINED 394
addr_22479: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_22480: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_22481: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_22482: ;;// porth.porth:2850:7: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_22483: ;;// porth.porth:2850:11: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_22484: ;;// porth.porth:2850:22: OP_INLINED 36
addr_22485: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22486: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22487: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22488: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22489: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22490: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22491: ;;// porth.porth:2850:27: OP_INLINED 5367
addr_22492: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_22493: ;;// porth.porth:32:35: OP_INLINED 5195
addr_22494: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_22495: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22496: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_22497: ;;// porth.porth:24:23: OP_INLINED 36
addr_22498: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22499: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22500: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22501: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22502: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22503: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22504: ;;// porth.porth:24:28: OP_INLINED 753
addr_22505: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_22506: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22507: ;;// std/std.porth:65:7: OP_INLINED 704
addr_22508: ;;// std/std.porth:58:38: OP_INLINED 684
addr_22509: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_22510: ;;// std/std.porth:56:57: OP_INLINED 36
addr_22511: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22512: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22513: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22514: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22515: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22516: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22517: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22518: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22519: ;;// std/std.porth:66:7: OP_INLINED 716
addr_22520: ;;// std/std.porth:59:37: OP_INLINED 694
addr_22521: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_22522: ;;// std/std.porth:57:55: OP_INLINED 36
addr_22523: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22524: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22525: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22526: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22527: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22528: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22529: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22530: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_22531: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_22532: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_22533: ;;// porth.porth:24:36: OP_INLINED 662
addr_22534: ;;// std/std.porth:48:34: OP_INLINED 394
addr_22535: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_22536: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_22537: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_22538: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_22539: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_22540: ;;// porth.porth:25:36: OP_INLINED 662
addr_22541: ;;// std/std.porth:48:34: OP_INLINED 394
addr_22542: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_22543: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_22544: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_22545: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22546: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_22547: ;;// porth.porth:26:17: OP_INLINED 36
addr_22548: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22549: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22550: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22551: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22552: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22553: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22554: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22555: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_22556: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_22557: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_22558: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_22559: ;;// porth.porth:27:36: OP_INLINED 662
addr_22560: ;;// std/std.porth:48:34: OP_INLINED 394
addr_22561: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_22562: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_22563: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_22564: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22565: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_22566: ;;// porth.porth:28:17: OP_INLINED 36
addr_22567: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22568: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22569: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22570: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22571: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22572: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22573: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22574: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_22575: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_22576: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_22577: ;;// porth.porth:2850:35: OP_PUSH_STR 808
    mov rax, 48
    push rax
    lea rax, [str_808]
    push rax
addr_22578: ;;// porth.porth:2850:87: OP_INLINED 676
addr_22579: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_22580: ;;// std/std.porth:50:37: OP_INLINED 662
addr_22581: ;;// std/std.porth:48:34: OP_INLINED 394
addr_22582: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_22583: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_22584: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_22585: ;;// porth.porth:2851:7: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_22586: ;;// porth.porth:2851:9: OP_INLINED 418
addr_22587: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_22588: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_22589: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_22590: ;;// porth.porth:2852:5: OP_END_IF 0
addr_22591: ;;// porth.porth:2852:9: OP_INTRINSIC drop
    pop rax
addr_22592: ;;// porth.porth:2853:3: OP_END_IF 0
addr_22593: ;;// porth.porth:2854:1: OP_RET 48
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 48
    ret
addr_22594: ;;// porth.porth:2856:6: OP_PREP_PROC 96
    sub rsp, 96
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_22595: ;;// porth.porth:2863:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_22596: ;;// porth.porth:2863:9: OP_INLINED 27
addr_22597: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_22598: ;;// porth.porth:2865:3: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_22599: ;;// porth.porth:2865:9: OP_INLINED 27
addr_22600: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_22601: ;;// porth.porth:2868:3: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_22602: ;;// porth.porth:2868:9: OP_PUSH_LOCAL_MEM 88
    mov rax, [ret_stack_rsp]
    add rax, 88
    push rax
addr_22603: ;;// porth.porth:2868:21: OP_INLINED 24
addr_22604: ;;// std/core.porth:26:31: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_22605: ;;// porth.porth:2870:3: OP_WHILE 568
addr_22606: ;;// porth.porth:2871:5: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_22607: ;;// porth.porth:2871:11: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_22608: ;;// porth.porth:2871:17: OP_INLINED 0
addr_22609: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22610: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_22611: ;;// porth.porth:2871:22: OP_CALL 8340
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_8340
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_22612: ;;// porth.porth:2871:39: OP_IF 557
    pop rax
    test rax, rax
    jz addr_23169
addr_22613: ;;// porth.porth:2872:7: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_22614: ;;// porth.porth:2872:13: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_22615: ;;// porth.porth:2872:24: OP_INLINED 36
addr_22616: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22617: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22618: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22619: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22620: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22621: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22622: ;;// porth.porth:2872:29: OP_INLINED 16
addr_22623: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22624: ;;// porth.porth:2872:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_22625: ;;// porth.porth:2872:45: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_22626: ;;// porth.porth:2872:47: OP_IF 215
    pop rax
    test rax, rax
    jz addr_22841
addr_22627: ;;// porth.porth:2873:9: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_22628: ;;// porth.porth:2873:15: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_22629: ;;// porth.porth:2873:27: OP_INLINED 36
addr_22630: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22631: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22632: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22633: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22634: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22635: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22636: ;;// porth.porth:2874:11: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_22637: ;;// porth.porth:2874:15: OP_INLINED 753
addr_22638: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_22639: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22640: ;;// std/std.porth:65:7: OP_INLINED 704
addr_22641: ;;// std/std.porth:58:38: OP_INLINED 684
addr_22642: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_22643: ;;// std/std.porth:56:57: OP_INLINED 36
addr_22644: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22645: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22646: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22647: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22648: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22649: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22650: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22651: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22652: ;;// std/std.porth:66:7: OP_INLINED 716
addr_22653: ;;// std/std.porth:59:37: OP_INLINED 694
addr_22654: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_22655: ;;// std/std.porth:57:55: OP_INLINED 36
addr_22656: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22657: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22658: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22659: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22660: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22661: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22662: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22663: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_22664: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_22665: ;;// porth.porth:2874:20: OP_CALL 10296
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_10296
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_22666: ;;// porth.porth:2874:37: OP_IF 17
    pop rax
    test rax, rax
    jz addr_22683
addr_22667: ;;// porth.porth:2875:13: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_22668: ;;// porth.porth:2875:19: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_22669: ;;// porth.porth:2875:29: OP_INLINED 36
addr_22670: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22671: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22672: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22673: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22674: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22675: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22676: ;;// porth.porth:2876:13: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_22677: ;;// porth.porth:2876:19: OP_INLINED 0
addr_22678: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22679: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_22680: ;;// porth.porth:2877:13: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_22681: ;;// porth.porth:2878:13: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_22682: ;;// porth.porth:2879:11: OP_ELSE 155
    jmp addr_22837
addr_22683: ;;// porth.porth:2880:13: OP_INTRINSIC drop
    pop rax
addr_22684: ;;// porth.porth:2881:13: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_22685: ;;// porth.porth:2881:19: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_22686: ;;// porth.porth:2881:29: OP_INLINED 36
addr_22687: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22688: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22689: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22690: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22691: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22692: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22693: ;;// porth.porth:2881:43: OP_INLINED 5367
addr_22694: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_22695: ;;// porth.porth:32:35: OP_INLINED 5195
addr_22696: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_22697: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22698: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_22699: ;;// porth.porth:24:23: OP_INLINED 36
addr_22700: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22701: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22702: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22703: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22704: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22705: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22706: ;;// porth.porth:24:28: OP_INLINED 753
addr_22707: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_22708: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22709: ;;// std/std.porth:65:7: OP_INLINED 704
addr_22710: ;;// std/std.porth:58:38: OP_INLINED 684
addr_22711: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_22712: ;;// std/std.porth:56:57: OP_INLINED 36
addr_22713: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22714: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22715: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22716: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22717: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22718: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22719: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22720: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22721: ;;// std/std.porth:66:7: OP_INLINED 716
addr_22722: ;;// std/std.porth:59:37: OP_INLINED 694
addr_22723: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_22724: ;;// std/std.porth:57:55: OP_INLINED 36
addr_22725: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22726: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22727: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22728: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22729: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22730: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22731: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22732: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_22733: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_22734: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_22735: ;;// porth.porth:24:36: OP_INLINED 662
addr_22736: ;;// std/std.porth:48:34: OP_INLINED 394
addr_22737: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_22738: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_22739: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_22740: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_22741: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_22742: ;;// porth.porth:25:36: OP_INLINED 662
addr_22743: ;;// std/std.porth:48:34: OP_INLINED 394
addr_22744: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_22745: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_22746: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_22747: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22748: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_22749: ;;// porth.porth:26:17: OP_INLINED 36
addr_22750: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22751: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22752: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22753: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22754: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22755: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22756: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22757: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_22758: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_22759: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_22760: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_22761: ;;// porth.porth:27:36: OP_INLINED 662
addr_22762: ;;// std/std.porth:48:34: OP_INLINED 394
addr_22763: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_22764: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_22765: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_22766: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22767: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_22768: ;;// porth.porth:28:17: OP_INLINED 36
addr_22769: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22770: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22771: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22772: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22773: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22774: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22775: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22776: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_22777: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_22778: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_22779: ;;// porth.porth:2882:13: OP_PUSH_STR 809
    mov rax, 23
    push rax
    lea rax, [str_809]
    push rax
addr_22780: ;;// porth.porth:2882:43: OP_INLINED 676
addr_22781: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_22782: ;;// std/std.porth:50:37: OP_INLINED 662
addr_22783: ;;// std/std.porth:48:34: OP_INLINED 394
addr_22784: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_22785: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_22786: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_22787: ;;// porth.porth:2885:13: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_22788: ;;// porth.porth:2885:17: OP_INLINED 753
addr_22789: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_22790: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22791: ;;// std/std.porth:65:7: OP_INLINED 704
addr_22792: ;;// std/std.porth:58:38: OP_INLINED 684
addr_22793: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_22794: ;;// std/std.porth:56:57: OP_INLINED 36
addr_22795: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22796: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22797: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22798: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22799: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22800: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22801: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22802: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22803: ;;// std/std.porth:66:7: OP_INLINED 716
addr_22804: ;;// std/std.porth:59:37: OP_INLINED 694
addr_22805: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_22806: ;;// std/std.porth:57:55: OP_INLINED 36
addr_22807: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22808: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22809: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22810: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22811: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22812: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22813: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22814: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_22815: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_22816: ;;// porth.porth:2885:43: OP_INLINED 676
addr_22817: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_22818: ;;// std/std.porth:50:37: OP_INLINED 662
addr_22819: ;;// std/std.porth:48:34: OP_INLINED 394
addr_22820: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_22821: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_22822: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_22823: ;;// porth.porth:2886:13: OP_PUSH_STR 810
    mov rax, 26
    push rax
    lea rax, [str_810]
    push rax
addr_22824: ;;// porth.porth:2886:43: OP_INLINED 676
addr_22825: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_22826: ;;// std/std.porth:50:37: OP_INLINED 662
addr_22827: ;;// std/std.porth:48:34: OP_INLINED 394
addr_22828: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_22829: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_22830: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_22831: ;;// porth.porth:2887:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_22832: ;;// porth.porth:2887:15: OP_INLINED 418
addr_22833: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_22834: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_22835: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_22836: ;;// porth.porth:2888:13: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_22837: ;;// porth.porth:2889:11: OP_END_IF 0
addr_22838: ;;// porth.porth:2890:11: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22839: ;;// porth.porth:2891:9: OP_INTRINSIC drop
    pop rax
addr_22840: ;;// porth.porth:2892:7: OP_ELSE 171
    jmp addr_23011
addr_22841: ;;// porth.porth:2892:12: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_22842: ;;// porth.porth:2892:18: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_22843: ;;// porth.porth:2892:29: OP_INLINED 36
addr_22844: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22845: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22846: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22847: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22848: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22849: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22850: ;;// porth.porth:2892:34: OP_INLINED 16
addr_22851: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22852: ;;// porth.porth:2892:39: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_22853: ;;// porth.porth:2892:53: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_22854: ;;// porth.porth:2892:55: OP_IFSTAR 158
    pop rax
    test rax, rax
    jz addr_23012
addr_22855: ;;// porth.porth:2893:9: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_22856: ;;// porth.porth:2893:15: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_22857: ;;// porth.porth:2893:27: OP_INLINED 36
addr_22858: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22859: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22860: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22861: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22862: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22863: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22864: ;;// porth.porth:2893:32: OP_INLINED 16
addr_22865: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22866: ;;// porth.porth:2894:11: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_22867: ;;// porth.porth:2894:15: OP_PUSH_INT 13
    mov rax, 13
    push rax
addr_22868: ;;// porth.porth:2894:26: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_22869: ;;// porth.porth:2894:28: OP_IF 3
    pop rax
    test rax, rax
    jz addr_22872
addr_22870: ;;// porth.porth:2895:13: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_22871: ;;// porth.porth:2896:11: OP_ELSE 10
    jmp addr_22881
addr_22872: ;;// porth.porth:2896:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_22873: ;;// porth.porth:2896:20: OP_PUSH_INT 14
    mov rax, 14
    push rax
addr_22874: ;;// porth.porth:2896:40: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_22875: ;;// porth.porth:2896:42: OP_IFSTAR 7
    pop rax
    test rax, rax
    jz addr_22882
addr_22876: ;;// porth.porth:2897:13: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_22877: ;;// porth.porth:2897:18: OP_PUSH_LOCAL_MEM 88
    mov rax, [ret_stack_rsp]
    add rax, 88
    push rax
addr_22878: ;;// porth.porth:2897:30: OP_INLINED 24
addr_22879: ;;// std/core.porth:26:31: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_22880: ;;// porth.porth:2898:13: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_22881: ;;// porth.porth:2899:11: OP_ELSE 127
    jmp addr_23008
addr_22882: ;;// porth.porth:2900:13: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_22883: ;;// porth.porth:2900:19: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_22884: ;;// porth.porth:2900:29: OP_INLINED 36
addr_22885: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22886: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22887: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22888: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22889: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22890: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22891: ;;// porth.porth:2900:45: OP_INLINED 5367
addr_22892: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_22893: ;;// porth.porth:32:35: OP_INLINED 5195
addr_22894: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_22895: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22896: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_22897: ;;// porth.porth:24:23: OP_INLINED 36
addr_22898: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22899: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22900: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22901: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22902: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22903: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22904: ;;// porth.porth:24:28: OP_INLINED 753
addr_22905: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_22906: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22907: ;;// std/std.porth:65:7: OP_INLINED 704
addr_22908: ;;// std/std.porth:58:38: OP_INLINED 684
addr_22909: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_22910: ;;// std/std.porth:56:57: OP_INLINED 36
addr_22911: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22912: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22913: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22914: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22915: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22916: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22917: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22918: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22919: ;;// std/std.porth:66:7: OP_INLINED 716
addr_22920: ;;// std/std.porth:59:37: OP_INLINED 694
addr_22921: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_22922: ;;// std/std.porth:57:55: OP_INLINED 36
addr_22923: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22924: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22925: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22926: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22927: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22928: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22929: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22930: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_22931: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_22932: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_22933: ;;// porth.porth:24:36: OP_INLINED 662
addr_22934: ;;// std/std.porth:48:34: OP_INLINED 394
addr_22935: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_22936: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_22937: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_22938: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_22939: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_22940: ;;// porth.porth:25:36: OP_INLINED 662
addr_22941: ;;// std/std.porth:48:34: OP_INLINED 394
addr_22942: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_22943: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_22944: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_22945: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22946: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_22947: ;;// porth.porth:26:17: OP_INLINED 36
addr_22948: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22949: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22950: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22951: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22952: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22953: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22954: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22955: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_22956: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_22957: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_22958: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_22959: ;;// porth.porth:27:36: OP_INLINED 662
addr_22960: ;;// std/std.porth:48:34: OP_INLINED 394
addr_22961: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_22962: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_22963: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_22964: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_22965: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_22966: ;;// porth.porth:28:17: OP_INLINED 36
addr_22967: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22968: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_22969: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_22970: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_22971: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_22972: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_22973: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_22974: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_22975: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_22976: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_22977: ;;// porth.porth:2901:13: OP_PUSH_STR 811
    mov rax, 29
    push rax
    lea rax, [str_811]
    push rax
addr_22978: ;;// porth.porth:2901:45: OP_INLINED 676
addr_22979: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_22980: ;;// std/std.porth:50:37: OP_INLINED 662
addr_22981: ;;// std/std.porth:48:34: OP_INLINED 394
addr_22982: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_22983: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_22984: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_22985: ;;// porth.porth:2902:13: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_22986: ;;// porth.porth:2902:17: OP_CALL 6274
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_6274
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_22987: ;;// porth.porth:2902:45: OP_INLINED 676
addr_22988: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_22989: ;;// std/std.porth:50:37: OP_INLINED 662
addr_22990: ;;// std/std.porth:48:34: OP_INLINED 394
addr_22991: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_22992: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_22993: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_22994: ;;// porth.porth:2903:13: OP_PUSH_STR 812
    mov rax, 26
    push rax
    lea rax, [str_812]
    push rax
addr_22995: ;;// porth.porth:2903:45: OP_INLINED 676
addr_22996: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_22997: ;;// std/std.porth:50:37: OP_INLINED 662
addr_22998: ;;// std/std.porth:48:34: OP_INLINED 394
addr_22999: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23000: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_23001: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_23002: ;;// porth.porth:2904:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23003: ;;// porth.porth:2904:15: OP_INLINED 418
addr_23004: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_23005: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_23006: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_23007: ;;// porth.porth:2905:13: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_23008: ;;// porth.porth:2906:11: OP_END_IF 0
addr_23009: ;;// porth.porth:2907:11: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23010: ;;// porth.porth:2908:9: OP_INTRINSIC drop
    pop rax
addr_23011: ;;// porth.porth:2909:7: OP_ELSE 156
    jmp addr_23167
addr_23012: ;;// porth.porth:2910:9: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_23013: ;;// porth.porth:2910:15: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_23014: ;;// porth.porth:2910:25: OP_INLINED 36
addr_23015: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23016: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23017: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23018: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23019: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23020: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23021: ;;// porth.porth:2910:66: OP_INLINED 5367
addr_23022: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_23023: ;;// porth.porth:32:35: OP_INLINED 5195
addr_23024: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_23025: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23026: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_23027: ;;// porth.porth:24:23: OP_INLINED 36
addr_23028: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23029: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23030: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23031: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23032: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23033: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23034: ;;// porth.porth:24:28: OP_INLINED 753
addr_23035: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_23036: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23037: ;;// std/std.porth:65:7: OP_INLINED 704
addr_23038: ;;// std/std.porth:58:38: OP_INLINED 684
addr_23039: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_23040: ;;// std/std.porth:56:57: OP_INLINED 36
addr_23041: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23042: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23043: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23044: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23045: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23046: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23047: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_23048: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23049: ;;// std/std.porth:66:7: OP_INLINED 716
addr_23050: ;;// std/std.porth:59:37: OP_INLINED 694
addr_23051: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_23052: ;;// std/std.porth:57:55: OP_INLINED 36
addr_23053: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23054: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23055: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23056: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23057: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23058: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23059: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_23060: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_23061: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_23062: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_23063: ;;// porth.porth:24:36: OP_INLINED 662
addr_23064: ;;// std/std.porth:48:34: OP_INLINED 394
addr_23065: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23066: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_23067: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_23068: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_23069: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_23070: ;;// porth.porth:25:36: OP_INLINED 662
addr_23071: ;;// std/std.porth:48:34: OP_INLINED 394
addr_23072: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23073: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_23074: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_23075: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23076: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_23077: ;;// porth.porth:26:17: OP_INLINED 36
addr_23078: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23079: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23080: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23081: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23082: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23083: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23084: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_23085: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_23086: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_23087: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_23088: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_23089: ;;// porth.porth:27:36: OP_INLINED 662
addr_23090: ;;// std/std.porth:48:34: OP_INLINED 394
addr_23091: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23092: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_23093: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_23094: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23095: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_23096: ;;// porth.porth:28:17: OP_INLINED 36
addr_23097: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23098: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23099: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23100: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23101: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23102: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23103: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_23104: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_23105: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_23106: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_23107: ;;// porth.porth:2911:9: OP_PUSH_STR 813
    mov rax, 9
    push rax
    lea rax, [str_813]
    push rax
addr_23108: ;;// porth.porth:2911:66: OP_INLINED 676
addr_23109: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_23110: ;;// std/std.porth:50:37: OP_INLINED 662
addr_23111: ;;// std/std.porth:48:34: OP_INLINED 394
addr_23112: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23113: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_23114: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_23115: ;;// porth.porth:2912:9: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_23116: ;;// porth.porth:2912:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_23117: ;;// porth.porth:2912:26: OP_INLINED 36
addr_23118: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23119: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23120: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23121: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23122: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23123: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23124: ;;// porth.porth:2912:31: OP_INLINED 16
addr_23125: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_23126: ;;// porth.porth:2912:36: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23127: ;;// porth.porth:2912:49: OP_CALL 10127
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_10127
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_23128: ;;// porth.porth:2912:66: OP_INLINED 676
addr_23129: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_23130: ;;// std/std.porth:50:37: OP_INLINED 662
addr_23131: ;;// std/std.porth:48:34: OP_INLINED 394
addr_23132: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23133: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_23134: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_23135: ;;// porth.porth:2913:9: OP_PUSH_STR 814
    mov rax, 49
    push rax
    lea rax, [str_814]
    push rax
addr_23136: ;;// porth.porth:2913:66: OP_INLINED 676
addr_23137: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_23138: ;;// std/std.porth:50:37: OP_INLINED 662
addr_23139: ;;// std/std.porth:48:34: OP_INLINED 394
addr_23140: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23141: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_23142: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_23143: ;;// porth.porth:2914:9: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23144: ;;// porth.porth:2914:20: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23145: ;;// porth.porth:2914:33: OP_CALL 10127
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_10127
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_23146: ;;// porth.porth:2914:66: OP_INLINED 676
addr_23147: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_23148: ;;// std/std.porth:50:37: OP_INLINED 662
addr_23149: ;;// std/std.porth:48:34: OP_INLINED 394
addr_23150: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23151: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_23152: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_23153: ;;// porth.porth:2915:9: OP_PUSH_STR 815
    mov rax, 16
    push rax
    lea rax, [str_815]
    push rax
addr_23154: ;;// porth.porth:2915:66: OP_INLINED 676
addr_23155: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_23156: ;;// std/std.porth:50:37: OP_INLINED 662
addr_23157: ;;// std/std.porth:48:34: OP_INLINED 394
addr_23158: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23159: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_23160: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_23161: ;;// porth.porth:2916:9: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23162: ;;// porth.porth:2916:11: OP_INLINED 418
addr_23163: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_23164: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_23165: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_23166: ;;// porth.porth:2917:9: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_23167: ;;// porth.porth:2918:7: OP_END_IF 0
addr_23168: ;;// porth.porth:2919:5: OP_ELSE 2
    jmp addr_23170
addr_23169: ;;// porth.porth:2920:7: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_23170: ;;// porth.porth:2921:5: OP_END_IF 0
addr_23171: ;;// porth.porth:2922:3: OP_DO 2
    pop rax
    test rax, rax
    jz addr_23173
addr_23172: ;;// porth.porth:2922:6: OP_END_WHILE 567
    jmp addr_22605
addr_23173: ;;// porth.porth:2924:3: OP_PUSH_LOCAL_MEM 88
    mov rax, [ret_stack_rsp]
    add rax, 88
    push rax
addr_23174: ;;// porth.porth:2924:15: OP_INLINED 12
addr_23175: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_23176: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_23177: ;;// porth.porth:2925:1: OP_RET 96
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 96
    ret
addr_23178: ;;// porth.porth:2927:6: OP_PREP_PROC 120
    sub rsp, 120
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_23179: ;;// porth.porth:2934:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_23180: ;;// porth.porth:2935:5: OP_PUSH_GLOBAL_MEM 15196248
    lea rax, [mem+15196248]
    push rax
addr_23181: ;;// porth.porth:2935:17: OP_INLINED 12
addr_23182: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_23183: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_23184: ;;// porth.porth:2935:23: OP_IF 223
    pop rax
    test rax, rax
    jz addr_23407
addr_23185: ;;// porth.porth:2936:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23186: ;;// porth.porth:2936:13: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_23187: ;;// porth.porth:2936:23: OP_INLINED 36
addr_23188: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23189: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23190: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23191: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23192: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23193: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23194: ;;// porth.porth:2936:88: OP_INLINED 5367
addr_23195: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_23196: ;;// porth.porth:32:35: OP_INLINED 5195
addr_23197: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_23198: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23199: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_23200: ;;// porth.porth:24:23: OP_INLINED 36
addr_23201: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23202: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23203: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23204: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23205: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23206: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23207: ;;// porth.porth:24:28: OP_INLINED 753
addr_23208: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_23209: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23210: ;;// std/std.porth:65:7: OP_INLINED 704
addr_23211: ;;// std/std.porth:58:38: OP_INLINED 684
addr_23212: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_23213: ;;// std/std.porth:56:57: OP_INLINED 36
addr_23214: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23215: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23216: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23217: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23218: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23219: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23220: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_23221: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23222: ;;// std/std.porth:66:7: OP_INLINED 716
addr_23223: ;;// std/std.porth:59:37: OP_INLINED 694
addr_23224: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_23225: ;;// std/std.porth:57:55: OP_INLINED 36
addr_23226: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23227: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23228: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23229: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23230: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23231: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23232: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_23233: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_23234: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_23235: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_23236: ;;// porth.porth:24:36: OP_INLINED 662
addr_23237: ;;// std/std.porth:48:34: OP_INLINED 394
addr_23238: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23239: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_23240: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_23241: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_23242: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_23243: ;;// porth.porth:25:36: OP_INLINED 662
addr_23244: ;;// std/std.porth:48:34: OP_INLINED 394
addr_23245: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23246: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_23247: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_23248: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23249: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_23250: ;;// porth.porth:26:17: OP_INLINED 36
addr_23251: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23252: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23253: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23254: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23255: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23256: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23257: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_23258: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_23259: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_23260: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_23261: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_23262: ;;// porth.porth:27:36: OP_INLINED 662
addr_23263: ;;// std/std.porth:48:34: OP_INLINED 394
addr_23264: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23265: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_23266: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_23267: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23268: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_23269: ;;// porth.porth:28:17: OP_INLINED 36
addr_23270: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23271: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23272: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23273: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23274: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23275: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23276: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_23277: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_23278: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_23279: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_23280: ;;// porth.porth:2937:7: OP_PUSH_STR 816
    mov rax, 77
    push rax
    lea rax, [str_816]
    push rax
addr_23281: ;;// porth.porth:2937:88: OP_INLINED 676
addr_23282: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_23283: ;;// std/std.porth:50:37: OP_INLINED 662
addr_23284: ;;// std/std.porth:48:34: OP_INLINED 394
addr_23285: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23286: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_23287: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_23288: ;;// porth.porth:2938:7: OP_PUSH_GLOBAL_MEM 15073360
    lea rax, [mem+15073360]
    push rax
addr_23289: ;;// porth.porth:2938:19: OP_INLINED 16
addr_23290: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_23291: ;;// porth.porth:2938:24: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23292: ;;// porth.porth:2938:26: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_23293: ;;// porth.porth:2938:28: OP_PUSH_INT 120
    mov rax, 120
    push rax
addr_23294: ;;// porth.porth:2938:41: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_23295: ;;// porth.porth:2938:43: OP_PUSH_GLOBAL_MEM 15073368
    lea rax, [mem+15073368]
    push rax
addr_23296: ;;// porth.porth:2938:49: OP_INLINED 73
addr_23297: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_23298: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23299: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_23300: ;;// porth.porth:2938:54: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_23301: ;;// porth.porth:2938:63: OP_INLINED 36
addr_23302: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23303: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23304: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23305: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23306: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23307: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23308: ;;// porth.porth:2938:88: OP_INLINED 5367
addr_23309: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_23310: ;;// porth.porth:32:35: OP_INLINED 5195
addr_23311: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_23312: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23313: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_23314: ;;// porth.porth:24:23: OP_INLINED 36
addr_23315: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23316: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23317: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23318: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23319: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23320: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23321: ;;// porth.porth:24:28: OP_INLINED 753
addr_23322: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_23323: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23324: ;;// std/std.porth:65:7: OP_INLINED 704
addr_23325: ;;// std/std.porth:58:38: OP_INLINED 684
addr_23326: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_23327: ;;// std/std.porth:56:57: OP_INLINED 36
addr_23328: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23329: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23330: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23331: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23332: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23333: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23334: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_23335: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23336: ;;// std/std.porth:66:7: OP_INLINED 716
addr_23337: ;;// std/std.porth:59:37: OP_INLINED 694
addr_23338: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_23339: ;;// std/std.porth:57:55: OP_INLINED 36
addr_23340: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23341: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23342: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23343: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23344: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23345: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23346: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_23347: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_23348: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_23349: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_23350: ;;// porth.porth:24:36: OP_INLINED 662
addr_23351: ;;// std/std.porth:48:34: OP_INLINED 394
addr_23352: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23353: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_23354: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_23355: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_23356: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_23357: ;;// porth.porth:25:36: OP_INLINED 662
addr_23358: ;;// std/std.porth:48:34: OP_INLINED 394
addr_23359: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23360: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_23361: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_23362: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23363: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_23364: ;;// porth.porth:26:17: OP_INLINED 36
addr_23365: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23366: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23367: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23368: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23369: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23370: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23371: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_23372: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_23373: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_23374: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_23375: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_23376: ;;// porth.porth:27:36: OP_INLINED 662
addr_23377: ;;// std/std.porth:48:34: OP_INLINED 394
addr_23378: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23379: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_23380: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_23381: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23382: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_23383: ;;// porth.porth:28:17: OP_INLINED 36
addr_23384: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23385: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23386: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23387: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23388: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23389: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23390: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_23391: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_23392: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_23393: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_23394: ;;// porth.porth:2939:7: OP_PUSH_STR 817
    mov rax, 42
    push rax
    lea rax, [str_817]
    push rax
addr_23395: ;;// porth.porth:2939:88: OP_INLINED 676
addr_23396: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_23397: ;;// std/std.porth:50:37: OP_INLINED 662
addr_23398: ;;// std/std.porth:48:34: OP_INLINED 394
addr_23399: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23400: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_23401: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_23402: ;;// porth.porth:2940:7: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23403: ;;// porth.porth:2940:9: OP_INLINED 418
addr_23404: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_23405: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_23406: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_23407: ;;// porth.porth:2941:5: OP_END_IF 0
addr_23408: ;;// porth.porth:2943:5: OP_PUSH_INT 120
    mov rax, 120
    push rax
addr_23409: ;;// porth.porth:2943:18: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_23410: ;;// porth.porth:2943:20: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_23411: ;;// porth.porth:2943:25: OP_CALL 2169
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2169
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_23412: ;;// porth.porth:2943:32: OP_INTRINSIC drop
    pop rax
addr_23413: ;;// porth.porth:2945:5: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_23414: ;;// porth.porth:2945:15: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_23415: ;;// porth.porth:2945:20: OP_PUSH_INT 104
    mov rax, 104
    push rax
addr_23416: ;;// porth.porth:2945:30: OP_INLINED 36
addr_23417: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23418: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23419: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23420: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23421: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23422: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23423: ;;// porth.porth:2945:35: OP_INLINED 30
addr_23424: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_23425: ;;// porth.porth:2947:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23426: ;;// porth.porth:2947:11: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_23427: ;;// porth.porth:2947:17: OP_CALL 8340
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_8340
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_23428: ;;// porth.porth:2947:34: OP_INLINED 131
addr_23429: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_23430: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23431: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23432: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_23433: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_23434: ;;// porth.porth:2947:39: OP_IF 109
    pop rax
    test rax, rax
    jz addr_23543
addr_23435: ;;// porth.porth:2948:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23436: ;;// porth.porth:2948:13: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_23437: ;;// porth.porth:2948:23: OP_INLINED 36
addr_23438: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23439: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23440: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23441: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23442: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23443: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23444: ;;// porth.porth:2948:28: OP_INLINED 5367
addr_23445: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_23446: ;;// porth.porth:32:35: OP_INLINED 5195
addr_23447: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_23448: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23449: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_23450: ;;// porth.porth:24:23: OP_INLINED 36
addr_23451: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23452: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23453: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23454: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23455: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23456: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23457: ;;// porth.porth:24:28: OP_INLINED 753
addr_23458: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_23459: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23460: ;;// std/std.porth:65:7: OP_INLINED 704
addr_23461: ;;// std/std.porth:58:38: OP_INLINED 684
addr_23462: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_23463: ;;// std/std.porth:56:57: OP_INLINED 36
addr_23464: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23465: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23466: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23467: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23468: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23469: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23470: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_23471: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23472: ;;// std/std.porth:66:7: OP_INLINED 716
addr_23473: ;;// std/std.porth:59:37: OP_INLINED 694
addr_23474: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_23475: ;;// std/std.porth:57:55: OP_INLINED 36
addr_23476: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23477: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23478: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23479: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23480: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23481: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23482: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_23483: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_23484: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_23485: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_23486: ;;// porth.porth:24:36: OP_INLINED 662
addr_23487: ;;// std/std.porth:48:34: OP_INLINED 394
addr_23488: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23489: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_23490: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_23491: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_23492: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_23493: ;;// porth.porth:25:36: OP_INLINED 662
addr_23494: ;;// std/std.porth:48:34: OP_INLINED 394
addr_23495: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23496: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_23497: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_23498: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23499: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_23500: ;;// porth.porth:26:17: OP_INLINED 36
addr_23501: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23502: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23503: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23504: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23505: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23506: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23507: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_23508: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_23509: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_23510: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_23511: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_23512: ;;// porth.porth:27:36: OP_INLINED 662
addr_23513: ;;// std/std.porth:48:34: OP_INLINED 394
addr_23514: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23515: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_23516: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_23517: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23518: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_23519: ;;// porth.porth:28:17: OP_INLINED 36
addr_23520: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23521: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23522: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23523: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23524: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23525: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23526: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_23527: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_23528: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_23529: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_23530: ;;// porth.porth:2949:7: OP_PUSH_STR 818
    mov rax, 51
    push rax
    lea rax, [str_818]
    push rax
addr_23531: ;;// porth.porth:2949:62: OP_INLINED 676
addr_23532: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_23533: ;;// std/std.porth:50:37: OP_INLINED 662
addr_23534: ;;// std/std.porth:48:34: OP_INLINED 394
addr_23535: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23536: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_23537: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_23538: ;;// porth.porth:2950:7: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23539: ;;// porth.porth:2950:9: OP_INLINED 418
addr_23540: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_23541: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_23542: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_23543: ;;// porth.porth:2951:5: OP_END_IF 0
addr_23544: ;;// porth.porth:2953:5: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_23545: ;;// porth.porth:2953:15: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_23546: ;;// porth.porth:2953:27: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_23547: ;;// porth.porth:2953:29: OP_IF 213
    pop rax
    test rax, rax
    jz addr_23760
addr_23548: ;;// porth.porth:2954:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23549: ;;// porth.porth:2954:13: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_23550: ;;// porth.porth:2954:24: OP_INLINED 36
addr_23551: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23552: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23553: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23554: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23555: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23556: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23557: ;;// porth.porth:2954:29: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_23558: ;;// porth.porth:2954:33: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_23559: ;;// porth.porth:2954:43: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_23560: ;;// porth.porth:2954:45: OP_IF 78
    pop rax
    test rax, rax
    jz addr_23638
addr_23561: ;;// porth.porth:2955:11: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23562: ;;// porth.porth:2955:17: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_23563: ;;// porth.porth:2955:29: OP_INLINED 36
addr_23564: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23565: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23566: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23567: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23568: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23569: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23570: ;;// porth.porth:2955:34: OP_INLINED 753
addr_23571: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_23572: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23573: ;;// std/std.porth:65:7: OP_INLINED 704
addr_23574: ;;// std/std.porth:58:38: OP_INLINED 684
addr_23575: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_23576: ;;// std/std.porth:56:57: OP_INLINED 36
addr_23577: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23578: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23579: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23580: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23581: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23582: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23583: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_23584: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23585: ;;// std/std.porth:66:7: OP_INLINED 716
addr_23586: ;;// std/std.porth:59:37: OP_INLINED 694
addr_23587: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_23588: ;;// std/std.porth:57:55: OP_INLINED 36
addr_23589: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23590: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23591: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23592: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23593: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23594: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23595: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_23596: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_23597: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_23598: ;;// porth.porth:2956:11: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_23599: ;;// porth.porth:2956:16: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_23600: ;;// porth.porth:2956:33: OP_INLINED 36
addr_23601: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23602: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23603: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23604: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23605: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23606: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23607: ;;// porth.porth:2957:9: OP_INLINED 782
addr_23608: ;;// std/std.porth:71:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_23609: ;;// std/std.porth:72:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23610: ;;// std/std.porth:72:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_23611: ;;// std/std.porth:72:9: OP_INLINED 729
addr_23612: ;;// std/std.porth:60:35: OP_INLINED 684
addr_23613: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_23614: ;;// std/std.porth:56:57: OP_INLINED 36
addr_23615: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23616: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23617: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23618: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23619: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23620: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23621: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_23622: ;;// std/std.porth:73:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_23623: ;;// std/std.porth:73:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_23624: ;;// std/std.porth:73:9: OP_INLINED 741
addr_23625: ;;// std/std.porth:61:34: OP_INLINED 694
addr_23626: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_23627: ;;// std/std.porth:57:55: OP_INLINED 36
addr_23628: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23629: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23630: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23631: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23632: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23633: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23634: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_23635: ;;// std/std.porth:74:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_23636: ;;// porth.porth:2958:9: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_23637: ;;// porth.porth:2959:7: OP_ELSE 2
    jmp addr_23639
addr_23638: ;;// porth.porth:2960:9: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_23639: ;;// porth.porth:2961:7: OP_END_IF 0
addr_23640: ;;// porth.porth:2962:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23641: ;;// porth.porth:2962:13: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_23642: ;;// porth.porth:2962:19: OP_CALL 8340
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_8340
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_23643: ;;// porth.porth:2962:36: OP_INLINED 131
addr_23644: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_23645: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23646: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23647: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_23648: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_23649: ;;// porth.porth:2962:41: OP_IF 109
    pop rax
    test rax, rax
    jz addr_23758
addr_23650: ;;// porth.porth:2963:9: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23651: ;;// porth.porth:2963:15: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_23652: ;;// porth.porth:2963:25: OP_INLINED 36
addr_23653: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23654: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23655: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23656: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23657: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23658: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23659: ;;// porth.porth:2963:30: OP_INLINED 5367
addr_23660: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_23661: ;;// porth.porth:32:35: OP_INLINED 5195
addr_23662: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_23663: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23664: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_23665: ;;// porth.porth:24:23: OP_INLINED 36
addr_23666: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23667: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23668: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23669: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23670: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23671: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23672: ;;// porth.porth:24:28: OP_INLINED 753
addr_23673: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_23674: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23675: ;;// std/std.porth:65:7: OP_INLINED 704
addr_23676: ;;// std/std.porth:58:38: OP_INLINED 684
addr_23677: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_23678: ;;// std/std.porth:56:57: OP_INLINED 36
addr_23679: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23680: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23681: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23682: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23683: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23684: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23685: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_23686: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23687: ;;// std/std.porth:66:7: OP_INLINED 716
addr_23688: ;;// std/std.porth:59:37: OP_INLINED 694
addr_23689: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_23690: ;;// std/std.porth:57:55: OP_INLINED 36
addr_23691: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23692: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23693: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23694: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23695: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23696: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23697: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_23698: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_23699: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_23700: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_23701: ;;// porth.porth:24:36: OP_INLINED 662
addr_23702: ;;// std/std.porth:48:34: OP_INLINED 394
addr_23703: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23704: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_23705: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_23706: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_23707: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_23708: ;;// porth.porth:25:36: OP_INLINED 662
addr_23709: ;;// std/std.porth:48:34: OP_INLINED 394
addr_23710: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23711: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_23712: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_23713: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23714: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_23715: ;;// porth.porth:26:17: OP_INLINED 36
addr_23716: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23717: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23718: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23719: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23720: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23721: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23722: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_23723: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_23724: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_23725: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_23726: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_23727: ;;// porth.porth:27:36: OP_INLINED 662
addr_23728: ;;// std/std.porth:48:34: OP_INLINED 394
addr_23729: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23730: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_23731: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_23732: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23733: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_23734: ;;// porth.porth:28:17: OP_INLINED 36
addr_23735: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23736: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23737: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23738: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23739: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23740: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23741: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_23742: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_23743: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_23744: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_23745: ;;// porth.porth:2964:9: OP_PUSH_STR 819
    mov rax, 51
    push rax
    lea rax, [str_819]
    push rax
addr_23746: ;;// porth.porth:2964:64: OP_INLINED 676
addr_23747: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_23748: ;;// std/std.porth:50:37: OP_INLINED 662
addr_23749: ;;// std/std.porth:48:34: OP_INLINED 394
addr_23750: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23751: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_23752: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_23753: ;;// porth.porth:2965:9: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23754: ;;// porth.porth:2965:11: OP_INLINED 418
addr_23755: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_23756: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_23757: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_23758: ;;// porth.porth:2966:7: OP_END_IF 0
addr_23759: ;;// porth.porth:2967:5: OP_ELSE 2
    jmp addr_23761
addr_23760: ;;// porth.porth:2967:10: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_23761: ;;// porth.porth:2967:16: OP_END_IF 0
addr_23762: ;;// porth.porth:2969:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23763: ;;// porth.porth:2969:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_23764: ;;// porth.porth:2969:22: OP_INLINED 36
addr_23765: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23766: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23767: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23768: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23769: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23770: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23771: ;;// porth.porth:2969:27: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_23772: ;;// porth.porth:2969:31: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23773: ;;// porth.porth:2969:42: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_23774: ;;// porth.porth:2969:45: OP_IF 136
    pop rax
    test rax, rax
    jz addr_23910
addr_23775: ;;// porth.porth:2970:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23776: ;;// porth.porth:2970:13: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_23777: ;;// porth.porth:2970:23: OP_INLINED 36
addr_23778: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23779: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23780: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23781: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23782: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23783: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23784: ;;// porth.porth:2970:28: OP_INLINED 5367
addr_23785: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_23786: ;;// porth.porth:32:35: OP_INLINED 5195
addr_23787: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_23788: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23789: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_23790: ;;// porth.porth:24:23: OP_INLINED 36
addr_23791: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23792: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23793: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23794: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23795: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23796: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23797: ;;// porth.porth:24:28: OP_INLINED 753
addr_23798: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_23799: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23800: ;;// std/std.porth:65:7: OP_INLINED 704
addr_23801: ;;// std/std.porth:58:38: OP_INLINED 684
addr_23802: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_23803: ;;// std/std.porth:56:57: OP_INLINED 36
addr_23804: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23805: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23806: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23807: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23808: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23809: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23810: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_23811: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23812: ;;// std/std.porth:66:7: OP_INLINED 716
addr_23813: ;;// std/std.porth:59:37: OP_INLINED 694
addr_23814: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_23815: ;;// std/std.porth:57:55: OP_INLINED 36
addr_23816: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23817: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23818: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23819: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23820: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23821: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23822: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_23823: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_23824: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_23825: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_23826: ;;// porth.porth:24:36: OP_INLINED 662
addr_23827: ;;// std/std.porth:48:34: OP_INLINED 394
addr_23828: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23829: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_23830: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_23831: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_23832: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_23833: ;;// porth.porth:25:36: OP_INLINED 662
addr_23834: ;;// std/std.porth:48:34: OP_INLINED 394
addr_23835: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23836: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_23837: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_23838: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23839: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_23840: ;;// porth.porth:26:17: OP_INLINED 36
addr_23841: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23842: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23843: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23844: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23845: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23846: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23847: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_23848: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_23849: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_23850: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_23851: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_23852: ;;// porth.porth:27:36: OP_INLINED 662
addr_23853: ;;// std/std.porth:48:34: OP_INLINED 394
addr_23854: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23855: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_23856: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_23857: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23858: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_23859: ;;// porth.porth:28:17: OP_INLINED 36
addr_23860: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23861: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23862: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23863: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23864: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23865: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23866: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_23867: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_23868: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_23869: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_23870: ;;// porth.porth:2971:7: OP_PUSH_STR 820
    mov rax, 56
    push rax
    lea rax, [str_820]
    push rax
addr_23871: ;;// porth.porth:2971:66: OP_INLINED 676
addr_23872: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_23873: ;;// std/std.porth:50:37: OP_INLINED 662
addr_23874: ;;// std/std.porth:48:34: OP_INLINED 394
addr_23875: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23876: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_23877: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_23878: ;;// porth.porth:2972:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23879: ;;// porth.porth:2972:13: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_23880: ;;// porth.porth:2972:24: OP_INLINED 36
addr_23881: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23882: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23883: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23884: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23885: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23886: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23887: ;;// porth.porth:2972:29: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_23888: ;;// porth.porth:2972:33: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_23889: ;;// porth.porth:2972:48: OP_CALL 10127
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_10127
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_23890: ;;// porth.porth:2972:65: OP_INLINED 676
addr_23891: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_23892: ;;// std/std.porth:50:37: OP_INLINED 662
addr_23893: ;;// std/std.porth:48:34: OP_INLINED 394
addr_23894: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23895: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_23896: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_23897: ;;// porth.porth:2973:7: OP_PUSH_STR 821
    mov rax, 9
    push rax
    lea rax, [str_821]
    push rax
addr_23898: ;;// porth.porth:2973:20: OP_INLINED 676
addr_23899: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_23900: ;;// std/std.porth:50:37: OP_INLINED 662
addr_23901: ;;// std/std.porth:48:34: OP_INLINED 394
addr_23902: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23903: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_23904: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_23905: ;;// porth.porth:2974:7: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_23906: ;;// porth.porth:2974:9: OP_INLINED 418
addr_23907: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_23908: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_23909: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_23910: ;;// porth.porth:2975:5: OP_END_IF 0
addr_23911: ;;// porth.porth:2977:5: OP_PUSH_INT 32
    mov rax, 32
    push rax
addr_23912: ;;// porth.porth:2977:17: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23913: ;;// porth.porth:2977:23: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_23914: ;;// porth.porth:2977:33: OP_INLINED 36
addr_23915: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23916: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23917: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23918: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23919: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23920: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23921: ;;// porth.porth:2977:38: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_23922: ;;// porth.porth:2977:43: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_23923: ;;// porth.porth:2977:52: OP_INLINED 36
addr_23924: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23925: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23926: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23927: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23928: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23929: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23930: ;;// porth.porth:2977:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_23931: ;;// porth.porth:2977:64: OP_INTRINSIC drop
    pop rax
addr_23932: ;;// porth.porth:2979:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23933: ;;// porth.porth:2979:11: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_23934: ;;// porth.porth:2979:23: OP_INLINED 36
addr_23935: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23936: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23937: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23938: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23939: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23940: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23941: ;;// porth.porth:2979:28: OP_INLINED 753
addr_23942: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_23943: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23944: ;;// std/std.porth:65:7: OP_INLINED 704
addr_23945: ;;// std/std.porth:58:38: OP_INLINED 684
addr_23946: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_23947: ;;// std/std.porth:56:57: OP_INLINED 36
addr_23948: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23949: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23950: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23951: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23952: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23953: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23954: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_23955: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23956: ;;// std/std.porth:66:7: OP_INLINED 716
addr_23957: ;;// std/std.porth:59:37: OP_INLINED 694
addr_23958: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_23959: ;;// std/std.porth:57:55: OP_INLINED 36
addr_23960: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23961: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23962: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23963: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23964: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23965: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23966: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_23967: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_23968: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_23969: ;;// porth.porth:2980:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23970: ;;// porth.porth:2980:11: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_23971: ;;// porth.porth:2980:21: OP_INLINED 36
addr_23972: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23973: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23974: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23975: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23976: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23977: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23978: ;;// porth.porth:2981:5: OP_CALL 21216
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_21216
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_23979: ;;// porth.porth:2983:8: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_23980: ;;// porth.porth:2983:20: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_23981: ;;// porth.porth:2983:26: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_23982: ;;// porth.porth:2983:38: OP_INLINED 36
addr_23983: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23984: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23985: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23986: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23987: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23988: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23989: ;;// porth.porth:2983:43: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_23990: ;;// porth.porth:2983:48: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_23991: ;;// porth.porth:2983:58: OP_INLINED 36
addr_23992: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23993: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_23994: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_23995: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_23996: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_23997: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_23998: ;;// porth.porth:2983:63: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_23999: ;;// porth.porth:2983:70: OP_INTRINSIC drop
    pop rax
addr_24000: ;;// porth.porth:2984:5: OP_IF 22
    pop rax
    test rax, rax
    jz addr_24022
addr_24001: ;;// porth.porth:2984:8: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_24002: ;;// porth.porth:2984:20: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_24003: ;;// porth.porth:2984:26: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_24004: ;;// porth.porth:2984:38: OP_INLINED 36
addr_24005: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24006: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24007: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24008: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24009: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24010: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24011: ;;// porth.porth:2984:43: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_24012: ;;// porth.porth:2984:48: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_24013: ;;// porth.porth:2984:65: OP_INLINED 36
addr_24014: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24015: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24016: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24017: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24018: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24019: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24020: ;;// porth.porth:2984:70: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_24021: ;;// porth.porth:2984:77: OP_INTRINSIC drop
    pop rax
addr_24022: ;;// porth.porth:2984:82: OP_END_IF 0
addr_24023: ;;// porth.porth:2986:5: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_24024: ;;// porth.porth:2987:7: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_24025: ;;// porth.porth:2987:13: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_24026: ;;// porth.porth:2987:18: OP_PUSH_INT 72
    mov rax, 72
    push rax
addr_24027: ;;// porth.porth:2987:27: OP_INLINED 36
addr_24028: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24029: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24030: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24031: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24032: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24033: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24034: ;;// porth.porth:2987:32: OP_CALL 22594
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_22594
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_24035: ;;// porth.porth:2987:57: OP_IF 13
    pop rax
    test rax, rax
    jz addr_24048
addr_24036: ;;// porth.porth:2988:9: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_24037: ;;// porth.porth:2988:15: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_24038: ;;// porth.porth:2988:20: OP_PUSH_INT 88
    mov rax, 88
    push rax
addr_24039: ;;// porth.porth:2988:30: OP_INLINED 36
addr_24040: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24041: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24042: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24043: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24044: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24045: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24046: ;;// porth.porth:2988:35: OP_CALL 22594
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_22594
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_24047: ;;// porth.porth:2988:60: OP_INTRINSIC drop
    pop rax
addr_24048: ;;// porth.porth:2989:7: OP_END_IF 0
addr_24049: ;;// porth.porth:2990:5: OP_INTRINSIC drop
    pop rax
addr_24050: ;;// porth.porth:2992:5: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_24051: ;;// porth.porth:2992:15: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_24052: ;;// porth.porth:2992:27: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_24053: ;;// porth.porth:2992:30: OP_IF 24
    pop rax
    test rax, rax
    jz addr_24077
addr_24054: ;;// porth.porth:2993:7: OP_PUSH_GLOBAL_MEM 8421424
    lea rax, [mem+8421424]
    push rax
addr_24055: ;;// porth.porth:2993:17: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_24056: ;;// porth.porth:2994:7: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_24057: ;;// porth.porth:2994:11: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_24058: ;;// porth.porth:2994:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_24059: ;;// porth.porth:2994:26: OP_INLINED 36
addr_24060: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24061: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24062: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24063: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24064: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24065: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24066: ;;// porth.porth:2994:31: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_24067: ;;// porth.porth:2995:11: OP_CALL 18185
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18185
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_24068: ;;// porth.porth:2996:7: OP_PUSH_INT 15
    mov rax, 15
    push rax
addr_24069: ;;// porth.porth:2996:20: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_24070: ;;// porth.porth:2996:22: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_24071: ;;// porth.porth:2996:28: OP_CALL 12921
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_12921
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_24072: ;;// porth.porth:2998:7: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_24073: ;;// porth.porth:2998:12: OP_PUSH_GLOBAL_MEM 15196248
    lea rax, [mem+15196248]
    push rax
addr_24074: ;;// porth.porth:2998:24: OP_INLINED 24
addr_24075: ;;// std/core.porth:26:31: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_24076: ;;// porth.porth:2999:5: OP_ELSE 315
    jmp addr_24391
addr_24077: ;;// porth.porth:3000:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_24078: ;;// porth.porth:3000:13: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_24079: ;;// porth.porth:3000:19: OP_CALL 8340
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_8340
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_24080: ;;// porth.porth:3000:36: OP_INLINED 131
addr_24081: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_24082: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_24083: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24084: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_24085: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_24086: ;;// porth.porth:3000:41: OP_IF 109
    pop rax
    test rax, rax
    jz addr_24195
addr_24087: ;;// porth.porth:3001:9: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_24088: ;;// porth.porth:3001:14: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_24089: ;;// porth.porth:3001:23: OP_INLINED 36
addr_24090: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24091: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24092: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24093: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24094: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24095: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24096: ;;// porth.porth:3001:28: OP_INLINED 5367
addr_24097: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_24098: ;;// porth.porth:32:35: OP_INLINED 5195
addr_24099: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_24100: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_24101: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_24102: ;;// porth.porth:24:23: OP_INLINED 36
addr_24103: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24104: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24105: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24106: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24107: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24108: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24109: ;;// porth.porth:24:28: OP_INLINED 753
addr_24110: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_24111: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_24112: ;;// std/std.porth:65:7: OP_INLINED 704
addr_24113: ;;// std/std.porth:58:38: OP_INLINED 684
addr_24114: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_24115: ;;// std/std.porth:56:57: OP_INLINED 36
addr_24116: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24117: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24118: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24119: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24120: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24121: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24122: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_24123: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_24124: ;;// std/std.porth:66:7: OP_INLINED 716
addr_24125: ;;// std/std.porth:59:37: OP_INLINED 694
addr_24126: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_24127: ;;// std/std.porth:57:55: OP_INLINED 36
addr_24128: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24129: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24130: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24131: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24132: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24133: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24134: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_24135: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_24136: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_24137: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_24138: ;;// porth.porth:24:36: OP_INLINED 662
addr_24139: ;;// std/std.porth:48:34: OP_INLINED 394
addr_24140: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_24141: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_24142: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_24143: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_24144: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_24145: ;;// porth.porth:25:36: OP_INLINED 662
addr_24146: ;;// std/std.porth:48:34: OP_INLINED 394
addr_24147: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_24148: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_24149: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_24150: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_24151: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_24152: ;;// porth.porth:26:17: OP_INLINED 36
addr_24153: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24154: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24155: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24156: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24157: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24158: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24159: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_24160: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_24161: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_24162: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_24163: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_24164: ;;// porth.porth:27:36: OP_INLINED 662
addr_24165: ;;// std/std.porth:48:34: OP_INLINED 394
addr_24166: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_24167: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_24168: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_24169: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_24170: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_24171: ;;// porth.porth:28:17: OP_INLINED 36
addr_24172: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24173: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24174: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24175: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24176: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24177: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24178: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_24179: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_24180: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_24181: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_24182: ;;// porth.porth:3002:9: OP_PUSH_STR 822
    mov rax, 34
    push rax
    lea rax, [str_822]
    push rax
addr_24183: ;;// porth.porth:3002:47: OP_INLINED 676
addr_24184: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_24185: ;;// std/std.porth:50:37: OP_INLINED 662
addr_24186: ;;// std/std.porth:48:34: OP_INLINED 394
addr_24187: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_24188: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_24189: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_24190: ;;// porth.porth:3003:9: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_24191: ;;// porth.porth:3003:11: OP_INLINED 418
addr_24192: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_24193: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_24194: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_24195: ;;// porth.porth:3004:7: OP_END_IF 0
addr_24196: ;;// porth.porth:3005:9: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_24197: ;;// porth.porth:3005:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_24198: ;;// porth.porth:3005:26: OP_INLINED 36
addr_24199: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24200: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24201: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24202: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24203: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24204: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24205: ;;// porth.porth:3005:31: OP_INLINED 16
addr_24206: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_24207: ;;// porth.porth:3005:36: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_24208: ;;// porth.porth:3005:50: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_24209: ;;// porth.porth:3006:9: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_24210: ;;// porth.porth:3006:15: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_24211: ;;// porth.porth:3006:27: OP_INLINED 36
addr_24212: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24213: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24214: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24215: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24216: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24217: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24218: ;;// porth.porth:3006:32: OP_INLINED 16
addr_24219: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_24220: ;;// porth.porth:3006:37: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_24221: ;;// porth.porth:3006:49: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_24222: ;;// porth.porth:3007:7: OP_INLINED 146
addr_24223: ;;// std/core.porth:100:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24224: ;;// std/core.porth:100:8: OP_INTRINSIC cast(int)
addr_24225: ;;// std/core.porth:101:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24226: ;;// std/core.porth:101:8: OP_INTRINSIC cast(int)
addr_24227: ;;// std/core.porth:102:3: OP_INTRINSIC or
    pop rax
    pop rbx
    or rbx, rax
    push rbx
addr_24228: ;;// std/core.porth:103:3: OP_INTRINSIC cast(bool)
addr_24229: ;;// porth.porth:3007:11: OP_IF 161
    pop rax
    test rax, rax
    jz addr_24390
addr_24230: ;;// porth.porth:3008:9: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_24231: ;;// porth.porth:3008:15: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_24232: ;;// porth.porth:3008:25: OP_INLINED 36
addr_24233: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24234: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24235: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24236: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24237: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24238: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24239: ;;// porth.porth:3008:73: OP_INLINED 5367
addr_24240: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_24241: ;;// porth.porth:32:35: OP_INLINED 5195
addr_24242: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_24243: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_24244: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_24245: ;;// porth.porth:24:23: OP_INLINED 36
addr_24246: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24247: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24248: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24249: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24250: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24251: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24252: ;;// porth.porth:24:28: OP_INLINED 753
addr_24253: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_24254: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_24255: ;;// std/std.porth:65:7: OP_INLINED 704
addr_24256: ;;// std/std.porth:58:38: OP_INLINED 684
addr_24257: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_24258: ;;// std/std.porth:56:57: OP_INLINED 36
addr_24259: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24260: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24261: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24262: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24263: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24264: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24265: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_24266: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_24267: ;;// std/std.porth:66:7: OP_INLINED 716
addr_24268: ;;// std/std.porth:59:37: OP_INLINED 694
addr_24269: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_24270: ;;// std/std.porth:57:55: OP_INLINED 36
addr_24271: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24272: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24273: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24274: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24275: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24276: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24277: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_24278: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_24279: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_24280: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_24281: ;;// porth.porth:24:36: OP_INLINED 662
addr_24282: ;;// std/std.porth:48:34: OP_INLINED 394
addr_24283: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_24284: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_24285: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_24286: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_24287: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_24288: ;;// porth.porth:25:36: OP_INLINED 662
addr_24289: ;;// std/std.porth:48:34: OP_INLINED 394
addr_24290: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_24291: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_24292: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_24293: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_24294: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_24295: ;;// porth.porth:26:17: OP_INLINED 36
addr_24296: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24297: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24298: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24299: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24300: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24301: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24302: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_24303: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_24304: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_24305: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_24306: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_24307: ;;// porth.porth:27:36: OP_INLINED 662
addr_24308: ;;// std/std.porth:48:34: OP_INLINED 394
addr_24309: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_24310: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_24311: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_24312: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_24313: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_24314: ;;// porth.porth:28:17: OP_INLINED 36
addr_24315: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24316: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24317: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24318: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24319: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24320: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24321: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_24322: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_24323: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_24324: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_24325: ;;// porth.porth:3009:9: OP_PUSH_STR 823
    mov rax, 61
    push rax
    lea rax, [str_823]
    push rax
addr_24326: ;;// porth.porth:3009:73: OP_INLINED 676
addr_24327: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_24328: ;;// std/std.porth:50:37: OP_INLINED 662
addr_24329: ;;// std/std.porth:48:34: OP_INLINED 394
addr_24330: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_24331: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_24332: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_24333: ;;// porth.porth:3010:9: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_24334: ;;// porth.porth:3010:15: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_24335: ;;// porth.porth:3010:26: OP_INLINED 36
addr_24336: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24337: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24338: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24339: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24340: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24341: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24342: ;;// porth.porth:3010:31: OP_INLINED 753
addr_24343: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_24344: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_24345: ;;// std/std.porth:65:7: OP_INLINED 704
addr_24346: ;;// std/std.porth:58:38: OP_INLINED 684
addr_24347: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_24348: ;;// std/std.porth:56:57: OP_INLINED 36
addr_24349: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24350: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24351: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24352: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24353: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24354: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24355: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_24356: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_24357: ;;// std/std.porth:66:7: OP_INLINED 716
addr_24358: ;;// std/std.porth:59:37: OP_INLINED 694
addr_24359: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_24360: ;;// std/std.porth:57:55: OP_INLINED 36
addr_24361: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24362: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24363: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24364: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24365: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24366: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24367: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_24368: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_24369: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_24370: ;;// porth.porth:3010:73: OP_INLINED 676
addr_24371: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_24372: ;;// std/std.porth:50:37: OP_INLINED 662
addr_24373: ;;// std/std.porth:48:34: OP_INLINED 394
addr_24374: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_24375: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_24376: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_24377: ;;// porth.porth:3011:9: OP_PUSH_STR 824
    mov rax, 2
    push rax
    lea rax, [str_824]
    push rax
addr_24378: ;;// porth.porth:3011:73: OP_INLINED 676
addr_24379: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_24380: ;;// std/std.porth:50:37: OP_INLINED 662
addr_24381: ;;// std/std.porth:48:34: OP_INLINED 394
addr_24382: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_24383: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_24384: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_24385: ;;// porth.porth:3012:9: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_24386: ;;// porth.porth:3012:11: OP_INLINED 418
addr_24387: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_24388: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_24389: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_24390: ;;// porth.porth:3013:7: OP_END_IF 0
addr_24391: ;;// porth.porth:3014:5: OP_END_IF 0
addr_24392: ;;// porth.porth:3016:5: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_24393: ;;// porth.porth:3016:10: OP_CALL 14203
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_14203
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_24394: ;;// porth.porth:3017:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_24395: ;;// porth.porth:3018:1: OP_RET 120
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 120
    ret
addr_24396: ;;// porth.porth:3020:6: OP_PREP_PROC 80
    sub rsp, 80
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_24397: ;;// porth.porth:3025:3: OP_PUSH_INT 72
    mov rax, 72
    push rax
addr_24398: ;;// porth.porth:3025:17: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24399: ;;// porth.porth:3025:22: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_24400: ;;// porth.porth:3025:28: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_24401: ;;// porth.porth:3025:35: OP_INTRINSIC drop
    pop rax
addr_24402: ;;// porth.porth:3027:3: OP_PUSH_LOCAL_MEM 72
    mov rax, [ret_stack_rsp]
    add rax, 72
    push rax
addr_24403: ;;// porth.porth:3027:8: OP_INLINED 27
addr_24404: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_24405: ;;// porth.porth:3029:3: OP_PUSH_LOCAL_MEM 72
    mov rax, [ret_stack_rsp]
    add rax, 72
    push rax
addr_24406: ;;// porth.porth:3029:8: OP_INLINED 0
addr_24407: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_24408: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_24409: ;;// porth.porth:3029:13: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_24410: ;;// porth.porth:3029:23: OP_INLINED 36
addr_24411: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24412: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24413: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24414: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24415: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24416: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24417: ;;// porth.porth:3029:28: OP_INLINED 16
addr_24418: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_24419: ;;// porth.porth:3029:33: OP_PUSH_INT 88
    mov rax, 88
    push rax
addr_24420: ;;// porth.porth:3029:44: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_24421: ;;// porth.porth:3029:46: OP_PUSH_GLOBAL_MEM 8421432
    lea rax, [mem+8421432]
    push rax
addr_24422: ;;// porth.porth:3029:50: OP_INLINED 73
addr_24423: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_24424: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24425: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_24426: ;;// porth.porth:3031:3: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_24427: ;;// porth.porth:3031:7: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_24428: ;;// porth.porth:3031:15: OP_INLINED 36
addr_24429: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24430: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24431: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24432: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24433: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24434: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24435: ;;// porth.porth:3031:20: OP_INLINED 16
addr_24436: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_24437: ;;// porth.porth:3031:25: OP_PUSH_INT 15
    mov rax, 15
    push rax
addr_24438: ;;// porth.porth:3031:38: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_24439: ;;// porth.porth:3031:41: OP_IF 22
    pop rax
    test rax, rax
    jz addr_24461
addr_24440: ;;// porth.porth:3032:5: OP_PUSH_STR 825
    mov rax, 18
    push rax
    lea rax, [str_825]
    push rax
addr_24441: ;;// porth.porth:3032:10: OP_INLINED 676
addr_24442: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_24443: ;;// std/std.porth:50:37: OP_INLINED 662
addr_24444: ;;// std/std.porth:48:34: OP_INLINED 394
addr_24445: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_24446: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_24447: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_24448: ;;// porth.porth:3032:16: OP_PUSH_STR 826
    mov rax, 60
    push rax
    lea rax, [str_826]
    push rax
addr_24449: ;;// porth.porth:3032:80: OP_INLINED 676
addr_24450: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_24451: ;;// std/std.porth:50:37: OP_INLINED 662
addr_24452: ;;// std/std.porth:48:34: OP_INLINED 394
addr_24453: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_24454: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_24455: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_24456: ;;// porth.porth:3033:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_24457: ;;// porth.porth:3033:7: OP_INLINED 418
addr_24458: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_24459: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_24460: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_24461: ;;// porth.porth:3034:3: OP_END_IF 0
addr_24462: ;;// porth.porth:3036:3: OP_PUSH_INT 19
    mov rax, 19
    push rax
addr_24463: ;;// porth.porth:3037:3: OP_PUSH_LOCAL_MEM 72
    mov rax, [ret_stack_rsp]
    add rax, 72
    push rax
addr_24464: ;;// porth.porth:3037:8: OP_INLINED 0
addr_24465: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_24466: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_24467: ;;// porth.porth:3037:13: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_24468: ;;// porth.porth:3037:23: OP_INLINED 36
addr_24469: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24470: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24471: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24472: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24473: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24474: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24475: ;;// porth.porth:3037:28: OP_INLINED 16
addr_24476: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_24477: ;;// porth.porth:3038:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_24478: ;;// porth.porth:3039:3: OP_CALL 12921
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_12921
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_24479: ;;// porth.porth:3042:3: OP_PUSH_INT 88
    mov rax, 88
    push rax
addr_24480: ;;// porth.porth:3042:14: OP_INLINED 36
addr_24481: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24482: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24483: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24484: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24485: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24486: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24487: ;;// porth.porth:3043:3: OP_WHILE 62
addr_24488: ;;// porth.porth:3043:9: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_24489: ;;// porth.porth:3043:13: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_24490: ;;// porth.porth:3043:21: OP_INLINED 36
addr_24491: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24492: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24493: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24494: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24495: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24496: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24497: ;;// porth.porth:3043:26: OP_INLINED 16
addr_24498: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_24499: ;;// porth.porth:3043:31: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_24500: ;;// porth.porth:3043:38: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_24501: ;;// porth.porth:3043:41: OP_DO 48
    pop rax
    test rax, rax
    jz addr_24549
addr_24502: ;;// porth.porth:3044:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_24503: ;;// porth.porth:3044:9: OP_INLINED 12994
addr_24504: ;;// porth.porth:1103:3: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_24505: ;;// porth.porth:1103:7: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_24506: ;;// porth.porth:1103:18: OP_INLINED 36
addr_24507: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24508: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24509: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24510: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24511: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24512: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24513: ;;// porth.porth:1103:23: OP_INLINED 16
addr_24514: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_24515: ;;// porth.porth:1103:28: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24516: ;;// porth.porth:1104:3: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_24517: ;;// porth.porth:1104:7: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_24518: ;;// porth.porth:1104:18: OP_INLINED 36
addr_24519: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24520: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24521: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24522: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24523: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24524: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24525: ;;// porth.porth:1104:23: OP_INLINED 16
addr_24526: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_24527: ;;// porth.porth:1104:28: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24528: ;;// porth.porth:1105:3: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_24529: ;;// porth.porth:1105:7: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_24530: ;;// porth.porth:1105:18: OP_INLINED 36
addr_24531: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24532: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24533: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24534: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24535: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24536: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24537: ;;// porth.porth:1105:28: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24538: ;;// porth.porth:1105:33: OP_INTRINSIC drop
    pop rax
addr_24539: ;;// porth.porth:1106:3: OP_CALL 12921
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_12921
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_24540: ;;// porth.porth:3045:5: OP_PUSH_INT 88
    mov rax, 88
    push rax
addr_24541: ;;// porth.porth:3045:16: OP_INLINED 36
addr_24542: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24543: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24544: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24545: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24546: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24547: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24548: ;;// porth.porth:3046:3: OP_END_WHILE 61
    jmp addr_24487
addr_24549: ;;// porth.porth:3047:3: OP_INTRINSIC drop
    pop rax
addr_24550: ;;// porth.porth:3048:1: OP_RET 80
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 80
    ret
addr_24551: ;;// porth.porth:3050:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_24552: ;;// porth.porth:3051:3: OP_PUSH_GLOBAL_MEM 15196248
    lea rax, [mem+15196248]
    push rax
addr_24553: ;;// porth.porth:3051:15: OP_INLINED 12
addr_24554: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_24555: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_24556: ;;// porth.porth:3051:21: OP_IF 14
    pop rax
    test rax, rax
    jz addr_24570
addr_24557: ;;// porth.porth:3052:5: OP_PUSH_GLOBAL_MEM 15073360
    lea rax, [mem+15073360]
    push rax
addr_24558: ;;// porth.porth:3052:17: OP_INLINED 16
addr_24559: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_24560: ;;// porth.porth:3053:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_24561: ;;// porth.porth:3053:7: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_24562: ;;// porth.porth:3054:5: OP_PUSH_INT 120
    mov rax, 120
    push rax
addr_24563: ;;// porth.porth:3054:18: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_24564: ;;// porth.porth:3055:5: OP_PUSH_GLOBAL_MEM 15073368
    lea rax, [mem+15073368]
    push rax
addr_24565: ;;// porth.porth:3055:11: OP_INLINED 73
addr_24566: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_24567: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24568: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_24569: ;;// porth.porth:3056:3: OP_ELSE 2
    jmp addr_24571
addr_24570: ;;// porth.porth:3057:5: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_24571: ;;// porth.porth:3058:3: OP_END_IF 0
addr_24572: ;;// porth.porth:3059:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_24573: ;;// porth.porth:3065:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_24574: ;;// porth.porth:3066:3: OP_PUSH_GLOBAL_MEM 15388856
    lea rax, [mem+15388856]
    push rax
addr_24575: ;;// porth.porth:3066:20: OP_INLINED 16
addr_24576: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_24577: ;;// porth.porth:3066:25: OP_PUSH_INT 1024
    mov rax, 1024
    push rax
addr_24578: ;;// porth.porth:3066:40: OP_INTRINSIC >=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovge rcx, rdx
    push rcx
addr_24579: ;;// porth.porth:3066:43: OP_IF 22
    pop rax
    test rax, rax
    jz addr_24601
addr_24580: ;;// porth.porth:3067:5: OP_PUSH_STR 827
    mov rax, 18
    push rax
    lea rax, [str_827]
    push rax
addr_24581: ;;// porth.porth:3067:10: OP_INLINED 676
addr_24582: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_24583: ;;// std/std.porth:50:37: OP_INLINED 662
addr_24584: ;;// std/std.porth:48:34: OP_INLINED 394
addr_24585: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_24586: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_24587: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_24588: ;;// porth.porth:3067:16: OP_PUSH_STR 828
    mov rax, 41
    push rax
    lea rax, [str_828]
    push rax
addr_24589: ;;// porth.porth:3067:61: OP_INLINED 676
addr_24590: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_24591: ;;// std/std.porth:50:37: OP_INLINED 662
addr_24592: ;;// std/std.porth:48:34: OP_INLINED 394
addr_24593: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_24594: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_24595: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_24596: ;;// porth.porth:3068:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_24597: ;;// porth.porth:3068:7: OP_INLINED 418
addr_24598: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_24599: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_24600: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_24601: ;;// porth.porth:3069:3: OP_END_IF 0
addr_24602: ;;// porth.porth:3071:3: OP_PUSH_GLOBAL_MEM 15388856
    lea rax, [mem+15388856]
    push rax
addr_24603: ;;// porth.porth:3071:20: OP_INLINED 16
addr_24604: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_24605: ;;// porth.porth:3072:3: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_24606: ;;// porth.porth:3072:15: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_24607: ;;// porth.porth:3073:3: OP_PUSH_GLOBAL_MEM 15372472
    lea rax, [mem+15372472]
    push rax
addr_24608: ;;// porth.porth:3073:14: OP_INLINED 73
addr_24609: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_24610: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24611: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_24612: ;;// porth.porth:3074:3: OP_INLINED 782
addr_24613: ;;// std/std.porth:71:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_24614: ;;// std/std.porth:72:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_24615: ;;// std/std.porth:72:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_24616: ;;// std/std.porth:72:9: OP_INLINED 729
addr_24617: ;;// std/std.porth:60:35: OP_INLINED 684
addr_24618: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_24619: ;;// std/std.porth:56:57: OP_INLINED 36
addr_24620: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24621: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24622: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24623: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24624: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24625: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24626: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_24627: ;;// std/std.porth:73:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_24628: ;;// std/std.porth:73:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_24629: ;;// std/std.porth:73:9: OP_INLINED 741
addr_24630: ;;// std/std.porth:61:34: OP_INLINED 694
addr_24631: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_24632: ;;// std/std.porth:57:55: OP_INLINED 36
addr_24633: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24634: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24635: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24636: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24637: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24638: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24639: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_24640: ;;// std/std.porth:74:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_24641: ;;// porth.porth:3076:3: OP_PUSH_GLOBAL_MEM 15388856
    lea rax, [mem+15388856]
    push rax
addr_24642: ;;// porth.porth:3076:20: OP_INLINED 161
addr_24643: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_24644: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_24645: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_24646: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24647: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24648: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_24649: ;;// porth.porth:3077:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_24650: ;;// porth.porth:3079:6: OP_PREP_PROC 16
    sub rsp, 16
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_24651: ;;// porth.porth:3085:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_24652: ;;// porth.porth:3085:8: OP_INLINED 782
addr_24653: ;;// std/std.porth:71:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_24654: ;;// std/std.porth:72:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_24655: ;;// std/std.porth:72:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_24656: ;;// std/std.porth:72:9: OP_INLINED 729
addr_24657: ;;// std/std.porth:60:35: OP_INLINED 684
addr_24658: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_24659: ;;// std/std.porth:56:57: OP_INLINED 36
addr_24660: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24661: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24662: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24663: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24664: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24665: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24666: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_24667: ;;// std/std.porth:73:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_24668: ;;// std/std.porth:73:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_24669: ;;// std/std.porth:73:9: OP_INLINED 741
addr_24670: ;;// std/std.porth:61:34: OP_INLINED 694
addr_24671: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_24672: ;;// std/std.porth:57:55: OP_INLINED 36
addr_24673: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24674: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24675: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24676: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24677: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24678: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24679: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_24680: ;;// std/std.porth:74:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_24681: ;;// porth.porth:3087:3: OP_PUSH_GLOBAL_MEM 15388856
    lea rax, [mem+15388856]
    push rax
addr_24682: ;;// porth.porth:3087:20: OP_INLINED 16
addr_24683: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_24684: ;;// porth.porth:3087:25: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_24685: ;;// porth.porth:3087:27: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_24686: ;;// porth.porth:3088:3: OP_WHILE 84
addr_24687: ;;// porth.porth:3089:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_24688: ;;// porth.porth:3089:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_24689: ;;// porth.porth:3089:11: OP_INTRINSIC >=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovge rcx, rdx
    push rcx
addr_24690: ;;// porth.porth:3089:14: OP_IF 74
    pop rax
    test rax, rax
    jz addr_24764
addr_24691: ;;// porth.porth:3090:7: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_24692: ;;// porth.porth:3090:11: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_24693: ;;// porth.porth:3090:23: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_24694: ;;// porth.porth:3090:25: OP_PUSH_GLOBAL_MEM 15372472
    lea rax, [mem+15372472]
    push rax
addr_24695: ;;// porth.porth:3090:36: OP_INLINED 73
addr_24696: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_24697: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24698: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_24699: ;;// porth.porth:3090:41: OP_INLINED 753
addr_24700: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_24701: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_24702: ;;// std/std.porth:65:7: OP_INLINED 704
addr_24703: ;;// std/std.porth:58:38: OP_INLINED 684
addr_24704: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_24705: ;;// std/std.porth:56:57: OP_INLINED 36
addr_24706: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24707: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24708: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24709: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24710: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24711: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24712: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_24713: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_24714: ;;// std/std.porth:66:7: OP_INLINED 716
addr_24715: ;;// std/std.porth:59:37: OP_INLINED 694
addr_24716: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_24717: ;;// std/std.porth:57:55: OP_INLINED 36
addr_24718: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24719: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24720: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24721: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24722: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24723: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24724: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_24725: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_24726: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_24727: ;;// porth.porth:3091:7: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_24728: ;;// porth.porth:3091:12: OP_INLINED 753
addr_24729: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_24730: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_24731: ;;// std/std.porth:65:7: OP_INLINED 704
addr_24732: ;;// std/std.porth:58:38: OP_INLINED 684
addr_24733: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_24734: ;;// std/std.porth:56:57: OP_INLINED 36
addr_24735: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24736: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24737: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24738: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24739: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24740: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24741: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_24742: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_24743: ;;// std/std.porth:66:7: OP_INLINED 716
addr_24744: ;;// std/std.porth:59:37: OP_INLINED 694
addr_24745: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_24746: ;;// std/std.porth:57:55: OP_INLINED 36
addr_24747: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24748: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24749: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24750: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24751: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24752: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24753: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_24754: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_24755: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_24756: ;;// porth.porth:3092:7: OP_CALL 1496
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1496
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_24757: ;;// porth.porth:3093:7: OP_INLINED 131
addr_24758: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_24759: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_24760: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24761: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_24762: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_24763: ;;// porth.porth:3094:5: OP_ELSE 2
    jmp addr_24765
addr_24764: ;;// porth.porth:3094:10: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_24765: ;;// porth.porth:3094:16: OP_END_IF 0
addr_24766: ;;// porth.porth:3095:3: OP_DO 4
    pop rax
    test rax, rax
    jz addr_24770
addr_24767: ;;// porth.porth:3095:6: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_24768: ;;// porth.porth:3095:8: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_24769: ;;// porth.porth:3095:10: OP_END_WHILE 83
    jmp addr_24686
addr_24770: ;;// porth.porth:3097:3: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_24771: ;;// porth.porth:3097:7: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_24772: ;;// porth.porth:3097:9: OP_INTRINSIC >=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovge rcx, rdx
    push rcx
addr_24773: ;;// porth.porth:3097:12: OP_IF 10
    pop rax
    test rax, rax
    jz addr_24783
addr_24774: ;;// porth.porth:3098:5: OP_PUSH_GLOBAL_MEM 15388856
    lea rax, [mem+15388856]
    push rax
addr_24775: ;;// porth.porth:3098:22: OP_INLINED 16
addr_24776: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_24777: ;;// porth.porth:3099:5: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24778: ;;// porth.porth:3099:10: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_24779: ;;// porth.porth:3099:12: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24780: ;;// porth.porth:3100:5: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_24781: ;;// porth.porth:3101:5: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_24782: ;;// porth.porth:3102:3: OP_ELSE 2
    jmp addr_24784
addr_24783: ;;// porth.porth:3103:5: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_24784: ;;// porth.porth:3104:3: OP_END_IF 0
addr_24785: ;;// porth.porth:3105:1: OP_RET 16
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 16
    ret
addr_24786: ;;// porth.porth:3107:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_24787: ;;// porth.porth:3108:3: OP_PUSH_GLOBAL_MEM 15388856
    lea rax, [mem+15388856]
    push rax
addr_24788: ;;// porth.porth:3108:20: OP_INLINED 16
addr_24789: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_24790: ;;// porth.porth:3109:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_24791: ;;// porth.porth:3110:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_24792: ;;// porth.porth:3110:7: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_24793: ;;// porth.porth:3110:11: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_24794: ;;// porth.porth:3110:13: OP_IF 22
    pop rax
    test rax, rax
    jz addr_24816
addr_24795: ;;// porth.porth:3111:7: OP_PUSH_STR 829
    mov rax, 18
    push rax
    lea rax, [str_829]
    push rax
addr_24796: ;;// porth.porth:3111:12: OP_INLINED 676
addr_24797: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_24798: ;;// std/std.porth:50:37: OP_INLINED 662
addr_24799: ;;// std/std.porth:48:34: OP_INLINED 394
addr_24800: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_24801: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_24802: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_24803: ;;// porth.porth:3111:18: OP_PUSH_STR 830
    mov rax, 72
    push rax
    lea rax, [str_830]
    push rax
addr_24804: ;;// porth.porth:3111:93: OP_INLINED 676
addr_24805: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_24806: ;;// std/std.porth:50:37: OP_INLINED 662
addr_24807: ;;// std/std.porth:48:34: OP_INLINED 394
addr_24808: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_24809: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_24810: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_24811: ;;// porth.porth:3112:7: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_24812: ;;// porth.porth:3112:9: OP_INLINED 418
addr_24813: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_24814: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_24815: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_24816: ;;// porth.porth:3113:5: OP_END_IF 0
addr_24817: ;;// porth.porth:3115:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_24818: ;;// porth.porth:3115:9: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_24819: ;;// porth.porth:3115:11: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_24820: ;;// porth.porth:3116:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_24821: ;;// porth.porth:3116:9: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_24822: ;;// porth.porth:3116:11: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_24823: ;;// porth.porth:3117:5: OP_WHILE 150
addr_24824: ;;// porth.porth:3117:11: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_24825: ;;// porth.porth:3117:16: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_24826: ;;// porth.porth:3117:21: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_24827: ;;// porth.porth:3117:23: OP_DO 146
    pop rax
    test rax, rax
    jz addr_24973
addr_24828: ;;// porth.porth:3118:7: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_24829: ;;// porth.porth:3119:9: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_24830: ;;// porth.porth:3119:11: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_24831: ;;// porth.porth:3119:23: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_24832: ;;// porth.porth:3119:25: OP_PUSH_GLOBAL_MEM 15372472
    lea rax, [mem+15372472]
    push rax
addr_24833: ;;// porth.porth:3119:36: OP_INLINED 73
addr_24834: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_24835: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24836: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_24837: ;;// porth.porth:3120:9: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_24838: ;;// porth.porth:3120:11: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_24839: ;;// porth.porth:3120:23: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_24840: ;;// porth.porth:3120:25: OP_PUSH_GLOBAL_MEM 15372472
    lea rax, [mem+15372472]
    push rax
addr_24841: ;;// porth.porth:3120:36: OP_INLINED 73
addr_24842: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_24843: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24844: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_24845: ;;// porth.porth:3121:9: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_24846: ;;// porth.porth:3122:11: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_24847: ;;// porth.porth:3122:13: OP_INLINED 753
addr_24848: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_24849: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_24850: ;;// std/std.porth:65:7: OP_INLINED 704
addr_24851: ;;// std/std.porth:58:38: OP_INLINED 684
addr_24852: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_24853: ;;// std/std.porth:56:57: OP_INLINED 36
addr_24854: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24855: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24856: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24857: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24858: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24859: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24860: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_24861: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_24862: ;;// std/std.porth:66:7: OP_INLINED 716
addr_24863: ;;// std/std.porth:59:37: OP_INLINED 694
addr_24864: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_24865: ;;// std/std.porth:57:55: OP_INLINED 36
addr_24866: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24867: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24868: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24869: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24870: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24871: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24872: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_24873: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_24874: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_24875: ;;// porth.porth:3123:11: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_24876: ;;// porth.porth:3123:13: OP_INLINED 753
addr_24877: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_24878: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_24879: ;;// std/std.porth:65:7: OP_INLINED 704
addr_24880: ;;// std/std.porth:58:38: OP_INLINED 684
addr_24881: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_24882: ;;// std/std.porth:56:57: OP_INLINED 36
addr_24883: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24884: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24885: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24886: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24887: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24888: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24889: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_24890: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_24891: ;;// std/std.porth:66:7: OP_INLINED 716
addr_24892: ;;// std/std.porth:59:37: OP_INLINED 694
addr_24893: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_24894: ;;// std/std.porth:57:55: OP_INLINED 36
addr_24895: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24896: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24897: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24898: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24899: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24900: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24901: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_24902: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_24903: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_24904: ;;// porth.porth:3124:11: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_24905: ;;// porth.porth:3124:13: OP_INLINED 782
addr_24906: ;;// std/std.porth:71:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_24907: ;;// std/std.porth:72:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_24908: ;;// std/std.porth:72:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_24909: ;;// std/std.porth:72:9: OP_INLINED 729
addr_24910: ;;// std/std.porth:60:35: OP_INLINED 684
addr_24911: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_24912: ;;// std/std.porth:56:57: OP_INLINED 36
addr_24913: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24914: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24915: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24916: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24917: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24918: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24919: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_24920: ;;// std/std.porth:73:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_24921: ;;// std/std.porth:73:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_24922: ;;// std/std.porth:73:9: OP_INLINED 741
addr_24923: ;;// std/std.porth:61:34: OP_INLINED 694
addr_24924: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_24925: ;;// std/std.porth:57:55: OP_INLINED 36
addr_24926: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24927: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24928: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24929: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24930: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24931: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24932: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_24933: ;;// std/std.porth:74:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_24934: ;;// porth.porth:3125:11: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_24935: ;;// porth.porth:3125:13: OP_INLINED 782
addr_24936: ;;// std/std.porth:71:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_24937: ;;// std/std.porth:72:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_24938: ;;// std/std.porth:72:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_24939: ;;// std/std.porth:72:9: OP_INLINED 729
addr_24940: ;;// std/std.porth:60:35: OP_INLINED 684
addr_24941: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_24942: ;;// std/std.porth:56:57: OP_INLINED 36
addr_24943: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24944: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24945: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24946: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24947: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24948: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24949: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_24950: ;;// std/std.porth:73:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_24951: ;;// std/std.porth:73:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_24952: ;;// std/std.porth:73:9: OP_INLINED 741
addr_24953: ;;// std/std.porth:61:34: OP_INLINED 694
addr_24954: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_24955: ;;// std/std.porth:57:55: OP_INLINED 36
addr_24956: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24957: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24958: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24959: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_24960: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24961: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_24962: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_24963: ;;// std/std.porth:74:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_24964: ;;// porth.porth:3126:9: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_24965: ;;// porth.porth:3127:9: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_24966: ;;// porth.porth:3127:11: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_24967: ;;// porth.porth:3127:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_24968: ;;// porth.porth:3128:9: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_24969: ;;// porth.porth:3128:11: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_24970: ;;// porth.porth:3128:13: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_24971: ;;// porth.porth:3129:7: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_24972: ;;// porth.porth:3130:5: OP_END_WHILE 149
    jmp addr_24823
addr_24973: ;;// porth.porth:3131:5: OP_INTRINSIC drop
    pop rax
addr_24974: ;;// porth.porth:3132:5: OP_INTRINSIC drop
    pop rax
addr_24975: ;;// porth.porth:3133:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_24976: ;;// porth.porth:3134:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_24977: ;;// porth.porth:3140:6: OP_PREP_PROC 88
    sub rsp, 88
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_24978: ;;// porth.porth:3146:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_24979: ;;// porth.porth:3146:9: OP_INLINED 27
addr_24980: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_24981: ;;// porth.porth:3148:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_24982: ;;// porth.porth:3148:5: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_24983: ;;// porth.porth:3148:11: OP_INLINED 30
addr_24984: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_24985: ;;// porth.porth:3151:3: OP_WHILE 612
addr_24986: ;;// porth.porth:3152:5: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_24987: ;;// porth.porth:3152:11: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_24988: ;;// porth.porth:3152:17: OP_INLINED 0
addr_24989: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_24990: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_24991: ;;// porth.porth:3152:22: OP_CALL 8340
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_8340
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_24992: ;;// porth.porth:3152:39: OP_IF 374
    pop rax
    test rax, rax
    jz addr_25366
addr_24993: ;;// porth.porth:3153:7: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_24994: ;;// porth.porth:3153:13: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_24995: ;;// porth.porth:3153:24: OP_INLINED 36
addr_24996: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24997: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_24998: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_24999: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_25000: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25001: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_25002: ;;// porth.porth:3153:29: OP_INLINED 16
addr_25003: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_25004: ;;// porth.porth:3154:9: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_25005: ;;// porth.porth:3154:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25006: ;;// porth.porth:3154:24: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_25007: ;;// porth.porth:3154:26: OP_IF 49
    pop rax
    test rax, rax
    jz addr_25056
addr_25008: ;;// porth.porth:3155:11: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_25009: ;;// porth.porth:3155:17: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_25010: ;;// porth.porth:3155:29: OP_INLINED 36
addr_25011: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25012: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_25013: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25014: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_25015: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25016: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_25017: ;;// porth.porth:3155:34: OP_INLINED 753
addr_25018: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_25019: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_25020: ;;// std/std.porth:65:7: OP_INLINED 704
addr_25021: ;;// std/std.porth:58:38: OP_INLINED 684
addr_25022: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_25023: ;;// std/std.porth:56:57: OP_INLINED 36
addr_25024: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25025: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_25026: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25027: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_25028: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25029: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_25030: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_25031: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_25032: ;;// std/std.porth:66:7: OP_INLINED 716
addr_25033: ;;// std/std.porth:59:37: OP_INLINED 694
addr_25034: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_25035: ;;// std/std.porth:57:55: OP_INLINED 36
addr_25036: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25037: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_25038: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25039: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_25040: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25041: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_25042: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_25043: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_25044: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_25045: ;;// porth.porth:3155:39: OP_CALL 24573
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_24573
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_25046: ;;// porth.porth:3156:11: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_25047: ;;// porth.porth:3156:17: OP_INLINED 161
addr_25048: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_25049: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_25050: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25051: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25052: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25053: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_25054: ;;// porth.porth:3157:11: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_25055: ;;// porth.porth:3158:9: OP_ELSE 151
    jmp addr_25206
addr_25056: ;;// porth.porth:3158:14: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_25057: ;;// porth.porth:3158:18: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_25058: ;;// porth.porth:3158:32: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_25059: ;;// porth.porth:3158:34: OP_IFSTAR 148
    pop rax
    test rax, rax
    jz addr_25207
addr_25060: ;;// porth.porth:3159:11: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_25061: ;;// porth.porth:3159:17: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_25062: ;;// porth.porth:3159:29: OP_INLINED 36
addr_25063: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25064: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_25065: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25066: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_25067: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25068: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_25069: ;;// porth.porth:3159:34: OP_INLINED 16
addr_25070: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_25071: ;;// porth.porth:3160:13: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_25072: ;;// porth.porth:3160:17: OP_PUSH_INT 13
    mov rax, 13
    push rax
addr_25073: ;;// porth.porth:3160:28: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_25074: ;;// porth.porth:3160:30: OP_IF 3
    pop rax
    test rax, rax
    jz addr_25077
addr_25075: ;;// porth.porth:3161:15: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_25076: ;;// porth.porth:3162:13: OP_ELSE 127
    jmp addr_25203
addr_25077: ;;// porth.porth:3163:15: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_25078: ;;// porth.porth:3163:21: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_25079: ;;// porth.porth:3163:31: OP_INLINED 36
addr_25080: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25081: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_25082: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25083: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_25084: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25085: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_25086: ;;// porth.porth:3163:63: OP_INLINED 5367
addr_25087: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_25088: ;;// porth.porth:32:35: OP_INLINED 5195
addr_25089: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_25090: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_25091: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_25092: ;;// porth.porth:24:23: OP_INLINED 36
addr_25093: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25094: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_25095: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25096: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_25097: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25098: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_25099: ;;// porth.porth:24:28: OP_INLINED 753
addr_25100: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_25101: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_25102: ;;// std/std.porth:65:7: OP_INLINED 704
addr_25103: ;;// std/std.porth:58:38: OP_INLINED 684
addr_25104: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_25105: ;;// std/std.porth:56:57: OP_INLINED 36
addr_25106: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25107: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_25108: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25109: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_25110: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25111: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_25112: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_25113: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_25114: ;;// std/std.porth:66:7: OP_INLINED 716
addr_25115: ;;// std/std.porth:59:37: OP_INLINED 694
addr_25116: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_25117: ;;// std/std.porth:57:55: OP_INLINED 36
addr_25118: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25119: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_25120: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25121: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_25122: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25123: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_25124: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_25125: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_25126: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_25127: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_25128: ;;// porth.porth:24:36: OP_INLINED 662
addr_25129: ;;// std/std.porth:48:34: OP_INLINED 394
addr_25130: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25131: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_25132: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_25133: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_25134: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_25135: ;;// porth.porth:25:36: OP_INLINED 662
addr_25136: ;;// std/std.porth:48:34: OP_INLINED 394
addr_25137: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25138: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_25139: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_25140: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_25141: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_25142: ;;// porth.porth:26:17: OP_INLINED 36
addr_25143: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25144: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_25145: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25146: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_25147: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25148: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_25149: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_25150: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_25151: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_25152: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_25153: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_25154: ;;// porth.porth:27:36: OP_INLINED 662
addr_25155: ;;// std/std.porth:48:34: OP_INLINED 394
addr_25156: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25157: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_25158: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_25159: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_25160: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_25161: ;;// porth.porth:28:17: OP_INLINED 36
addr_25162: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25163: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_25164: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25165: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_25166: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25167: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_25168: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_25169: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_25170: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_25171: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_25172: ;;// porth.porth:3164:15: OP_PUSH_STR 831
    mov rax, 18
    push rax
    lea rax, [str_831]
    push rax
addr_25173: ;;// porth.porth:3164:63: OP_INLINED 676
addr_25174: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_25175: ;;// std/std.porth:50:37: OP_INLINED 662
addr_25176: ;;// std/std.porth:48:34: OP_INLINED 394
addr_25177: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25178: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_25179: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_25180: ;;// porth.porth:3165:15: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_25181: ;;// porth.porth:3165:19: OP_CALL 6274
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_6274
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_25182: ;;// porth.porth:3165:63: OP_INLINED 676
addr_25183: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_25184: ;;// std/std.porth:50:37: OP_INLINED 662
addr_25185: ;;// std/std.porth:48:34: OP_INLINED 394
addr_25186: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25187: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_25188: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_25189: ;;// porth.porth:3166:15: OP_PUSH_STR 832
    mov rax, 44
    push rax
    lea rax, [str_832]
    push rax
addr_25190: ;;// porth.porth:3166:63: OP_INLINED 676
addr_25191: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_25192: ;;// std/std.porth:50:37: OP_INLINED 662
addr_25193: ;;// std/std.porth:48:34: OP_INLINED 394
addr_25194: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25195: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_25196: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_25197: ;;// porth.porth:3167:15: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25198: ;;// porth.porth:3167:17: OP_INLINED 418
addr_25199: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_25200: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_25201: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_25202: ;;// porth.porth:3168:15: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_25203: ;;// porth.porth:3169:13: OP_END_IF 0
addr_25204: ;;// porth.porth:3170:11: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25205: ;;// porth.porth:3170:16: OP_INTRINSIC drop
    pop rax
addr_25206: ;;// porth.porth:3171:9: OP_ELSE 156
    jmp addr_25362
addr_25207: ;;// porth.porth:3172:11: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_25208: ;;// porth.porth:3172:17: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_25209: ;;// porth.porth:3172:27: OP_INLINED 36
addr_25210: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25211: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_25212: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25213: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_25214: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25215: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_25216: ;;// porth.porth:3172:68: OP_INLINED 5367
addr_25217: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_25218: ;;// porth.porth:32:35: OP_INLINED 5195
addr_25219: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_25220: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_25221: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_25222: ;;// porth.porth:24:23: OP_INLINED 36
addr_25223: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25224: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_25225: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25226: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_25227: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25228: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_25229: ;;// porth.porth:24:28: OP_INLINED 753
addr_25230: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_25231: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_25232: ;;// std/std.porth:65:7: OP_INLINED 704
addr_25233: ;;// std/std.porth:58:38: OP_INLINED 684
addr_25234: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_25235: ;;// std/std.porth:56:57: OP_INLINED 36
addr_25236: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25237: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_25238: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25239: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_25240: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25241: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_25242: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_25243: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_25244: ;;// std/std.porth:66:7: OP_INLINED 716
addr_25245: ;;// std/std.porth:59:37: OP_INLINED 694
addr_25246: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_25247: ;;// std/std.porth:57:55: OP_INLINED 36
addr_25248: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25249: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_25250: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25251: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_25252: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25253: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_25254: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_25255: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_25256: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_25257: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_25258: ;;// porth.porth:24:36: OP_INLINED 662
addr_25259: ;;// std/std.porth:48:34: OP_INLINED 394
addr_25260: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25261: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_25262: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_25263: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_25264: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_25265: ;;// porth.porth:25:36: OP_INLINED 662
addr_25266: ;;// std/std.porth:48:34: OP_INLINED 394
addr_25267: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25268: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_25269: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_25270: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_25271: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_25272: ;;// porth.porth:26:17: OP_INLINED 36
addr_25273: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25274: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_25275: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25276: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_25277: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25278: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_25279: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_25280: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_25281: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_25282: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_25283: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_25284: ;;// porth.porth:27:36: OP_INLINED 662
addr_25285: ;;// std/std.porth:48:34: OP_INLINED 394
addr_25286: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25287: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_25288: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_25289: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_25290: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_25291: ;;// porth.porth:28:17: OP_INLINED 36
addr_25292: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25293: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_25294: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25295: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_25296: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25297: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_25298: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_25299: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_25300: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_25301: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_25302: ;;// porth.porth:3173:11: OP_PUSH_STR 833
    mov rax, 9
    push rax
    lea rax, [str_833]
    push rax
addr_25303: ;;// porth.porth:3173:68: OP_INLINED 676
addr_25304: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_25305: ;;// std/std.porth:50:37: OP_INLINED 662
addr_25306: ;;// std/std.porth:48:34: OP_INLINED 394
addr_25307: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25308: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_25309: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_25310: ;;// porth.porth:3174:11: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_25311: ;;// porth.porth:3174:17: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_25312: ;;// porth.porth:3174:28: OP_INLINED 36
addr_25313: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25314: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_25315: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25316: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_25317: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25318: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_25319: ;;// porth.porth:3174:33: OP_INLINED 16
addr_25320: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_25321: ;;// porth.porth:3174:38: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25322: ;;// porth.porth:3174:51: OP_CALL 10127
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_10127
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_25323: ;;// porth.porth:3174:68: OP_INLINED 676
addr_25324: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_25325: ;;// std/std.porth:50:37: OP_INLINED 662
addr_25326: ;;// std/std.porth:48:34: OP_INLINED 394
addr_25327: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25328: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_25329: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_25330: ;;// porth.porth:3175:11: OP_PUSH_STR 834
    mov rax, 49
    push rax
    lea rax, [str_834]
    push rax
addr_25331: ;;// porth.porth:3175:68: OP_INLINED 676
addr_25332: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_25333: ;;// std/std.porth:50:37: OP_INLINED 662
addr_25334: ;;// std/std.porth:48:34: OP_INLINED 394
addr_25335: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25336: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_25337: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_25338: ;;// porth.porth:3176:11: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25339: ;;// porth.porth:3176:22: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25340: ;;// porth.porth:3176:35: OP_CALL 10127
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_10127
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_25341: ;;// porth.porth:3176:68: OP_INLINED 676
addr_25342: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_25343: ;;// std/std.porth:50:37: OP_INLINED 662
addr_25344: ;;// std/std.porth:48:34: OP_INLINED 394
addr_25345: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25346: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_25347: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_25348: ;;// porth.porth:3177:11: OP_PUSH_STR 835
    mov rax, 16
    push rax
    lea rax, [str_835]
    push rax
addr_25349: ;;// porth.porth:3177:68: OP_INLINED 676
addr_25350: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_25351: ;;// std/std.porth:50:37: OP_INLINED 662
addr_25352: ;;// std/std.porth:48:34: OP_INLINED 394
addr_25353: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25354: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_25355: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_25356: ;;// porth.porth:3178:11: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25357: ;;// porth.porth:3178:13: OP_INLINED 418
addr_25358: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_25359: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_25360: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_25361: ;;// porth.porth:3179:11: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_25362: ;;// porth.porth:3180:9: OP_END_IF 0
addr_25363: ;;// porth.porth:3181:7: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25364: ;;// porth.porth:3181:12: OP_INTRINSIC drop
    pop rax
addr_25365: ;;// porth.porth:3182:5: OP_ELSE 229
    jmp addr_25594
addr_25366: ;;// porth.porth:3183:7: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_25367: ;;// porth.porth:3183:13: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_25368: ;;// porth.porth:3183:23: OP_INLINED 36
addr_25369: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25370: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_25371: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25372: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_25373: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25374: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_25375: ;;// porth.porth:3184:7: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_25376: ;;// porth.porth:3184:11: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_25377: ;;// porth.porth:3184:17: OP_INLINED 0
addr_25378: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_25379: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_25380: ;;// porth.porth:3184:22: OP_INLINED 6784
addr_25381: ;;// porth.porth:235:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_25382: ;;// porth.porth:237:5: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_25383: ;;// porth.porth:238:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_25384: ;;// porth.porth:238:11: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_25385: ;;// porth.porth:238:27: OP_INLINED 36
addr_25386: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25387: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_25388: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25389: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_25390: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25391: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_25392: ;;// porth.porth:239:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_25393: ;;// porth.porth:239:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_25394: ;;// porth.porth:239:27: OP_INLINED 36
addr_25395: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25396: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_25397: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25398: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_25399: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25400: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_25401: ;;// porth.porth:240:5: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_25402: ;;// porth.porth:241:5: OP_INTRINSIC drop
    pop rax
addr_25403: ;;// porth.porth:244:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_25404: ;;// porth.porth:244:11: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_25405: ;;// porth.porth:244:21: OP_INLINED 36
addr_25406: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25407: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_25408: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25409: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_25410: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25411: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_25412: ;;// porth.porth:244:26: OP_INLINED 16
addr_25413: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_25414: ;;// porth.porth:245:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_25415: ;;// porth.porth:245:11: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_25416: ;;// porth.porth:245:21: OP_INLINED 36
addr_25417: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25418: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_25419: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25420: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_25421: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25422: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_25423: ;;// porth.porth:245:26: OP_INLINED 30
addr_25424: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_25425: ;;// porth.porth:248:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_25426: ;;// porth.porth:248:11: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_25427: ;;// porth.porth:248:22: OP_INLINED 36
addr_25428: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25429: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_25430: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25431: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_25432: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25433: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_25434: ;;// porth.porth:248:27: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_25435: ;;// porth.porth:248:46: OP_INLINED 36
addr_25436: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25437: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_25438: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25439: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_25440: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25441: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_25442: ;;// porth.porth:248:51: OP_INLINED 0
addr_25443: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_25444: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_25445: ;;// porth.porth:249:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_25446: ;;// porth.porth:249:11: OP_PUSH_INT 32
    mov rax, 32
    push rax
addr_25447: ;;// porth.porth:249:28: OP_INLINED 36
addr_25448: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25449: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_25450: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25451: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_25452: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25453: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_25454: ;;// porth.porth:249:33: OP_INLINED 0
addr_25455: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_25456: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_25457: ;;// porth.porth:250:5: OP_INLINED 78
addr_25458: ;;// std/core.porth:68:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25459: ;;// std/core.porth:68:8: OP_INTRINSIC cast(int)
addr_25460: ;;// std/core.porth:69:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25461: ;;// std/core.porth:69:8: OP_INTRINSIC cast(int)
addr_25462: ;;// std/core.porth:70:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_25463: ;;// porth.porth:251:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25464: ;;// porth.porth:251:7: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25465: ;;// porth.porth:252:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_25466: ;;// porth.porth:252:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_25467: ;;// porth.porth:252:17: OP_INLINED 36
addr_25468: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25469: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_25470: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25471: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_25472: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25473: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_25474: ;;// porth.porth:253:5: OP_INLINED 30
addr_25475: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_25476: ;;// porth.porth:254:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_25477: ;;// porth.porth:3185:7: OP_INLINED 5367
addr_25478: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_25479: ;;// porth.porth:32:35: OP_INLINED 5195
addr_25480: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_25481: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_25482: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_25483: ;;// porth.porth:24:23: OP_INLINED 36
addr_25484: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25485: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_25486: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25487: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_25488: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25489: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_25490: ;;// porth.porth:24:28: OP_INLINED 753
addr_25491: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_25492: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_25493: ;;// std/std.porth:65:7: OP_INLINED 704
addr_25494: ;;// std/std.porth:58:38: OP_INLINED 684
addr_25495: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_25496: ;;// std/std.porth:56:57: OP_INLINED 36
addr_25497: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25498: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_25499: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25500: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_25501: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25502: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_25503: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_25504: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_25505: ;;// std/std.porth:66:7: OP_INLINED 716
addr_25506: ;;// std/std.porth:59:37: OP_INLINED 694
addr_25507: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_25508: ;;// std/std.porth:57:55: OP_INLINED 36
addr_25509: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25510: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_25511: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25512: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_25513: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25514: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_25515: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_25516: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_25517: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_25518: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_25519: ;;// porth.porth:24:36: OP_INLINED 662
addr_25520: ;;// std/std.porth:48:34: OP_INLINED 394
addr_25521: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25522: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_25523: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_25524: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_25525: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_25526: ;;// porth.porth:25:36: OP_INLINED 662
addr_25527: ;;// std/std.porth:48:34: OP_INLINED 394
addr_25528: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25529: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_25530: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_25531: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_25532: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_25533: ;;// porth.porth:26:17: OP_INLINED 36
addr_25534: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25535: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_25536: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25537: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_25538: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25539: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_25540: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_25541: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_25542: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_25543: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_25544: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_25545: ;;// porth.porth:27:36: OP_INLINED 662
addr_25546: ;;// std/std.porth:48:34: OP_INLINED 394
addr_25547: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25548: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_25549: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_25550: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_25551: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_25552: ;;// porth.porth:28:17: OP_INLINED 36
addr_25553: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25554: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_25555: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25556: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_25557: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25558: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_25559: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_25560: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_25561: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_25562: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_25563: ;;// porth.porth:3186:7: OP_PUSH_STR 836
    mov rax, 27
    push rax
    lea rax, [str_836]
    push rax
addr_25564: ;;// porth.porth:3186:37: OP_INLINED 676
addr_25565: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_25566: ;;// std/std.porth:50:37: OP_INLINED 662
addr_25567: ;;// std/std.porth:48:34: OP_INLINED 394
addr_25568: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25569: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_25570: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_25571: ;;// porth.porth:3187:7: OP_PUSH_INT 13
    mov rax, 13
    push rax
addr_25572: ;;// porth.porth:3187:18: OP_CALL 6274
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_6274
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_25573: ;;// porth.porth:3187:37: OP_INLINED 676
addr_25574: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_25575: ;;// std/std.porth:50:37: OP_INLINED 662
addr_25576: ;;// std/std.porth:48:34: OP_INLINED 394
addr_25577: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25578: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_25579: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_25580: ;;// porth.porth:3188:7: OP_PUSH_STR 837
    mov rax, 18
    push rax
    lea rax, [str_837]
    push rax
addr_25581: ;;// porth.porth:3188:37: OP_INLINED 676
addr_25582: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_25583: ;;// std/std.porth:50:37: OP_INLINED 662
addr_25584: ;;// std/std.porth:48:34: OP_INLINED 394
addr_25585: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25586: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_25587: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_25588: ;;// porth.porth:3189:7: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25589: ;;// porth.porth:3189:9: OP_INLINED 418
addr_25590: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_25591: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_25592: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_25593: ;;// porth.porth:3191:7: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_25594: ;;// porth.porth:3192:5: OP_END_IF 0
addr_25595: ;;// porth.porth:3193:3: OP_DO 2
    pop rax
    test rax, rax
    jz addr_25597
addr_25596: ;;// porth.porth:3193:6: OP_END_WHILE 611
    jmp addr_24985
addr_25597: ;;// porth.porth:3195:3: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_25598: ;;// porth.porth:3195:9: OP_INLINED 16
addr_25599: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_25600: ;;// porth.porth:3195:14: OP_CALL 24786
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_24786
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_25601: ;;// porth.porth:3197:3: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_25602: ;;// porth.porth:3197:9: OP_INLINED 16
addr_25603: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_25604: ;;// porth.porth:3198:1: OP_RET 88
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 88
    ret
addr_25605: ;;// porth.porth:3211:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_25606: ;;// porth.porth:3216:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_25607: ;;// porth.porth:3217:5: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_25608: ;;// porth.porth:3217:7: OP_WHILE 44
addr_25609: ;;// porth.porth:3218:7: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_25610: ;;// porth.porth:3218:11: OP_PUSH_GLOBAL_MEM 15405248
    lea rax, [mem+15405248]
    push rax
addr_25611: ;;// porth.porth:3218:25: OP_INLINED 16
addr_25612: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_25613: ;;// porth.porth:3218:30: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_25614: ;;// porth.porth:3218:32: OP_IF 32
    pop rax
    test rax, rax
    jz addr_25646
addr_25615: ;;// porth.porth:3219:9: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_25616: ;;// porth.porth:3219:13: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_25617: ;;// porth.porth:3219:28: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_25618: ;;// porth.porth:3219:30: OP_PUSH_GLOBAL_MEM 15388864
    lea rax, [mem+15388864]
    push rax
addr_25619: ;;// porth.porth:3219:38: OP_INLINED 73
addr_25620: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_25621: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25622: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_25623: ;;// porth.porth:3220:9: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_25624: ;;// porth.porth:3221:11: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_25625: ;;// porth.porth:3221:18: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_25626: ;;// porth.porth:3221:30: OP_INLINED 36
addr_25627: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25628: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_25629: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25630: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_25631: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25632: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_25633: ;;// porth.porth:3221:35: OP_INLINED 0
addr_25634: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_25635: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_25636: ;;// porth.porth:3222:11: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_25637: ;;// porth.porth:3223:11: OP_CALL 589
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_589
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_25638: ;;// porth.porth:3224:11: OP_INLINED 131
addr_25639: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_25640: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25641: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25642: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_25643: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_25644: ;;// porth.porth:3225:9: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_25645: ;;// porth.porth:3226:7: OP_ELSE 2
    jmp addr_25647
addr_25646: ;;// porth.porth:3226:12: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_25647: ;;// porth.porth:3226:18: OP_END_IF 0
addr_25648: ;;// porth.porth:3227:5: OP_DO 4
    pop rax
    test rax, rax
    jz addr_25652
addr_25649: ;;// porth.porth:3227:8: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25650: ;;// porth.porth:3227:10: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25651: ;;// porth.porth:3227:12: OP_END_WHILE 43
    jmp addr_25608
addr_25652: ;;// porth.porth:3229:5: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_25653: ;;// porth.porth:3230:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_25654: ;;// porth.porth:3230:13: OP_PUSH_GLOBAL_MEM 15405248
    lea rax, [mem+15405248]
    push rax
addr_25655: ;;// porth.porth:3230:27: OP_INLINED 16
addr_25656: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_25657: ;;// porth.porth:3230:32: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_25658: ;;// porth.porth:3230:34: OP_IF 10
    pop rax
    test rax, rax
    jz addr_25668
addr_25659: ;;// porth.porth:3231:9: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_25660: ;;// porth.porth:3231:15: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_25661: ;;// porth.porth:3231:30: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_25662: ;;// porth.porth:3231:32: OP_PUSH_GLOBAL_MEM 15388864
    lea rax, [mem+15388864]
    push rax
addr_25663: ;;// porth.porth:3231:40: OP_INLINED 73
addr_25664: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_25665: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25666: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_25667: ;;// porth.porth:3232:7: OP_ELSE 2
    jmp addr_25669
addr_25668: ;;// porth.porth:3233:9: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_25669: ;;// porth.porth:3234:7: OP_END_IF 0
addr_25670: ;;// porth.porth:3235:5: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_25671: ;;// porth.porth:3236:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_25672: ;;// porth.porth:3237:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_25673: ;;// porth.porth:3239:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_25674: ;;// porth.porth:3244:3: OP_PUSH_GLOBAL_MEM 15405248
    lea rax, [mem+15405248]
    push rax
addr_25675: ;;// porth.porth:3244:17: OP_INLINED 16
addr_25676: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_25677: ;;// porth.porth:3244:22: OP_PUSH_INT 1024
    mov rax, 1024
    push rax
addr_25678: ;;// porth.porth:3244:34: OP_INTRINSIC >=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovge rcx, rdx
    push rcx
addr_25679: ;;// porth.porth:3244:37: OP_IF 22
    pop rax
    test rax, rax
    jz addr_25701
addr_25680: ;;// porth.porth:3245:5: OP_PUSH_STR 838
    mov rax, 18
    push rax
    lea rax, [str_838]
    push rax
addr_25681: ;;// porth.porth:3245:10: OP_INLINED 676
addr_25682: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_25683: ;;// std/std.porth:50:37: OP_INLINED 662
addr_25684: ;;// std/std.porth:48:34: OP_INLINED 394
addr_25685: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25686: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_25687: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_25688: ;;// porth.porth:3245:16: OP_PUSH_STR 839
    mov rax, 37
    push rax
    lea rax, [str_839]
    push rax
addr_25689: ;;// porth.porth:3245:57: OP_INLINED 676
addr_25690: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_25691: ;;// std/std.porth:50:37: OP_INLINED 662
addr_25692: ;;// std/std.porth:48:34: OP_INLINED 394
addr_25693: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25694: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_25695: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_25696: ;;// porth.porth:3246:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25697: ;;// porth.porth:3246:7: OP_INLINED 418
addr_25698: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_25699: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_25700: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_25701: ;;// porth.porth:3247:3: OP_END_IF 0
addr_25702: ;;// porth.porth:3249:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_25703: ;;// porth.porth:3250:5: OP_PUSH_GLOBAL_MEM 15405248
    lea rax, [mem+15405248]
    push rax
addr_25704: ;;// porth.porth:3250:19: OP_INLINED 16
addr_25705: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_25706: ;;// porth.porth:3251:5: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_25707: ;;// porth.porth:3251:20: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_25708: ;;// porth.porth:3252:5: OP_PUSH_GLOBAL_MEM 15388864
    lea rax, [mem+15388864]
    push rax
addr_25709: ;;// porth.porth:3252:13: OP_INLINED 73
addr_25710: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_25711: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25712: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_25713: ;;// porth.porth:3254:5: OP_PUSH_GLOBAL_MEM 15405248
    lea rax, [mem+15405248]
    push rax
addr_25714: ;;// porth.porth:3254:19: OP_INLINED 161
addr_25715: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_25716: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_25717: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25718: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25719: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25720: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_25721: ;;// porth.porth:3256:5: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_25722: ;;// porth.porth:3257:7: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_25723: ;;// porth.porth:3257:17: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_25724: ;;// porth.porth:3257:24: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_25725: ;;// porth.porth:3257:36: OP_INLINED 36
addr_25726: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25727: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_25728: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25729: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_25730: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25731: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_25732: ;;// porth.porth:3257:41: OP_INLINED 27
addr_25733: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_25734: ;;// porth.porth:3258:7: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_25735: ;;// porth.porth:3258:17: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_25736: ;;// porth.porth:3258:24: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_25737: ;;// porth.porth:3258:41: OP_INLINED 36
addr_25738: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25739: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_25740: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25741: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_25742: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25743: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_25744: ;;// porth.porth:3258:46: OP_INLINED 24
addr_25745: ;;// std/core.porth:26:31: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_25746: ;;// porth.porth:3259:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_25747: ;;// porth.porth:3260:5: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_25748: ;;// porth.porth:3261:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_25749: ;;// porth.porth:3262:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_25750: ;;// porth.porth:3268:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_25751: ;;// porth.porth:3271:3: OP_PUSH_GLOBAL_MEM 15421640
    lea rax, [mem+15421640]
    push rax
addr_25752: ;;// porth.porth:3271:23: OP_INLINED 16
addr_25753: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_25754: ;;// porth.porth:3272:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_25755: ;;// porth.porth:3273:5: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_25756: ;;// porth.porth:3273:11: OP_PUSH_INT 1024
    mov rax, 1024
    push rax
addr_25757: ;;// porth.porth:3273:29: OP_INTRINSIC >=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovge rcx, rdx
    push rcx
addr_25758: ;;// porth.porth:3273:32: OP_IF 22
    pop rax
    test rax, rax
    jz addr_25780
addr_25759: ;;// porth.porth:3274:7: OP_PUSH_STR 840
    mov rax, 18
    push rax
    lea rax, [str_840]
    push rax
addr_25760: ;;// porth.porth:3274:12: OP_INLINED 676
addr_25761: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_25762: ;;// std/std.porth:50:37: OP_INLINED 662
addr_25763: ;;// std/std.porth:48:34: OP_INLINED 394
addr_25764: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25765: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_25766: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_25767: ;;// porth.porth:3274:18: OP_PUSH_STR 841
    mov rax, 52
    push rax
    lea rax, [str_841]
    push rax
addr_25768: ;;// porth.porth:3274:74: OP_INLINED 676
addr_25769: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_25770: ;;// std/std.porth:50:37: OP_INLINED 662
addr_25771: ;;// std/std.porth:48:34: OP_INLINED 394
addr_25772: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25773: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_25774: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_25775: ;;// porth.porth:3275:7: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25776: ;;// porth.porth:3275:9: OP_INLINED 418
addr_25777: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_25778: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_25779: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_25780: ;;// porth.porth:3276:5: OP_END_IF 0
addr_25781: ;;// porth.porth:3278:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_25782: ;;// porth.porth:3278:7: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_25783: ;;// porth.porth:3279:5: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_25784: ;;// porth.porth:3279:11: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_25785: ;;// porth.porth:3279:23: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_25786: ;;// porth.porth:3279:25: OP_PUSH_GLOBAL_MEM 15405256
    lea rax, [mem+15405256]
    push rax
addr_25787: ;;// porth.porth:3279:39: OP_INLINED 73
addr_25788: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_25789: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25790: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_25791: ;;// porth.porth:3280:5: OP_INLINED 782
addr_25792: ;;// std/std.porth:71:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_25793: ;;// std/std.porth:72:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_25794: ;;// std/std.porth:72:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_25795: ;;// std/std.porth:72:9: OP_INLINED 729
addr_25796: ;;// std/std.porth:60:35: OP_INLINED 684
addr_25797: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_25798: ;;// std/std.porth:56:57: OP_INLINED 36
addr_25799: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25800: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_25801: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25802: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_25803: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25804: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_25805: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_25806: ;;// std/std.porth:73:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_25807: ;;// std/std.porth:73:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_25808: ;;// std/std.porth:73:9: OP_INLINED 741
addr_25809: ;;// std/std.porth:61:34: OP_INLINED 694
addr_25810: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_25811: ;;// std/std.porth:57:55: OP_INLINED 36
addr_25812: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25813: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_25814: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25815: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_25816: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25817: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_25818: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_25819: ;;// std/std.porth:74:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_25820: ;;// porth.porth:3282:5: OP_PUSH_GLOBAL_MEM 15421640
    lea rax, [mem+15421640]
    push rax
addr_25821: ;;// porth.porth:3282:25: OP_INLINED 161
addr_25822: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_25823: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_25824: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25825: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25826: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25827: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_25828: ;;// porth.porth:3283:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_25829: ;;// porth.porth:3284:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_25830: ;;// porth.porth:3286:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_25831: ;;// porth.porth:3292:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_25832: ;;// porth.porth:3293:5: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_25833: ;;// porth.porth:3294:5: OP_INLINED 2414
addr_25834: ;;// std/std.porth:506:31: OP_PUSH_GLOBAL_MEM 8
    lea rax, [mem+8]
    push rax
addr_25835: ;;// std/std.porth:506:41: OP_PUSH_GLOBAL_MEM 8388616
    lea rax, [mem+8388616]
    push rax
addr_25836: ;;// std/std.porth:506:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_25837: ;;// std/std.porth:506:54: OP_INLINED 36
addr_25838: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25839: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_25840: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25841: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_25842: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25843: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_25844: ;;// porth.porth:3295:5: OP_WHILE 97
addr_25845: ;;// porth.porth:3296:7: OP_BIND_PEEK 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    mov rbx, [rsp+0]
    mov [rax+8], rbx
    mov rbx, [rsp+8]
    mov [rax+0], rbx
addr_25846: ;;// porth.porth:3297:9: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_25847: ;;// porth.porth:3297:11: OP_PUSH_GLOBAL_MEM 15421640
    lea rax, [mem+15421640]
    push rax
addr_25848: ;;// porth.porth:3297:31: OP_INLINED 16
addr_25849: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_25850: ;;// porth.porth:3297:36: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_25851: ;;// porth.porth:3297:38: OP_IF 67
    pop rax
    test rax, rax
    jz addr_25918
addr_25852: ;;// porth.porth:3298:11: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_25853: ;;// porth.porth:3298:13: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_25854: ;;// porth.porth:3298:25: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_25855: ;;// porth.porth:3298:27: OP_PUSH_GLOBAL_MEM 15405256
    lea rax, [mem+15405256]
    push rax
addr_25856: ;;// porth.porth:3298:41: OP_INLINED 73
addr_25857: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_25858: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25859: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_25860: ;;// porth.porth:3298:46: OP_INLINED 753
addr_25861: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_25862: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_25863: ;;// std/std.porth:65:7: OP_INLINED 704
addr_25864: ;;// std/std.porth:58:38: OP_INLINED 684
addr_25865: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_25866: ;;// std/std.porth:56:57: OP_INLINED 36
addr_25867: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25868: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_25869: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25870: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_25871: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25872: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_25873: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_25874: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_25875: ;;// std/std.porth:66:7: OP_INLINED 716
addr_25876: ;;// std/std.porth:59:37: OP_INLINED 694
addr_25877: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_25878: ;;// std/std.porth:57:55: OP_INLINED 36
addr_25879: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25880: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_25881: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25882: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_25883: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25884: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_25885: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_25886: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_25887: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_25888: ;;// porth.porth:3298:51: OP_INLINED 2496
addr_25889: ;;// std/std.porth:526:42: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_25890: ;;// std/std.porth:526:47: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_25891: ;;// std/std.porth:526:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_25892: ;;// porth.porth:3298:62: OP_INTRINSIC drop
    pop rax
addr_25893: ;;// porth.porth:3299:11: OP_PUSH_STR 842
    mov rax, 1
    push rax
    lea rax, [str_842]
    push rax
addr_25894: ;;// porth.porth:3299:51: OP_INLINED 2496
addr_25895: ;;// std/std.porth:526:42: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_25896: ;;// std/std.porth:526:47: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_25897: ;;// std/std.porth:526:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_25898: ;;// porth.porth:3299:62: OP_INTRINSIC drop
    pop rax
addr_25899: ;;// porth.porth:3300:11: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_25900: ;;// porth.porth:3300:13: OP_PUSH_BIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov rbx, [rax]
    push rbx
addr_25901: ;;// porth.porth:3300:51: OP_INLINED 2496
addr_25902: ;;// std/std.porth:526:42: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_25903: ;;// std/std.porth:526:47: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_25904: ;;// std/std.porth:526:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_25905: ;;// porth.porth:3300:62: OP_INTRINSIC drop
    pop rax
addr_25906: ;;// porth.porth:3301:11: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25907: ;;// porth.porth:3301:51: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_25908: ;;// porth.porth:3301:62: OP_INTRINSIC drop
    pop rax
addr_25909: ;;// porth.porth:3302:11: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_25910: ;;// porth.porth:3302:16: OP_CALL 3151
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_3151
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_25911: ;;// porth.porth:3302:28: OP_INLINED 131
addr_25912: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_25913: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25914: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25915: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_25916: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_25917: ;;// porth.porth:3303:9: OP_ELSE 2
    jmp addr_25919
addr_25918: ;;// porth.porth:3303:14: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_25919: ;;// porth.porth:3303:20: OP_END_IF 0
addr_25920: ;;// porth.porth:3304:7: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_25921: ;;// porth.porth:3305:5: OP_DO 20
    pop rax
    test rax, rax
    jz addr_25941
addr_25922: ;;// porth.porth:3306:7: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_25923: ;;// porth.porth:3307:9: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_25924: ;;// porth.porth:3307:11: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25925: ;;// porth.porth:3307:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25926: ;;// porth.porth:3308:9: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_25927: ;;// porth.porth:3308:14: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_25928: ;;// porth.porth:3308:18: OP_INLINED 2426
addr_25929: ;;// std/std.porth:509:31: OP_PUSH_GLOBAL_MEM 8
    lea rax, [mem+8]
    push rax
addr_25930: ;;// std/std.porth:509:41: OP_INLINED 78
addr_25931: ;;// std/core.porth:68:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25932: ;;// std/core.porth:68:8: OP_INTRINSIC cast(int)
addr_25933: ;;// std/core.porth:69:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25934: ;;// std/core.porth:69:8: OP_INTRINSIC cast(int)
addr_25935: ;;// std/core.porth:70:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_25936: ;;// std/std.porth:509:50: OP_PUSH_GLOBAL_MEM 8388616
    lea rax, [mem+8388616]
    push rax
addr_25937: ;;// std/std.porth:509:59: OP_INLINED 30
addr_25938: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_25939: ;;// porth.porth:3309:7: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_25940: ;;// porth.porth:3310:5: OP_END_WHILE 96
    jmp addr_25844
addr_25941: ;;// porth.porth:3312:5: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_25942: ;;// porth.porth:3313:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_25943: ;;// porth.porth:3313:9: OP_PUSH_GLOBAL_MEM 15421640
    lea rax, [mem+15421640]
    push rax
addr_25944: ;;// porth.porth:3313:29: OP_INLINED 16
addr_25945: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_25946: ;;// porth.porth:3313:34: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_25947: ;;// porth.porth:3313:36: OP_IF 9
    pop rax
    test rax, rax
    jz addr_25956
addr_25948: ;;// porth.porth:3314:9: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_25949: ;;// porth.porth:3314:14: OP_INLINED 657
addr_25950: ;;// std/std.porth:45:43: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_25951: ;;// std/std.porth:45:47: OP_CALL 564
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_564
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_25952: ;;// std/std.porth:45:55: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_25953: ;;// porth.porth:3314:26: OP_CALL 4419
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_4419
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_25954: ;;// porth.porth:3314:35: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_25955: ;;// porth.porth:3315:7: OP_ELSE 5
    jmp addr_25960
addr_25956: ;;// porth.porth:3316:9: OP_INLINED 812
addr_25957: ;;// std/std.porth:77:36: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_25958: ;;// std/std.porth:77:38: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_25959: ;;// porth.porth:3316:18: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_25960: ;;// porth.porth:3317:7: OP_END_IF 0
addr_25961: ;;// porth.porth:3318:5: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_25962: ;;// porth.porth:3319:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_25963: ;;// porth.porth:3320:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_25964: ;;// porth.porth:3326:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_25965: ;;// porth.porth:3327:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_25966: ;;// porth.porth:3328:5: OP_PUSH_GLOBAL_MEM 15425744
    lea rax, [mem+15425744]
    push rax
addr_25967: ;;// porth.porth:3328:21: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_25968: ;;// porth.porth:3328:25: OP_PUSH_INT 256
    mov rax, 256
    push rax
addr_25969: ;;// porth.porth:3328:39: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25970: ;;// porth.porth:3328:41: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_25971: ;;// porth.porth:3328:43: OP_INTRINSIC >=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovge rcx, rdx
    push rcx
addr_25972: ;;// porth.porth:3328:46: OP_IF 22
    pop rax
    test rax, rax
    jz addr_25994
addr_25973: ;;// porth.porth:3329:7: OP_PUSH_STR 843
    mov rax, 18
    push rax
    lea rax, [str_843]
    push rax
addr_25974: ;;// porth.porth:3329:12: OP_INLINED 676
addr_25975: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_25976: ;;// std/std.porth:50:37: OP_INLINED 662
addr_25977: ;;// std/std.porth:48:34: OP_INLINED 394
addr_25978: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25979: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_25980: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_25981: ;;// porth.porth:3329:18: OP_PUSH_STR 844
    mov rax, 42
    push rax
    lea rax, [str_844]
    push rax
addr_25982: ;;// porth.porth:3329:64: OP_INLINED 676
addr_25983: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_25984: ;;// std/std.porth:50:37: OP_INLINED 662
addr_25985: ;;// std/std.porth:48:34: OP_INLINED 394
addr_25986: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25987: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_25988: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_25989: ;;// porth.porth:3330:7: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_25990: ;;// porth.porth:3330:9: OP_INLINED 418
addr_25991: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_25992: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_25993: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_25994: ;;// porth.porth:3331:5: OP_END_IF 0
addr_25995: ;;// porth.porth:3333:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_25996: ;;// porth.porth:3333:9: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_25997: ;;// porth.porth:3334:7: OP_PUSH_GLOBAL_MEM 15425744
    lea rax, [mem+15425744]
    push rax
addr_25998: ;;// porth.porth:3334:23: OP_INLINED 16
addr_25999: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_26000: ;;// porth.porth:3334:28: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_26001: ;;// porth.porth:3334:40: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_26002: ;;// porth.porth:3334:42: OP_PUSH_GLOBAL_MEM 15421648
    lea rax, [mem+15421648]
    push rax
addr_26003: ;;// porth.porth:3334:52: OP_INLINED 73
addr_26004: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_26005: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26006: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_26007: ;;// porth.porth:3335:5: OP_INLINED 782
addr_26008: ;;// std/std.porth:71:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_26009: ;;// std/std.porth:72:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26010: ;;// std/std.porth:72:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_26011: ;;// std/std.porth:72:9: OP_INLINED 729
addr_26012: ;;// std/std.porth:60:35: OP_INLINED 684
addr_26013: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_26014: ;;// std/std.porth:56:57: OP_INLINED 36
addr_26015: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26016: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26017: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26018: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26019: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26020: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26021: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_26022: ;;// std/std.porth:73:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_26023: ;;// std/std.porth:73:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_26024: ;;// std/std.porth:73:9: OP_INLINED 741
addr_26025: ;;// std/std.porth:61:34: OP_INLINED 694
addr_26026: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_26027: ;;// std/std.porth:57:55: OP_INLINED 36
addr_26028: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26029: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26030: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26031: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26032: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26033: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26034: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_26035: ;;// std/std.porth:74:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_26036: ;;// porth.porth:3336:5: OP_PUSH_GLOBAL_MEM 15425744
    lea rax, [mem+15425744]
    push rax
addr_26037: ;;// porth.porth:3336:21: OP_INLINED 161
addr_26038: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_26039: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_26040: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_26041: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26042: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26043: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_26044: ;;// porth.porth:3337:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_26045: ;;// porth.porth:3338:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_26046: ;;// porth.porth:3340:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_26047: ;;// porth.porth:3343:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_26048: ;;// porth.porth:3344:5: OP_INLINED 2414
addr_26049: ;;// std/std.porth:506:31: OP_PUSH_GLOBAL_MEM 8
    lea rax, [mem+8]
    push rax
addr_26050: ;;// std/std.porth:506:41: OP_PUSH_GLOBAL_MEM 8388616
    lea rax, [mem+8388616]
    push rax
addr_26051: ;;// std/std.porth:506:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_26052: ;;// std/std.porth:506:54: OP_INLINED 36
addr_26053: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26054: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26055: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26056: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26057: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26058: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26059: ;;// porth.porth:3345:7: OP_PUSH_INT 64
    mov rax, 64
    push rax
addr_26060: ;;// porth.porth:3345:21: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_26061: ;;// porth.porth:3346:7: OP_PUSH_INT 72
    mov rax, 72
    push rax
addr_26062: ;;// porth.porth:3346:21: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_26063: ;;// porth.porth:3347:7: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_26064: ;;// porth.porth:3348:9: OP_PUSH_INT 64
    mov rax, 64
    push rax
addr_26065: ;;// porth.porth:3348:23: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_26066: ;;// porth.porth:3348:25: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26067: ;;// porth.porth:3348:31: OP_CALL 2169
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2169
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_26068: ;;// porth.porth:3348:38: OP_INTRINSIC drop
    pop rax
addr_26069: ;;// porth.porth:3349:9: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_26070: ;;// porth.porth:3349:24: OP_CALL 2888
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2888
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_26071: ;;// porth.porth:3349:36: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26072: ;;// porth.porth:3349:42: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_26073: ;;// porth.porth:3349:58: OP_INLINED 36
addr_26074: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26075: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26076: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26077: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26078: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26079: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26080: ;;// porth.porth:3349:63: OP_INLINED 782
addr_26081: ;;// std/std.porth:71:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_26082: ;;// std/std.porth:72:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26083: ;;// std/std.porth:72:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_26084: ;;// std/std.porth:72:9: OP_INLINED 729
addr_26085: ;;// std/std.porth:60:35: OP_INLINED 684
addr_26086: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_26087: ;;// std/std.porth:56:57: OP_INLINED 36
addr_26088: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26089: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26090: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26091: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26092: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26093: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26094: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_26095: ;;// std/std.porth:73:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_26096: ;;// std/std.porth:73:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_26097: ;;// std/std.porth:73:9: OP_INLINED 741
addr_26098: ;;// std/std.porth:61:34: OP_INLINED 694
addr_26099: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_26100: ;;// std/std.porth:57:55: OP_INLINED 36
addr_26101: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26102: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26103: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26104: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26105: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26106: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26107: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_26108: ;;// std/std.porth:74:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_26109: ;;// porth.porth:3350:9: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_26110: ;;// porth.porth:3350:24: OP_INLINED 657
addr_26111: ;;// std/std.porth:45:43: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_26112: ;;// std/std.porth:45:47: OP_CALL 564
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_564
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_26113: ;;// std/std.porth:45:55: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26114: ;;// porth.porth:3350:36: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26115: ;;// porth.porth:3350:42: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_26116: ;;// porth.porth:3350:58: OP_INLINED 36
addr_26117: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26118: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26119: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26120: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26121: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26122: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26123: ;;// porth.porth:3350:63: OP_INLINED 782
addr_26124: ;;// std/std.porth:71:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_26125: ;;// std/std.porth:72:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26126: ;;// std/std.porth:72:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_26127: ;;// std/std.porth:72:9: OP_INLINED 729
addr_26128: ;;// std/std.porth:60:35: OP_INLINED 684
addr_26129: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_26130: ;;// std/std.porth:56:57: OP_INLINED 36
addr_26131: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26132: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26133: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26134: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26135: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26136: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26137: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_26138: ;;// std/std.porth:73:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_26139: ;;// std/std.porth:73:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_26140: ;;// std/std.porth:73:9: OP_INLINED 741
addr_26141: ;;// std/std.porth:61:34: OP_INLINED 694
addr_26142: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_26143: ;;// std/std.porth:57:55: OP_INLINED 36
addr_26144: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26145: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26146: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26147: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26148: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26149: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26150: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_26151: ;;// std/std.porth:74:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_26152: ;;// porth.porth:3352:9: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_26153: ;;// porth.porth:3352:15: OP_PUSH_GLOBAL_MEM 15196248
    lea rax, [mem+15196248]
    push rax
addr_26154: ;;// porth.porth:3352:27: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_26155: ;;// porth.porth:3354:9: OP_WHILE 7034
addr_26156: ;;// porth.porth:3354:15: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_26157: ;;// porth.porth:3354:21: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26158: ;;// porth.porth:3354:27: OP_CALL 8340
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_8340
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_26159: ;;// porth.porth:3354:44: OP_DO 7030
    pop rax
    test rax, rax
    jz addr_33189
addr_26160: ;;// porth.porth:3357:11: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_26161: ;;// porth.porth:3357:17: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_26162: ;;// porth.porth:3357:28: OP_INLINED 36
addr_26163: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26164: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26165: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26166: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26167: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26168: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26169: ;;// porth.porth:3358:11: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_26170: ;;// porth.porth:3358:17: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_26171: ;;// porth.porth:3358:27: OP_INLINED 36
addr_26172: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26173: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26174: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26175: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26176: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26177: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26178: ;;// porth.porth:3359:11: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_26179: ;;// porth.porth:3359:17: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_26180: ;;// porth.porth:3359:29: OP_INLINED 36
addr_26181: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26182: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26183: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26184: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26185: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26186: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26187: ;;// porth.porth:3361:11: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_26188: ;;// porth.porth:3362:13: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26189: ;;// porth.porth:3362:18: OP_INLINED 16
addr_26190: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_26191: ;;// porth.porth:3362:23: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_26192: ;;// porth.porth:3362:33: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_26193: ;;// porth.porth:3362:35: OP_IF 140
    pop rax
    test rax, rax
    jz addr_26333
addr_26194: ;;// porth.porth:3363:15: OP_PUSH_GLOBAL_MEM 15196248
    lea rax, [mem+15196248]
    push rax
addr_26195: ;;// porth.porth:3363:27: OP_INLINED 12
addr_26196: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_26197: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_26198: ;;// porth.porth:3363:33: OP_INLINED 131
addr_26199: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_26200: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_26201: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26202: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_26203: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_26204: ;;// porth.porth:3363:38: OP_IF 121
    pop rax
    test rax, rax
    jz addr_26325
addr_26205: ;;// porth.porth:3364:17: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_26206: ;;// porth.porth:3364:70: OP_INLINED 5367
addr_26207: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_26208: ;;// porth.porth:32:35: OP_INLINED 5195
addr_26209: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_26210: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26211: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_26212: ;;// porth.porth:24:23: OP_INLINED 36
addr_26213: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26214: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26215: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26216: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26217: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26218: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26219: ;;// porth.porth:24:28: OP_INLINED 753
addr_26220: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_26221: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26222: ;;// std/std.porth:65:7: OP_INLINED 704
addr_26223: ;;// std/std.porth:58:38: OP_INLINED 684
addr_26224: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_26225: ;;// std/std.porth:56:57: OP_INLINED 36
addr_26226: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26227: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26228: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26229: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26230: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26231: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26232: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_26233: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26234: ;;// std/std.porth:66:7: OP_INLINED 716
addr_26235: ;;// std/std.porth:59:37: OP_INLINED 694
addr_26236: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_26237: ;;// std/std.porth:57:55: OP_INLINED 36
addr_26238: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26239: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26240: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26241: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26242: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26243: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26244: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_26245: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_26246: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_26247: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_26248: ;;// porth.porth:24:36: OP_INLINED 662
addr_26249: ;;// std/std.porth:48:34: OP_INLINED 394
addr_26250: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_26251: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_26252: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_26253: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_26254: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_26255: ;;// porth.porth:25:36: OP_INLINED 662
addr_26256: ;;// std/std.porth:48:34: OP_INLINED 394
addr_26257: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_26258: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_26259: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_26260: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26261: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_26262: ;;// porth.porth:26:17: OP_INLINED 36
addr_26263: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26264: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26265: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26266: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26267: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26268: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26269: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_26270: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_26271: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_26272: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_26273: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_26274: ;;// porth.porth:27:36: OP_INLINED 662
addr_26275: ;;// std/std.porth:48:34: OP_INLINED 394
addr_26276: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_26277: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_26278: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_26279: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26280: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_26281: ;;// porth.porth:28:17: OP_INLINED 36
addr_26282: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26283: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26284: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26285: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26286: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26287: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26288: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_26289: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_26290: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_26291: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_26292: ;;// porth.porth:3365:17: OP_PUSH_STR 845
    mov rax, 9
    push rax
    lea rax, [str_845]
    push rax
addr_26293: ;;// porth.porth:3365:70: OP_INLINED 676
addr_26294: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_26295: ;;// std/std.porth:50:37: OP_INLINED 662
addr_26296: ;;// std/std.porth:48:34: OP_INLINED 394
addr_26297: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_26298: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_26299: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_26300: ;;// porth.porth:3366:17: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26301: ;;// porth.porth:3366:22: OP_INLINED 16
addr_26302: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_26303: ;;// porth.porth:3366:27: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_26304: ;;// porth.porth:3366:40: OP_CALL 10127
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_10127
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_26305: ;;// porth.porth:3366:70: OP_INLINED 676
addr_26306: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_26307: ;;// std/std.porth:50:37: OP_INLINED 662
addr_26308: ;;// std/std.porth:48:34: OP_INLINED 394
addr_26309: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_26310: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_26311: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_26312: ;;// porth.porth:3367:17: OP_PUSH_STR 846
    mov rax, 49
    push rax
    lea rax, [str_846]
    push rax
addr_26313: ;;// porth.porth:3367:70: OP_INLINED 676
addr_26314: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_26315: ;;// std/std.porth:50:37: OP_INLINED 662
addr_26316: ;;// std/std.porth:48:34: OP_INLINED 394
addr_26317: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_26318: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_26319: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_26320: ;;// porth.porth:3368:17: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_26321: ;;// porth.porth:3368:19: OP_INLINED 418
addr_26322: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_26323: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_26324: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_26325: ;;// porth.porth:3369:15: OP_END_IF 0
addr_26326: ;;// porth.porth:3371:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_26327: ;;// porth.porth:3371:27: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_26328: ;;// porth.porth:3371:33: OP_INLINED 16
addr_26329: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_26330: ;;// porth.porth:3371:38: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_26331: ;;// porth.porth:3371:44: OP_CALL 12921
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_12921
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_26332: ;;// porth.porth:3372:13: OP_ELSE 5454
    jmp addr_31786
addr_26333: ;;// porth.porth:3372:18: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26334: ;;// porth.porth:3372:23: OP_INLINED 16
addr_26335: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_26336: ;;// porth.porth:3372:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_26337: ;;// porth.porth:3372:42: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_26338: ;;// porth.porth:3372:44: OP_IFSTAR 5449
    pop rax
    test rax, rax
    jz addr_31787
addr_26339: ;;// porth.porth:3373:15: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_26340: ;;// porth.porth:3373:21: OP_INLINED 16
addr_26341: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_26342: ;;// porth.porth:3374:15: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_26343: ;;// porth.porth:3376:17: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26344: ;;// porth.porth:3376:25: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_26345: ;;// porth.porth:3376:36: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_26346: ;;// porth.porth:3376:38: OP_IF 9
    pop rax
    test rax, rax
    jz addr_26355
addr_26347: ;;// porth.porth:3377:19: OP_PUSH_GLOBAL_MEM 8421424
    lea rax, [mem+8421424]
    push rax
addr_26348: ;;// porth.porth:3377:29: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_26349: ;;// porth.porth:3377:33: OP_CALL 18185
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18185
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_26350: ;;// porth.porth:3378:19: OP_PUSH_INT 10
    mov rax, 10
    push rax
addr_26351: ;;// porth.porth:3378:25: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_26352: ;;// porth.porth:3378:27: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_26353: ;;// porth.porth:3378:33: OP_CALL 12921
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_12921
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_26354: ;;// porth.porth:3379:17: OP_ELSE 247
    jmp addr_26601
addr_26355: ;;// porth.porth:3379:22: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26356: ;;// porth.porth:3379:30: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_26357: ;;// porth.porth:3379:45: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_26358: ;;// porth.porth:3379:47: OP_IFSTAR 244
    pop rax
    test rax, rax
    jz addr_26602
addr_26359: ;;// porth.porth:3380:19: OP_CALL 18285
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18285
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_26360: ;;// porth.porth:3381:19: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_26361: ;;// porth.porth:3382:21: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_26362: ;;// porth.porth:3382:24: OP_INLINED 131
addr_26363: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_26364: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_26365: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26366: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_26367: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_26368: ;;// porth.porth:3382:29: OP_IF 101
    pop rax
    test rax, rax
    jz addr_26469
addr_26369: ;;// porth.porth:3383:23: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_26370: ;;// porth.porth:3383:27: OP_INLINED 5367
addr_26371: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_26372: ;;// porth.porth:32:35: OP_INLINED 5195
addr_26373: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_26374: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26375: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_26376: ;;// porth.porth:24:23: OP_INLINED 36
addr_26377: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26378: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26379: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26380: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26381: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26382: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26383: ;;// porth.porth:24:28: OP_INLINED 753
addr_26384: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_26385: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26386: ;;// std/std.porth:65:7: OP_INLINED 704
addr_26387: ;;// std/std.porth:58:38: OP_INLINED 684
addr_26388: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_26389: ;;// std/std.porth:56:57: OP_INLINED 36
addr_26390: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26391: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26392: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26393: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26394: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26395: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26396: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_26397: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26398: ;;// std/std.porth:66:7: OP_INLINED 716
addr_26399: ;;// std/std.porth:59:37: OP_INLINED 694
addr_26400: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_26401: ;;// std/std.porth:57:55: OP_INLINED 36
addr_26402: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26403: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26404: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26405: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26406: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26407: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26408: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_26409: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_26410: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_26411: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_26412: ;;// porth.porth:24:36: OP_INLINED 662
addr_26413: ;;// std/std.porth:48:34: OP_INLINED 394
addr_26414: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_26415: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_26416: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_26417: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_26418: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_26419: ;;// porth.porth:25:36: OP_INLINED 662
addr_26420: ;;// std/std.porth:48:34: OP_INLINED 394
addr_26421: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_26422: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_26423: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_26424: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26425: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_26426: ;;// porth.porth:26:17: OP_INLINED 36
addr_26427: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26428: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26429: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26430: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26431: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26432: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26433: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_26434: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_26435: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_26436: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_26437: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_26438: ;;// porth.porth:27:36: OP_INLINED 662
addr_26439: ;;// std/std.porth:48:34: OP_INLINED 394
addr_26440: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_26441: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_26442: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_26443: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26444: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_26445: ;;// porth.porth:28:17: OP_INLINED 36
addr_26446: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26447: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26448: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26449: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26450: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26451: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26452: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_26453: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_26454: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_26455: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_26456: ;;// porth.porth:3383:35: OP_PUSH_STR 847
    mov rax, 61
    push rax
    lea rax, [str_847]
    push rax
addr_26457: ;;// porth.porth:3383:100: OP_INLINED 676
addr_26458: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_26459: ;;// std/std.porth:50:37: OP_INLINED 662
addr_26460: ;;// std/std.porth:48:34: OP_INLINED 394
addr_26461: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_26462: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_26463: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_26464: ;;// porth.porth:3384:23: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_26465: ;;// porth.porth:3384:25: OP_INLINED 418
addr_26466: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_26467: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_26468: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_26469: ;;// porth.porth:3385:21: OP_END_IF 0
addr_26470: ;;// porth.porth:3387:21: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26471: ;;// porth.porth:3387:29: OP_PUSH_INT 88
    mov rax, 88
    push rax
addr_26472: ;;// porth.porth:3387:40: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_26473: ;;// porth.porth:3387:42: OP_PUSH_GLOBAL_MEM 8421432
    lea rax, [mem+8421432]
    push rax
addr_26474: ;;// porth.porth:3387:46: OP_INLINED 73
addr_26475: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_26476: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26477: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_26478: ;;// porth.porth:3387:51: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_26479: ;;// porth.porth:3387:59: OP_INLINED 36
addr_26480: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26481: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26482: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26483: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26484: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26485: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26486: ;;// porth.porth:3387:64: OP_INLINED 16
addr_26487: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_26488: ;;// porth.porth:3387:69: OP_PUSH_INT 12
    mov rax, 12
    push rax
addr_26489: ;;// porth.porth:3387:77: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_26490: ;;// porth.porth:3387:80: OP_IF 101
    pop rax
    test rax, rax
    jz addr_26591
addr_26491: ;;// porth.porth:3388:23: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_26492: ;;// porth.porth:3388:27: OP_INLINED 5367
addr_26493: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_26494: ;;// porth.porth:32:35: OP_INLINED 5195
addr_26495: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_26496: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26497: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_26498: ;;// porth.porth:24:23: OP_INLINED 36
addr_26499: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26500: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26501: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26502: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26503: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26504: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26505: ;;// porth.porth:24:28: OP_INLINED 753
addr_26506: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_26507: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26508: ;;// std/std.porth:65:7: OP_INLINED 704
addr_26509: ;;// std/std.porth:58:38: OP_INLINED 684
addr_26510: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_26511: ;;// std/std.porth:56:57: OP_INLINED 36
addr_26512: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26513: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26514: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26515: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26516: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26517: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26518: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_26519: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26520: ;;// std/std.porth:66:7: OP_INLINED 716
addr_26521: ;;// std/std.porth:59:37: OP_INLINED 694
addr_26522: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_26523: ;;// std/std.porth:57:55: OP_INLINED 36
addr_26524: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26525: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26526: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26527: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26528: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26529: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26530: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_26531: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_26532: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_26533: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_26534: ;;// porth.porth:24:36: OP_INLINED 662
addr_26535: ;;// std/std.porth:48:34: OP_INLINED 394
addr_26536: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_26537: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_26538: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_26539: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_26540: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_26541: ;;// porth.porth:25:36: OP_INLINED 662
addr_26542: ;;// std/std.porth:48:34: OP_INLINED 394
addr_26543: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_26544: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_26545: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_26546: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26547: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_26548: ;;// porth.porth:26:17: OP_INLINED 36
addr_26549: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26550: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26551: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26552: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26553: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26554: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26555: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_26556: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_26557: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_26558: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_26559: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_26560: ;;// porth.porth:27:36: OP_INLINED 662
addr_26561: ;;// std/std.porth:48:34: OP_INLINED 394
addr_26562: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_26563: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_26564: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_26565: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26566: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_26567: ;;// porth.porth:28:17: OP_INLINED 36
addr_26568: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26569: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26570: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26571: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26572: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26573: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26574: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_26575: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_26576: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_26577: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_26578: ;;// porth.porth:3388:35: OP_PUSH_STR 848
    mov rax, 42
    push rax
    lea rax, [str_848]
    push rax
addr_26579: ;;// porth.porth:3388:81: OP_INLINED 676
addr_26580: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_26581: ;;// std/std.porth:50:37: OP_INLINED 662
addr_26582: ;;// std/std.porth:48:34: OP_INLINED 394
addr_26583: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_26584: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_26585: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_26586: ;;// porth.porth:3389:23: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_26587: ;;// porth.porth:3389:25: OP_INLINED 418
addr_26588: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_26589: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_26590: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_26591: ;;// porth.porth:3390:21: OP_END_IF 0
addr_26592: ;;// porth.porth:3391:19: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_26593: ;;// porth.porth:3393:19: OP_PUSH_GLOBAL_MEM 8421424
    lea rax, [mem+8421424]
    push rax
addr_26594: ;;// porth.porth:3393:29: OP_INLINED 16
addr_26595: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_26596: ;;// porth.porth:3393:34: OP_CALL 18185
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18185
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_26597: ;;// porth.porth:3394:19: OP_PUSH_INT 11
    mov rax, 11
    push rax
addr_26598: ;;// porth.porth:3394:29: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_26599: ;;// porth.porth:3394:31: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_26600: ;;// porth.porth:3394:37: OP_CALL 12921
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_12921
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_26601: ;;// porth.porth:3395:17: OP_ELSE 357
    jmp addr_26958
addr_26602: ;;// porth.porth:3395:22: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26603: ;;// porth.porth:3395:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_26604: ;;// porth.porth:3395:43: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_26605: ;;// porth.porth:3395:45: OP_IFSTAR 354
    pop rax
    test rax, rax
    jz addr_26959
addr_26606: ;;// porth.porth:3396:19: OP_PUSH_GLOBAL_MEM 15347872
    lea rax, [mem+15347872]
    push rax
addr_26607: ;;// porth.porth:3396:43: OP_INLINED 16
addr_26608: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_26609: ;;// porth.porth:3396:48: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_26610: ;;// porth.porth:3396:50: OP_INTRINSIC <=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovle rcx, rdx
    push rcx
addr_26611: ;;// porth.porth:3396:53: OP_IF 101
    pop rax
    test rax, rax
    jz addr_26712
addr_26612: ;;// porth.porth:3397:21: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_26613: ;;// porth.porth:3397:25: OP_INLINED 5367
addr_26614: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_26615: ;;// porth.porth:32:35: OP_INLINED 5195
addr_26616: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_26617: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26618: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_26619: ;;// porth.porth:24:23: OP_INLINED 36
addr_26620: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26621: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26622: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26623: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26624: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26625: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26626: ;;// porth.porth:24:28: OP_INLINED 753
addr_26627: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_26628: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26629: ;;// std/std.porth:65:7: OP_INLINED 704
addr_26630: ;;// std/std.porth:58:38: OP_INLINED 684
addr_26631: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_26632: ;;// std/std.porth:56:57: OP_INLINED 36
addr_26633: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26634: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26635: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26636: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26637: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26638: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26639: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_26640: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26641: ;;// std/std.porth:66:7: OP_INLINED 716
addr_26642: ;;// std/std.porth:59:37: OP_INLINED 694
addr_26643: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_26644: ;;// std/std.porth:57:55: OP_INLINED 36
addr_26645: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26646: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26647: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26648: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26649: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26650: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26651: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_26652: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_26653: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_26654: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_26655: ;;// porth.porth:24:36: OP_INLINED 662
addr_26656: ;;// std/std.porth:48:34: OP_INLINED 394
addr_26657: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_26658: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_26659: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_26660: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_26661: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_26662: ;;// porth.porth:25:36: OP_INLINED 662
addr_26663: ;;// std/std.porth:48:34: OP_INLINED 394
addr_26664: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_26665: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_26666: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_26667: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26668: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_26669: ;;// porth.porth:26:17: OP_INLINED 36
addr_26670: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26671: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26672: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26673: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26674: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26675: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26676: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_26677: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_26678: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_26679: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_26680: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_26681: ;;// porth.porth:27:36: OP_INLINED 662
addr_26682: ;;// std/std.porth:48:34: OP_INLINED 394
addr_26683: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_26684: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_26685: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_26686: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26687: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_26688: ;;// porth.porth:28:17: OP_INLINED 36
addr_26689: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26690: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26691: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26692: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26693: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26694: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26695: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_26696: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_26697: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_26698: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_26699: ;;// porth.porth:3398:21: OP_PUSH_STR 849
    mov rax, 50
    push rax
    lea rax, [str_849]
    push rax
addr_26700: ;;// porth.porth:3398:75: OP_INLINED 676
addr_26701: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_26702: ;;// std/std.porth:50:37: OP_INLINED 662
addr_26703: ;;// std/std.porth:48:34: OP_INLINED 394
addr_26704: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_26705: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_26706: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_26707: ;;// porth.porth:3399:21: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_26708: ;;// porth.porth:3399:23: OP_INLINED 418
addr_26709: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_26710: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_26711: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_26712: ;;// porth.porth:3400:19: OP_END_IF 0
addr_26713: ;;// porth.porth:3402:19: OP_CALL 18235
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18235
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_26714: ;;// porth.porth:3403:19: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_26715: ;;// porth.porth:3403:23: OP_PUSH_INT 88
    mov rax, 88
    push rax
addr_26716: ;;// porth.porth:3403:34: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_26717: ;;// porth.porth:3403:36: OP_PUSH_GLOBAL_MEM 8421432
    lea rax, [mem+8421432]
    push rax
addr_26718: ;;// porth.porth:3403:40: OP_INLINED 73
addr_26719: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_26720: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26721: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_26722: ;;// porth.porth:3404:19: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_26723: ;;// porth.porth:3404:23: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_26724: ;;// porth.porth:3404:31: OP_INLINED 36
addr_26725: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26726: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26727: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26728: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26729: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26730: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26731: ;;// porth.porth:3404:36: OP_INLINED 16
addr_26732: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_26733: ;;// porth.porth:3405:19: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_26734: ;;// porth.porth:3406:21: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_26735: ;;// porth.porth:3406:29: OP_PUSH_INT 10
    mov rax, 10
    push rax
addr_26736: ;;// porth.porth:3406:35: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_26737: ;;// porth.porth:3406:37: OP_IF 28
    pop rax
    test rax, rax
    jz addr_26765
addr_26738: ;;// porth.porth:3407:23: OP_PUSH_GLOBAL_MEM 8421424
    lea rax, [mem+8421424]
    push rax
addr_26739: ;;// porth.porth:3407:33: OP_INLINED 16
addr_26740: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_26741: ;;// porth.porth:3408:23: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_26742: ;;// porth.porth:3409:25: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26743: ;;// porth.porth:3409:36: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_26744: ;;// porth.porth:3409:42: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_26745: ;;// porth.porth:3409:44: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_26746: ;;// porth.porth:3409:46: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26747: ;;// porth.porth:3409:48: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_26748: ;;// porth.porth:3409:54: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_26749: ;;// porth.porth:3409:65: OP_INLINED 36
addr_26750: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26751: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26752: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26753: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26754: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26755: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26756: ;;// porth.porth:3409:70: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_26757: ;;// porth.porth:3410:25: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26758: ;;// porth.porth:3410:36: OP_CALL 18185
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18185
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_26759: ;;// porth.porth:3411:25: OP_PUSH_INT 12
    mov rax, 12
    push rax
addr_26760: ;;// porth.porth:3411:33: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_26761: ;;// porth.porth:3411:35: OP_PUSH_BIND 9
    mov rax, [ret_stack_rsp]
    add rax, 72
    mov rbx, [rax]
    push rbx
addr_26762: ;;// porth.porth:3411:41: OP_CALL 12921
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_12921
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_26763: ;;// porth.porth:3412:23: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_26764: ;;// porth.porth:3413:21: OP_ELSE 91
    jmp addr_26855
addr_26765: ;;// porth.porth:3413:26: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_26766: ;;// porth.porth:3413:34: OP_PUSH_INT 11
    mov rax, 11
    push rax
addr_26767: ;;// porth.porth:3413:44: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_26768: ;;// porth.porth:3413:46: OP_IFSTAR 88
    pop rax
    test rax, rax
    jz addr_26856
addr_26769: ;;// porth.porth:3414:23: OP_CALL 18235
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18235
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_26770: ;;// porth.porth:3415:23: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_26771: ;;// porth.porth:3415:27: OP_PUSH_INT 88
    mov rax, 88
    push rax
addr_26772: ;;// porth.porth:3415:38: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_26773: ;;// porth.porth:3415:40: OP_PUSH_GLOBAL_MEM 8421432
    lea rax, [mem+8421432]
    push rax
addr_26774: ;;// porth.porth:3415:44: OP_INLINED 73
addr_26775: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_26776: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26777: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_26778: ;;// porth.porth:3416:23: OP_PUSH_GLOBAL_MEM 8421424
    lea rax, [mem+8421424]
    push rax
addr_26779: ;;// porth.porth:3416:33: OP_INLINED 16
addr_26780: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_26781: ;;// porth.porth:3417:23: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_26782: ;;// porth.porth:3418:25: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_26783: ;;// porth.porth:3418:33: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_26784: ;;// porth.porth:3418:41: OP_INLINED 36
addr_26785: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26786: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26787: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26788: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26789: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26790: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26791: ;;// porth.porth:3418:46: OP_INLINED 16
addr_26792: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_26793: ;;// porth.porth:3418:51: OP_PUSH_INT 12
    mov rax, 12
    push rax
addr_26794: ;;// porth.porth:3418:59: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_26795: ;;// porth.porth:3418:62: OP_IF 22
    pop rax
    test rax, rax
    jz addr_26817
addr_26796: ;;// porth.porth:3419:27: OP_PUSH_STR 850
    mov rax, 19
    push rax
    lea rax, [str_850]
    push rax
addr_26797: ;;// porth.porth:3419:32: OP_INLINED 676
addr_26798: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_26799: ;;// std/std.porth:50:37: OP_INLINED 662
addr_26800: ;;// std/std.porth:48:34: OP_INLINED 394
addr_26801: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_26802: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_26803: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_26804: ;;// porth.porth:3419:38: OP_PUSH_STR 851
    mov rax, 37
    push rax
    lea rax, [str_851]
    push rax
addr_26805: ;;// porth.porth:3419:79: OP_INLINED 676
addr_26806: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_26807: ;;// std/std.porth:50:37: OP_INLINED 662
addr_26808: ;;// std/std.porth:48:34: OP_INLINED 394
addr_26809: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_26810: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_26811: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_26812: ;;// porth.porth:3420:27: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_26813: ;;// porth.porth:3420:29: OP_INLINED 418
addr_26814: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_26815: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_26816: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_26817: ;;// porth.porth:3421:25: OP_END_IF 0
addr_26818: ;;// porth.porth:3423:25: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_26819: ;;// porth.porth:3423:36: OP_PUSH_BIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov rbx, [rax]
    push rbx
addr_26820: ;;// porth.porth:3423:44: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_26821: ;;// porth.porth:3423:46: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_26822: ;;// porth.porth:3423:48: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26823: ;;// porth.porth:3423:50: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_26824: ;;// porth.porth:3423:58: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_26825: ;;// porth.porth:3423:69: OP_INLINED 36
addr_26826: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26827: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26828: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26829: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26830: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26831: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26832: ;;// porth.porth:3423:74: OP_INLINED 30
addr_26833: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_26834: ;;// porth.porth:3424:25: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_26835: ;;// porth.porth:3424:36: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26836: ;;// porth.porth:3424:44: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_26837: ;;// porth.porth:3424:50: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_26838: ;;// porth.porth:3424:58: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_26839: ;;// porth.porth:3424:69: OP_INLINED 36
addr_26840: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26841: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26842: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26843: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26844: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26845: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26846: ;;// porth.porth:3424:74: OP_INLINED 30
addr_26847: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_26848: ;;// porth.porth:3425:25: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_26849: ;;// porth.porth:3425:36: OP_CALL 18185
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18185
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_26850: ;;// porth.porth:3426:23: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_26851: ;;// porth.porth:3427:23: OP_PUSH_INT 12
    mov rax, 12
    push rax
addr_26852: ;;// porth.porth:3427:31: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_26853: ;;// porth.porth:3427:33: OP_PUSH_BIND 8
    mov rax, [ret_stack_rsp]
    add rax, 64
    mov rbx, [rax]
    push rbx
addr_26854: ;;// porth.porth:3427:39: OP_CALL 12921
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_12921
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_26855: ;;// porth.porth:3428:21: OP_ELSE 101
    jmp addr_26956
addr_26856: ;;// porth.porth:3429:23: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_26857: ;;// porth.porth:3429:27: OP_INLINED 5367
addr_26858: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_26859: ;;// porth.porth:32:35: OP_INLINED 5195
addr_26860: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_26861: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26862: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_26863: ;;// porth.porth:24:23: OP_INLINED 36
addr_26864: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26865: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26866: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26867: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26868: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26869: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26870: ;;// porth.porth:24:28: OP_INLINED 753
addr_26871: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_26872: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26873: ;;// std/std.porth:65:7: OP_INLINED 704
addr_26874: ;;// std/std.porth:58:38: OP_INLINED 684
addr_26875: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_26876: ;;// std/std.porth:56:57: OP_INLINED 36
addr_26877: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26878: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26879: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26880: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26881: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26882: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26883: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_26884: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26885: ;;// std/std.porth:66:7: OP_INLINED 716
addr_26886: ;;// std/std.porth:59:37: OP_INLINED 694
addr_26887: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_26888: ;;// std/std.porth:57:55: OP_INLINED 36
addr_26889: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26890: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26891: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26892: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26893: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26894: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26895: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_26896: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_26897: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_26898: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_26899: ;;// porth.porth:24:36: OP_INLINED 662
addr_26900: ;;// std/std.porth:48:34: OP_INLINED 394
addr_26901: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_26902: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_26903: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_26904: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_26905: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_26906: ;;// porth.porth:25:36: OP_INLINED 662
addr_26907: ;;// std/std.porth:48:34: OP_INLINED 394
addr_26908: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_26909: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_26910: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_26911: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26912: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_26913: ;;// porth.porth:26:17: OP_INLINED 36
addr_26914: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26915: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26916: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26917: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26918: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26919: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26920: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_26921: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_26922: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_26923: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_26924: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_26925: ;;// porth.porth:27:36: OP_INLINED 662
addr_26926: ;;// std/std.porth:48:34: OP_INLINED 394
addr_26927: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_26928: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_26929: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_26930: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26931: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_26932: ;;// porth.porth:28:17: OP_INLINED 36
addr_26933: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26934: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26935: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26936: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26937: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26938: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26939: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_26940: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_26941: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_26942: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_26943: ;;// porth.porth:3430:23: OP_PUSH_STR 852
    mov rax, 50
    push rax
    lea rax, [str_852]
    push rax
addr_26944: ;;// porth.porth:3430:77: OP_INLINED 676
addr_26945: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_26946: ;;// std/std.porth:50:37: OP_INLINED 662
addr_26947: ;;// std/std.porth:48:34: OP_INLINED 394
addr_26948: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_26949: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_26950: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_26951: ;;// porth.porth:3431:23: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_26952: ;;// porth.porth:3431:25: OP_INLINED 418
addr_26953: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_26954: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_26955: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_26956: ;;// porth.porth:3432:21: OP_END_IF 0
addr_26957: ;;// porth.porth:3433:19: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_26958: ;;// porth.porth:3434:17: OP_ELSE 12
    jmp addr_26970
addr_26959: ;;// porth.porth:3434:22: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26960: ;;// porth.porth:3434:30: OP_PUSH_INT 4
    mov rax, 4
    push rax
addr_26961: ;;// porth.porth:3434:44: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_26962: ;;// porth.porth:3434:46: OP_IFSTAR 9
    pop rax
    test rax, rax
    jz addr_26971
addr_26963: ;;// porth.porth:3435:19: OP_PUSH_GLOBAL_MEM 8421424
    lea rax, [mem+8421424]
    push rax
addr_26964: ;;// porth.porth:3435:29: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_26965: ;;// porth.porth:3435:33: OP_CALL 18185
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18185
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_26966: ;;// porth.porth:3436:19: OP_PUSH_INT 20
    mov rax, 20
    push rax
addr_26967: ;;// porth.porth:3436:28: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_26968: ;;// porth.porth:3436:30: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_26969: ;;// porth.porth:3436:36: OP_CALL 12921
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_12921
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_26970: ;;// porth.porth:3437:17: OP_ELSE 409
    jmp addr_27379
addr_26971: ;;// porth.porth:3437:22: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26972: ;;// porth.porth:3437:30: OP_PUSH_INT 5
    mov rax, 5
    push rax
addr_26973: ;;// porth.porth:3437:41: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_26974: ;;// porth.porth:3437:43: OP_IFSTAR 406
    pop rax
    test rax, rax
    jz addr_27380
addr_26975: ;;// porth.porth:3438:19: OP_PUSH_GLOBAL_MEM 15347872
    lea rax, [mem+15347872]
    push rax
addr_26976: ;;// porth.porth:3438:43: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_26977: ;;// porth.porth:3438:47: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_26978: ;;// porth.porth:3438:49: OP_INTRINSIC <=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovle rcx, rdx
    push rcx
addr_26979: ;;// porth.porth:3438:52: OP_IF 101
    pop rax
    test rax, rax
    jz addr_27080
addr_26980: ;;// porth.porth:3439:21: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_26981: ;;// porth.porth:3439:25: OP_INLINED 5367
addr_26982: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_26983: ;;// porth.porth:32:35: OP_INLINED 5195
addr_26984: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_26985: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26986: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_26987: ;;// porth.porth:24:23: OP_INLINED 36
addr_26988: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26989: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_26990: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_26991: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_26992: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_26993: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_26994: ;;// porth.porth:24:28: OP_INLINED 753
addr_26995: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_26996: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_26997: ;;// std/std.porth:65:7: OP_INLINED 704
addr_26998: ;;// std/std.porth:58:38: OP_INLINED 684
addr_26999: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_27000: ;;// std/std.porth:56:57: OP_INLINED 36
addr_27001: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27002: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27003: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27004: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27005: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27006: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27007: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_27008: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_27009: ;;// std/std.porth:66:7: OP_INLINED 716
addr_27010: ;;// std/std.porth:59:37: OP_INLINED 694
addr_27011: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_27012: ;;// std/std.porth:57:55: OP_INLINED 36
addr_27013: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27014: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27015: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27016: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27017: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27018: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27019: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_27020: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_27021: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_27022: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_27023: ;;// porth.porth:24:36: OP_INLINED 662
addr_27024: ;;// std/std.porth:48:34: OP_INLINED 394
addr_27025: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27026: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_27027: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_27028: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_27029: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_27030: ;;// porth.porth:25:36: OP_INLINED 662
addr_27031: ;;// std/std.porth:48:34: OP_INLINED 394
addr_27032: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27033: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_27034: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_27035: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_27036: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_27037: ;;// porth.porth:26:17: OP_INLINED 36
addr_27038: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27039: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27040: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27041: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27042: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27043: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27044: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_27045: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_27046: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_27047: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_27048: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_27049: ;;// porth.porth:27:36: OP_INLINED 662
addr_27050: ;;// std/std.porth:48:34: OP_INLINED 394
addr_27051: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27052: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_27053: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_27054: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_27055: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_27056: ;;// porth.porth:28:17: OP_INLINED 36
addr_27057: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27058: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27059: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27060: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27061: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27062: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27063: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_27064: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_27065: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_27066: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_27067: ;;// porth.porth:3439:33: OP_PUSH_STR 853
    mov rax, 41
    push rax
    lea rax, [str_853]
    push rax
addr_27068: ;;// porth.porth:3439:78: OP_INLINED 676
addr_27069: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_27070: ;;// std/std.porth:50:37: OP_INLINED 662
addr_27071: ;;// std/std.porth:48:34: OP_INLINED 394
addr_27072: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27073: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_27074: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_27075: ;;// porth.porth:3440:21: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27076: ;;// porth.porth:3440:23: OP_INLINED 418
addr_27077: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_27078: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_27079: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_27080: ;;// porth.porth:3441:19: OP_END_IF 0
addr_27081: ;;// porth.porth:3443:19: OP_CALL 18235
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18235
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_27082: ;;// porth.porth:3444:19: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_27083: ;;// porth.porth:3444:23: OP_PUSH_INT 88
    mov rax, 88
    push rax
addr_27084: ;;// porth.porth:3444:34: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_27085: ;;// porth.porth:3444:36: OP_PUSH_GLOBAL_MEM 8421432
    lea rax, [mem+8421432]
    push rax
addr_27086: ;;// porth.porth:3444:40: OP_INLINED 73
addr_27087: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_27088: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27089: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_27090: ;;// porth.porth:3445:19: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_27091: ;;// porth.porth:3445:23: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_27092: ;;// porth.porth:3445:31: OP_INLINED 36
addr_27093: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27094: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27095: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27096: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27097: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27098: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27099: ;;// porth.porth:3445:36: OP_INLINED 16
addr_27100: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_27101: ;;// porth.porth:3446:19: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_27102: ;;// porth.porth:3446:24: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_27103: ;;// porth.porth:3446:33: OP_INLINED 36
addr_27104: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27105: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27106: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27107: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27108: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27109: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27110: ;;// porth.porth:3447:19: OP_BIND_LET 4
    mov rax, [ret_stack_rsp]
    sub rax, 32
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+24], rbx
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_27111: ;;// porth.porth:3450:21: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_27112: ;;// porth.porth:3450:32: OP_PUSH_INT 20
    mov rax, 20
    push rax
addr_27113: ;;// porth.porth:3450:41: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_27114: ;;// porth.porth:3450:44: OP_IF 256
    pop rax
    test rax, rax
    jz addr_27370
addr_27115: ;;// porth.porth:3451:23: OP_PUSH_BIND 6
    mov rax, [ret_stack_rsp]
    add rax, 48
    mov rbx, [rax]
    push rbx
addr_27116: ;;// porth.porth:3451:68: OP_INLINED 5367
addr_27117: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_27118: ;;// porth.porth:32:35: OP_INLINED 5195
addr_27119: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_27120: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_27121: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_27122: ;;// porth.porth:24:23: OP_INLINED 36
addr_27123: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27124: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27125: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27126: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27127: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27128: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27129: ;;// porth.porth:24:28: OP_INLINED 753
addr_27130: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_27131: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_27132: ;;// std/std.porth:65:7: OP_INLINED 704
addr_27133: ;;// std/std.porth:58:38: OP_INLINED 684
addr_27134: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_27135: ;;// std/std.porth:56:57: OP_INLINED 36
addr_27136: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27137: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27138: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27139: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27140: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27141: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27142: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_27143: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_27144: ;;// std/std.porth:66:7: OP_INLINED 716
addr_27145: ;;// std/std.porth:59:37: OP_INLINED 694
addr_27146: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_27147: ;;// std/std.porth:57:55: OP_INLINED 36
addr_27148: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27149: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27150: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27151: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27152: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27153: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27154: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_27155: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_27156: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_27157: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_27158: ;;// porth.porth:24:36: OP_INLINED 662
addr_27159: ;;// std/std.porth:48:34: OP_INLINED 394
addr_27160: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27161: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_27162: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_27163: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_27164: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_27165: ;;// porth.porth:25:36: OP_INLINED 662
addr_27166: ;;// std/std.porth:48:34: OP_INLINED 394
addr_27167: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27168: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_27169: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_27170: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_27171: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_27172: ;;// porth.porth:26:17: OP_INLINED 36
addr_27173: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27174: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27175: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27176: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27177: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27178: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27179: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_27180: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_27181: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_27182: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_27183: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_27184: ;;// porth.porth:27:36: OP_INLINED 662
addr_27185: ;;// std/std.porth:48:34: OP_INLINED 394
addr_27186: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27187: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_27188: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_27189: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_27190: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_27191: ;;// porth.porth:28:17: OP_INLINED 36
addr_27192: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27193: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27194: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27195: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27196: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27197: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27198: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_27199: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_27200: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_27201: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_27202: ;;// porth.porth:3452:23: OP_PUSH_STR 854
    mov rax, 41
    push rax
    lea rax, [str_854]
    push rax
addr_27203: ;;// porth.porth:3452:68: OP_INLINED 676
addr_27204: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_27205: ;;// std/std.porth:50:37: OP_INLINED 662
addr_27206: ;;// std/std.porth:48:34: OP_INLINED 394
addr_27207: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27208: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_27209: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_27210: ;;// porth.porth:3453:23: OP_PUSH_BIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov rbx, [rax]
    push rbx
addr_27211: ;;// porth.porth:3453:35: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_27212: ;;// porth.porth:3453:46: OP_INLINED 36
addr_27213: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27214: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27215: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27216: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27217: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27218: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27219: ;;// porth.porth:3453:68: OP_INLINED 5367
addr_27220: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_27221: ;;// porth.porth:32:35: OP_INLINED 5195
addr_27222: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_27223: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_27224: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_27225: ;;// porth.porth:24:23: OP_INLINED 36
addr_27226: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27227: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27228: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27229: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27230: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27231: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27232: ;;// porth.porth:24:28: OP_INLINED 753
addr_27233: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_27234: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_27235: ;;// std/std.porth:65:7: OP_INLINED 704
addr_27236: ;;// std/std.porth:58:38: OP_INLINED 684
addr_27237: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_27238: ;;// std/std.porth:56:57: OP_INLINED 36
addr_27239: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27240: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27241: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27242: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27243: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27244: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27245: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_27246: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_27247: ;;// std/std.porth:66:7: OP_INLINED 716
addr_27248: ;;// std/std.porth:59:37: OP_INLINED 694
addr_27249: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_27250: ;;// std/std.porth:57:55: OP_INLINED 36
addr_27251: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27252: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27253: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27254: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27255: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27256: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27257: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_27258: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_27259: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_27260: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_27261: ;;// porth.porth:24:36: OP_INLINED 662
addr_27262: ;;// std/std.porth:48:34: OP_INLINED 394
addr_27263: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27264: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_27265: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_27266: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_27267: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_27268: ;;// porth.porth:25:36: OP_INLINED 662
addr_27269: ;;// std/std.porth:48:34: OP_INLINED 394
addr_27270: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27271: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_27272: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_27273: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_27274: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_27275: ;;// porth.porth:26:17: OP_INLINED 36
addr_27276: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27277: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27278: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27279: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27280: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27281: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27282: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_27283: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_27284: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_27285: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_27286: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_27287: ;;// porth.porth:27:36: OP_INLINED 662
addr_27288: ;;// std/std.porth:48:34: OP_INLINED 394
addr_27289: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27290: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_27291: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_27292: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_27293: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_27294: ;;// porth.porth:28:17: OP_INLINED 36
addr_27295: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27296: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27297: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27298: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27299: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27300: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27301: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_27302: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_27303: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_27304: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_27305: ;;// porth.porth:3454:23: OP_PUSH_STR 855
    mov rax, 21
    push rax
    lea rax, [str_855]
    push rax
addr_27306: ;;// porth.porth:3454:68: OP_INLINED 676
addr_27307: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_27308: ;;// std/std.porth:50:37: OP_INLINED 662
addr_27309: ;;// std/std.porth:48:34: OP_INLINED 394
addr_27310: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27311: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_27312: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_27313: ;;// porth.porth:3455:23: OP_PUSH_BIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov rbx, [rax]
    push rbx
addr_27314: ;;// porth.porth:3455:35: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_27315: ;;// porth.porth:3455:46: OP_INLINED 36
addr_27316: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27317: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27318: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27319: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27320: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27321: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27322: ;;// porth.porth:3455:51: OP_INLINED 753
addr_27323: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_27324: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_27325: ;;// std/std.porth:65:7: OP_INLINED 704
addr_27326: ;;// std/std.porth:58:38: OP_INLINED 684
addr_27327: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_27328: ;;// std/std.porth:56:57: OP_INLINED 36
addr_27329: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27330: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27331: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27332: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27333: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27334: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27335: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_27336: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_27337: ;;// std/std.porth:66:7: OP_INLINED 716
addr_27338: ;;// std/std.porth:59:37: OP_INLINED 694
addr_27339: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_27340: ;;// std/std.porth:57:55: OP_INLINED 36
addr_27341: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27342: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27343: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27344: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27345: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27346: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27347: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_27348: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_27349: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_27350: ;;// porth.porth:3455:68: OP_INLINED 676
addr_27351: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_27352: ;;// std/std.porth:50:37: OP_INLINED 662
addr_27353: ;;// std/std.porth:48:34: OP_INLINED 394
addr_27354: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27355: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_27356: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_27357: ;;// porth.porth:3456:23: OP_PUSH_STR 856
    mov rax, 10
    push rax
    lea rax, [str_856]
    push rax
addr_27358: ;;// porth.porth:3456:68: OP_INLINED 676
addr_27359: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_27360: ;;// std/std.porth:50:37: OP_INLINED 662
addr_27361: ;;// std/std.porth:48:34: OP_INLINED 394
addr_27362: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27363: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_27364: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_27365: ;;// porth.porth:3457:23: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27366: ;;// porth.porth:3457:25: OP_INLINED 418
addr_27367: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_27368: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_27369: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_27370: ;;// porth.porth:3458:21: OP_END_IF 0
addr_27371: ;;// porth.porth:3460:21: OP_PUSH_GLOBAL_MEM 8421424
    lea rax, [mem+8421424]
    push rax
addr_27372: ;;// porth.porth:3460:31: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_27373: ;;// porth.porth:3460:35: OP_CALL 18185
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18185
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_27374: ;;// porth.porth:3468:21: OP_PUSH_INT 21
    mov rax, 21
    push rax
addr_27375: ;;// porth.porth:3468:27: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_27376: ;;// porth.porth:3468:36: OP_PUSH_BIND 9
    mov rax, [ret_stack_rsp]
    add rax, 72
    mov rbx, [rax]
    push rbx
addr_27377: ;;// porth.porth:3468:42: OP_CALL 12921
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_12921
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_27378: ;;// porth.porth:3469:19: OP_UNBIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov [ret_stack_rsp], rax
addr_27379: ;;// porth.porth:3470:17: OP_ELSE 1031
    jmp addr_28410
addr_27380: ;;// porth.porth:3470:22: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_27381: ;;// porth.porth:3470:30: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_27382: ;;// porth.porth:3470:42: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_27383: ;;// porth.porth:3470:44: OP_IFSTAR 1028
    pop rax
    test rax, rax
    jz addr_28411
addr_27384: ;;// porth.porth:3471:19: OP_PUSH_GLOBAL_MEM 15347872
    lea rax, [mem+15347872]
    push rax
addr_27385: ;;// porth.porth:3471:43: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_27386: ;;// porth.porth:3471:47: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_27387: ;;// porth.porth:3471:49: OP_INTRINSIC <=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovle rcx, rdx
    push rcx
addr_27388: ;;// porth.porth:3471:52: OP_IF 101
    pop rax
    test rax, rax
    jz addr_27489
addr_27389: ;;// porth.porth:3472:21: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_27390: ;;// porth.porth:3472:25: OP_INLINED 5367
addr_27391: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_27392: ;;// porth.porth:32:35: OP_INLINED 5195
addr_27393: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_27394: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_27395: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_27396: ;;// porth.porth:24:23: OP_INLINED 36
addr_27397: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27398: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27399: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27400: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27401: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27402: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27403: ;;// porth.porth:24:28: OP_INLINED 753
addr_27404: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_27405: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_27406: ;;// std/std.porth:65:7: OP_INLINED 704
addr_27407: ;;// std/std.porth:58:38: OP_INLINED 684
addr_27408: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_27409: ;;// std/std.porth:56:57: OP_INLINED 36
addr_27410: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27411: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27412: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27413: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27414: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27415: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27416: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_27417: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_27418: ;;// std/std.porth:66:7: OP_INLINED 716
addr_27419: ;;// std/std.porth:59:37: OP_INLINED 694
addr_27420: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_27421: ;;// std/std.porth:57:55: OP_INLINED 36
addr_27422: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27423: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27424: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27425: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27426: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27427: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27428: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_27429: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_27430: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_27431: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_27432: ;;// porth.porth:24:36: OP_INLINED 662
addr_27433: ;;// std/std.porth:48:34: OP_INLINED 394
addr_27434: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27435: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_27436: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_27437: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_27438: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_27439: ;;// porth.porth:25:36: OP_INLINED 662
addr_27440: ;;// std/std.porth:48:34: OP_INLINED 394
addr_27441: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27442: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_27443: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_27444: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_27445: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_27446: ;;// porth.porth:26:17: OP_INLINED 36
addr_27447: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27448: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27449: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27450: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27451: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27452: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27453: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_27454: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_27455: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_27456: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_27457: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_27458: ;;// porth.porth:27:36: OP_INLINED 662
addr_27459: ;;// std/std.porth:48:34: OP_INLINED 394
addr_27460: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27461: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_27462: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_27463: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_27464: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_27465: ;;// porth.porth:28:17: OP_INLINED 36
addr_27466: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27467: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27468: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27469: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27470: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27471: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27472: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_27473: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_27474: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_27475: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_27476: ;;// porth.porth:3473:21: OP_PUSH_STR 857
    mov rax, 36
    push rax
    lea rax, [str_857]
    push rax
addr_27477: ;;// porth.porth:3473:61: OP_INLINED 676
addr_27478: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_27479: ;;// std/std.porth:50:37: OP_INLINED 662
addr_27480: ;;// std/std.porth:48:34: OP_INLINED 394
addr_27481: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27482: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_27483: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_27484: ;;// porth.porth:3474:21: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27485: ;;// porth.porth:3474:23: OP_INLINED 418
addr_27486: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_27487: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_27488: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_27489: ;;// porth.porth:3475:19: OP_END_IF 0
addr_27490: ;;// porth.porth:3477:19: OP_CALL 18235
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18235
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_27491: ;;// porth.porth:3478:19: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_27492: ;;// porth.porth:3478:23: OP_PUSH_INT 88
    mov rax, 88
    push rax
addr_27493: ;;// porth.porth:3478:34: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_27494: ;;// porth.porth:3478:36: OP_PUSH_GLOBAL_MEM 8421432
    lea rax, [mem+8421432]
    push rax
addr_27495: ;;// porth.porth:3478:40: OP_INLINED 73
addr_27496: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_27497: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27498: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_27499: ;;// porth.porth:3479:19: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_27500: ;;// porth.porth:3479:23: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_27501: ;;// porth.porth:3479:31: OP_INLINED 36
addr_27502: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27503: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27504: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27505: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27506: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27507: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27508: ;;// porth.porth:3479:36: OP_INLINED 16
addr_27509: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_27510: ;;// porth.porth:3480:19: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_27511: ;;// porth.porth:3483:21: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_27512: ;;// porth.porth:3483:32: OP_PUSH_INT 10
    mov rax, 10
    push rax
addr_27513: ;;// porth.porth:3483:38: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_27514: ;;// porth.porth:3483:40: OP_IF 22
    pop rax
    test rax, rax
    jz addr_27536
addr_27515: ;;// porth.porth:3484:23: OP_PUSH_GLOBAL_MEM 8421424
    lea rax, [mem+8421424]
    push rax
addr_27516: ;;// porth.porth:3484:33: OP_INLINED 16
addr_27517: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_27518: ;;// porth.porth:3484:38: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_27519: ;;// porth.porth:3484:47: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_27520: ;;// porth.porth:3484:49: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_27521: ;;// porth.porth:3484:58: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_27522: ;;// porth.porth:3484:69: OP_INLINED 36
addr_27523: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27524: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27525: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27526: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27527: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27528: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27529: ;;// porth.porth:3484:74: OP_INLINED 30
addr_27530: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_27531: ;;// porth.porth:3485:23: OP_PUSH_INT 13
    mov rax, 13
    push rax
addr_27532: ;;// porth.porth:3485:33: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_27533: ;;// porth.porth:3485:35: OP_PUSH_BIND 8
    mov rax, [ret_stack_rsp]
    add rax, 64
    mov rbx, [rax]
    push rbx
addr_27534: ;;// porth.porth:3485:41: OP_CALL 12921
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_12921
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_27535: ;;// porth.porth:3486:21: OP_ELSE 186
    jmp addr_27721
addr_27536: ;;// porth.porth:3486:26: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_27537: ;;// porth.porth:3486:37: OP_PUSH_INT 11
    mov rax, 11
    push rax
addr_27538: ;;// porth.porth:3486:47: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_27539: ;;// porth.porth:3486:49: OP_IFSTAR 183
    pop rax
    test rax, rax
    jz addr_27722
addr_27540: ;;// porth.porth:3487:23: OP_CALL 18235
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18235
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_27541: ;;// porth.porth:3488:23: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_27542: ;;// porth.porth:3488:27: OP_PUSH_INT 88
    mov rax, 88
    push rax
addr_27543: ;;// porth.porth:3488:38: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_27544: ;;// porth.porth:3488:40: OP_PUSH_GLOBAL_MEM 8421432
    lea rax, [mem+8421432]
    push rax
addr_27545: ;;// porth.porth:3488:44: OP_INLINED 73
addr_27546: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_27547: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27548: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_27549: ;;// porth.porth:3489:23: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_27550: ;;// porth.porth:3490:25: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_27551: ;;// porth.porth:3490:33: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_27552: ;;// porth.porth:3490:41: OP_INLINED 36
addr_27553: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27554: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27555: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27556: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27557: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27558: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27559: ;;// porth.porth:3490:46: OP_INLINED 16
addr_27560: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_27561: ;;// porth.porth:3490:51: OP_PUSH_INT 12
    mov rax, 12
    push rax
addr_27562: ;;// porth.porth:3490:59: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_27563: ;;// porth.porth:3490:62: OP_IF 118
    pop rax
    test rax, rax
    jz addr_27681
addr_27564: ;;// porth.porth:3491:27: OP_PUSH_STR 858
    mov rax, 19
    push rax
    lea rax, [str_858]
    push rax
addr_27565: ;;// porth.porth:3491:32: OP_INLINED 676
addr_27566: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_27567: ;;// std/std.porth:50:37: OP_INLINED 662
addr_27568: ;;// std/std.porth:48:34: OP_INLINED 394
addr_27569: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27570: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_27571: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_27572: ;;// porth.porth:3491:38: OP_PUSH_STR 859
    mov rax, 75
    push rax
    lea rax, [str_859]
    push rax
addr_27573: ;;// porth.porth:3491:117: OP_INLINED 676
addr_27574: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_27575: ;;// std/std.porth:50:37: OP_INLINED 662
addr_27576: ;;// std/std.porth:48:34: OP_INLINED 394
addr_27577: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27578: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_27579: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_27580: ;;// porth.porth:3492:27: OP_PUSH_BIND 7
    mov rax, [ret_stack_rsp]
    add rax, 56
    mov rbx, [rax]
    push rbx
addr_27581: ;;// porth.porth:3492:31: OP_INLINED 14609
addr_27582: ;;// porth.porth:1494:33: OP_INLINED 5367
addr_27583: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_27584: ;;// porth.porth:32:35: OP_INLINED 5195
addr_27585: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_27586: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_27587: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_27588: ;;// porth.porth:24:23: OP_INLINED 36
addr_27589: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27590: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27591: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27592: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27593: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27594: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27595: ;;// porth.porth:24:28: OP_INLINED 753
addr_27596: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_27597: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_27598: ;;// std/std.porth:65:7: OP_INLINED 704
addr_27599: ;;// std/std.porth:58:38: OP_INLINED 684
addr_27600: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_27601: ;;// std/std.porth:56:57: OP_INLINED 36
addr_27602: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27603: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27604: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27605: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27606: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27607: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27608: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_27609: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_27610: ;;// std/std.porth:66:7: OP_INLINED 716
addr_27611: ;;// std/std.porth:59:37: OP_INLINED 694
addr_27612: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_27613: ;;// std/std.porth:57:55: OP_INLINED 36
addr_27614: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27615: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27616: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27617: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27618: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27619: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27620: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_27621: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_27622: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_27623: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_27624: ;;// porth.porth:24:36: OP_INLINED 662
addr_27625: ;;// std/std.porth:48:34: OP_INLINED 394
addr_27626: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27627: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_27628: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_27629: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_27630: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_27631: ;;// porth.porth:25:36: OP_INLINED 662
addr_27632: ;;// std/std.porth:48:34: OP_INLINED 394
addr_27633: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27634: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_27635: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_27636: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_27637: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_27638: ;;// porth.porth:26:17: OP_INLINED 36
addr_27639: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27640: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27641: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27642: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27643: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27644: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27645: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_27646: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_27647: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_27648: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_27649: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_27650: ;;// porth.porth:27:36: OP_INLINED 662
addr_27651: ;;// std/std.porth:48:34: OP_INLINED 394
addr_27652: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27653: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_27654: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_27655: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_27656: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_27657: ;;// porth.porth:28:17: OP_INLINED 36
addr_27658: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27659: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27660: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27661: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27662: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27663: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27664: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_27665: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_27666: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_27667: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_27668: ;;// porth.porth:1494:41: OP_PUSH_STR 317
    mov rax, 21
    push rax
    lea rax, [str_317]
    push rax
addr_27669: ;;// porth.porth:1494:66: OP_INLINED 676
addr_27670: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_27671: ;;// std/std.porth:50:37: OP_INLINED 662
addr_27672: ;;// std/std.porth:48:34: OP_INLINED 394
addr_27673: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27674: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_27675: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_27676: ;;// porth.porth:3493:27: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27677: ;;// porth.porth:3493:29: OP_INLINED 418
addr_27678: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_27679: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_27680: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_27681: ;;// porth.porth:3494:25: OP_END_IF 0
addr_27682: ;;// porth.porth:3496:25: OP_PUSH_GLOBAL_MEM 8421424
    lea rax, [mem+8421424]
    push rax
addr_27683: ;;// porth.porth:3496:35: OP_INLINED 16
addr_27684: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_27685: ;;// porth.porth:3496:40: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_27686: ;;// porth.porth:3496:49: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_27687: ;;// porth.porth:3496:51: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27688: ;;// porth.porth:3496:53: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27689: ;;// porth.porth:3496:55: OP_PUSH_BIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov rbx, [rax]
    push rbx
addr_27690: ;;// porth.porth:3496:64: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_27691: ;;// porth.porth:3496:75: OP_INLINED 36
addr_27692: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27693: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27694: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27695: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27696: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27697: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27698: ;;// porth.porth:3496:80: OP_INLINED 30
addr_27699: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_27700: ;;// porth.porth:3497:25: OP_PUSH_GLOBAL_MEM 8421424
    lea rax, [mem+8421424]
    push rax
addr_27701: ;;// porth.porth:3497:35: OP_INLINED 16
addr_27702: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_27703: ;;// porth.porth:3497:40: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_27704: ;;// porth.porth:3497:49: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_27705: ;;// porth.porth:3497:55: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_27706: ;;// porth.porth:3497:64: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_27707: ;;// porth.porth:3497:75: OP_INLINED 36
addr_27708: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27709: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27710: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27711: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27712: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27713: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27714: ;;// porth.porth:3497:80: OP_INLINED 30
addr_27715: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_27716: ;;// porth.porth:3499:25: OP_PUSH_INT 13
    mov rax, 13
    push rax
addr_27717: ;;// porth.porth:3499:35: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_27718: ;;// porth.porth:3499:37: OP_PUSH_BIND 10
    mov rax, [ret_stack_rsp]
    add rax, 80
    mov rbx, [rax]
    push rbx
addr_27719: ;;// porth.porth:3499:43: OP_CALL 12921
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_12921
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_27720: ;;// porth.porth:3500:23: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_27721: ;;// porth.porth:3501:21: OP_ELSE 25
    jmp addr_27746
addr_27722: ;;// porth.porth:3501:26: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_27723: ;;// porth.porth:3501:37: OP_PUSH_INT 12
    mov rax, 12
    push rax
addr_27724: ;;// porth.porth:3501:45: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_27725: ;;// porth.porth:3501:47: OP_IFSTAR 22
    pop rax
    test rax, rax
    jz addr_27747
addr_27726: ;;// porth.porth:3502:23: OP_PUSH_GLOBAL_MEM 8421424
    lea rax, [mem+8421424]
    push rax
addr_27727: ;;// porth.porth:3502:33: OP_INLINED 16
addr_27728: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_27729: ;;// porth.porth:3502:38: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_27730: ;;// porth.porth:3502:47: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_27731: ;;// porth.porth:3502:49: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_27732: ;;// porth.porth:3502:58: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_27733: ;;// porth.porth:3502:69: OP_INLINED 36
addr_27734: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27735: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27736: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27737: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27738: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27739: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27740: ;;// porth.porth:3502:74: OP_INLINED 30
addr_27741: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_27742: ;;// porth.porth:3503:23: OP_PUSH_INT 13
    mov rax, 13
    push rax
addr_27743: ;;// porth.porth:3503:33: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_27744: ;;// porth.porth:3503:35: OP_PUSH_BIND 8
    mov rax, [ret_stack_rsp]
    add rax, 64
    mov rbx, [rax]
    push rbx
addr_27745: ;;// porth.porth:3503:41: OP_CALL 12921
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_12921
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_27746: ;;// porth.porth:3504:21: OP_ELSE 135
    jmp addr_27881
addr_27747: ;;// porth.porth:3504:26: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_27748: ;;// porth.porth:3504:37: OP_PUSH_INT 21
    mov rax, 21
    push rax
addr_27749: ;;// porth.porth:3504:43: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_27750: ;;// porth.porth:3504:45: OP_IFSTAR 132
    pop rax
    test rax, rax
    jz addr_27882
addr_27751: ;;// porth.porth:3505:23: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_27752: ;;// porth.porth:3505:32: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_27753: ;;// porth.porth:3505:43: OP_INLINED 36
addr_27754: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27755: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27756: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27757: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27758: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27759: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27760: ;;// porth.porth:3505:48: OP_INLINED 16
addr_27761: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_27762: ;;// porth.porth:3506:23: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_27763: ;;// porth.porth:3507:25: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_27764: ;;// porth.porth:3507:34: OP_PUSH_GLOBAL_MEM 8421424
    lea rax, [mem+8421424]
    push rax
addr_27765: ;;// porth.porth:3507:44: OP_INLINED 16
addr_27766: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_27767: ;;// porth.porth:3507:49: OP_INTRINSIC >=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovge rcx, rdx
    push rcx
addr_27768: ;;// porth.porth:3507:52: OP_IF 22
    pop rax
    test rax, rax
    jz addr_27790
addr_27769: ;;// porth.porth:3508:27: OP_PUSH_STR 860
    mov rax, 19
    push rax
    lea rax, [str_860]
    push rax
addr_27770: ;;// porth.porth:3508:32: OP_INLINED 676
addr_27771: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_27772: ;;// std/std.porth:50:37: OP_INLINED 662
addr_27773: ;;// std/std.porth:48:34: OP_INLINED 394
addr_27774: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27775: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_27776: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_27777: ;;// porth.porth:3508:38: OP_PUSH_STR 861
    mov rax, 33
    push rax
    lea rax, [str_861]
    push rax
addr_27778: ;;// porth.porth:3508:75: OP_INLINED 676
addr_27779: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_27780: ;;// std/std.porth:50:37: OP_INLINED 662
addr_27781: ;;// std/std.porth:48:34: OP_INLINED 394
addr_27782: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27783: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_27784: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_27785: ;;// porth.porth:3509:27: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27786: ;;// porth.porth:3509:29: OP_INLINED 418
addr_27787: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_27788: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_27789: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_27790: ;;// porth.porth:3510:25: OP_END_IF 0
addr_27791: ;;// porth.porth:3512:25: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_27792: ;;// porth.porth:3512:34: OP_PUSH_INT 88
    mov rax, 88
    push rax
addr_27793: ;;// porth.porth:3512:45: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_27794: ;;// porth.porth:3512:47: OP_PUSH_GLOBAL_MEM 8421432
    lea rax, [mem+8421432]
    push rax
addr_27795: ;;// porth.porth:3512:51: OP_INLINED 73
addr_27796: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_27797: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27798: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_27799: ;;// porth.porth:3513:25: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_27800: ;;// porth.porth:3514:27: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_27801: ;;// porth.porth:3514:36: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_27802: ;;// porth.porth:3514:44: OP_INLINED 36
addr_27803: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27804: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27805: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27806: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27807: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27808: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27809: ;;// porth.porth:3514:49: OP_INLINED 16
addr_27810: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_27811: ;;// porth.porth:3514:54: OP_PUSH_INT 20
    mov rax, 20
    push rax
addr_27812: ;;// porth.porth:3514:63: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_27813: ;;// porth.porth:3514:66: OP_IF 22
    pop rax
    test rax, rax
    jz addr_27835
addr_27814: ;;// porth.porth:3515:29: OP_PUSH_STR 862
    mov rax, 19
    push rax
    lea rax, [str_862]
    push rax
addr_27815: ;;// porth.porth:3515:34: OP_INLINED 676
addr_27816: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_27817: ;;// std/std.porth:50:37: OP_INLINED 662
addr_27818: ;;// std/std.porth:48:34: OP_INLINED 394
addr_27819: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27820: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_27821: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_27822: ;;// porth.porth:3515:40: OP_PUSH_STR 863
    mov rax, 50
    push rax
    lea rax, [str_863]
    push rax
addr_27823: ;;// porth.porth:3515:94: OP_INLINED 676
addr_27824: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_27825: ;;// std/std.porth:50:37: OP_INLINED 662
addr_27826: ;;// std/std.porth:48:34: OP_INLINED 394
addr_27827: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27828: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_27829: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_27830: ;;// porth.porth:3516:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27831: ;;// porth.porth:3516:31: OP_INLINED 418
addr_27832: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_27833: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_27834: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_27835: ;;// porth.porth:3517:27: OP_END_IF 0
addr_27836: ;;// porth.porth:3519:27: OP_PUSH_GLOBAL_MEM 8421424
    lea rax, [mem+8421424]
    push rax
addr_27837: ;;// porth.porth:3519:37: OP_INLINED 16
addr_27838: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_27839: ;;// porth.porth:3520:27: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_27840: ;;// porth.porth:3521:29: OP_PUSH_INT 14
    mov rax, 14
    push rax
addr_27841: ;;// porth.porth:3521:42: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_27842: ;;// porth.porth:3521:53: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_27843: ;;// porth.porth:3521:62: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_27844: ;;// porth.porth:3521:64: OP_PUSH_BIND 11
    mov rax, [ret_stack_rsp]
    add rax, 88
    mov rbx, [rax]
    push rbx
addr_27845: ;;// porth.porth:3521:70: OP_CALL 12921
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_12921
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_27846: ;;// porth.porth:3523:29: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_27847: ;;// porth.porth:3523:40: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27848: ;;// porth.porth:3523:42: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27849: ;;// porth.porth:3523:44: OP_PUSH_BIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov rbx, [rax]
    push rbx
addr_27850: ;;// porth.porth:3523:53: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_27851: ;;// porth.porth:3523:55: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_27852: ;;// porth.porth:3523:64: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_27853: ;;// porth.porth:3523:75: OP_INLINED 36
addr_27854: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27855: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27856: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27857: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27858: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27859: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27860: ;;// porth.porth:3523:80: OP_INLINED 30
addr_27861: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_27862: ;;// porth.porth:3524:29: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_27863: ;;// porth.porth:3524:40: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27864: ;;// porth.porth:3524:42: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27865: ;;// porth.porth:3524:44: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_27866: ;;// porth.porth:3524:53: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_27867: ;;// porth.porth:3524:55: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_27868: ;;// porth.porth:3524:64: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_27869: ;;// porth.porth:3524:75: OP_INLINED 36
addr_27870: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27871: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27872: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27873: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27874: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27875: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27876: ;;// porth.porth:3524:80: OP_INLINED 30
addr_27877: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_27878: ;;// porth.porth:3525:27: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_27879: ;;// porth.porth:3526:25: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_27880: ;;// porth.porth:3527:23: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_27881: ;;// porth.porth:3528:21: OP_ELSE 192
    jmp addr_28073
addr_27882: ;;// porth.porth:3528:26: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_27883: ;;// porth.porth:3528:37: OP_PUSH_INT 15
    mov rax, 15
    push rax
addr_27884: ;;// porth.porth:3528:50: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_27885: ;;// porth.porth:3528:52: OP_IFSTAR 189
    pop rax
    test rax, rax
    jz addr_28074
addr_27886: ;;// porth.porth:3529:23: OP_PUSH_GLOBAL_MEM 15310968
    lea rax, [mem+15310968]
    push rax
addr_27887: ;;// porth.porth:3529:45: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_27888: ;;// porth.porth:3530:23: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_27889: ;;// porth.porth:3530:32: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_27890: ;;// porth.porth:3530:43: OP_INLINED 36
addr_27891: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27892: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27893: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27894: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27895: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27896: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27897: ;;// porth.porth:3531:23: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_27898: ;;// porth.porth:3534:23: OP_CALL 24551
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_24551
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_27899: ;;// porth.porth:3535:23: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_27900: ;;// porth.porth:3536:25: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_27901: ;;// porth.porth:3536:30: OP_INLINED 214
addr_27902: ;;// std/core.porth:116:34: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_27903: ;;// std/core.porth:116:39: OP_INLINED 59
addr_27904: ;;// std/core.porth:52:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27905: ;;// std/core.porth:52:8: OP_INTRINSIC cast(int)
addr_27906: ;;// std/core.porth:53:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27907: ;;// std/core.porth:53:8: OP_INTRINSIC cast(int)
addr_27908: ;;// std/core.porth:54:3: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_27909: ;;// porth.porth:3536:36: OP_IF 118
    pop rax
    test rax, rax
    jz addr_28027
addr_27910: ;;// porth.porth:3537:27: OP_PUSH_STR 864
    mov rax, 19
    push rax
    lea rax, [str_864]
    push rax
addr_27911: ;;// porth.porth:3537:32: OP_INLINED 676
addr_27912: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_27913: ;;// std/std.porth:50:37: OP_INLINED 662
addr_27914: ;;// std/std.porth:48:34: OP_INLINED 394
addr_27915: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27916: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_27917: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_27918: ;;// porth.porth:3537:38: OP_PUSH_STR 865
    mov rax, 56
    push rax
    lea rax, [str_865]
    push rax
addr_27919: ;;// porth.porth:3537:98: OP_INLINED 676
addr_27920: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_27921: ;;// std/std.porth:50:37: OP_INLINED 662
addr_27922: ;;// std/std.porth:48:34: OP_INLINED 394
addr_27923: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27924: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_27925: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_27926: ;;// porth.porth:3538:27: OP_PUSH_BIND 6
    mov rax, [ret_stack_rsp]
    add rax, 48
    mov rbx, [rax]
    push rbx
addr_27927: ;;// porth.porth:3538:31: OP_INLINED 14609
addr_27928: ;;// porth.porth:1494:33: OP_INLINED 5367
addr_27929: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_27930: ;;// porth.porth:32:35: OP_INLINED 5195
addr_27931: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_27932: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_27933: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_27934: ;;// porth.porth:24:23: OP_INLINED 36
addr_27935: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27936: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27937: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27938: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27939: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27940: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27941: ;;// porth.porth:24:28: OP_INLINED 753
addr_27942: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_27943: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_27944: ;;// std/std.porth:65:7: OP_INLINED 704
addr_27945: ;;// std/std.porth:58:38: OP_INLINED 684
addr_27946: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_27947: ;;// std/std.porth:56:57: OP_INLINED 36
addr_27948: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27949: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27950: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27951: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27952: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27953: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27954: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_27955: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_27956: ;;// std/std.porth:66:7: OP_INLINED 716
addr_27957: ;;// std/std.porth:59:37: OP_INLINED 694
addr_27958: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_27959: ;;// std/std.porth:57:55: OP_INLINED 36
addr_27960: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27961: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27962: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27963: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27964: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27965: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27966: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_27967: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_27968: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_27969: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_27970: ;;// porth.porth:24:36: OP_INLINED 662
addr_27971: ;;// std/std.porth:48:34: OP_INLINED 394
addr_27972: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27973: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_27974: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_27975: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_27976: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_27977: ;;// porth.porth:25:36: OP_INLINED 662
addr_27978: ;;// std/std.porth:48:34: OP_INLINED 394
addr_27979: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27980: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_27981: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_27982: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_27983: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_27984: ;;// porth.porth:26:17: OP_INLINED 36
addr_27985: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27986: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_27987: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_27988: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_27989: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_27990: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_27991: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_27992: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_27993: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_27994: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_27995: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_27996: ;;// porth.porth:27:36: OP_INLINED 662
addr_27997: ;;// std/std.porth:48:34: OP_INLINED 394
addr_27998: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_27999: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_28000: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_28001: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28002: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_28003: ;;// porth.porth:28:17: OP_INLINED 36
addr_28004: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28005: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28006: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28007: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28008: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28009: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28010: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_28011: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_28012: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_28013: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_28014: ;;// porth.porth:1494:41: OP_PUSH_STR 317
    mov rax, 21
    push rax
    lea rax, [str_317]
    push rax
addr_28015: ;;// porth.porth:1494:66: OP_INLINED 676
addr_28016: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_28017: ;;// std/std.porth:50:37: OP_INLINED 662
addr_28018: ;;// std/std.porth:48:34: OP_INLINED 394
addr_28019: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28020: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_28021: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_28022: ;;// porth.porth:3539:27: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28023: ;;// porth.porth:3539:29: OP_INLINED 418
addr_28024: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_28025: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_28026: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_28027: ;;// porth.porth:3540:25: OP_END_IF 0
addr_28028: ;;// porth.porth:3542:25: OP_PUSH_GLOBAL_MEM 8421424
    lea rax, [mem+8421424]
    push rax
addr_28029: ;;// porth.porth:3542:35: OP_INLINED 16
addr_28030: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_28031: ;;// porth.porth:3543:25: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28032: ;;// porth.porth:3543:30: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_28033: ;;// porth.porth:3543:40: OP_INLINED 36
addr_28034: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28035: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28036: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28037: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28038: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28039: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28040: ;;// porth.porth:3543:45: OP_INLINED 16
addr_28041: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_28042: ;;// porth.porth:3543:50: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_28043: ;;// porth.porth:3544:25: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28044: ;;// porth.porth:3544:27: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_28045: ;;// porth.porth:3546:25: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28046: ;;// porth.porth:3546:30: OP_PUSH_INT 112
    mov rax, 112
    push rax
addr_28047: ;;// porth.porth:3546:40: OP_INLINED 36
addr_28048: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28049: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28050: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28051: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28052: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28053: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28054: ;;// porth.porth:3546:45: OP_INLINED 30
addr_28055: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_28056: ;;// porth.porth:3547:23: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_28057: ;;// porth.porth:3549:23: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_28058: ;;// porth.porth:3550:23: OP_PUSH_GLOBAL_MEM 15310968
    lea rax, [mem+15310968]
    push rax
addr_28059: ;;// porth.porth:3550:45: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_28060: ;;// porth.porth:3551:23: OP_PUSH_BIND 8
    mov rax, [ret_stack_rsp]
    add rax, 64
    mov rbx, [rax]
    push rbx
addr_28061: ;;// porth.porth:3552:23: OP_CALL 12921
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_12921
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_28062: ;;// porth.porth:3554:23: OP_INLINED 14241
addr_28063: ;;// porth.porth:1419:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_28064: ;;// porth.porth:1419:5: OP_PUSH_GLOBAL_MEM 15253616
    lea rax, [mem+15253616]
    push rax
addr_28065: ;;// porth.porth:1419:26: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_28066: ;;// porth.porth:1420:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_28067: ;;// porth.porth:1420:5: OP_PUSH_GLOBAL_MEM 15310968
    lea rax, [mem+15310968]
    push rax
addr_28068: ;;// porth.porth:1420:27: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_28069: ;;// porth.porth:3555:23: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_28070: ;;// porth.porth:3555:29: OP_PUSH_GLOBAL_MEM 15196248
    lea rax, [mem+15196248]
    push rax
addr_28071: ;;// porth.porth:3555:41: OP_INLINED 24
addr_28072: ;;// std/core.porth:26:31: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_28073: ;;// porth.porth:3556:21: OP_ELSE 68
    jmp addr_28141
addr_28074: ;;// porth.porth:3556:26: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_28075: ;;// porth.porth:3556:37: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_28076: ;;// porth.porth:3556:49: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_28077: ;;// porth.porth:3556:51: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_28078: ;;// porth.porth:3556:62: OP_PUSH_INT 25
    mov rax, 25
    push rax
addr_28079: ;;// porth.porth:3556:75: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_28080: ;;// porth.porth:3556:77: OP_INLINED 146
addr_28081: ;;// std/core.porth:100:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28082: ;;// std/core.porth:100:8: OP_INTRINSIC cast(int)
addr_28083: ;;// std/core.porth:101:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28084: ;;// std/core.porth:101:8: OP_INTRINSIC cast(int)
addr_28085: ;;// std/core.porth:102:3: OP_INTRINSIC or
    pop rax
    pop rbx
    or rbx, rax
    push rbx
addr_28086: ;;// std/core.porth:103:3: OP_INTRINSIC cast(bool)
addr_28087: ;;// porth.porth:3556:81: OP_IFSTAR 55
    pop rax
    test rax, rax
    jz addr_28142
addr_28088: ;;// porth.porth:3557:23: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_28089: ;;// porth.porth:3557:32: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_28090: ;;// porth.porth:3557:43: OP_INLINED 36
addr_28091: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28092: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28093: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28094: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28095: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28096: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28097: ;;// porth.porth:3557:48: OP_INLINED 16
addr_28098: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_28099: ;;// porth.porth:3558:23: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_28100: ;;// porth.porth:3559:25: OP_PUSH_INT 27
    mov rax, 27
    push rax
addr_28101: ;;// porth.porth:3559:35: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28102: ;;// porth.porth:3559:46: OP_PUSH_BIND 9
    mov rax, [ret_stack_rsp]
    add rax, 72
    mov rbx, [rax]
    push rbx
addr_28103: ;;// porth.porth:3559:52: OP_CALL 12921
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_12921
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_28104: ;;// porth.porth:3561:25: OP_PUSH_GLOBAL_MEM 15388856
    lea rax, [mem+15388856]
    push rax
addr_28105: ;;// porth.porth:3561:42: OP_INLINED 16
addr_28106: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_28107: ;;// porth.porth:3561:47: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28108: ;;// porth.porth:3561:58: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_28109: ;;// porth.porth:3561:60: OP_IF 22
    pop rax
    test rax, rax
    jz addr_28131
addr_28110: ;;// porth.porth:3562:27: OP_PUSH_STR 866
    mov rax, 19
    push rax
    lea rax, [str_866]
    push rax
addr_28111: ;;// porth.porth:3562:32: OP_INLINED 676
addr_28112: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_28113: ;;// std/std.porth:50:37: OP_INLINED 662
addr_28114: ;;// std/std.porth:48:34: OP_INLINED 394
addr_28115: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28116: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_28117: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_28118: ;;// porth.porth:3562:38: OP_PUSH_STR 867
    mov rax, 42
    push rax
    lea rax, [str_867]
    push rax
addr_28119: ;;// porth.porth:3562:84: OP_INLINED 676
addr_28120: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_28121: ;;// std/std.porth:50:37: OP_INLINED 662
addr_28122: ;;// std/std.porth:48:34: OP_INLINED 394
addr_28123: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28124: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_28125: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_28126: ;;// porth.porth:3563:27: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28127: ;;// porth.porth:3563:29: OP_INLINED 418
addr_28128: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_28129: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_28130: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_28131: ;;// porth.porth:3564:25: OP_END_IF 0
addr_28132: ;;// porth.porth:3566:25: OP_PUSH_GLOBAL_MEM 15388856
    lea rax, [mem+15388856]
    push rax
addr_28133: ;;// porth.porth:3566:42: OP_INLINED 16
addr_28134: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_28135: ;;// porth.porth:3567:25: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28136: ;;// porth.porth:3567:36: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_28137: ;;// porth.porth:3568:25: OP_PUSH_GLOBAL_MEM 15388856
    lea rax, [mem+15388856]
    push rax
addr_28138: ;;// porth.porth:3568:42: OP_INLINED 30
addr_28139: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_28140: ;;// porth.porth:3569:23: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_28141: ;;// porth.porth:3570:21: OP_ELSE 267
    jmp addr_28408
addr_28142: ;;// porth.porth:3571:23: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_28143: ;;// porth.porth:3571:32: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_28144: ;;// porth.porth:3571:41: OP_INLINED 36
addr_28145: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28146: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28147: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28148: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28149: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28150: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28151: ;;// porth.porth:3572:23: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_28152: ;;// porth.porth:3573:25: OP_PUSH_BIND 6
    mov rax, [ret_stack_rsp]
    add rax, 48
    mov rbx, [rax]
    push rbx
addr_28153: ;;// porth.porth:3573:117: OP_INLINED 5367
addr_28154: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_28155: ;;// porth.porth:32:35: OP_INLINED 5195
addr_28156: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_28157: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28158: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_28159: ;;// porth.porth:24:23: OP_INLINED 36
addr_28160: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28161: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28162: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28163: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28164: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28165: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28166: ;;// porth.porth:24:28: OP_INLINED 753
addr_28167: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_28168: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28169: ;;// std/std.porth:65:7: OP_INLINED 704
addr_28170: ;;// std/std.porth:58:38: OP_INLINED 684
addr_28171: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_28172: ;;// std/std.porth:56:57: OP_INLINED 36
addr_28173: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28174: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28175: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28176: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28177: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28178: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28179: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_28180: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28181: ;;// std/std.porth:66:7: OP_INLINED 716
addr_28182: ;;// std/std.porth:59:37: OP_INLINED 694
addr_28183: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_28184: ;;// std/std.porth:57:55: OP_INLINED 36
addr_28185: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28186: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28187: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28188: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28189: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28190: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28191: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_28192: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_28193: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_28194: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_28195: ;;// porth.porth:24:36: OP_INLINED 662
addr_28196: ;;// std/std.porth:48:34: OP_INLINED 394
addr_28197: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28198: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_28199: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_28200: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_28201: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_28202: ;;// porth.porth:25:36: OP_INLINED 662
addr_28203: ;;// std/std.porth:48:34: OP_INLINED 394
addr_28204: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28205: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_28206: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_28207: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28208: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_28209: ;;// porth.porth:26:17: OP_INLINED 36
addr_28210: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28211: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28212: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28213: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28214: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28215: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28216: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_28217: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_28218: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_28219: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_28220: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_28221: ;;// porth.porth:27:36: OP_INLINED 662
addr_28222: ;;// std/std.porth:48:34: OP_INLINED 394
addr_28223: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28224: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_28225: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_28226: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28227: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_28228: ;;// porth.porth:28:17: OP_INLINED 36
addr_28229: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28230: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28231: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28232: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28233: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28234: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28235: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_28236: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_28237: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_28238: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_28239: ;;// porth.porth:3574:25: OP_PUSH_STR 868
    mov rax, 88
    push rax
    lea rax, [str_868]
    push rax
addr_28240: ;;// porth.porth:3574:117: OP_INLINED 676
addr_28241: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_28242: ;;// std/std.porth:50:37: OP_INLINED 662
addr_28243: ;;// std/std.porth:48:34: OP_INLINED 394
addr_28244: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28245: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_28246: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_28247: ;;// porth.porth:3575:25: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28248: ;;// porth.porth:3575:37: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_28249: ;;// porth.porth:3575:47: OP_INLINED 36
addr_28250: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28251: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28252: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28253: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28254: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28255: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28256: ;;// porth.porth:3575:117: OP_INLINED 5367
addr_28257: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_28258: ;;// porth.porth:32:35: OP_INLINED 5195
addr_28259: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_28260: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28261: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_28262: ;;// porth.porth:24:23: OP_INLINED 36
addr_28263: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28264: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28265: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28266: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28267: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28268: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28269: ;;// porth.porth:24:28: OP_INLINED 753
addr_28270: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_28271: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28272: ;;// std/std.porth:65:7: OP_INLINED 704
addr_28273: ;;// std/std.porth:58:38: OP_INLINED 684
addr_28274: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_28275: ;;// std/std.porth:56:57: OP_INLINED 36
addr_28276: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28277: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28278: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28279: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28280: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28281: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28282: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_28283: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28284: ;;// std/std.porth:66:7: OP_INLINED 716
addr_28285: ;;// std/std.porth:59:37: OP_INLINED 694
addr_28286: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_28287: ;;// std/std.porth:57:55: OP_INLINED 36
addr_28288: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28289: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28290: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28291: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28292: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28293: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28294: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_28295: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_28296: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_28297: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_28298: ;;// porth.porth:24:36: OP_INLINED 662
addr_28299: ;;// std/std.porth:48:34: OP_INLINED 394
addr_28300: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28301: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_28302: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_28303: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_28304: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_28305: ;;// porth.porth:25:36: OP_INLINED 662
addr_28306: ;;// std/std.porth:48:34: OP_INLINED 394
addr_28307: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28308: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_28309: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_28310: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28311: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_28312: ;;// porth.porth:26:17: OP_INLINED 36
addr_28313: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28314: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28315: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28316: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28317: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28318: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28319: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_28320: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_28321: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_28322: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_28323: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_28324: ;;// porth.porth:27:36: OP_INLINED 662
addr_28325: ;;// std/std.porth:48:34: OP_INLINED 394
addr_28326: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28327: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_28328: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_28329: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28330: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_28331: ;;// porth.porth:28:17: OP_INLINED 36
addr_28332: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28333: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28334: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28335: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28336: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28337: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28338: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_28339: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_28340: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_28341: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_28342: ;;// porth.porth:3576:25: OP_PUSH_STR 869
    mov rax, 15
    push rax
    lea rax, [str_869]
    push rax
addr_28343: ;;// porth.porth:3576:117: OP_INLINED 676
addr_28344: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_28345: ;;// std/std.porth:50:37: OP_INLINED 662
addr_28346: ;;// std/std.porth:48:34: OP_INLINED 394
addr_28347: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28348: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_28349: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_28350: ;;// porth.porth:3577:25: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28351: ;;// porth.porth:3577:37: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_28352: ;;// porth.porth:3577:48: OP_INLINED 36
addr_28353: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28354: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28355: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28356: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28357: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28358: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28359: ;;// porth.porth:3577:53: OP_INLINED 753
addr_28360: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_28361: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28362: ;;// std/std.porth:65:7: OP_INLINED 704
addr_28363: ;;// std/std.porth:58:38: OP_INLINED 684
addr_28364: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_28365: ;;// std/std.porth:56:57: OP_INLINED 36
addr_28366: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28367: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28368: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28369: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28370: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28371: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28372: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_28373: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28374: ;;// std/std.porth:66:7: OP_INLINED 716
addr_28375: ;;// std/std.porth:59:37: OP_INLINED 694
addr_28376: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_28377: ;;// std/std.porth:57:55: OP_INLINED 36
addr_28378: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28379: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28380: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28381: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28382: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28383: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28384: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_28385: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_28386: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_28387: ;;// porth.porth:3577:117: OP_INLINED 676
addr_28388: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_28389: ;;// std/std.porth:50:37: OP_INLINED 662
addr_28390: ;;// std/std.porth:48:34: OP_INLINED 394
addr_28391: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28392: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_28393: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_28394: ;;// porth.porth:3578:25: OP_PUSH_STR 870
    mov rax, 10
    push rax
    lea rax, [str_870]
    push rax
addr_28395: ;;// porth.porth:3578:117: OP_INLINED 676
addr_28396: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_28397: ;;// std/std.porth:50:37: OP_INLINED 662
addr_28398: ;;// std/std.porth:48:34: OP_INLINED 394
addr_28399: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28400: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_28401: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_28402: ;;// porth.porth:3579:23: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_28403: ;;// porth.porth:3580:23: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28404: ;;// porth.porth:3580:25: OP_INLINED 418
addr_28405: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_28406: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_28407: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_28408: ;;// porth.porth:3581:21: OP_END_IF 0
addr_28409: ;;// porth.porth:3582:19: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_28410: ;;// porth.porth:3583:17: OP_ELSE 687
    jmp addr_29097
addr_28411: ;;// porth.porth:3583:22: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28412: ;;// porth.porth:3583:30: OP_PUSH_INT 6
    mov rax, 6
    push rax
addr_28413: ;;// porth.porth:3583:46: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_28414: ;;// porth.porth:3583:48: OP_IFSTAR 684
    pop rax
    test rax, rax
    jz addr_29098
addr_28415: ;;// porth.porth:3584:19: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_28416: ;;// porth.porth:3584:25: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_28417: ;;// porth.porth:3584:31: OP_CALL 8340
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_8340
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_28418: ;;// porth.porth:3584:48: OP_INLINED 131
addr_28419: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_28420: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28421: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28422: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_28423: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_28424: ;;// porth.porth:3584:53: OP_IF 101
    pop rax
    test rax, rax
    jz addr_28525
addr_28425: ;;// porth.porth:3585:21: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_28426: ;;// porth.porth:3585:25: OP_INLINED 5367
addr_28427: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_28428: ;;// porth.porth:32:35: OP_INLINED 5195
addr_28429: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_28430: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28431: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_28432: ;;// porth.porth:24:23: OP_INLINED 36
addr_28433: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28434: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28435: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28436: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28437: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28438: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28439: ;;// porth.porth:24:28: OP_INLINED 753
addr_28440: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_28441: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28442: ;;// std/std.porth:65:7: OP_INLINED 704
addr_28443: ;;// std/std.porth:58:38: OP_INLINED 684
addr_28444: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_28445: ;;// std/std.porth:56:57: OP_INLINED 36
addr_28446: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28447: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28448: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28449: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28450: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28451: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28452: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_28453: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28454: ;;// std/std.porth:66:7: OP_INLINED 716
addr_28455: ;;// std/std.porth:59:37: OP_INLINED 694
addr_28456: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_28457: ;;// std/std.porth:57:55: OP_INLINED 36
addr_28458: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28459: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28460: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28461: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28462: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28463: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28464: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_28465: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_28466: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_28467: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_28468: ;;// porth.porth:24:36: OP_INLINED 662
addr_28469: ;;// std/std.porth:48:34: OP_INLINED 394
addr_28470: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28471: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_28472: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_28473: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_28474: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_28475: ;;// porth.porth:25:36: OP_INLINED 662
addr_28476: ;;// std/std.porth:48:34: OP_INLINED 394
addr_28477: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28478: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_28479: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_28480: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28481: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_28482: ;;// porth.porth:26:17: OP_INLINED 36
addr_28483: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28484: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28485: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28486: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28487: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28488: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28489: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_28490: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_28491: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_28492: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_28493: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_28494: ;;// porth.porth:27:36: OP_INLINED 662
addr_28495: ;;// std/std.porth:48:34: OP_INLINED 394
addr_28496: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28497: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_28498: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_28499: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28500: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_28501: ;;// porth.porth:28:17: OP_INLINED 36
addr_28502: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28503: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28504: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28505: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28506: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28507: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28508: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_28509: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_28510: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_28511: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_28512: ;;// porth.porth:3586:21: OP_PUSH_STR 871
    mov rax, 61
    push rax
    lea rax, [str_871]
    push rax
addr_28513: ;;// porth.porth:3586:86: OP_INLINED 676
addr_28514: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_28515: ;;// std/std.porth:50:37: OP_INLINED 662
addr_28516: ;;// std/std.porth:48:34: OP_INLINED 394
addr_28517: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28518: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_28519: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_28520: ;;// porth.porth:3587:21: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28521: ;;// porth.porth:3587:23: OP_INLINED 418
addr_28522: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_28523: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_28524: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_28525: ;;// porth.porth:3588:19: OP_END_IF 0
addr_28526: ;;// porth.porth:3590:19: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_28527: ;;// porth.porth:3590:24: OP_INLINED 16
addr_28528: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_28529: ;;// porth.porth:3590:29: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_28530: ;;// porth.porth:3590:39: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_28531: ;;// porth.porth:3590:42: OP_IF 121
    pop rax
    test rax, rax
    jz addr_28652
addr_28532: ;;// porth.porth:3591:21: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_28533: ;;// porth.porth:3591:92: OP_INLINED 5367
addr_28534: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_28535: ;;// porth.porth:32:35: OP_INLINED 5195
addr_28536: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_28537: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28538: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_28539: ;;// porth.porth:24:23: OP_INLINED 36
addr_28540: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28541: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28542: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28543: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28544: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28545: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28546: ;;// porth.porth:24:28: OP_INLINED 753
addr_28547: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_28548: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28549: ;;// std/std.porth:65:7: OP_INLINED 704
addr_28550: ;;// std/std.porth:58:38: OP_INLINED 684
addr_28551: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_28552: ;;// std/std.porth:56:57: OP_INLINED 36
addr_28553: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28554: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28555: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28556: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28557: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28558: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28559: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_28560: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28561: ;;// std/std.porth:66:7: OP_INLINED 716
addr_28562: ;;// std/std.porth:59:37: OP_INLINED 694
addr_28563: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_28564: ;;// std/std.porth:57:55: OP_INLINED 36
addr_28565: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28566: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28567: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28568: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28569: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28570: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28571: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_28572: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_28573: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_28574: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_28575: ;;// porth.porth:24:36: OP_INLINED 662
addr_28576: ;;// std/std.porth:48:34: OP_INLINED 394
addr_28577: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28578: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_28579: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_28580: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_28581: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_28582: ;;// porth.porth:25:36: OP_INLINED 662
addr_28583: ;;// std/std.porth:48:34: OP_INLINED 394
addr_28584: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28585: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_28586: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_28587: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28588: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_28589: ;;// porth.porth:26:17: OP_INLINED 36
addr_28590: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28591: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28592: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28593: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28594: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28595: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28596: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_28597: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_28598: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_28599: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_28600: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_28601: ;;// porth.porth:27:36: OP_INLINED 662
addr_28602: ;;// std/std.porth:48:34: OP_INLINED 394
addr_28603: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28604: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_28605: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_28606: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28607: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_28608: ;;// porth.porth:28:17: OP_INLINED 36
addr_28609: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28610: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28611: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28612: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28613: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28614: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28615: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_28616: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_28617: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_28618: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_28619: ;;// porth.porth:3592:21: OP_PUSH_STR 872
    mov rax, 68
    push rax
    lea rax, [str_872]
    push rax
addr_28620: ;;// porth.porth:3592:92: OP_INLINED 676
addr_28621: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_28622: ;;// std/std.porth:50:37: OP_INLINED 662
addr_28623: ;;// std/std.porth:48:34: OP_INLINED 394
addr_28624: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28625: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_28626: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_28627: ;;// porth.porth:3593:21: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_28628: ;;// porth.porth:3593:26: OP_INLINED 16
addr_28629: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_28630: ;;// porth.porth:3593:31: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_28631: ;;// porth.porth:3593:46: OP_CALL 10127
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_10127
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_28632: ;;// porth.porth:3593:92: OP_INLINED 676
addr_28633: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_28634: ;;// std/std.porth:50:37: OP_INLINED 662
addr_28635: ;;// std/std.porth:48:34: OP_INLINED 394
addr_28636: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28637: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_28638: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_28639: ;;// porth.porth:3594:21: OP_PUSH_STR 873
    mov rax, 1
    push rax
    lea rax, [str_873]
    push rax
addr_28640: ;;// porth.porth:3594:92: OP_INLINED 676
addr_28641: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_28642: ;;// std/std.porth:50:37: OP_INLINED 662
addr_28643: ;;// std/std.porth:48:34: OP_INLINED 394
addr_28644: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28645: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_28646: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_28647: ;;// porth.porth:3595:21: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28648: ;;// porth.porth:3595:23: OP_INLINED 418
addr_28649: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_28650: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_28651: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_28652: ;;// porth.porth:3596:19: OP_END_IF 0
addr_28653: ;;// porth.porth:3598:19: OP_INLINED 2414
addr_28654: ;;// std/std.porth:506:31: OP_PUSH_GLOBAL_MEM 8
    lea rax, [mem+8]
    push rax
addr_28655: ;;// std/std.porth:506:41: OP_PUSH_GLOBAL_MEM 8388616
    lea rax, [mem+8388616]
    push rax
addr_28656: ;;// std/std.porth:506:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_28657: ;;// std/std.porth:506:54: OP_INLINED 36
addr_28658: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28659: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28660: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28661: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28662: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28663: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28664: ;;// porth.porth:3599:19: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_28665: ;;// porth.porth:3600:21: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_28666: ;;// porth.porth:3600:27: OP_INLINED 753
addr_28667: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_28668: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28669: ;;// std/std.porth:65:7: OP_INLINED 704
addr_28670: ;;// std/std.porth:58:38: OP_INLINED 684
addr_28671: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_28672: ;;// std/std.porth:56:57: OP_INLINED 36
addr_28673: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28674: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28675: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28676: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28677: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28678: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28679: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_28680: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28681: ;;// std/std.porth:66:7: OP_INLINED 716
addr_28682: ;;// std/std.porth:59:37: OP_INLINED 694
addr_28683: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_28684: ;;// std/std.porth:57:55: OP_INLINED 36
addr_28685: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28686: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28687: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28688: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28689: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28690: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28691: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_28692: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_28693: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_28694: ;;// porth.porth:3600:32: OP_CALL 25830
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_25830
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_28695: ;;// porth.porth:3600:59: OP_INLINED 131
addr_28696: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_28697: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28698: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28699: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_28700: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_28701: ;;// porth.porth:3600:64: OP_IF 145
    pop rax
    test rax, rax
    jz addr_28846
addr_28702: ;;// porth.porth:3601:23: OP_PUSH_BIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov rbx, [rax]
    push rbx
addr_28703: ;;// porth.porth:3601:41: OP_INLINED 5367
addr_28704: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_28705: ;;// porth.porth:32:35: OP_INLINED 5195
addr_28706: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_28707: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28708: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_28709: ;;// porth.porth:24:23: OP_INLINED 36
addr_28710: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28711: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28712: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28713: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28714: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28715: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28716: ;;// porth.porth:24:28: OP_INLINED 753
addr_28717: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_28718: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28719: ;;// std/std.porth:65:7: OP_INLINED 704
addr_28720: ;;// std/std.porth:58:38: OP_INLINED 684
addr_28721: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_28722: ;;// std/std.porth:56:57: OP_INLINED 36
addr_28723: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28724: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28725: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28726: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28727: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28728: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28729: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_28730: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28731: ;;// std/std.porth:66:7: OP_INLINED 716
addr_28732: ;;// std/std.porth:59:37: OP_INLINED 694
addr_28733: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_28734: ;;// std/std.porth:57:55: OP_INLINED 36
addr_28735: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28736: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28737: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28738: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28739: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28740: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28741: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_28742: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_28743: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_28744: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_28745: ;;// porth.porth:24:36: OP_INLINED 662
addr_28746: ;;// std/std.porth:48:34: OP_INLINED 394
addr_28747: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28748: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_28749: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_28750: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_28751: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_28752: ;;// porth.porth:25:36: OP_INLINED 662
addr_28753: ;;// std/std.porth:48:34: OP_INLINED 394
addr_28754: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28755: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_28756: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_28757: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28758: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_28759: ;;// porth.porth:26:17: OP_INLINED 36
addr_28760: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28761: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28762: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28763: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28764: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28765: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28766: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_28767: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_28768: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_28769: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_28770: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_28771: ;;// porth.porth:27:36: OP_INLINED 662
addr_28772: ;;// std/std.porth:48:34: OP_INLINED 394
addr_28773: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28774: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_28775: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_28776: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28777: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_28778: ;;// porth.porth:28:17: OP_INLINED 36
addr_28779: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28780: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28781: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28782: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28783: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28784: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28785: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_28786: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_28787: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_28788: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_28789: ;;// porth.porth:3602:23: OP_PUSH_STR 874
    mov rax, 15
    push rax
    lea rax, [str_874]
    push rax
addr_28790: ;;// porth.porth:3602:41: OP_INLINED 676
addr_28791: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_28792: ;;// std/std.porth:50:37: OP_INLINED 662
addr_28793: ;;// std/std.porth:48:34: OP_INLINED 394
addr_28794: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28795: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_28796: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_28797: ;;// porth.porth:3603:23: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_28798: ;;// porth.porth:3603:29: OP_INLINED 753
addr_28799: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_28800: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28801: ;;// std/std.porth:65:7: OP_INLINED 704
addr_28802: ;;// std/std.porth:58:38: OP_INLINED 684
addr_28803: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_28804: ;;// std/std.porth:56:57: OP_INLINED 36
addr_28805: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28806: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28807: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28808: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28809: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28810: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28811: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_28812: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28813: ;;// std/std.porth:66:7: OP_INLINED 716
addr_28814: ;;// std/std.porth:59:37: OP_INLINED 694
addr_28815: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_28816: ;;// std/std.porth:57:55: OP_INLINED 36
addr_28817: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28818: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28819: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28820: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28821: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28822: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28823: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_28824: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_28825: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_28826: ;;// porth.porth:3603:41: OP_INLINED 676
addr_28827: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_28828: ;;// std/std.porth:50:37: OP_INLINED 662
addr_28829: ;;// std/std.porth:48:34: OP_INLINED 394
addr_28830: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28831: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_28832: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_28833: ;;// porth.porth:3604:23: OP_PUSH_STR 875
    mov rax, 12
    push rax
    lea rax, [str_875]
    push rax
addr_28834: ;;// porth.porth:3604:41: OP_INLINED 676
addr_28835: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_28836: ;;// std/std.porth:50:37: OP_INLINED 662
addr_28837: ;;// std/std.porth:48:34: OP_INLINED 394
addr_28838: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28839: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_28840: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_28841: ;;// porth.porth:3605:23: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28842: ;;// porth.porth:3605:25: OP_INLINED 418
addr_28843: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_28844: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_28845: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_28846: ;;// porth.porth:3606:21: OP_END_IF 0
addr_28847: ;;// porth.porth:3608:21: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_28848: ;;// porth.porth:3609:23: OP_INLINED 18105
addr_28849: ;;// porth.porth:2400:31: OP_PUSH_GLOBAL_MEM 15315096
    lea rax, [mem+15315096]
    push rax
addr_28850: ;;// porth.porth:2400:41: OP_PUSH_GLOBAL_MEM 15347864
    lea rax, [mem+15347864]
    push rax
addr_28851: ;;// porth.porth:2400:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_28852: ;;// porth.porth:2400:54: OP_INLINED 36
addr_28853: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28854: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28855: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28856: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28857: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28858: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28859: ;;// porth.porth:3610:23: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28860: ;;// porth.porth:3610:25: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_28861: ;;// porth.porth:3610:27: OP_INLINED 18180
addr_28862: ;;// porth.porth:2417:42: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_28863: ;;// porth.porth:2417:47: OP_CALL 18129
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18129
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_28864: ;;// porth.porth:2417:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_28865: ;;// porth.porth:3610:38: OP_INTRINSIC drop
    pop rax
addr_28866: ;;// porth.porth:3611:23: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28867: ;;// porth.porth:3611:25: OP_CALL 18129
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18129
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_28868: ;;// porth.porth:3611:35: OP_INTRINSIC drop
    pop rax
addr_28869: ;;// porth.porth:3613:23: OP_INLINED 18105
addr_28870: ;;// porth.porth:2400:31: OP_PUSH_GLOBAL_MEM 15315096
    lea rax, [mem+15315096]
    push rax
addr_28871: ;;// porth.porth:2400:41: OP_PUSH_GLOBAL_MEM 15347864
    lea rax, [mem+15347864]
    push rax
addr_28872: ;;// porth.porth:2400:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_28873: ;;// porth.porth:2400:54: OP_INLINED 36
addr_28874: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28875: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28876: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28877: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28878: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28879: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28880: ;;// porth.porth:3614:23: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28881: ;;// porth.porth:3614:25: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_28882: ;;// porth.porth:3614:27: OP_CALL 4856
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_4856
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_28883: ;;// porth.porth:3614:35: OP_INLINED 18180
addr_28884: ;;// porth.porth:2417:42: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_28885: ;;// porth.porth:2417:47: OP_CALL 18129
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18129
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_28886: ;;// porth.porth:2417:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_28887: ;;// porth.porth:3614:46: OP_INTRINSIC drop
    pop rax
addr_28888: ;;// porth.porth:3615:23: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28889: ;;// porth.porth:3615:25: OP_CALL 18129
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18129
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_28890: ;;// porth.porth:3615:35: OP_INTRINSIC drop
    pop rax
addr_28891: ;;// porth.porth:3616:21: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_28892: ;;// porth.porth:3617:21: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28893: ;;// porth.porth:3617:23: OP_INLINED 2426
addr_28894: ;;// std/std.porth:509:31: OP_PUSH_GLOBAL_MEM 8
    lea rax, [mem+8]
    push rax
addr_28895: ;;// std/std.porth:509:41: OP_INLINED 78
addr_28896: ;;// std/core.porth:68:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28897: ;;// std/core.porth:68:8: OP_INTRINSIC cast(int)
addr_28898: ;;// std/core.porth:69:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28899: ;;// std/core.porth:69:8: OP_INTRINSIC cast(int)
addr_28900: ;;// std/core.porth:70:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_28901: ;;// std/std.porth:509:50: OP_PUSH_GLOBAL_MEM 8388616
    lea rax, [mem+8388616]
    push rax
addr_28902: ;;// std/std.porth:509:59: OP_INLINED 30
addr_28903: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_28904: ;;// porth.porth:3618:19: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_28905: ;;// porth.porth:3620:19: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_28906: ;;// porth.porth:3621:21: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_28907: ;;// porth.porth:3621:38: OP_CALL 25605
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_25605
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_28908: ;;// porth.porth:3622:21: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_28909: ;;// porth.porth:3623:23: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28910: ;;// porth.porth:3623:30: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_28911: ;;// porth.porth:3623:35: OP_INLINED 59
addr_28912: ;;// std/core.porth:52:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28913: ;;// std/core.porth:52:8: OP_INTRINSIC cast(int)
addr_28914: ;;// std/core.porth:53:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28915: ;;// std/core.porth:53:8: OP_INTRINSIC cast(int)
addr_28916: ;;// std/core.porth:54:3: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_28917: ;;// porth.porth:3623:40: OP_IF 58
    pop rax
    test rax, rax
    jz addr_28975
addr_28918: ;;// porth.porth:3624:25: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_28919: ;;// porth.porth:3624:42: OP_CALL 25673
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_25673
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_28920: ;;// porth.porth:3625:27: OP_PUSH_GLOBAL_MEM 15310976
    lea rax, [mem+15310976]
    push rax
addr_28921: ;;// porth.porth:3625:34: OP_INLINED 12
addr_28922: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_28923: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_28924: ;;// porth.porth:3625:40: OP_INLINED 131
addr_28925: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_28926: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28927: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28928: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_28929: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_28930: ;;// porth.porth:3625:45: OP_IF 29
    pop rax
    test rax, rax
    jz addr_28959
addr_28931: ;;// porth.porth:3626:29: OP_PUSH_STR 876
    mov rax, 17
    push rax
    lea rax, [str_876]
    push rax
addr_28932: ;;// porth.porth:3626:54: OP_INLINED 668
addr_28933: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28934: ;;// std/std.porth:49:36: OP_INLINED 662
addr_28935: ;;// std/std.porth:48:34: OP_INLINED 394
addr_28936: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28937: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_28938: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_28939: ;;// porth.porth:3627:29: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_28940: ;;// porth.porth:3627:42: OP_INLINED 657
addr_28941: ;;// std/std.porth:45:43: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_28942: ;;// std/std.porth:45:47: OP_CALL 564
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_564
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_28943: ;;// std/std.porth:45:55: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28944: ;;// porth.porth:3627:54: OP_INLINED 668
addr_28945: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28946: ;;// std/std.porth:49:36: OP_INLINED 662
addr_28947: ;;// std/std.porth:48:34: OP_INLINED 394
addr_28948: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28949: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_28950: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_28951: ;;// porth.porth:3628:29: OP_PUSH_STR 877
    mov rax, 1
    push rax
    lea rax, [str_877]
    push rax
addr_28952: ;;// porth.porth:3628:54: OP_INLINED 668
addr_28953: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28954: ;;// std/std.porth:49:36: OP_INLINED 662
addr_28955: ;;// std/std.porth:48:34: OP_INLINED 394
addr_28956: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28957: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_28958: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_28959: ;;// porth.porth:3629:27: OP_END_IF 0
addr_28960: ;;// porth.porth:3630:27: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_28961: ;;// porth.porth:3630:40: OP_CALL 26046
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_26046
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_28962: ;;// porth.porth:3631:25: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_28963: ;;// porth.porth:3631:30: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28964: ;;// porth.porth:3631:35: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_28965: ;;// porth.porth:3631:51: OP_INLINED 36
addr_28966: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28967: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28968: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28969: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28970: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28971: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28972: ;;// porth.porth:3631:56: OP_INLINED 24
addr_28973: ;;// std/core.porth:26:31: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_28974: ;;// porth.porth:3632:23: OP_ELSE 120
    jmp addr_29094
addr_28975: ;;// porth.porth:3632:28: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_28976: ;;// porth.porth:3632:35: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_28977: ;;// porth.porth:3632:51: OP_INLINED 36
addr_28978: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28979: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_28980: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28981: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_28982: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_28983: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_28984: ;;// porth.porth:3632:56: OP_INLINED 12
addr_28985: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_28986: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_28987: ;;// porth.porth:3632:62: OP_INLINED 131
addr_28988: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_28989: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_28990: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_28991: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_28992: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_28993: ;;// porth.porth:3632:67: OP_IFSTAR 102
    pop rax
    test rax, rax
    jz addr_29095
addr_28994: ;;// porth.porth:3642:25: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_28995: ;;// porth.porth:3642:51: OP_INLINED 5367
addr_28996: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_28997: ;;// porth.porth:32:35: OP_INLINED 5195
addr_28998: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_28999: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29000: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_29001: ;;// porth.porth:24:23: OP_INLINED 36
addr_29002: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29003: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29004: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29005: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29006: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29007: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29008: ;;// porth.porth:24:28: OP_INLINED 753
addr_29009: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_29010: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29011: ;;// std/std.porth:65:7: OP_INLINED 704
addr_29012: ;;// std/std.porth:58:38: OP_INLINED 684
addr_29013: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_29014: ;;// std/std.porth:56:57: OP_INLINED 36
addr_29015: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29016: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29017: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29018: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29019: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29020: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29021: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_29022: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29023: ;;// std/std.porth:66:7: OP_INLINED 716
addr_29024: ;;// std/std.porth:59:37: OP_INLINED 694
addr_29025: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_29026: ;;// std/std.porth:57:55: OP_INLINED 36
addr_29027: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29028: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29029: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29030: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29031: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29032: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29033: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_29034: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_29035: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_29036: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_29037: ;;// porth.porth:24:36: OP_INLINED 662
addr_29038: ;;// std/std.porth:48:34: OP_INLINED 394
addr_29039: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29040: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_29041: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_29042: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_29043: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_29044: ;;// porth.porth:25:36: OP_INLINED 662
addr_29045: ;;// std/std.porth:48:34: OP_INLINED 394
addr_29046: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29047: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_29048: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_29049: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29050: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_29051: ;;// porth.porth:26:17: OP_INLINED 36
addr_29052: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29053: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29054: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29055: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29056: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29057: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29058: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_29059: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_29060: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_29061: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_29062: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_29063: ;;// porth.porth:27:36: OP_INLINED 662
addr_29064: ;;// std/std.porth:48:34: OP_INLINED 394
addr_29065: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29066: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_29067: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_29068: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29069: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_29070: ;;// porth.porth:28:17: OP_INLINED 36
addr_29071: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29072: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29073: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29074: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29075: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29076: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29077: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_29078: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_29079: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_29080: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_29081: ;;// porth.porth:3643:25: OP_PUSH_STR 878
    mov rax, 22
    push rax
    lea rax, [str_878]
    push rax
addr_29082: ;;// porth.porth:3643:51: OP_INLINED 676
addr_29083: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_29084: ;;// std/std.porth:50:37: OP_INLINED 662
addr_29085: ;;// std/std.porth:48:34: OP_INLINED 394
addr_29086: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29087: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_29088: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_29089: ;;// porth.porth:3644:25: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29090: ;;// porth.porth:3644:27: OP_INLINED 418
addr_29091: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_29092: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_29093: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_29094: ;;// porth.porth:3645:23: OP_END_IF 0
addr_29095: ;;// porth.porth:3646:21: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_29096: ;;// porth.porth:3647:19: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_29097: ;;// porth.porth:3648:17: OP_ELSE 384
    jmp addr_29481
addr_29098: ;;// porth.porth:3648:22: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29099: ;;// porth.porth:3648:30: OP_PUSH_INT 9
    mov rax, 9
    push rax
addr_29100: ;;// porth.porth:3648:44: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_29101: ;;// porth.porth:3648:46: OP_IFSTAR 381
    pop rax
    test rax, rax
    jz addr_29482
addr_29102: ;;// porth.porth:3649:19: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_29103: ;;// porth.porth:3649:25: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_29104: ;;// porth.porth:3649:31: OP_CALL 8340
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_8340
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_29105: ;;// porth.porth:3649:48: OP_INLINED 131
addr_29106: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_29107: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29108: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29109: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_29110: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_29111: ;;// porth.porth:3649:53: OP_IF 101
    pop rax
    test rax, rax
    jz addr_29212
addr_29112: ;;// porth.porth:3650:21: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_29113: ;;// porth.porth:3650:25: OP_INLINED 5367
addr_29114: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_29115: ;;// porth.porth:32:35: OP_INLINED 5195
addr_29116: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_29117: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29118: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_29119: ;;// porth.porth:24:23: OP_INLINED 36
addr_29120: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29121: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29122: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29123: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29124: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29125: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29126: ;;// porth.porth:24:28: OP_INLINED 753
addr_29127: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_29128: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29129: ;;// std/std.porth:65:7: OP_INLINED 704
addr_29130: ;;// std/std.porth:58:38: OP_INLINED 684
addr_29131: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_29132: ;;// std/std.porth:56:57: OP_INLINED 36
addr_29133: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29134: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29135: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29136: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29137: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29138: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29139: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_29140: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29141: ;;// std/std.porth:66:7: OP_INLINED 716
addr_29142: ;;// std/std.porth:59:37: OP_INLINED 694
addr_29143: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_29144: ;;// std/std.porth:57:55: OP_INLINED 36
addr_29145: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29146: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29147: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29148: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29149: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29150: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29151: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_29152: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_29153: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_29154: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_29155: ;;// porth.porth:24:36: OP_INLINED 662
addr_29156: ;;// std/std.porth:48:34: OP_INLINED 394
addr_29157: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29158: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_29159: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_29160: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_29161: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_29162: ;;// porth.porth:25:36: OP_INLINED 662
addr_29163: ;;// std/std.porth:48:34: OP_INLINED 394
addr_29164: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29165: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_29166: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_29167: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29168: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_29169: ;;// porth.porth:26:17: OP_INLINED 36
addr_29170: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29171: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29172: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29173: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29174: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29175: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29176: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_29177: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_29178: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_29179: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_29180: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_29181: ;;// porth.porth:27:36: OP_INLINED 662
addr_29182: ;;// std/std.porth:48:34: OP_INLINED 394
addr_29183: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29184: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_29185: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_29186: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29187: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_29188: ;;// porth.porth:28:17: OP_INLINED 36
addr_29189: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29190: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29191: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29192: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29193: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29194: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29195: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_29196: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_29197: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_29198: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_29199: ;;// porth.porth:3651:21: OP_PUSH_STR 879
    mov rax, 43
    push rax
    lea rax, [str_879]
    push rax
addr_29200: ;;// porth.porth:3651:68: OP_INLINED 676
addr_29201: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_29202: ;;// std/std.porth:50:37: OP_INLINED 662
addr_29203: ;;// std/std.porth:48:34: OP_INLINED 394
addr_29204: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29205: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_29206: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_29207: ;;// porth.porth:3652:21: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29208: ;;// porth.porth:3652:23: OP_INLINED 418
addr_29209: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_29210: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_29211: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_29212: ;;// porth.porth:3653:19: OP_END_IF 0
addr_29213: ;;// porth.porth:3655:19: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_29214: ;;// porth.porth:3655:24: OP_INLINED 16
addr_29215: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_29216: ;;// porth.porth:3655:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29217: ;;// porth.porth:3655:40: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_29218: ;;// porth.porth:3655:43: OP_IF 101
    pop rax
    test rax, rax
    jz addr_29319
addr_29219: ;;// porth.porth:3657:21: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_29220: ;;// porth.porth:3657:63: OP_INLINED 5367
addr_29221: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_29222: ;;// porth.porth:32:35: OP_INLINED 5195
addr_29223: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_29224: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29225: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_29226: ;;// porth.porth:24:23: OP_INLINED 36
addr_29227: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29228: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29229: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29230: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29231: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29232: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29233: ;;// porth.porth:24:28: OP_INLINED 753
addr_29234: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_29235: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29236: ;;// std/std.porth:65:7: OP_INLINED 704
addr_29237: ;;// std/std.porth:58:38: OP_INLINED 684
addr_29238: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_29239: ;;// std/std.porth:56:57: OP_INLINED 36
addr_29240: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29241: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29242: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29243: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29244: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29245: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29246: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_29247: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29248: ;;// std/std.porth:66:7: OP_INLINED 716
addr_29249: ;;// std/std.porth:59:37: OP_INLINED 694
addr_29250: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_29251: ;;// std/std.porth:57:55: OP_INLINED 36
addr_29252: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29253: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29254: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29255: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29256: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29257: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29258: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_29259: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_29260: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_29261: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_29262: ;;// porth.porth:24:36: OP_INLINED 662
addr_29263: ;;// std/std.porth:48:34: OP_INLINED 394
addr_29264: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29265: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_29266: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_29267: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_29268: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_29269: ;;// porth.porth:25:36: OP_INLINED 662
addr_29270: ;;// std/std.porth:48:34: OP_INLINED 394
addr_29271: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29272: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_29273: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_29274: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29275: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_29276: ;;// porth.porth:26:17: OP_INLINED 36
addr_29277: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29278: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29279: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29280: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29281: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29282: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29283: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_29284: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_29285: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_29286: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_29287: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_29288: ;;// porth.porth:27:36: OP_INLINED 662
addr_29289: ;;// std/std.porth:48:34: OP_INLINED 394
addr_29290: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29291: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_29292: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_29293: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29294: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_29295: ;;// porth.porth:28:17: OP_INLINED 36
addr_29296: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29297: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29298: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29299: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29300: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29301: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29302: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_29303: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_29304: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_29305: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_29306: ;;// porth.porth:3658:21: OP_PUSH_STR 880
    mov rax, 38
    push rax
    lea rax, [str_880]
    push rax
addr_29307: ;;// porth.porth:3658:63: OP_INLINED 676
addr_29308: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_29309: ;;// std/std.porth:50:37: OP_INLINED 662
addr_29310: ;;// std/std.porth:48:34: OP_INLINED 394
addr_29311: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29312: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_29313: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_29314: ;;// porth.porth:3659:21: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29315: ;;// porth.porth:3659:23: OP_INLINED 418
addr_29316: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_29317: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_29318: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_29319: ;;// porth.porth:3660:19: OP_END_IF 0
addr_29320: ;;// porth.porth:3662:19: OP_PUSH_BIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov rbx, [rax]
    push rbx
addr_29321: ;;// porth.porth:3662:25: OP_INLINED 753
addr_29322: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_29323: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29324: ;;// std/std.porth:65:7: OP_INLINED 704
addr_29325: ;;// std/std.porth:58:38: OP_INLINED 684
addr_29326: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_29327: ;;// std/std.porth:56:57: OP_INLINED 36
addr_29328: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29329: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29330: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29331: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29332: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29333: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29334: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_29335: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29336: ;;// std/std.porth:66:7: OP_INLINED 716
addr_29337: ;;// std/std.porth:59:37: OP_INLINED 694
addr_29338: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_29339: ;;// std/std.porth:57:55: OP_INLINED 36
addr_29340: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29341: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29342: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29343: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29344: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29345: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29346: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_29347: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_29348: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_29349: ;;// porth.porth:3662:30: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_29350: ;;// porth.porth:3662:34: OP_CALL 21216
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_21216
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_29351: ;;// porth.porth:3664:19: OP_INLINED 2414
addr_29352: ;;// std/std.porth:506:31: OP_PUSH_GLOBAL_MEM 8
    lea rax, [mem+8]
    push rax
addr_29353: ;;// std/std.porth:506:41: OP_PUSH_GLOBAL_MEM 8388616
    lea rax, [mem+8388616]
    push rax
addr_29354: ;;// std/std.porth:506:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_29355: ;;// std/std.porth:506:54: OP_INLINED 36
addr_29356: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29357: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29358: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29359: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29360: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29361: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29362: ;;// porth.porth:3665:21: OP_PUSH_INT 64
    mov rax, 64
    push rax
addr_29363: ;;// porth.porth:3665:35: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_29364: ;;// porth.porth:3666:21: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_29365: ;;// porth.porth:3667:23: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_29366: ;;// porth.porth:3667:29: OP_INLINED 753
addr_29367: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_29368: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29369: ;;// std/std.porth:65:7: OP_INLINED 704
addr_29370: ;;// std/std.porth:58:38: OP_INLINED 684
addr_29371: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_29372: ;;// std/std.porth:56:57: OP_INLINED 36
addr_29373: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29374: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29375: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29376: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29377: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29378: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29379: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_29380: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29381: ;;// std/std.porth:66:7: OP_INLINED 716
addr_29382: ;;// std/std.porth:59:37: OP_INLINED 694
addr_29383: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_29384: ;;// std/std.porth:57:55: OP_INLINED 36
addr_29385: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29386: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29387: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29388: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29389: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29390: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29391: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_29392: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_29393: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_29394: ;;// porth.porth:3667:34: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29395: ;;// porth.porth:3667:40: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_29396: ;;// porth.porth:3667:51: OP_INLINED 36
addr_29397: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29398: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29399: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29400: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29401: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29402: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29403: ;;// porth.porth:3667:56: OP_INLINED 782
addr_29404: ;;// std/std.porth:71:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_29405: ;;// std/std.porth:72:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29406: ;;// std/std.porth:72:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_29407: ;;// std/std.porth:72:9: OP_INLINED 729
addr_29408: ;;// std/std.porth:60:35: OP_INLINED 684
addr_29409: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_29410: ;;// std/std.porth:56:57: OP_INLINED 36
addr_29411: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29412: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29413: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29414: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29415: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29416: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29417: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_29418: ;;// std/std.porth:73:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_29419: ;;// std/std.porth:73:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_29420: ;;// std/std.porth:73:9: OP_INLINED 741
addr_29421: ;;// std/std.porth:61:34: OP_INLINED 694
addr_29422: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_29423: ;;// std/std.porth:57:55: OP_INLINED 36
addr_29424: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29425: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29426: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29427: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29428: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29429: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29430: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_29431: ;;// std/std.porth:74:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_29432: ;;// porth.porth:3668:23: OP_PUSH_INT 32
    mov rax, 32
    push rax
addr_29433: ;;// porth.porth:3668:35: OP_PUSH_BIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov rbx, [rax]
    push rbx
addr_29434: ;;// porth.porth:3668:39: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29435: ;;// porth.porth:3668:45: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_29436: ;;// porth.porth:3668:55: OP_INLINED 36
addr_29437: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29438: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29439: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29440: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29441: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29442: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29443: ;;// porth.porth:3668:60: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_29444: ;;// porth.porth:3668:67: OP_INTRINSIC drop
    pop rax
addr_29445: ;;// porth.porth:3670:23: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_29446: ;;// porth.porth:3670:29: OP_CALL 19922
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_19922
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_29447: ;;// porth.porth:3671:23: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29448: ;;// porth.porth:3671:29: OP_PUSH_INT 48
    mov rax, 48
    push rax
addr_29449: ;;// porth.porth:3671:41: OP_INLINED 36
addr_29450: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29451: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29452: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29453: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29454: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29455: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29456: ;;// porth.porth:3671:46: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_29457: ;;// porth.porth:3672:23: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29458: ;;// porth.porth:3672:29: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_29459: ;;// porth.porth:3672:40: OP_INLINED 36
addr_29460: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29461: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29462: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29463: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29464: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29465: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29466: ;;// porth.porth:3672:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_29467: ;;// porth.porth:3673:23: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29468: ;;// porth.porth:3673:29: OP_CALL 13466
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13466
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_29469: ;;// porth.porth:3674:21: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_29470: ;;// porth.porth:3675:19: OP_INLINED 2426
addr_29471: ;;// std/std.porth:509:31: OP_PUSH_GLOBAL_MEM 8
    lea rax, [mem+8]
    push rax
addr_29472: ;;// std/std.porth:509:41: OP_INLINED 78
addr_29473: ;;// std/core.porth:68:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29474: ;;// std/core.porth:68:8: OP_INTRINSIC cast(int)
addr_29475: ;;// std/core.porth:69:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29476: ;;// std/core.porth:69:8: OP_INTRINSIC cast(int)
addr_29477: ;;// std/core.porth:70:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_29478: ;;// std/std.porth:509:50: OP_PUSH_GLOBAL_MEM 8388616
    lea rax, [mem+8388616]
    push rax
addr_29479: ;;// std/std.porth:509:59: OP_INLINED 30
addr_29480: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_29481: ;;// porth.porth:3676:17: OP_ELSE 297
    jmp addr_29778
addr_29482: ;;// porth.porth:3676:22: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29483: ;;// porth.porth:3676:30: OP_PUSH_INT 15
    mov rax, 15
    push rax
addr_29484: ;;// porth.porth:3676:45: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_29485: ;;// porth.porth:3676:47: OP_IFSTAR 294
    pop rax
    test rax, rax
    jz addr_29779
addr_29486: ;;// porth.porth:3677:19: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_29487: ;;// porth.porth:3677:25: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_29488: ;;// porth.porth:3677:31: OP_CALL 8340
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_8340
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_29489: ;;// porth.porth:3677:48: OP_INLINED 131
addr_29490: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_29491: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29492: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29493: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_29494: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_29495: ;;// porth.porth:3677:53: OP_IF 101
    pop rax
    test rax, rax
    jz addr_29596
addr_29496: ;;// porth.porth:3678:21: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_29497: ;;// porth.porth:3678:25: OP_INLINED 5367
addr_29498: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_29499: ;;// porth.porth:32:35: OP_INLINED 5195
addr_29500: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_29501: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29502: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_29503: ;;// porth.porth:24:23: OP_INLINED 36
addr_29504: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29505: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29506: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29507: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29508: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29509: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29510: ;;// porth.porth:24:28: OP_INLINED 753
addr_29511: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_29512: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29513: ;;// std/std.porth:65:7: OP_INLINED 704
addr_29514: ;;// std/std.porth:58:38: OP_INLINED 684
addr_29515: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_29516: ;;// std/std.porth:56:57: OP_INLINED 36
addr_29517: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29518: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29519: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29520: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29521: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29522: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29523: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_29524: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29525: ;;// std/std.porth:66:7: OP_INLINED 716
addr_29526: ;;// std/std.porth:59:37: OP_INLINED 694
addr_29527: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_29528: ;;// std/std.porth:57:55: OP_INLINED 36
addr_29529: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29530: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29531: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29532: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29533: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29534: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29535: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_29536: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_29537: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_29538: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_29539: ;;// porth.porth:24:36: OP_INLINED 662
addr_29540: ;;// std/std.porth:48:34: OP_INLINED 394
addr_29541: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29542: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_29543: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_29544: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_29545: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_29546: ;;// porth.porth:25:36: OP_INLINED 662
addr_29547: ;;// std/std.porth:48:34: OP_INLINED 394
addr_29548: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29549: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_29550: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_29551: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29552: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_29553: ;;// porth.porth:26:17: OP_INLINED 36
addr_29554: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29555: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29556: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29557: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29558: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29559: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29560: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_29561: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_29562: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_29563: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_29564: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_29565: ;;// porth.porth:27:36: OP_INLINED 662
addr_29566: ;;// std/std.porth:48:34: OP_INLINED 394
addr_29567: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29568: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_29569: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_29570: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29571: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_29572: ;;// porth.porth:28:17: OP_INLINED 36
addr_29573: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29574: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29575: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29576: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29577: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29578: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29579: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_29580: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_29581: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_29582: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_29583: ;;// porth.porth:3679:21: OP_PUSH_STR 881
    mov rax, 64
    push rax
    lea rax, [str_881]
    push rax
addr_29584: ;;// porth.porth:3679:89: OP_INLINED 676
addr_29585: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_29586: ;;// std/std.porth:50:37: OP_INLINED 662
addr_29587: ;;// std/std.porth:48:34: OP_INLINED 394
addr_29588: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29589: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_29590: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_29591: ;;// porth.porth:3680:21: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29592: ;;// porth.porth:3680:23: OP_INLINED 418
addr_29593: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_29594: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_29595: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_29596: ;;// porth.porth:3681:19: OP_END_IF 0
addr_29597: ;;// porth.porth:3683:19: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_29598: ;;// porth.porth:3683:25: OP_INLINED 16
addr_29599: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_29600: ;;// porth.porth:3683:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_29601: ;;// porth.porth:3683:44: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_29602: ;;// porth.porth:3684:19: OP_PUSH_BIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov rbx, [rax]
    push rbx
addr_29603: ;;// porth.porth:3684:25: OP_INLINED 16
addr_29604: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_29605: ;;// porth.porth:3684:30: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_29606: ;;// porth.porth:3684:44: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_29607: ;;// porth.porth:3685:19: OP_INLINED 138
addr_29608: ;;// std/core.porth:93:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29609: ;;// std/core.porth:93:8: OP_INTRINSIC cast(int)
addr_29610: ;;// std/core.porth:94:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29611: ;;// std/core.porth:94:8: OP_INTRINSIC cast(int)
addr_29612: ;;// std/core.porth:95:3: OP_INTRINSIC and
    pop rax
    pop rbx
    and rbx, rax
    push rbx
addr_29613: ;;// std/core.porth:96:3: OP_INTRINSIC cast(bool)
addr_29614: ;;// porth.porth:3685:24: OP_INLINED 131
addr_29615: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_29616: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29617: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29618: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_29619: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_29620: ;;// porth.porth:3685:29: OP_IF 153
    pop rax
    test rax, rax
    jz addr_29773
addr_29621: ;;// porth.porth:3686:21: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_29622: ;;// porth.porth:3686:81: OP_INLINED 5367
addr_29623: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_29624: ;;// porth.porth:32:35: OP_INLINED 5195
addr_29625: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_29626: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29627: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_29628: ;;// porth.porth:24:23: OP_INLINED 36
addr_29629: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29630: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29631: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29632: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29633: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29634: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29635: ;;// porth.porth:24:28: OP_INLINED 753
addr_29636: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_29637: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29638: ;;// std/std.porth:65:7: OP_INLINED 704
addr_29639: ;;// std/std.porth:58:38: OP_INLINED 684
addr_29640: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_29641: ;;// std/std.porth:56:57: OP_INLINED 36
addr_29642: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29643: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29644: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29645: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29646: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29647: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29648: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_29649: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29650: ;;// std/std.porth:66:7: OP_INLINED 716
addr_29651: ;;// std/std.porth:59:37: OP_INLINED 694
addr_29652: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_29653: ;;// std/std.porth:57:55: OP_INLINED 36
addr_29654: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29655: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29656: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29657: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29658: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29659: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29660: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_29661: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_29662: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_29663: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_29664: ;;// porth.porth:24:36: OP_INLINED 662
addr_29665: ;;// std/std.porth:48:34: OP_INLINED 394
addr_29666: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29667: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_29668: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_29669: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_29670: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_29671: ;;// porth.porth:25:36: OP_INLINED 662
addr_29672: ;;// std/std.porth:48:34: OP_INLINED 394
addr_29673: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29674: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_29675: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_29676: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29677: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_29678: ;;// porth.porth:26:17: OP_INLINED 36
addr_29679: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29680: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29681: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29682: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29683: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29684: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29685: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_29686: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_29687: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_29688: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_29689: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_29690: ;;// porth.porth:27:36: OP_INLINED 662
addr_29691: ;;// std/std.porth:48:34: OP_INLINED 394
addr_29692: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29693: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_29694: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_29695: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29696: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_29697: ;;// porth.porth:28:17: OP_INLINED 36
addr_29698: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29699: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29700: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29701: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29702: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29703: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29704: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_29705: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_29706: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_29707: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_29708: ;;// porth.porth:3687:21: OP_PUSH_STR 882
    mov rax, 57
    push rax
    lea rax, [str_882]
    push rax
addr_29709: ;;// porth.porth:3687:81: OP_INLINED 676
addr_29710: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_29711: ;;// std/std.porth:50:37: OP_INLINED 662
addr_29712: ;;// std/std.porth:48:34: OP_INLINED 394
addr_29713: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29714: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_29715: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_29716: ;;// porth.porth:3688:21: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_29717: ;;// porth.porth:3688:27: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_29718: ;;// porth.porth:3688:38: OP_INLINED 36
addr_29719: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29720: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29721: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29722: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29723: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29724: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29725: ;;// porth.porth:3688:43: OP_INLINED 753
addr_29726: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_29727: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29728: ;;// std/std.porth:65:7: OP_INLINED 704
addr_29729: ;;// std/std.porth:58:38: OP_INLINED 684
addr_29730: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_29731: ;;// std/std.porth:56:57: OP_INLINED 36
addr_29732: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29733: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29734: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29735: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29736: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29737: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29738: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_29739: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29740: ;;// std/std.porth:66:7: OP_INLINED 716
addr_29741: ;;// std/std.porth:59:37: OP_INLINED 694
addr_29742: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_29743: ;;// std/std.porth:57:55: OP_INLINED 36
addr_29744: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29745: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29746: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29747: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29748: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29749: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29750: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_29751: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_29752: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_29753: ;;// porth.porth:3688:81: OP_INLINED 676
addr_29754: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_29755: ;;// std/std.porth:50:37: OP_INLINED 662
addr_29756: ;;// std/std.porth:48:34: OP_INLINED 394
addr_29757: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29758: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_29759: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_29760: ;;// porth.porth:3689:21: OP_PUSH_STR 883
    mov rax, 2
    push rax
    lea rax, [str_883]
    push rax
addr_29761: ;;// porth.porth:3689:81: OP_INLINED 676
addr_29762: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_29763: ;;// std/std.porth:50:37: OP_INLINED 662
addr_29764: ;;// std/std.porth:48:34: OP_INLINED 394
addr_29765: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29766: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_29767: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_29768: ;;// porth.porth:3690:21: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29769: ;;// porth.porth:3690:23: OP_INLINED 418
addr_29770: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_29771: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_29772: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_29773: ;;// porth.porth:3691:19: OP_END_IF 0
addr_29774: ;;// porth.porth:3693:19: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_29775: ;;// porth.porth:3693:25: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_29776: ;;// porth.porth:3693:31: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29777: ;;// porth.porth:3693:43: OP_CALL 23178
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_23178
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_29778: ;;// porth.porth:3694:17: OP_ELSE 297
    jmp addr_30075
addr_29779: ;;// porth.porth:3694:22: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29780: ;;// porth.porth:3694:30: OP_PUSH_INT 22
    mov rax, 22
    push rax
addr_29781: ;;// porth.porth:3694:45: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_29782: ;;// porth.porth:3694:47: OP_IFSTAR 294
    pop rax
    test rax, rax
    jz addr_30076
addr_29783: ;;// porth.porth:3695:19: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_29784: ;;// porth.porth:3695:25: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_29785: ;;// porth.porth:3695:31: OP_CALL 8340
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_8340
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_29786: ;;// porth.porth:3695:48: OP_INLINED 131
addr_29787: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_29788: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29789: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29790: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_29791: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_29792: ;;// porth.porth:3695:53: OP_IF 101
    pop rax
    test rax, rax
    jz addr_29893
addr_29793: ;;// porth.porth:3696:21: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_29794: ;;// porth.porth:3696:25: OP_INLINED 5367
addr_29795: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_29796: ;;// porth.porth:32:35: OP_INLINED 5195
addr_29797: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_29798: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29799: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_29800: ;;// porth.porth:24:23: OP_INLINED 36
addr_29801: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29802: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29803: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29804: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29805: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29806: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29807: ;;// porth.porth:24:28: OP_INLINED 753
addr_29808: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_29809: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29810: ;;// std/std.porth:65:7: OP_INLINED 704
addr_29811: ;;// std/std.porth:58:38: OP_INLINED 684
addr_29812: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_29813: ;;// std/std.porth:56:57: OP_INLINED 36
addr_29814: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29815: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29816: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29817: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29818: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29819: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29820: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_29821: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29822: ;;// std/std.porth:66:7: OP_INLINED 716
addr_29823: ;;// std/std.porth:59:37: OP_INLINED 694
addr_29824: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_29825: ;;// std/std.porth:57:55: OP_INLINED 36
addr_29826: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29827: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29828: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29829: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29830: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29831: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29832: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_29833: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_29834: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_29835: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_29836: ;;// porth.porth:24:36: OP_INLINED 662
addr_29837: ;;// std/std.porth:48:34: OP_INLINED 394
addr_29838: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29839: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_29840: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_29841: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_29842: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_29843: ;;// porth.porth:25:36: OP_INLINED 662
addr_29844: ;;// std/std.porth:48:34: OP_INLINED 394
addr_29845: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29846: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_29847: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_29848: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29849: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_29850: ;;// porth.porth:26:17: OP_INLINED 36
addr_29851: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29852: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29853: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29854: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29855: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29856: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29857: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_29858: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_29859: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_29860: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_29861: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_29862: ;;// porth.porth:27:36: OP_INLINED 662
addr_29863: ;;// std/std.porth:48:34: OP_INLINED 394
addr_29864: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29865: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_29866: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_29867: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29868: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_29869: ;;// porth.porth:28:17: OP_INLINED 36
addr_29870: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29871: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29872: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29873: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29874: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29875: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29876: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_29877: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_29878: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_29879: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_29880: ;;// porth.porth:3697:21: OP_PUSH_STR 884
    mov rax, 64
    push rax
    lea rax, [str_884]
    push rax
addr_29881: ;;// porth.porth:3697:89: OP_INLINED 676
addr_29882: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_29883: ;;// std/std.porth:50:37: OP_INLINED 662
addr_29884: ;;// std/std.porth:48:34: OP_INLINED 394
addr_29885: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29886: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_29887: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_29888: ;;// porth.porth:3698:21: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29889: ;;// porth.porth:3698:23: OP_INLINED 418
addr_29890: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_29891: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_29892: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_29893: ;;// porth.porth:3699:19: OP_END_IF 0
addr_29894: ;;// porth.porth:3701:19: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_29895: ;;// porth.porth:3701:25: OP_INLINED 16
addr_29896: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_29897: ;;// porth.porth:3701:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_29898: ;;// porth.porth:3701:44: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_29899: ;;// porth.porth:3702:19: OP_PUSH_BIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov rbx, [rax]
    push rbx
addr_29900: ;;// porth.porth:3702:25: OP_INLINED 16
addr_29901: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_29902: ;;// porth.porth:3702:30: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_29903: ;;// porth.porth:3702:44: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_29904: ;;// porth.porth:3703:19: OP_INLINED 138
addr_29905: ;;// std/core.porth:93:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29906: ;;// std/core.porth:93:8: OP_INTRINSIC cast(int)
addr_29907: ;;// std/core.porth:94:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29908: ;;// std/core.porth:94:8: OP_INTRINSIC cast(int)
addr_29909: ;;// std/core.porth:95:3: OP_INTRINSIC and
    pop rax
    pop rbx
    and rbx, rax
    push rbx
addr_29910: ;;// std/core.porth:96:3: OP_INTRINSIC cast(bool)
addr_29911: ;;// porth.porth:3703:24: OP_INLINED 131
addr_29912: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_29913: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29914: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29915: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_29916: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_29917: ;;// porth.porth:3703:29: OP_IF 153
    pop rax
    test rax, rax
    jz addr_30070
addr_29918: ;;// porth.porth:3704:21: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_29919: ;;// porth.porth:3704:81: OP_INLINED 5367
addr_29920: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_29921: ;;// porth.porth:32:35: OP_INLINED 5195
addr_29922: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_29923: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29924: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_29925: ;;// porth.porth:24:23: OP_INLINED 36
addr_29926: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29927: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29928: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29929: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29930: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29931: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29932: ;;// porth.porth:24:28: OP_INLINED 753
addr_29933: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_29934: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29935: ;;// std/std.porth:65:7: OP_INLINED 704
addr_29936: ;;// std/std.porth:58:38: OP_INLINED 684
addr_29937: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_29938: ;;// std/std.porth:56:57: OP_INLINED 36
addr_29939: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29940: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29941: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29942: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29943: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29944: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29945: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_29946: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29947: ;;// std/std.porth:66:7: OP_INLINED 716
addr_29948: ;;// std/std.porth:59:37: OP_INLINED 694
addr_29949: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_29950: ;;// std/std.porth:57:55: OP_INLINED 36
addr_29951: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29952: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29953: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29954: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29955: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29956: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29957: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_29958: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_29959: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_29960: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_29961: ;;// porth.porth:24:36: OP_INLINED 662
addr_29962: ;;// std/std.porth:48:34: OP_INLINED 394
addr_29963: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29964: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_29965: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_29966: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_29967: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_29968: ;;// porth.porth:25:36: OP_INLINED 662
addr_29969: ;;// std/std.porth:48:34: OP_INLINED 394
addr_29970: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29971: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_29972: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_29973: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29974: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_29975: ;;// porth.porth:26:17: OP_INLINED 36
addr_29976: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29977: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29978: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29979: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29980: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_29981: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_29982: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_29983: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_29984: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_29985: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_29986: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_29987: ;;// porth.porth:27:36: OP_INLINED 662
addr_29988: ;;// std/std.porth:48:34: OP_INLINED 394
addr_29989: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_29990: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_29991: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_29992: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_29993: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_29994: ;;// porth.porth:28:17: OP_INLINED 36
addr_29995: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29996: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_29997: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_29998: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_29999: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30000: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30001: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_30002: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_30003: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_30004: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_30005: ;;// porth.porth:3705:21: OP_PUSH_STR 885
    mov rax, 57
    push rax
    lea rax, [str_885]
    push rax
addr_30006: ;;// porth.porth:3705:81: OP_INLINED 676
addr_30007: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_30008: ;;// std/std.porth:50:37: OP_INLINED 662
addr_30009: ;;// std/std.porth:48:34: OP_INLINED 394
addr_30010: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30011: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_30012: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_30013: ;;// porth.porth:3706:21: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_30014: ;;// porth.porth:3706:27: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_30015: ;;// porth.porth:3706:38: OP_INLINED 36
addr_30016: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30017: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30018: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30019: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30020: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30021: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30022: ;;// porth.porth:3706:43: OP_INLINED 753
addr_30023: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_30024: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30025: ;;// std/std.porth:65:7: OP_INLINED 704
addr_30026: ;;// std/std.porth:58:38: OP_INLINED 684
addr_30027: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_30028: ;;// std/std.porth:56:57: OP_INLINED 36
addr_30029: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30030: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30031: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30032: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30033: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30034: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30035: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_30036: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30037: ;;// std/std.porth:66:7: OP_INLINED 716
addr_30038: ;;// std/std.porth:59:37: OP_INLINED 694
addr_30039: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_30040: ;;// std/std.porth:57:55: OP_INLINED 36
addr_30041: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30042: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30043: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30044: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30045: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30046: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30047: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_30048: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_30049: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_30050: ;;// porth.porth:3706:81: OP_INLINED 676
addr_30051: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_30052: ;;// std/std.porth:50:37: OP_INLINED 662
addr_30053: ;;// std/std.porth:48:34: OP_INLINED 394
addr_30054: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30055: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_30056: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_30057: ;;// porth.porth:3707:21: OP_PUSH_STR 886
    mov rax, 2
    push rax
    lea rax, [str_886]
    push rax
addr_30058: ;;// porth.porth:3707:81: OP_INLINED 676
addr_30059: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_30060: ;;// std/std.porth:50:37: OP_INLINED 662
addr_30061: ;;// std/std.porth:48:34: OP_INLINED 394
addr_30062: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30063: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_30064: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_30065: ;;// porth.porth:3708:21: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30066: ;;// porth.porth:3708:23: OP_INLINED 418
addr_30067: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_30068: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_30069: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_30070: ;;// porth.porth:3709:19: OP_END_IF 0
addr_30071: ;;// porth.porth:3711:19: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_30072: ;;// porth.porth:3711:25: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_30073: ;;// porth.porth:3711:31: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_30074: ;;// porth.porth:3711:43: OP_CALL 23178
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_23178
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_30075: ;;// porth.porth:3712:17: OP_ELSE 9
    jmp addr_30084
addr_30076: ;;// porth.porth:3712:22: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30077: ;;// porth.porth:3712:30: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_30078: ;;// porth.porth:3712:43: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_30079: ;;// porth.porth:3712:45: OP_IFSTAR 6
    pop rax
    test rax, rax
    jz addr_30085
addr_30080: ;;// porth.porth:3713:19: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_30081: ;;// porth.porth:3713:25: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_30082: ;;// porth.porth:3713:31: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_30083: ;;// porth.porth:3713:43: OP_CALL 23178
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_23178
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_30084: ;;// porth.porth:3714:17: OP_ELSE 281
    jmp addr_30365
addr_30085: ;;// porth.porth:3714:22: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30086: ;;// porth.porth:3714:30: OP_PUSH_INT 21
    mov rax, 21
    push rax
addr_30087: ;;// porth.porth:3714:47: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_30088: ;;// porth.porth:3714:49: OP_IFSTAR 278
    pop rax
    test rax, rax
    jz addr_30366
addr_30089: ;;// porth.porth:3715:19: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_30090: ;;// porth.porth:3715:25: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_30091: ;;// porth.porth:3715:31: OP_CALL 8340
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_8340
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_30092: ;;// porth.porth:3715:48: OP_INLINED 131
addr_30093: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_30094: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30095: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30096: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_30097: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_30098: ;;// porth.porth:3715:53: OP_IF 101
    pop rax
    test rax, rax
    jz addr_30199
addr_30099: ;;// porth.porth:3716:21: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_30100: ;;// porth.porth:3716:25: OP_INLINED 5367
addr_30101: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_30102: ;;// porth.porth:32:35: OP_INLINED 5195
addr_30103: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_30104: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30105: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_30106: ;;// porth.porth:24:23: OP_INLINED 36
addr_30107: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30108: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30109: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30110: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30111: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30112: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30113: ;;// porth.porth:24:28: OP_INLINED 753
addr_30114: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_30115: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30116: ;;// std/std.porth:65:7: OP_INLINED 704
addr_30117: ;;// std/std.porth:58:38: OP_INLINED 684
addr_30118: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_30119: ;;// std/std.porth:56:57: OP_INLINED 36
addr_30120: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30121: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30122: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30123: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30124: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30125: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30126: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_30127: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30128: ;;// std/std.porth:66:7: OP_INLINED 716
addr_30129: ;;// std/std.porth:59:37: OP_INLINED 694
addr_30130: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_30131: ;;// std/std.porth:57:55: OP_INLINED 36
addr_30132: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30133: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30134: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30135: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30136: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30137: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30138: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_30139: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_30140: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_30141: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_30142: ;;// porth.porth:24:36: OP_INLINED 662
addr_30143: ;;// std/std.porth:48:34: OP_INLINED 394
addr_30144: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30145: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_30146: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_30147: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_30148: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_30149: ;;// porth.porth:25:36: OP_INLINED 662
addr_30150: ;;// std/std.porth:48:34: OP_INLINED 394
addr_30151: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30152: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_30153: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_30154: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30155: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_30156: ;;// porth.porth:26:17: OP_INLINED 36
addr_30157: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30158: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30159: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30160: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30161: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30162: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30163: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_30164: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_30165: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_30166: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_30167: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_30168: ;;// porth.porth:27:36: OP_INLINED 662
addr_30169: ;;// std/std.porth:48:34: OP_INLINED 394
addr_30170: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30171: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_30172: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_30173: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30174: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_30175: ;;// porth.porth:28:17: OP_INLINED 36
addr_30176: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30177: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30178: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30179: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30180: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30181: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30182: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_30183: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_30184: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_30185: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_30186: ;;// porth.porth:3717:21: OP_PUSH_STR 887
    mov rax, 41
    push rax
    lea rax, [str_887]
    push rax
addr_30187: ;;// porth.porth:3717:66: OP_INLINED 676
addr_30188: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_30189: ;;// std/std.porth:50:37: OP_INLINED 662
addr_30190: ;;// std/std.porth:48:34: OP_INLINED 394
addr_30191: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30192: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_30193: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_30194: ;;// porth.porth:3718:21: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30195: ;;// porth.porth:3718:23: OP_INLINED 418
addr_30196: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_30197: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_30198: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_30199: ;;// porth.porth:3719:19: OP_END_IF 0
addr_30200: ;;// porth.porth:3721:19: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_30201: ;;// porth.porth:3721:24: OP_INLINED 16
addr_30202: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_30203: ;;// porth.porth:3721:29: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_30204: ;;// porth.porth:3721:39: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_30205: ;;// porth.porth:3721:42: OP_IF 121
    pop rax
    test rax, rax
    jz addr_30326
addr_30206: ;;// porth.porth:3722:21: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_30207: ;;// porth.porth:3722:72: OP_INLINED 5367
addr_30208: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_30209: ;;// porth.porth:32:35: OP_INLINED 5195
addr_30210: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_30211: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30212: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_30213: ;;// porth.porth:24:23: OP_INLINED 36
addr_30214: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30215: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30216: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30217: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30218: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30219: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30220: ;;// porth.porth:24:28: OP_INLINED 753
addr_30221: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_30222: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30223: ;;// std/std.porth:65:7: OP_INLINED 704
addr_30224: ;;// std/std.porth:58:38: OP_INLINED 684
addr_30225: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_30226: ;;// std/std.porth:56:57: OP_INLINED 36
addr_30227: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30228: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30229: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30230: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30231: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30232: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30233: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_30234: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30235: ;;// std/std.porth:66:7: OP_INLINED 716
addr_30236: ;;// std/std.porth:59:37: OP_INLINED 694
addr_30237: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_30238: ;;// std/std.porth:57:55: OP_INLINED 36
addr_30239: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30240: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30241: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30242: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30243: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30244: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30245: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_30246: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_30247: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_30248: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_30249: ;;// porth.porth:24:36: OP_INLINED 662
addr_30250: ;;// std/std.porth:48:34: OP_INLINED 394
addr_30251: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30252: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_30253: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_30254: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_30255: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_30256: ;;// porth.porth:25:36: OP_INLINED 662
addr_30257: ;;// std/std.porth:48:34: OP_INLINED 394
addr_30258: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30259: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_30260: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_30261: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30262: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_30263: ;;// porth.porth:26:17: OP_INLINED 36
addr_30264: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30265: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30266: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30267: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30268: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30269: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30270: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_30271: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_30272: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_30273: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_30274: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_30275: ;;// porth.porth:27:36: OP_INLINED 662
addr_30276: ;;// std/std.porth:48:34: OP_INLINED 394
addr_30277: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30278: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_30279: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_30280: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30281: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_30282: ;;// porth.porth:28:17: OP_INLINED 36
addr_30283: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30284: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30285: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30286: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30287: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30288: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30289: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_30290: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_30291: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_30292: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_30293: ;;// porth.porth:3723:21: OP_PUSH_STR 888
    mov rax, 48
    push rax
    lea rax, [str_888]
    push rax
addr_30294: ;;// porth.porth:3723:72: OP_INLINED 676
addr_30295: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_30296: ;;// std/std.porth:50:37: OP_INLINED 662
addr_30297: ;;// std/std.porth:48:34: OP_INLINED 394
addr_30298: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30299: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_30300: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_30301: ;;// porth.porth:3724:21: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_30302: ;;// porth.porth:3724:26: OP_INLINED 16
addr_30303: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_30304: ;;// porth.porth:3724:31: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_30305: ;;// porth.porth:3724:46: OP_CALL 10127
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_10127
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_30306: ;;// porth.porth:3724:72: OP_INLINED 676
addr_30307: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_30308: ;;// std/std.porth:50:37: OP_INLINED 662
addr_30309: ;;// std/std.porth:48:34: OP_INLINED 394
addr_30310: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30311: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_30312: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_30313: ;;// porth.porth:3725:21: OP_PUSH_STR 889
    mov rax, 8
    push rax
    lea rax, [str_889]
    push rax
addr_30314: ;;// porth.porth:3725:72: OP_INLINED 676
addr_30315: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_30316: ;;// std/std.porth:50:37: OP_INLINED 662
addr_30317: ;;// std/std.porth:48:34: OP_INLINED 394
addr_30318: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30319: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_30320: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_30321: ;;// porth.porth:3726:21: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30322: ;;// porth.porth:3726:23: OP_INLINED 418
addr_30323: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_30324: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_30325: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_30326: ;;// porth.porth:3727:19: OP_END_IF 0
addr_30327: ;;// porth.porth:3729:19: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_30328: ;;// porth.porth:3729:25: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_30329: ;;// porth.porth:3729:37: OP_INLINED 36
addr_30330: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30331: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30332: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30333: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30334: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30335: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30336: ;;// porth.porth:3729:42: OP_INLINED 753
addr_30337: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_30338: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30339: ;;// std/std.porth:65:7: OP_INLINED 704
addr_30340: ;;// std/std.porth:58:38: OP_INLINED 684
addr_30341: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_30342: ;;// std/std.porth:56:57: OP_INLINED 36
addr_30343: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30344: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30345: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30346: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30347: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30348: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30349: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_30350: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30351: ;;// std/std.porth:66:7: OP_INLINED 716
addr_30352: ;;// std/std.porth:59:37: OP_INLINED 694
addr_30353: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_30354: ;;// std/std.porth:57:55: OP_INLINED 36
addr_30355: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30356: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30357: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30358: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30359: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30360: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30361: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_30362: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_30363: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_30364: ;;// porth.porth:3729:47: OP_CALL 25964
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_25964
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_30365: ;;// porth.porth:3730:17: OP_ELSE 756
    jmp addr_31121
addr_30366: ;;// porth.porth:3730:22: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30367: ;;// porth.porth:3730:30: OP_PUSH_INT 7
    mov rax, 7
    push rax
addr_30368: ;;// porth.porth:3730:45: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_30369: ;;// porth.porth:3730:47: OP_IFSTAR 753
    pop rax
    test rax, rax
    jz addr_31122
addr_30370: ;;// porth.porth:3731:19: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_30371: ;;// porth.porth:3731:25: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_30372: ;;// porth.porth:3731:31: OP_CALL 8340
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_8340
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_30373: ;;// porth.porth:3731:48: OP_INLINED 131
addr_30374: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_30375: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30376: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30377: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_30378: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_30379: ;;// porth.porth:3731:53: OP_IF 101
    pop rax
    test rax, rax
    jz addr_30480
addr_30380: ;;// porth.porth:3732:21: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_30381: ;;// porth.porth:3732:25: OP_INLINED 5367
addr_30382: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_30383: ;;// porth.porth:32:35: OP_INLINED 5195
addr_30384: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_30385: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30386: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_30387: ;;// porth.porth:24:23: OP_INLINED 36
addr_30388: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30389: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30390: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30391: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30392: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30393: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30394: ;;// porth.porth:24:28: OP_INLINED 753
addr_30395: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_30396: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30397: ;;// std/std.porth:65:7: OP_INLINED 704
addr_30398: ;;// std/std.porth:58:38: OP_INLINED 684
addr_30399: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_30400: ;;// std/std.porth:56:57: OP_INLINED 36
addr_30401: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30402: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30403: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30404: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30405: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30406: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30407: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_30408: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30409: ;;// std/std.porth:66:7: OP_INLINED 716
addr_30410: ;;// std/std.porth:59:37: OP_INLINED 694
addr_30411: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_30412: ;;// std/std.porth:57:55: OP_INLINED 36
addr_30413: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30414: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30415: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30416: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30417: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30418: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30419: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_30420: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_30421: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_30422: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_30423: ;;// porth.porth:24:36: OP_INLINED 662
addr_30424: ;;// std/std.porth:48:34: OP_INLINED 394
addr_30425: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30426: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_30427: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_30428: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_30429: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_30430: ;;// porth.porth:25:36: OP_INLINED 662
addr_30431: ;;// std/std.porth:48:34: OP_INLINED 394
addr_30432: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30433: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_30434: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_30435: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30436: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_30437: ;;// porth.porth:26:17: OP_INLINED 36
addr_30438: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30439: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30440: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30441: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30442: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30443: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30444: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_30445: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_30446: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_30447: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_30448: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_30449: ;;// porth.porth:27:36: OP_INLINED 662
addr_30450: ;;// std/std.porth:48:34: OP_INLINED 394
addr_30451: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30452: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_30453: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_30454: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30455: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_30456: ;;// porth.porth:28:17: OP_INLINED 36
addr_30457: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30458: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30459: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30460: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30461: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30462: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30463: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_30464: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_30465: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_30466: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_30467: ;;// porth.porth:3733:21: OP_PUSH_STR 890
    mov rax, 41
    push rax
    lea rax, [str_890]
    push rax
addr_30468: ;;// porth.porth:3733:66: OP_INLINED 676
addr_30469: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_30470: ;;// std/std.porth:50:37: OP_INLINED 662
addr_30471: ;;// std/std.porth:48:34: OP_INLINED 394
addr_30472: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30473: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_30474: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_30475: ;;// porth.porth:3734:21: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30476: ;;// porth.porth:3734:23: OP_INLINED 418
addr_30477: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_30478: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_30479: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_30480: ;;// porth.porth:3735:19: OP_END_IF 0
addr_30481: ;;// porth.porth:3737:19: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_30482: ;;// porth.porth:3737:24: OP_INLINED 16
addr_30483: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_30484: ;;// porth.porth:3737:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30485: ;;// porth.porth:3737:40: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_30486: ;;// porth.porth:3737:43: OP_IF 121
    pop rax
    test rax, rax
    jz addr_30607
addr_30487: ;;// porth.porth:3738:21: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_30488: ;;// porth.porth:3738:70: OP_INLINED 5367
addr_30489: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_30490: ;;// porth.porth:32:35: OP_INLINED 5195
addr_30491: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_30492: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30493: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_30494: ;;// porth.porth:24:23: OP_INLINED 36
addr_30495: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30496: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30497: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30498: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30499: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30500: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30501: ;;// porth.porth:24:28: OP_INLINED 753
addr_30502: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_30503: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30504: ;;// std/std.porth:65:7: OP_INLINED 704
addr_30505: ;;// std/std.porth:58:38: OP_INLINED 684
addr_30506: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_30507: ;;// std/std.porth:56:57: OP_INLINED 36
addr_30508: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30509: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30510: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30511: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30512: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30513: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30514: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_30515: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30516: ;;// std/std.porth:66:7: OP_INLINED 716
addr_30517: ;;// std/std.porth:59:37: OP_INLINED 694
addr_30518: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_30519: ;;// std/std.porth:57:55: OP_INLINED 36
addr_30520: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30521: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30522: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30523: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30524: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30525: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30526: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_30527: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_30528: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_30529: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_30530: ;;// porth.porth:24:36: OP_INLINED 662
addr_30531: ;;// std/std.porth:48:34: OP_INLINED 394
addr_30532: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30533: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_30534: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_30535: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_30536: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_30537: ;;// porth.porth:25:36: OP_INLINED 662
addr_30538: ;;// std/std.porth:48:34: OP_INLINED 394
addr_30539: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30540: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_30541: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_30542: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30543: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_30544: ;;// porth.porth:26:17: OP_INLINED 36
addr_30545: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30546: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30547: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30548: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30549: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30550: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30551: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_30552: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_30553: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_30554: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_30555: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_30556: ;;// porth.porth:27:36: OP_INLINED 662
addr_30557: ;;// std/std.porth:48:34: OP_INLINED 394
addr_30558: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30559: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_30560: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_30561: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30562: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_30563: ;;// porth.porth:28:17: OP_INLINED 36
addr_30564: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30565: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30566: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30567: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30568: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30569: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30570: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_30571: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_30572: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_30573: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_30574: ;;// porth.porth:3739:21: OP_PUSH_STR 891
    mov rax, 46
    push rax
    lea rax, [str_891]
    push rax
addr_30575: ;;// porth.porth:3739:70: OP_INLINED 676
addr_30576: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_30577: ;;// std/std.porth:50:37: OP_INLINED 662
addr_30578: ;;// std/std.porth:48:34: OP_INLINED 394
addr_30579: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30580: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_30581: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_30582: ;;// porth.porth:3740:21: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_30583: ;;// porth.porth:3740:26: OP_INLINED 16
addr_30584: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_30585: ;;// porth.porth:3740:31: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_30586: ;;// porth.porth:3740:46: OP_CALL 10127
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_10127
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_30587: ;;// porth.porth:3740:70: OP_INLINED 676
addr_30588: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_30589: ;;// std/std.porth:50:37: OP_INLINED 662
addr_30590: ;;// std/std.porth:48:34: OP_INLINED 394
addr_30591: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30592: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_30593: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_30594: ;;// porth.porth:3741:21: OP_PUSH_STR 892
    mov rax, 9
    push rax
    lea rax, [str_892]
    push rax
addr_30595: ;;// porth.porth:3741:70: OP_INLINED 676
addr_30596: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_30597: ;;// std/std.porth:50:37: OP_INLINED 662
addr_30598: ;;// std/std.porth:48:34: OP_INLINED 394
addr_30599: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30600: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_30601: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_30602: ;;// porth.porth:3742:21: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30603: ;;// porth.porth:3742:23: OP_INLINED 418
addr_30604: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_30605: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_30606: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_30607: ;;// porth.porth:3743:19: OP_END_IF 0
addr_30608: ;;// porth.porth:3745:19: OP_PUSH_BIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov rbx, [rax]
    push rbx
addr_30609: ;;// porth.porth:3745:25: OP_INLINED 753
addr_30610: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_30611: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30612: ;;// std/std.porth:65:7: OP_INLINED 704
addr_30613: ;;// std/std.porth:58:38: OP_INLINED 684
addr_30614: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_30615: ;;// std/std.porth:56:57: OP_INLINED 36
addr_30616: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30617: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30618: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30619: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30620: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30621: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30622: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_30623: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30624: ;;// std/std.porth:66:7: OP_INLINED 716
addr_30625: ;;// std/std.porth:59:37: OP_INLINED 694
addr_30626: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_30627: ;;// std/std.porth:57:55: OP_INLINED 36
addr_30628: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30629: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30630: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30631: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30632: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30633: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30634: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_30635: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_30636: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_30637: ;;// porth.porth:3745:30: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_30638: ;;// porth.porth:3745:34: OP_CALL 21216
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_21216
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_30639: ;;// porth.porth:3747:19: OP_INLINED 2414
addr_30640: ;;// std/std.porth:506:31: OP_PUSH_GLOBAL_MEM 8
    lea rax, [mem+8]
    push rax
addr_30641: ;;// std/std.porth:506:41: OP_PUSH_GLOBAL_MEM 8388616
    lea rax, [mem+8388616]
    push rax
addr_30642: ;;// std/std.porth:506:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_30643: ;;// std/std.porth:506:54: OP_INLINED 36
addr_30644: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30645: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30646: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30647: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30648: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30649: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30650: ;;// porth.porth:3748:21: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_30651: ;;// porth.porth:3748:36: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_30652: ;;// porth.porth:3749:21: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_30653: ;;// porth.porth:3750:23: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_30654: ;;// porth.porth:3750:35: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_30655: ;;// porth.porth:3750:41: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30656: ;;// porth.porth:3750:48: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_30657: ;;// porth.porth:3750:60: OP_INLINED 36
addr_30658: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30659: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30660: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30661: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30662: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30663: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30664: ;;// porth.porth:3750:65: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_30665: ;;// porth.porth:3750:72: OP_INTRINSIC drop
    pop rax
addr_30666: ;;// porth.porth:3751:23: OP_PUSH_INT 32
    mov rax, 32
    push rax
addr_30667: ;;// porth.porth:3751:35: OP_PUSH_BIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov rbx, [rax]
    push rbx
addr_30668: ;;// porth.porth:3751:41: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30669: ;;// porth.porth:3751:48: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_30670: ;;// porth.porth:3751:60: OP_INLINED 36
addr_30671: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30672: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30673: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30674: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30675: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30676: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30677: ;;// porth.porth:3751:65: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_30678: ;;// porth.porth:3751:72: OP_INTRINSIC drop
    pop rax
addr_30679: ;;// porth.porth:3753:23: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_30680: ;;// porth.porth:3753:29: OP_CALL 19922
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_19922
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_30681: ;;// porth.porth:3754:23: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_30682: ;;// porth.porth:3755:25: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30683: ;;// porth.porth:3755:36: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_30684: ;;// porth.porth:3755:49: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_30685: ;;// porth.porth:3755:52: OP_IF 135
    pop rax
    test rax, rax
    jz addr_30820
addr_30686: ;;// porth.porth:3756:27: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_30687: ;;// porth.porth:3756:67: OP_INLINED 5367
addr_30688: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_30689: ;;// porth.porth:32:35: OP_INLINED 5195
addr_30690: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_30691: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30692: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_30693: ;;// porth.porth:24:23: OP_INLINED 36
addr_30694: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30695: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30696: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30697: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30698: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30699: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30700: ;;// porth.porth:24:28: OP_INLINED 753
addr_30701: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_30702: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30703: ;;// std/std.porth:65:7: OP_INLINED 704
addr_30704: ;;// std/std.porth:58:38: OP_INLINED 684
addr_30705: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_30706: ;;// std/std.porth:56:57: OP_INLINED 36
addr_30707: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30708: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30709: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30710: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30711: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30712: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30713: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_30714: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30715: ;;// std/std.porth:66:7: OP_INLINED 716
addr_30716: ;;// std/std.porth:59:37: OP_INLINED 694
addr_30717: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_30718: ;;// std/std.porth:57:55: OP_INLINED 36
addr_30719: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30720: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30721: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30722: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30723: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30724: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30725: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_30726: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_30727: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_30728: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_30729: ;;// porth.porth:24:36: OP_INLINED 662
addr_30730: ;;// std/std.porth:48:34: OP_INLINED 394
addr_30731: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30732: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_30733: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_30734: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_30735: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_30736: ;;// porth.porth:25:36: OP_INLINED 662
addr_30737: ;;// std/std.porth:48:34: OP_INLINED 394
addr_30738: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30739: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_30740: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_30741: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30742: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_30743: ;;// porth.porth:26:17: OP_INLINED 36
addr_30744: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30745: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30746: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30747: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30748: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30749: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30750: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_30751: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_30752: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_30753: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_30754: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_30755: ;;// porth.porth:27:36: OP_INLINED 662
addr_30756: ;;// std/std.porth:48:34: OP_INLINED 394
addr_30757: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30758: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_30759: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_30760: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30761: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_30762: ;;// porth.porth:28:17: OP_INLINED 36
addr_30763: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30764: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30765: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30766: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30767: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30768: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30769: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_30770: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_30771: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_30772: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_30773: ;;// porth.porth:3757:27: OP_PUSH_STR 893
    mov rax, 37
    push rax
    lea rax, [str_893]
    push rax
addr_30774: ;;// porth.porth:3757:67: OP_INLINED 676
addr_30775: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_30776: ;;// std/std.porth:50:37: OP_INLINED 662
addr_30777: ;;// std/std.porth:48:34: OP_INLINED 394
addr_30778: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30779: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_30780: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_30781: ;;// porth.porth:3758:27: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_30782: ;;// porth.porth:3758:40: OP_CALL 10541
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_10541
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_30783: ;;// porth.porth:3758:67: OP_INLINED 676
addr_30784: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_30785: ;;// std/std.porth:50:37: OP_INLINED 662
addr_30786: ;;// std/std.porth:48:34: OP_INLINED 394
addr_30787: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30788: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_30789: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_30790: ;;// porth.porth:3759:27: OP_PUSH_STR 894
    mov rax, 11
    push rax
    lea rax, [str_894]
    push rax
addr_30791: ;;// porth.porth:3759:67: OP_INLINED 676
addr_30792: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_30793: ;;// std/std.porth:50:37: OP_INLINED 662
addr_30794: ;;// std/std.porth:48:34: OP_INLINED 394
addr_30795: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30796: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_30797: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_30798: ;;// porth.porth:3760:27: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30799: ;;// porth.porth:3760:38: OP_CALL 10541
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_10541
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_30800: ;;// porth.porth:3760:67: OP_INLINED 676
addr_30801: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_30802: ;;// std/std.porth:50:37: OP_INLINED 662
addr_30803: ;;// std/std.porth:48:34: OP_INLINED 394
addr_30804: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30805: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_30806: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_30807: ;;// porth.porth:3761:27: OP_PUSH_STR 895
    mov rax, 10
    push rax
    lea rax, [str_895]
    push rax
addr_30808: ;;// porth.porth:3761:67: OP_INLINED 676
addr_30809: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_30810: ;;// std/std.porth:50:37: OP_INLINED 662
addr_30811: ;;// std/std.porth:48:34: OP_INLINED 394
addr_30812: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30813: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_30814: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_30815: ;;// porth.porth:3762:27: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30816: ;;// porth.porth:3762:29: OP_INLINED 418
addr_30817: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_30818: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_30819: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_30820: ;;// porth.porth:3763:25: OP_END_IF 0
addr_30821: ;;// porth.porth:3766:25: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_30822: ;;// porth.porth:3767:25: OP_PUSH_INT 7
    mov rax, 7
    push rax
addr_30823: ;;// porth.porth:3767:27: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30824: ;;// porth.porth:3768:25: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_30825: ;;// porth.porth:3768:27: OP_INLINED 85
addr_30826: ;;// std/core.porth:73:36: OP_INTRINSIC divmod
    xor rdx, rdx
    pop rbx
    pop rax
    div rbx
    push rax
    push rdx
addr_30827: ;;// std/core.porth:73:43: OP_INTRINSIC drop
    pop rax
addr_30828: ;;// porth.porth:3769:25: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_30829: ;;// porth.porth:3769:27: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_30830: ;;// porth.porth:3771:25: OP_CALL 24551
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_24551
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_30831: ;;// porth.porth:3772:25: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_30832: ;;// porth.porth:3773:27: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30833: ;;// porth.porth:3773:32: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_30834: ;;// porth.porth:3773:37: OP_INLINED 52
addr_30835: ;;// std/core.porth:46:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30836: ;;// std/core.porth:46:8: OP_INTRINSIC cast(int)
addr_30837: ;;// std/core.porth:47:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30838: ;;// std/core.porth:47:8: OP_INTRINSIC cast(int)
addr_30839: ;;// std/core.porth:48:3: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_30840: ;;// porth.porth:3773:43: OP_IF 243
    pop rax
    test rax, rax
    jz addr_31083
addr_30841: ;;// porth.porth:3774:29: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30842: ;;// porth.porth:3774:34: OP_PUSH_INT 104
    mov rax, 104
    push rax
addr_30843: ;;// porth.porth:3774:44: OP_INLINED 36
addr_30844: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30845: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30846: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30847: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30848: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30849: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30850: ;;// porth.porth:3774:49: OP_INLINED 16
addr_30851: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_30852: ;;// porth.porth:3774:54: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30853: ;;// porth.porth:3774:66: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_30854: ;;// porth.porth:3774:68: OP_IF 204
    pop rax
    test rax, rax
    jz addr_31058
addr_30855: ;;// porth.porth:3775:31: OP_PUSH_BIND 6
    mov rax, [ret_stack_rsp]
    add rax, 48
    mov rbx, [rax]
    push rbx
addr_30856: ;;// porth.porth:3775:103: OP_INLINED 5367
addr_30857: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_30858: ;;// porth.porth:32:35: OP_INLINED 5195
addr_30859: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_30860: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30861: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_30862: ;;// porth.porth:24:23: OP_INLINED 36
addr_30863: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30864: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30865: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30866: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30867: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30868: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30869: ;;// porth.porth:24:28: OP_INLINED 753
addr_30870: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_30871: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30872: ;;// std/std.porth:65:7: OP_INLINED 704
addr_30873: ;;// std/std.porth:58:38: OP_INLINED 684
addr_30874: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_30875: ;;// std/std.porth:56:57: OP_INLINED 36
addr_30876: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30877: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30878: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30879: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30880: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30881: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30882: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_30883: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30884: ;;// std/std.porth:66:7: OP_INLINED 716
addr_30885: ;;// std/std.porth:59:37: OP_INLINED 694
addr_30886: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_30887: ;;// std/std.porth:57:55: OP_INLINED 36
addr_30888: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30889: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30890: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30891: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30892: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30893: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30894: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_30895: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_30896: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_30897: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_30898: ;;// porth.porth:24:36: OP_INLINED 662
addr_30899: ;;// std/std.porth:48:34: OP_INLINED 394
addr_30900: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30901: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_30902: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_30903: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_30904: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_30905: ;;// porth.porth:25:36: OP_INLINED 662
addr_30906: ;;// std/std.porth:48:34: OP_INLINED 394
addr_30907: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30908: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_30909: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_30910: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30911: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_30912: ;;// porth.porth:26:17: OP_INLINED 36
addr_30913: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30914: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30915: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30916: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30917: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30918: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30919: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_30920: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_30921: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_30922: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_30923: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_30924: ;;// porth.porth:27:36: OP_INLINED 662
addr_30925: ;;// std/std.porth:48:34: OP_INLINED 394
addr_30926: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30927: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_30928: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_30929: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30930: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_30931: ;;// porth.porth:28:17: OP_INLINED 36
addr_30932: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30933: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30934: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30935: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30936: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30937: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30938: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_30939: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_30940: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_30941: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_30942: ;;// porth.porth:3776:31: OP_PUSH_STR 896
    mov rax, 68
    push rax
    lea rax, [str_896]
    push rax
addr_30943: ;;// porth.porth:3776:103: OP_INLINED 676
addr_30944: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_30945: ;;// std/std.porth:50:37: OP_INLINED 662
addr_30946: ;;// std/std.porth:48:34: OP_INLINED 394
addr_30947: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_30948: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_30949: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_30950: ;;// porth.porth:3777:31: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30951: ;;// porth.porth:3777:36: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_30952: ;;// porth.porth:3777:45: OP_INLINED 36
addr_30953: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30954: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30955: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30956: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30957: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30958: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30959: ;;// porth.porth:3777:103: OP_INLINED 5367
addr_30960: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_30961: ;;// porth.porth:32:35: OP_INLINED 5195
addr_30962: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_30963: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30964: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_30965: ;;// porth.porth:24:23: OP_INLINED 36
addr_30966: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30967: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30968: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30969: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30970: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30971: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30972: ;;// porth.porth:24:28: OP_INLINED 753
addr_30973: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_30974: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30975: ;;// std/std.porth:65:7: OP_INLINED 704
addr_30976: ;;// std/std.porth:58:38: OP_INLINED 684
addr_30977: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_30978: ;;// std/std.porth:56:57: OP_INLINED 36
addr_30979: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30980: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30981: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30982: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30983: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30984: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30985: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_30986: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_30987: ;;// std/std.porth:66:7: OP_INLINED 716
addr_30988: ;;// std/std.porth:59:37: OP_INLINED 694
addr_30989: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_30990: ;;// std/std.porth:57:55: OP_INLINED 36
addr_30991: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30992: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_30993: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_30994: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_30995: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_30996: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_30997: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_30998: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_30999: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_31000: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_31001: ;;// porth.porth:24:36: OP_INLINED 662
addr_31002: ;;// std/std.porth:48:34: OP_INLINED 394
addr_31003: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31004: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_31005: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_31006: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_31007: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_31008: ;;// porth.porth:25:36: OP_INLINED 662
addr_31009: ;;// std/std.porth:48:34: OP_INLINED 394
addr_31010: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31011: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_31012: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_31013: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31014: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_31015: ;;// porth.porth:26:17: OP_INLINED 36
addr_31016: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31017: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_31018: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31019: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_31020: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31021: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_31022: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31023: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_31024: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_31025: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_31026: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_31027: ;;// porth.porth:27:36: OP_INLINED 662
addr_31028: ;;// std/std.porth:48:34: OP_INLINED 394
addr_31029: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31030: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_31031: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_31032: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31033: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_31034: ;;// porth.porth:28:17: OP_INLINED 36
addr_31035: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31036: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_31037: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31038: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_31039: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31040: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_31041: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31042: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_31043: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_31044: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_31045: ;;// porth.porth:3778:31: OP_PUSH_STR 897
    mov rax, 34
    push rax
    lea rax, [str_897]
    push rax
addr_31046: ;;// porth.porth:3778:103: OP_INLINED 676
addr_31047: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_31048: ;;// std/std.porth:50:37: OP_INLINED 662
addr_31049: ;;// std/std.porth:48:34: OP_INLINED 394
addr_31050: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31051: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_31052: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_31053: ;;// porth.porth:3779:31: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31054: ;;// porth.porth:3779:33: OP_INLINED 418
addr_31055: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_31056: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_31057: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_31058: ;;// porth.porth:3780:29: OP_END_IF 0
addr_31059: ;;// porth.porth:3782:29: OP_PUSH_GLOBAL_MEM 15310968
    lea rax, [mem+15310968]
    push rax
addr_31060: ;;// porth.porth:3782:51: OP_INLINED 16
addr_31061: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31062: ;;// porth.porth:3782:56: OP_PUSH_BIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov rbx, [rax]
    push rbx
addr_31063: ;;// porth.porth:3782:63: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_31064: ;;// porth.porth:3782:77: OP_INLINED 36
addr_31065: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31066: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_31067: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31068: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_31069: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31070: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_31071: ;;// porth.porth:3782:82: OP_INLINED 30
addr_31072: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_31073: ;;// porth.porth:3783:29: OP_PUSH_GLOBAL_MEM 15310968
    lea rax, [mem+15310968]
    push rax
addr_31074: ;;// porth.porth:3783:51: OP_INLINED 16
addr_31075: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31076: ;;// porth.porth:3783:56: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31077: ;;// porth.porth:3783:58: OP_PUSH_GLOBAL_MEM 15310968
    lea rax, [mem+15310968]
    push rax
addr_31078: ;;// porth.porth:3783:80: OP_INLINED 30
addr_31079: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_31080: ;;// porth.porth:3784:29: OP_PUSH_BIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov rbx, [rax]
    push rbx
addr_31081: ;;// porth.porth:3784:36: OP_CALL 14533
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_14533
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_31082: ;;// porth.porth:3785:27: OP_ELSE 24
    jmp addr_31106
addr_31083: ;;// porth.porth:3786:29: OP_PUSH_GLOBAL_MEM 15253608
    lea rax, [mem+15253608]
    push rax
addr_31084: ;;// porth.porth:3786:52: OP_INLINED 16
addr_31085: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31086: ;;// porth.porth:3786:57: OP_PUSH_BIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov rbx, [rax]
    push rbx
addr_31087: ;;// porth.porth:3786:64: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_31088: ;;// porth.porth:3786:78: OP_INLINED 36
addr_31089: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31090: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_31091: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31092: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_31093: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31094: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_31095: ;;// porth.porth:3786:83: OP_INLINED 30
addr_31096: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_31097: ;;// porth.porth:3787:29: OP_PUSH_GLOBAL_MEM 15253608
    lea rax, [mem+15253608]
    push rax
addr_31098: ;;// porth.porth:3787:52: OP_INLINED 16
addr_31099: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31100: ;;// porth.porth:3787:57: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31101: ;;// porth.porth:3787:59: OP_PUSH_GLOBAL_MEM 15253608
    lea rax, [mem+15253608]
    push rax
addr_31102: ;;// porth.porth:3787:82: OP_INLINED 30
addr_31103: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_31104: ;;// porth.porth:3788:29: OP_PUSH_BIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov rbx, [rax]
    push rbx
addr_31105: ;;// porth.porth:3788:36: OP_CALL 14571
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_14571
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_31106: ;;// porth.porth:3789:27: OP_END_IF 0
addr_31107: ;;// porth.porth:3790:25: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_31108: ;;// porth.porth:3791:23: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_31109: ;;// porth.porth:3792:21: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_31110: ;;// porth.porth:3793:19: OP_INLINED 2426
addr_31111: ;;// std/std.porth:509:31: OP_PUSH_GLOBAL_MEM 8
    lea rax, [mem+8]
    push rax
addr_31112: ;;// std/std.porth:509:41: OP_INLINED 78
addr_31113: ;;// std/core.porth:68:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31114: ;;// std/core.porth:68:8: OP_INTRINSIC cast(int)
addr_31115: ;;// std/core.porth:69:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31116: ;;// std/core.porth:69:8: OP_INTRINSIC cast(int)
addr_31117: ;;// std/core.porth:70:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_31118: ;;// std/std.porth:509:50: OP_PUSH_GLOBAL_MEM 8388616
    lea rax, [mem+8388616]
    push rax
addr_31119: ;;// std/std.porth:509:59: OP_INLINED 30
addr_31120: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_31121: ;;// porth.porth:3794:17: OP_ELSE 486
    jmp addr_31607
addr_31122: ;;// porth.porth:3794:22: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31123: ;;// porth.porth:3794:30: OP_PUSH_INT 12
    mov rax, 12
    push rax
addr_31124: ;;// porth.porth:3794:45: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_31125: ;;// porth.porth:3794:47: OP_IFSTAR 483
    pop rax
    test rax, rax
    jz addr_31608
addr_31126: ;;// porth.porth:3795:19: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_31127: ;;// porth.porth:3795:25: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_31128: ;;// porth.porth:3795:31: OP_CALL 8340
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_8340
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_31129: ;;// porth.porth:3795:48: OP_INLINED 131
addr_31130: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_31131: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31132: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31133: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_31134: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_31135: ;;// porth.porth:3795:53: OP_IF 101
    pop rax
    test rax, rax
    jz addr_31236
addr_31136: ;;// porth.porth:3796:21: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_31137: ;;// porth.porth:3796:25: OP_INLINED 5367
addr_31138: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_31139: ;;// porth.porth:32:35: OP_INLINED 5195
addr_31140: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_31141: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31142: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_31143: ;;// porth.porth:24:23: OP_INLINED 36
addr_31144: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31145: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_31146: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31147: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_31148: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31149: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_31150: ;;// porth.porth:24:28: OP_INLINED 753
addr_31151: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_31152: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31153: ;;// std/std.porth:65:7: OP_INLINED 704
addr_31154: ;;// std/std.porth:58:38: OP_INLINED 684
addr_31155: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_31156: ;;// std/std.porth:56:57: OP_INLINED 36
addr_31157: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31158: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_31159: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31160: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_31161: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31162: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_31163: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31164: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31165: ;;// std/std.porth:66:7: OP_INLINED 716
addr_31166: ;;// std/std.porth:59:37: OP_INLINED 694
addr_31167: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_31168: ;;// std/std.porth:57:55: OP_INLINED 36
addr_31169: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31170: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_31171: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31172: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_31173: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31174: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_31175: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31176: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_31177: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_31178: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_31179: ;;// porth.porth:24:36: OP_INLINED 662
addr_31180: ;;// std/std.porth:48:34: OP_INLINED 394
addr_31181: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31182: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_31183: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_31184: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_31185: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_31186: ;;// porth.porth:25:36: OP_INLINED 662
addr_31187: ;;// std/std.porth:48:34: OP_INLINED 394
addr_31188: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31189: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_31190: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_31191: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31192: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_31193: ;;// porth.porth:26:17: OP_INLINED 36
addr_31194: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31195: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_31196: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31197: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_31198: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31199: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_31200: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31201: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_31202: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_31203: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_31204: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_31205: ;;// porth.porth:27:36: OP_INLINED 662
addr_31206: ;;// std/std.porth:48:34: OP_INLINED 394
addr_31207: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31208: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_31209: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_31210: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31211: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_31212: ;;// porth.porth:28:17: OP_INLINED 36
addr_31213: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31214: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_31215: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31216: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_31217: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31218: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_31219: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31220: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_31221: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_31222: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_31223: ;;// porth.porth:3797:21: OP_PUSH_STR 898
    mov rax, 44
    push rax
    lea rax, [str_898]
    push rax
addr_31224: ;;// porth.porth:3797:69: OP_INLINED 676
addr_31225: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_31226: ;;// std/std.porth:50:37: OP_INLINED 662
addr_31227: ;;// std/std.porth:48:34: OP_INLINED 394
addr_31228: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31229: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_31230: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_31231: ;;// porth.porth:3798:21: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31232: ;;// porth.porth:3798:23: OP_INLINED 418
addr_31233: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_31234: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_31235: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_31236: ;;// porth.porth:3799:19: OP_END_IF 0
addr_31237: ;;// porth.porth:3801:19: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_31238: ;;// porth.porth:3801:24: OP_INLINED 16
addr_31239: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31240: ;;// porth.porth:3801:29: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_31241: ;;// porth.porth:3801:39: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_31242: ;;// porth.porth:3801:42: OP_IF 101
    pop rax
    test rax, rax
    jz addr_31343
addr_31243: ;;// porth.porth:3803:21: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_31244: ;;// porth.porth:3803:66: OP_INLINED 5367
addr_31245: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_31246: ;;// porth.porth:32:35: OP_INLINED 5195
addr_31247: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_31248: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31249: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_31250: ;;// porth.porth:24:23: OP_INLINED 36
addr_31251: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31252: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_31253: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31254: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_31255: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31256: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_31257: ;;// porth.porth:24:28: OP_INLINED 753
addr_31258: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_31259: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31260: ;;// std/std.porth:65:7: OP_INLINED 704
addr_31261: ;;// std/std.porth:58:38: OP_INLINED 684
addr_31262: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_31263: ;;// std/std.porth:56:57: OP_INLINED 36
addr_31264: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31265: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_31266: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31267: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_31268: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31269: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_31270: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31271: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31272: ;;// std/std.porth:66:7: OP_INLINED 716
addr_31273: ;;// std/std.porth:59:37: OP_INLINED 694
addr_31274: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_31275: ;;// std/std.porth:57:55: OP_INLINED 36
addr_31276: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31277: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_31278: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31279: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_31280: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31281: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_31282: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31283: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_31284: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_31285: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_31286: ;;// porth.porth:24:36: OP_INLINED 662
addr_31287: ;;// std/std.porth:48:34: OP_INLINED 394
addr_31288: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31289: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_31290: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_31291: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_31292: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_31293: ;;// porth.porth:25:36: OP_INLINED 662
addr_31294: ;;// std/std.porth:48:34: OP_INLINED 394
addr_31295: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31296: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_31297: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_31298: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31299: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_31300: ;;// porth.porth:26:17: OP_INLINED 36
addr_31301: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31302: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_31303: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31304: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_31305: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31306: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_31307: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31308: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_31309: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_31310: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_31311: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_31312: ;;// porth.porth:27:36: OP_INLINED 662
addr_31313: ;;// std/std.porth:48:34: OP_INLINED 394
addr_31314: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31315: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_31316: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_31317: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31318: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_31319: ;;// porth.porth:28:17: OP_INLINED 36
addr_31320: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31321: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_31322: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31323: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_31324: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31325: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_31326: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31327: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_31328: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_31329: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_31330: ;;// porth.porth:3804:21: OP_PUSH_STR 899
    mov rax, 41
    push rax
    lea rax, [str_899]
    push rax
addr_31331: ;;// porth.porth:3804:66: OP_INLINED 676
addr_31332: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_31333: ;;// std/std.porth:50:37: OP_INLINED 662
addr_31334: ;;// std/std.porth:48:34: OP_INLINED 394
addr_31335: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31336: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_31337: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_31338: ;;// porth.porth:3805:21: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31339: ;;// porth.porth:3805:23: OP_INLINED 418
addr_31340: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_31341: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_31342: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_31343: ;;// porth.porth:3806:19: OP_END_IF 0
addr_31344: ;;// porth.porth:3808:19: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_31345: ;;// porth.porth:3808:25: OP_CALL 19922
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_19922
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_31346: ;;// porth.porth:3809:19: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_31347: ;;// porth.porth:3810:21: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31348: ;;// porth.porth:3810:33: OP_PUSH_INT 4
    mov rax, 4
    push rax
addr_31349: ;;// porth.porth:3810:47: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_31350: ;;// porth.porth:3810:50: OP_IF 101
    pop rax
    test rax, rax
    jz addr_31451
addr_31351: ;;// porth.porth:3811:23: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_31352: ;;// porth.porth:3811:27: OP_INLINED 5367
addr_31353: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_31354: ;;// porth.porth:32:35: OP_INLINED 5195
addr_31355: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_31356: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31357: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_31358: ;;// porth.porth:24:23: OP_INLINED 36
addr_31359: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31360: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_31361: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31362: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_31363: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31364: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_31365: ;;// porth.porth:24:28: OP_INLINED 753
addr_31366: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_31367: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31368: ;;// std/std.porth:65:7: OP_INLINED 704
addr_31369: ;;// std/std.porth:58:38: OP_INLINED 684
addr_31370: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_31371: ;;// std/std.porth:56:57: OP_INLINED 36
addr_31372: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31373: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_31374: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31375: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_31376: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31377: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_31378: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31379: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31380: ;;// std/std.porth:66:7: OP_INLINED 716
addr_31381: ;;// std/std.porth:59:37: OP_INLINED 694
addr_31382: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_31383: ;;// std/std.porth:57:55: OP_INLINED 36
addr_31384: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31385: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_31386: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31387: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_31388: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31389: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_31390: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31391: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_31392: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_31393: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_31394: ;;// porth.porth:24:36: OP_INLINED 662
addr_31395: ;;// std/std.porth:48:34: OP_INLINED 394
addr_31396: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31397: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_31398: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_31399: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_31400: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_31401: ;;// porth.porth:25:36: OP_INLINED 662
addr_31402: ;;// std/std.porth:48:34: OP_INLINED 394
addr_31403: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31404: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_31405: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_31406: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31407: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_31408: ;;// porth.porth:26:17: OP_INLINED 36
addr_31409: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31410: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_31411: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31412: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_31413: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31414: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_31415: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31416: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_31417: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_31418: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_31419: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_31420: ;;// porth.porth:27:36: OP_INLINED 662
addr_31421: ;;// std/std.porth:48:34: OP_INLINED 394
addr_31422: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31423: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_31424: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_31425: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31426: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_31427: ;;// porth.porth:28:17: OP_INLINED 36
addr_31428: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31429: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_31430: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31431: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_31432: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31433: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_31434: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31435: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_31436: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_31437: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_31438: ;;// porth.porth:3811:35: OP_PUSH_STR 900
    mov rax, 63
    push rax
    lea rax, [str_900]
    push rax
addr_31439: ;;// porth.porth:3811:102: OP_INLINED 676
addr_31440: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_31441: ;;// std/std.porth:50:37: OP_INLINED 662
addr_31442: ;;// std/std.porth:48:34: OP_INLINED 394
addr_31443: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31444: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_31445: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_31446: ;;// porth.porth:3812:23: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31447: ;;// porth.porth:3812:25: OP_INLINED 418
addr_31448: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_31449: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_31450: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_31451: ;;// porth.porth:3813:21: OP_END_IF 0
addr_31452: ;;// porth.porth:3815:21: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_31453: ;;// porth.porth:3815:34: OP_INTRINSIC cast(bool)
addr_31454: ;;// porth.porth:3815:45: OP_INLINED 131
addr_31455: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_31456: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31457: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31458: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_31459: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_31460: ;;// porth.porth:3815:50: OP_IF 145
    pop rax
    test rax, rax
    jz addr_31605
addr_31461: ;;// porth.porth:3816:23: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_31462: ;;// porth.porth:3816:27: OP_INLINED 5367
addr_31463: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_31464: ;;// porth.porth:32:35: OP_INLINED 5195
addr_31465: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_31466: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31467: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_31468: ;;// porth.porth:24:23: OP_INLINED 36
addr_31469: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31470: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_31471: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31472: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_31473: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31474: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_31475: ;;// porth.porth:24:28: OP_INLINED 753
addr_31476: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_31477: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31478: ;;// std/std.porth:65:7: OP_INLINED 704
addr_31479: ;;// std/std.porth:58:38: OP_INLINED 684
addr_31480: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_31481: ;;// std/std.porth:56:57: OP_INLINED 36
addr_31482: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31483: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_31484: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31485: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_31486: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31487: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_31488: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31489: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31490: ;;// std/std.porth:66:7: OP_INLINED 716
addr_31491: ;;// std/std.porth:59:37: OP_INLINED 694
addr_31492: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_31493: ;;// std/std.porth:57:55: OP_INLINED 36
addr_31494: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31495: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_31496: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31497: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_31498: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31499: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_31500: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31501: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_31502: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_31503: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_31504: ;;// porth.porth:24:36: OP_INLINED 662
addr_31505: ;;// std/std.porth:48:34: OP_INLINED 394
addr_31506: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31507: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_31508: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_31509: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_31510: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_31511: ;;// porth.porth:25:36: OP_INLINED 662
addr_31512: ;;// std/std.porth:48:34: OP_INLINED 394
addr_31513: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31514: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_31515: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_31516: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31517: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_31518: ;;// porth.porth:26:17: OP_INLINED 36
addr_31519: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31520: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_31521: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31522: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_31523: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31524: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_31525: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31526: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_31527: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_31528: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_31529: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_31530: ;;// porth.porth:27:36: OP_INLINED 662
addr_31531: ;;// std/std.porth:48:34: OP_INLINED 394
addr_31532: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31533: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_31534: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_31535: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31536: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_31537: ;;// porth.porth:28:17: OP_INLINED 36
addr_31538: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31539: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_31540: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31541: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_31542: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31543: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_31544: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31545: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_31546: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_31547: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_31548: ;;// porth.porth:3816:35: OP_PUSH_STR 901
    mov rax, 34
    push rax
    lea rax, [str_901]
    push rax
addr_31549: ;;// porth.porth:3816:72: OP_INLINED 676
addr_31550: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_31551: ;;// std/std.porth:50:37: OP_INLINED 662
addr_31552: ;;// std/std.porth:48:34: OP_INLINED 394
addr_31553: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31554: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_31555: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_31556: ;;// porth.porth:3816:78: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_31557: ;;// porth.porth:3816:84: OP_INLINED 753
addr_31558: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_31559: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31560: ;;// std/std.porth:65:7: OP_INLINED 704
addr_31561: ;;// std/std.porth:58:38: OP_INLINED 684
addr_31562: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_31563: ;;// std/std.porth:56:57: OP_INLINED 36
addr_31564: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31565: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_31566: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31567: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_31568: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31569: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_31570: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31571: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31572: ;;// std/std.porth:66:7: OP_INLINED 716
addr_31573: ;;// std/std.porth:59:37: OP_INLINED 694
addr_31574: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_31575: ;;// std/std.porth:57:55: OP_INLINED 36
addr_31576: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31577: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_31578: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31579: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_31580: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31581: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_31582: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31583: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_31584: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_31585: ;;// porth.porth:3816:89: OP_INLINED 676
addr_31586: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_31587: ;;// std/std.porth:50:37: OP_INLINED 662
addr_31588: ;;// std/std.porth:48:34: OP_INLINED 394
addr_31589: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31590: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_31591: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_31592: ;;// porth.porth:3816:95: OP_PUSH_STR 902
    mov rax, 1
    push rax
    lea rax, [str_902]
    push rax
addr_31593: ;;// porth.porth:3816:100: OP_INLINED 676
addr_31594: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_31595: ;;// std/std.porth:50:37: OP_INLINED 662
addr_31596: ;;// std/std.porth:48:34: OP_INLINED 394
addr_31597: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31598: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_31599: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_31600: ;;// porth.porth:3817:23: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31601: ;;// porth.porth:3817:25: OP_INLINED 418
addr_31602: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_31603: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_31604: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_31605: ;;// porth.porth:3818:21: OP_END_IF 0
addr_31606: ;;// porth.porth:3819:19: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_31607: ;;// porth.porth:3820:17: OP_ELSE 11
    jmp addr_31618
addr_31608: ;;// porth.porth:3820:22: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31609: ;;// porth.porth:3820:30: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_31610: ;;// porth.porth:3820:43: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_31611: ;;// porth.porth:3820:45: OP_IFSTAR 8
    pop rax
    test rax, rax
    jz addr_31619
addr_31612: ;;// porth.porth:3821:19: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_31613: ;;// porth.porth:3822:19: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_31614: ;;// porth.porth:3822:23: OP_CALL 6603
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_6603
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_31615: ;;// porth.porth:3822:34: OP_CALL 13257
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13257
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_31616: ;;// porth.porth:3823:19: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_31617: ;;// porth.porth:3824:19: OP_CALL 12921
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_12921
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_31618: ;;// porth.porth:3825:17: OP_ELSE 10
    jmp addr_31628
addr_31619: ;;// porth.porth:3825:22: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31620: ;;// porth.porth:3825:30: OP_PUSH_INT 17
    mov rax, 17
    push rax
addr_31621: ;;// porth.porth:3825:46: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_31622: ;;// porth.porth:3825:48: OP_IFSTAR 7
    pop rax
    test rax, rax
    jz addr_31629
addr_31623: ;;// porth.porth:3826:19: OP_PUSH_INT 5
    mov rax, 5
    push rax
addr_31624: ;;// porth.porth:3827:19: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_31625: ;;// porth.porth:3827:25: OP_CALL 19270
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_19270
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_31626: ;;// porth.porth:3828:19: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_31627: ;;// porth.porth:3830:19: OP_CALL 12921
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_12921
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_31628: ;;// porth.porth:3831:17: OP_ELSE 10
    jmp addr_31638
addr_31629: ;;// porth.porth:3831:22: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31630: ;;// porth.porth:3831:30: OP_PUSH_INT 18
    mov rax, 18
    push rax
addr_31631: ;;// porth.porth:3831:48: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_31632: ;;// porth.porth:3831:50: OP_IFSTAR 7
    pop rax
    test rax, rax
    jz addr_31639
addr_31633: ;;// porth.porth:3832:19: OP_PUSH_INT 23
    mov rax, 23
    push rax
addr_31634: ;;// porth.porth:3833:19: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_31635: ;;// porth.porth:3833:25: OP_CALL 18617
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18617
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_31636: ;;// porth.porth:3834:19: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_31637: ;;// porth.porth:3836:19: OP_CALL 12921
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_12921
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_31638: ;;// porth.porth:3837:17: OP_ELSE 14
    jmp addr_31652
addr_31639: ;;// porth.porth:3837:22: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31640: ;;// porth.porth:3837:30: OP_PUSH_INT 19
    mov rax, 19
    push rax
addr_31641: ;;// porth.porth:3837:42: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_31642: ;;// porth.porth:3837:44: OP_IFSTAR 11
    pop rax
    test rax, rax
    jz addr_31653
addr_31643: ;;// porth.porth:3838:19: OP_PUSH_GLOBAL_MEM 8421424
    lea rax, [mem+8421424]
    push rax
addr_31644: ;;// porth.porth:3838:29: OP_INLINED 16
addr_31645: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31646: ;;// porth.porth:3839:19: OP_CALL 18185
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18185
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_31647: ;;// porth.porth:3841:19: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_31648: ;;// porth.porth:3842:19: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_31649: ;;// porth.porth:3842:25: OP_CALL 24977
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_24977
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_31650: ;;// porth.porth:3843:19: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_31651: ;;// porth.porth:3844:19: OP_CALL 12921
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_12921
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_31652: ;;// porth.porth:3845:17: OP_ELSE 14
    jmp addr_31666
addr_31653: ;;// porth.porth:3845:22: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31654: ;;// porth.porth:3845:30: OP_PUSH_INT 20
    mov rax, 20
    push rax
addr_31655: ;;// porth.porth:3845:43: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_31656: ;;// porth.porth:3845:45: OP_IFSTAR 11
    pop rax
    test rax, rax
    jz addr_31667
addr_31657: ;;// porth.porth:3846:19: OP_PUSH_GLOBAL_MEM 8421424
    lea rax, [mem+8421424]
    push rax
addr_31658: ;;// porth.porth:3846:29: OP_INLINED 16
addr_31659: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31660: ;;// porth.porth:3847:19: OP_CALL 18185
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18185
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_31661: ;;// porth.porth:3849:19: OP_PUSH_INT 25
    mov rax, 25
    push rax
addr_31662: ;;// porth.porth:3850:19: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_31663: ;;// porth.porth:3850:25: OP_CALL 24977
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_24977
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_31664: ;;// porth.porth:3851:19: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_31665: ;;// porth.porth:3852:19: OP_CALL 12921
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_12921
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_31666: ;;// porth.porth:3853:17: OP_ELSE 118
    jmp addr_31784
addr_31667: ;;// porth.porth:3854:19: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_31668: ;;// porth.porth:3854:51: OP_INLINED 5367
addr_31669: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_31670: ;;// porth.porth:32:35: OP_INLINED 5195
addr_31671: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_31672: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31673: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_31674: ;;// porth.porth:24:23: OP_INLINED 36
addr_31675: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31676: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_31677: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31678: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_31679: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31680: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_31681: ;;// porth.porth:24:28: OP_INLINED 753
addr_31682: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_31683: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31684: ;;// std/std.porth:65:7: OP_INLINED 704
addr_31685: ;;// std/std.porth:58:38: OP_INLINED 684
addr_31686: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_31687: ;;// std/std.porth:56:57: OP_INLINED 36
addr_31688: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31689: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_31690: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31691: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_31692: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31693: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_31694: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31695: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31696: ;;// std/std.porth:66:7: OP_INLINED 716
addr_31697: ;;// std/std.porth:59:37: OP_INLINED 694
addr_31698: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_31699: ;;// std/std.porth:57:55: OP_INLINED 36
addr_31700: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31701: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_31702: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31703: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_31704: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31705: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_31706: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31707: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_31708: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_31709: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_31710: ;;// porth.porth:24:36: OP_INLINED 662
addr_31711: ;;// std/std.porth:48:34: OP_INLINED 394
addr_31712: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31713: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_31714: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_31715: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_31716: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_31717: ;;// porth.porth:25:36: OP_INLINED 662
addr_31718: ;;// std/std.porth:48:34: OP_INLINED 394
addr_31719: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31720: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_31721: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_31722: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31723: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_31724: ;;// porth.porth:26:17: OP_INLINED 36
addr_31725: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31726: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_31727: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31728: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_31729: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31730: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_31731: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31732: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_31733: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_31734: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_31735: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_31736: ;;// porth.porth:27:36: OP_INLINED 662
addr_31737: ;;// std/std.porth:48:34: OP_INLINED 394
addr_31738: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31739: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_31740: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_31741: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31742: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_31743: ;;// porth.porth:28:17: OP_INLINED 36
addr_31744: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31745: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_31746: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31747: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_31748: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31749: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_31750: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31751: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_31752: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_31753: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_31754: ;;// porth.porth:3855:19: OP_PUSH_STR 903
    mov rax, 29
    push rax
    lea rax, [str_903]
    push rax
addr_31755: ;;// porth.porth:3855:51: OP_INLINED 676
addr_31756: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_31757: ;;// std/std.porth:50:37: OP_INLINED 662
addr_31758: ;;// std/std.porth:48:34: OP_INLINED 394
addr_31759: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31760: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_31761: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_31762: ;;// porth.porth:3856:19: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31763: ;;// porth.porth:3856:27: OP_CALL 6274
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_6274
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_31764: ;;// porth.porth:3856:51: OP_INLINED 676
addr_31765: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_31766: ;;// std/std.porth:50:37: OP_INLINED 662
addr_31767: ;;// std/std.porth:48:34: OP_INLINED 394
addr_31768: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31769: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_31770: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_31771: ;;// porth.porth:3857:19: OP_PUSH_STR 904
    mov rax, 2
    push rax
    lea rax, [str_904]
    push rax
addr_31772: ;;// porth.porth:3857:51: OP_INLINED 676
addr_31773: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_31774: ;;// std/std.porth:50:37: OP_INLINED 662
addr_31775: ;;// std/std.porth:48:34: OP_INLINED 394
addr_31776: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31777: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_31778: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_31779: ;;// porth.porth:3858:19: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31780: ;;// porth.porth:3858:21: OP_INLINED 418
addr_31781: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_31782: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_31783: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_31784: ;;// porth.porth:3859:17: OP_END_IF 0
addr_31785: ;;// porth.porth:3860:15: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_31786: ;;// porth.porth:3861:13: OP_ELSE 865
    jmp addr_32651
addr_31787: ;;// porth.porth:3861:18: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31788: ;;// porth.porth:3861:23: OP_INLINED 16
addr_31789: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31790: ;;// porth.porth:3861:28: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31791: ;;// porth.porth:3861:39: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_31792: ;;// porth.porth:3861:41: OP_IFSTAR 860
    pop rax
    test rax, rax
    jz addr_32652
addr_31793: ;;// porth.porth:3862:15: OP_PUSH_GLOBAL_MEM 15196248
    lea rax, [mem+15196248]
    push rax
addr_31794: ;;// porth.porth:3862:27: OP_INLINED 12
addr_31795: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31796: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_31797: ;;// porth.porth:3862:33: OP_INLINED 131
addr_31798: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_31799: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31800: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31801: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_31802: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_31803: ;;// porth.porth:3862:38: OP_IF 129
    pop rax
    test rax, rax
    jz addr_31932
addr_31804: ;;// porth.porth:3863:17: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_31805: ;;// porth.porth:3863:74: OP_INLINED 5367
addr_31806: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_31807: ;;// porth.porth:32:35: OP_INLINED 5195
addr_31808: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_31809: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31810: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_31811: ;;// porth.porth:24:23: OP_INLINED 36
addr_31812: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31813: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_31814: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31815: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_31816: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31817: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_31818: ;;// porth.porth:24:28: OP_INLINED 753
addr_31819: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_31820: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31821: ;;// std/std.porth:65:7: OP_INLINED 704
addr_31822: ;;// std/std.porth:58:38: OP_INLINED 684
addr_31823: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_31824: ;;// std/std.porth:56:57: OP_INLINED 36
addr_31825: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31826: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_31827: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31828: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_31829: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31830: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_31831: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31832: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31833: ;;// std/std.porth:66:7: OP_INLINED 716
addr_31834: ;;// std/std.porth:59:37: OP_INLINED 694
addr_31835: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_31836: ;;// std/std.porth:57:55: OP_INLINED 36
addr_31837: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31838: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_31839: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31840: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_31841: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31842: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_31843: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31844: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_31845: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_31846: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_31847: ;;// porth.porth:24:36: OP_INLINED 662
addr_31848: ;;// std/std.porth:48:34: OP_INLINED 394
addr_31849: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31850: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_31851: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_31852: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_31853: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_31854: ;;// porth.porth:25:36: OP_INLINED 662
addr_31855: ;;// std/std.porth:48:34: OP_INLINED 394
addr_31856: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31857: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_31858: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_31859: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31860: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_31861: ;;// porth.porth:26:17: OP_INLINED 36
addr_31862: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31863: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_31864: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31865: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_31866: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31867: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_31868: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31869: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_31870: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_31871: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_31872: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_31873: ;;// porth.porth:27:36: OP_INLINED 662
addr_31874: ;;// std/std.porth:48:34: OP_INLINED 394
addr_31875: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31876: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_31877: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_31878: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31879: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_31880: ;;// porth.porth:28:17: OP_INLINED 36
addr_31881: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31882: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_31883: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31884: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_31885: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31886: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_31887: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31888: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_31889: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_31890: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_31891: ;;// porth.porth:3864:17: OP_PUSH_STR 905
    mov rax, 9
    push rax
    lea rax, [str_905]
    push rax
addr_31892: ;;// porth.porth:3864:74: OP_INLINED 676
addr_31893: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_31894: ;;// std/std.porth:50:37: OP_INLINED 662
addr_31895: ;;// std/std.porth:48:34: OP_INLINED 394
addr_31896: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31897: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_31898: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_31899: ;;// porth.porth:3865:17: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_31900: ;;// porth.porth:3865:23: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_31901: ;;// porth.porth:3865:34: OP_INLINED 36
addr_31902: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31903: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_31904: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31905: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_31906: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31907: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_31908: ;;// porth.porth:3865:39: OP_INLINED 16
addr_31909: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31910: ;;// porth.porth:3865:44: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31911: ;;// porth.porth:3865:57: OP_CALL 10127
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_10127
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_31912: ;;// porth.porth:3865:74: OP_INLINED 676
addr_31913: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_31914: ;;// std/std.porth:50:37: OP_INLINED 662
addr_31915: ;;// std/std.porth:48:34: OP_INLINED 394
addr_31916: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31917: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_31918: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_31919: ;;// porth.porth:3866:17: OP_PUSH_STR 906
    mov rax, 49
    push rax
    lea rax, [str_906]
    push rax
addr_31920: ;;// porth.porth:3866:74: OP_INLINED 676
addr_31921: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_31922: ;;// std/std.porth:50:37: OP_INLINED 662
addr_31923: ;;// std/std.porth:48:34: OP_INLINED 394
addr_31924: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31925: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_31926: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_31927: ;;// porth.porth:3867:17: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_31928: ;;// porth.porth:3867:19: OP_INLINED 418
addr_31929: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_31930: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_31931: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_31932: ;;// porth.porth:3868:15: OP_END_IF 0
addr_31933: ;;// porth.porth:3870:15: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_31934: ;;// porth.porth:3873:17: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_31935: ;;// porth.porth:3873:21: OP_INLINED 753
addr_31936: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_31937: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31938: ;;// std/std.porth:65:7: OP_INLINED 704
addr_31939: ;;// std/std.porth:58:38: OP_INLINED 684
addr_31940: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_31941: ;;// std/std.porth:56:57: OP_INLINED 36
addr_31942: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31943: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_31944: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31945: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_31946: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31947: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_31948: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31949: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31950: ;;// std/std.porth:66:7: OP_INLINED 716
addr_31951: ;;// std/std.porth:59:37: OP_INLINED 694
addr_31952: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_31953: ;;// std/std.porth:57:55: OP_INLINED 36
addr_31954: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31955: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_31956: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31957: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_31958: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31959: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_31960: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31961: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_31962: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_31963: ;;// porth.porth:3873:26: OP_CALL 10987
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_10987
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_31964: ;;// porth.porth:3873:44: OP_IF 6
    pop rax
    test rax, rax
    jz addr_31970
addr_31965: ;;// porth.porth:3874:19: OP_PUSH_INT 22
    mov rax, 22
    push rax
addr_31966: ;;// porth.porth:3874:32: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31967: ;;// porth.porth:3874:37: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_31968: ;;// porth.porth:3874:43: OP_CALL 12921
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_12921
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_31969: ;;// porth.porth:3875:17: OP_ELSE 37
    jmp addr_32006
addr_31970: ;;// porth.porth:3875:22: OP_INTRINSIC drop
    pop rax
addr_31971: ;;// porth.porth:3875:27: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_31972: ;;// porth.porth:3875:31: OP_INLINED 753
addr_31973: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_31974: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31975: ;;// std/std.porth:65:7: OP_INLINED 704
addr_31976: ;;// std/std.porth:58:38: OP_INLINED 684
addr_31977: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_31978: ;;// std/std.porth:56:57: OP_INLINED 36
addr_31979: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31980: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_31981: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31982: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_31983: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31984: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_31985: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31986: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_31987: ;;// std/std.porth:66:7: OP_INLINED 716
addr_31988: ;;// std/std.porth:59:37: OP_INLINED 694
addr_31989: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_31990: ;;// std/std.porth:57:55: OP_INLINED 36
addr_31991: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31992: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_31993: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_31994: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_31995: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_31996: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_31997: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_31998: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_31999: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_32000: ;;// porth.porth:3875:36: OP_CALL 24650
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_24650
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_32001: ;;// porth.porth:3875:54: OP_IFSTAR 6
    pop rax
    test rax, rax
    jz addr_32007
addr_32002: ;;// porth.porth:3876:19: OP_PUSH_INT 26
    mov rax, 26
    push rax
addr_32003: ;;// porth.porth:3877:19: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32004: ;;// porth.porth:3878:19: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_32005: ;;// porth.porth:3879:19: OP_CALL 12921
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_12921
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_32006: ;;// porth.porth:3880:17: OP_ELSE 130
    jmp addr_32136
addr_32007: ;;// porth.porth:3880:22: OP_INTRINSIC drop
    pop rax
addr_32008: ;;// porth.porth:3880:27: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_32009: ;;// porth.porth:3880:31: OP_INLINED 753
addr_32010: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_32011: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_32012: ;;// std/std.porth:65:7: OP_INLINED 704
addr_32013: ;;// std/std.porth:58:38: OP_INLINED 684
addr_32014: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_32015: ;;// std/std.porth:56:57: OP_INLINED 36
addr_32016: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32017: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32018: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32019: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32020: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32021: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32022: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32023: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_32024: ;;// std/std.porth:66:7: OP_INLINED 716
addr_32025: ;;// std/std.porth:59:37: OP_INLINED 694
addr_32026: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_32027: ;;// std/std.porth:57:55: OP_INLINED 36
addr_32028: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32029: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32030: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32031: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32032: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32033: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32034: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32035: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_32036: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_32037: ;;// porth.porth:3880:36: OP_CALL 13324
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13324
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_32038: ;;// porth.porth:3880:49: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_32039: ;;// porth.porth:3880:53: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_32040: ;;// porth.porth:3880:58: OP_INLINED 52
addr_32041: ;;// std/core.porth:46:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32042: ;;// std/core.porth:46:8: OP_INTRINSIC cast(int)
addr_32043: ;;// std/core.porth:47:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32044: ;;// std/core.porth:47:8: OP_INTRINSIC cast(int)
addr_32045: ;;// std/core.porth:48:3: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_32046: ;;// porth.porth:3880:64: OP_IFSTAR 91
    pop rax
    test rax, rax
    jz addr_32137
addr_32047: ;;// porth.porth:3881:19: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_32048: ;;// porth.porth:3881:23: OP_PUSH_INT 56
    mov rax, 56
    push rax
addr_32049: ;;// porth.porth:3881:34: OP_INLINED 36
addr_32050: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32051: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32052: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32053: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32054: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32055: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32056: ;;// porth.porth:3881:39: OP_INLINED 16
addr_32057: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32058: ;;// porth.porth:3883:19: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_32059: ;;// porth.porth:3883:23: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_32060: ;;// porth.porth:3883:36: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_32061: ;;// porth.porth:3883:38: OP_IF 4
    pop rax
    test rax, rax
    jz addr_32065
addr_32062: ;;// porth.porth:3883:41: OP_INTRINSIC drop
    pop rax
addr_32063: ;;// porth.porth:3883:46: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_32064: ;;// porth.porth:3884:19: OP_ELSE 7
    jmp addr_32071
addr_32065: ;;// porth.porth:3884:24: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_32066: ;;// porth.porth:3884:28: OP_PUSH_INT 4
    mov rax, 4
    push rax
addr_32067: ;;// porth.porth:3884:42: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_32068: ;;// porth.porth:3884:44: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_32072
addr_32069: ;;// porth.porth:3884:48: OP_INTRINSIC drop
    pop rax
addr_32070: ;;// porth.porth:3884:53: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_32071: ;;// porth.porth:3885:19: OP_ELSE 7
    jmp addr_32078
addr_32072: ;;// porth.porth:3885:24: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_32073: ;;// porth.porth:3885:28: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_32074: ;;// porth.porth:3885:43: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_32075: ;;// porth.porth:3885:45: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_32079
addr_32076: ;;// porth.porth:3885:49: OP_INTRINSIC drop
    pop rax
addr_32077: ;;// porth.porth:3885:54: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_32078: ;;// porth.porth:3886:19: OP_ELSE 7
    jmp addr_32085
addr_32079: ;;// porth.porth:3886:24: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_32080: ;;// porth.porth:3886:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_32081: ;;// porth.porth:3886:44: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_32082: ;;// porth.porth:3886:46: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_32086
addr_32083: ;;// porth.porth:3886:50: OP_INTRINSIC drop
    pop rax
addr_32084: ;;// porth.porth:3886:55: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_32085: ;;// porth.porth:3887:19: OP_ELSE 7
    jmp addr_32092
addr_32086: ;;// porth.porth:3887:24: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_32087: ;;// porth.porth:3887:28: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_32088: ;;// porth.porth:3887:41: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_32089: ;;// porth.porth:3887:43: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_32093
addr_32090: ;;// porth.porth:3887:47: OP_INTRINSIC drop
    pop rax
addr_32091: ;;// porth.porth:3887:52: OP_PUSH_INT 4
    mov rax, 4
    push rax
addr_32092: ;;// porth.porth:3888:19: OP_ELSE 7
    jmp addr_32099
addr_32093: ;;// porth.porth:3888:24: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_32094: ;;// porth.porth:3888:28: OP_PUSH_INT 5
    mov rax, 5
    push rax
addr_32095: ;;// porth.porth:3888:42: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_32096: ;;// porth.porth:3888:44: OP_IFSTAR 4
    pop rax
    test rax, rax
    jz addr_32100
addr_32097: ;;// porth.porth:3888:48: OP_INTRINSIC drop
    pop rax
addr_32098: ;;// porth.porth:3888:53: OP_PUSH_INT 5
    mov rax, 5
    push rax
addr_32099: ;;// porth.porth:3889:19: OP_ELSE 24
    jmp addr_32123
addr_32100: ;;// porth.porth:3890:21: OP_INTRINSIC drop
    pop rax
addr_32101: ;;// porth.porth:3890:26: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_32102: ;;// porth.porth:3891:21: OP_PUSH_STR 907
    mov rax, 19
    push rax
    lea rax, [str_907]
    push rax
addr_32103: ;;// porth.porth:3891:26: OP_INLINED 676
addr_32104: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_32105: ;;// std/std.porth:50:37: OP_INLINED 662
addr_32106: ;;// std/std.porth:48:34: OP_INLINED 394
addr_32107: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_32108: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_32109: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_32110: ;;// porth.porth:3891:32: OP_PUSH_STR 908
    mov rax, 14
    push rax
    lea rax, [str_908]
    push rax
addr_32111: ;;// porth.porth:3891:50: OP_INLINED 676
addr_32112: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_32113: ;;// std/std.porth:50:37: OP_INLINED 662
addr_32114: ;;// std/std.porth:48:34: OP_INLINED 394
addr_32115: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_32116: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_32117: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_32118: ;;// porth.porth:3892:21: OP_PUSH_INT 69
    mov rax, 69
    push rax
addr_32119: ;;// porth.porth:3892:24: OP_INLINED 418
addr_32120: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_32121: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_32122: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_32123: ;;// porth.porth:3893:19: OP_END_IF 0
addr_32124: ;;// porth.porth:3894:19: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32125: ;;// porth.porth:3894:24: OP_PUSH_INT 48
    mov rax, 48
    push rax
addr_32126: ;;// porth.porth:3894:36: OP_INLINED 36
addr_32127: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32128: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32129: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32130: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32131: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32132: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32133: ;;// porth.porth:3894:41: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32134: ;;// porth.porth:3895:19: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_32135: ;;// porth.porth:3896:19: OP_CALL 12921
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_12921
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_32136: ;;// porth.porth:3897:17: OP_ELSE 253
    jmp addr_32389
addr_32137: ;;// porth.porth:3897:22: OP_INTRINSIC drop
    pop rax
addr_32138: ;;// porth.porth:3897:27: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_32139: ;;// porth.porth:3897:31: OP_INLINED 753
addr_32140: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_32141: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_32142: ;;// std/std.porth:65:7: OP_INLINED 704
addr_32143: ;;// std/std.porth:58:38: OP_INLINED 684
addr_32144: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_32145: ;;// std/std.porth:56:57: OP_INLINED 36
addr_32146: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32147: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32148: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32149: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32150: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32151: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32152: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32153: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_32154: ;;// std/std.porth:66:7: OP_INLINED 716
addr_32155: ;;// std/std.porth:59:37: OP_INLINED 694
addr_32156: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_32157: ;;// std/std.porth:57:55: OP_INLINED 36
addr_32158: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32159: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32160: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32161: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32162: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32163: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32164: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32165: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_32166: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_32167: ;;// porth.porth:3897:36: OP_CALL 14004
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_14004
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_32168: ;;// porth.porth:3897:56: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_32169: ;;// porth.porth:3897:60: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_32170: ;;// porth.porth:3897:65: OP_INLINED 52
addr_32171: ;;// std/core.porth:46:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32172: ;;// std/core.porth:46:8: OP_INTRINSIC cast(int)
addr_32173: ;;// std/core.porth:47:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32174: ;;// std/core.porth:47:8: OP_INTRINSIC cast(int)
addr_32175: ;;// std/core.porth:48:3: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_32176: ;;// porth.porth:3897:71: OP_IFSTAR 214
    pop rax
    test rax, rax
    jz addr_32390
addr_32177: ;;// porth.porth:3899:19: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_32178: ;;// porth.porth:3899:23: OP_PUSH_INT 104
    mov rax, 104
    push rax
addr_32179: ;;// porth.porth:3899:33: OP_INLINED 36
addr_32180: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32181: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32182: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32183: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32184: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32185: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32186: ;;// porth.porth:3899:38: OP_INLINED 16
addr_32187: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32188: ;;// porth.porth:3899:43: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_32189: ;;// porth.porth:3899:55: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_32190: ;;// porth.porth:3899:57: OP_IF 116
    pop rax
    test rax, rax
    jz addr_32306
addr_32191: ;;// porth.porth:3900:21: OP_CALL 24551
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_24551
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_32192: ;;// porth.porth:3901:23: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_32193: ;;// porth.porth:3901:28: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_32194: ;;// porth.porth:3901:33: OP_INLINED 59
addr_32195: ;;// std/core.porth:52:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32196: ;;// std/core.porth:52:8: OP_INTRINSIC cast(int)
addr_32197: ;;// std/core.porth:53:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32198: ;;// std/core.porth:53:8: OP_INTRINSIC cast(int)
addr_32199: ;;// std/core.porth:54:3: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_32200: ;;// porth.porth:3901:38: OP_IF 101
    pop rax
    test rax, rax
    jz addr_32301
addr_32201: ;;// porth.porth:3906:25: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_32202: ;;// porth.porth:3906:55: OP_INLINED 5367
addr_32203: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_32204: ;;// porth.porth:32:35: OP_INLINED 5195
addr_32205: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_32206: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_32207: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_32208: ;;// porth.porth:24:23: OP_INLINED 36
addr_32209: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32210: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32211: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32212: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32213: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32214: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32215: ;;// porth.porth:24:28: OP_INLINED 753
addr_32216: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_32217: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_32218: ;;// std/std.porth:65:7: OP_INLINED 704
addr_32219: ;;// std/std.porth:58:38: OP_INLINED 684
addr_32220: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_32221: ;;// std/std.porth:56:57: OP_INLINED 36
addr_32222: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32223: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32224: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32225: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32226: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32227: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32228: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32229: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_32230: ;;// std/std.porth:66:7: OP_INLINED 716
addr_32231: ;;// std/std.porth:59:37: OP_INLINED 694
addr_32232: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_32233: ;;// std/std.porth:57:55: OP_INLINED 36
addr_32234: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32235: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32236: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32237: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32238: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32239: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32240: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32241: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_32242: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_32243: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_32244: ;;// porth.porth:24:36: OP_INLINED 662
addr_32245: ;;// std/std.porth:48:34: OP_INLINED 394
addr_32246: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_32247: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_32248: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_32249: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_32250: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_32251: ;;// porth.porth:25:36: OP_INLINED 662
addr_32252: ;;// std/std.porth:48:34: OP_INLINED 394
addr_32253: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_32254: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_32255: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_32256: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_32257: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_32258: ;;// porth.porth:26:17: OP_INLINED 36
addr_32259: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32260: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32261: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32262: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32263: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32264: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32265: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32266: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_32267: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_32268: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_32269: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_32270: ;;// porth.porth:27:36: OP_INLINED 662
addr_32271: ;;// std/std.porth:48:34: OP_INLINED 394
addr_32272: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_32273: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_32274: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_32275: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_32276: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_32277: ;;// porth.porth:28:17: OP_INLINED 36
addr_32278: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32279: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32280: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32281: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32282: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32283: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32284: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32285: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_32286: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_32287: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_32288: ;;// porth.porth:3907:25: OP_PUSH_STR 909
    mov rax, 43
    push rax
    lea rax, [str_909]
    push rax
addr_32289: ;;// porth.porth:3907:72: OP_INLINED 676
addr_32290: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_32291: ;;// std/std.porth:50:37: OP_INLINED 662
addr_32292: ;;// std/std.porth:48:34: OP_INLINED 394
addr_32293: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_32294: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_32295: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_32296: ;;// porth.porth:3908:25: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_32297: ;;// porth.porth:3908:27: OP_INLINED 418
addr_32298: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_32299: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_32300: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_32301: ;;// porth.porth:3909:23: OP_END_IF 0
addr_32302: ;;// porth.porth:3910:21: OP_INTRINSIC drop
    pop rax
addr_32303: ;;// porth.porth:3912:21: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_32304: ;;// porth.porth:3913:21: OP_CALL 24396
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_24396
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_32305: ;;// porth.porth:3914:19: OP_ELSE 28
    jmp addr_32333
addr_32306: ;;// porth.porth:3914:24: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_32307: ;;// porth.porth:3914:28: OP_PUSH_INT 104
    mov rax, 104
    push rax
addr_32308: ;;// porth.porth:3914:38: OP_INLINED 36
addr_32309: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32310: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32311: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32312: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32313: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32314: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32315: ;;// porth.porth:3914:43: OP_INLINED 16
addr_32316: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32317: ;;// porth.porth:3914:48: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_32318: ;;// porth.porth:3914:60: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_32319: ;;// porth.porth:3914:62: OP_IFSTAR 15
    pop rax
    test rax, rax
    jz addr_32334
addr_32320: ;;// porth.porth:3915:21: OP_PUSH_INT 17
    mov rax, 17
    push rax
addr_32321: ;;// porth.porth:3916:21: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32322: ;;// porth.porth:3916:26: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_32323: ;;// porth.porth:3916:36: OP_INLINED 36
addr_32324: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32325: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32326: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32327: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32328: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32329: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32330: ;;// porth.porth:3916:41: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32331: ;;// porth.porth:3917:21: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_32332: ;;// porth.porth:3918:21: OP_CALL 12921
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_12921
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_32333: ;;// porth.porth:3919:19: OP_ELSE 32
    jmp addr_32365
addr_32334: ;;// porth.porth:3919:24: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_32335: ;;// porth.porth:3919:28: OP_PUSH_INT 104
    mov rax, 104
    push rax
addr_32336: ;;// porth.porth:3919:38: OP_INLINED 36
addr_32337: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32338: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32339: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32340: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32341: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32342: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32343: ;;// porth.porth:3919:43: OP_INLINED 16
addr_32344: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32345: ;;// porth.porth:3919:48: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_32346: ;;// porth.porth:3919:60: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_32347: ;;// porth.porth:3919:62: OP_IFSTAR 19
    pop rax
    test rax, rax
    jz addr_32366
addr_32348: ;;// porth.porth:3920:21: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_32349: ;;// porth.porth:3921:23: OP_PUSH_INT 18
    mov rax, 18
    push rax
addr_32350: ;;// porth.porth:3922:23: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_32351: ;;// porth.porth:3922:28: OP_PUSH_GLOBAL_MEM 15073368
    lea rax, [mem+15073368]
    push rax
addr_32352: ;;// porth.porth:3922:34: OP_INLINED 78
addr_32353: ;;// std/core.porth:68:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32354: ;;// std/core.porth:68:8: OP_INTRINSIC cast(int)
addr_32355: ;;// std/core.porth:69:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32356: ;;// std/core.porth:69:8: OP_INTRINSIC cast(int)
addr_32357: ;;// std/core.porth:70:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_32358: ;;// porth.porth:3922:43: OP_PUSH_INT 120
    mov rax, 120
    push rax
addr_32359: ;;// porth.porth:3922:56: OP_INLINED 85
addr_32360: ;;// std/core.porth:73:36: OP_INTRINSIC divmod
    xor rdx, rdx
    pop rbx
    pop rax
    div rbx
    push rax
    push rdx
addr_32361: ;;// std/core.porth:73:43: OP_INTRINSIC drop
    pop rax
addr_32362: ;;// porth.porth:3923:23: OP_PUSH_BIND 5
    mov rax, [ret_stack_rsp]
    add rax, 40
    mov rbx, [rax]
    push rbx
addr_32363: ;;// porth.porth:3923:29: OP_CALL 12921
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_12921
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_32364: ;;// porth.porth:3924:21: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_32365: ;;// porth.porth:3925:19: OP_ELSE 23
    jmp addr_32388
addr_32366: ;;// porth.porth:3926:21: OP_PUSH_STR 910
    mov rax, 19
    push rax
    lea rax, [str_910]
    push rax
addr_32367: ;;// porth.porth:3926:26: OP_INLINED 676
addr_32368: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_32369: ;;// std/std.porth:50:37: OP_INLINED 662
addr_32370: ;;// std/std.porth:48:34: OP_INLINED 394
addr_32371: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_32372: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_32373: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_32374: ;;// porth.porth:3926:32: OP_PUSH_STR 911
    mov rax, 14
    push rax
    lea rax, [str_911]
    push rax
addr_32375: ;;// porth.porth:3926:50: OP_INLINED 676
addr_32376: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_32377: ;;// std/std.porth:50:37: OP_INLINED 662
addr_32378: ;;// std/std.porth:48:34: OP_INLINED 394
addr_32379: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_32380: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_32381: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_32382: ;;// porth.porth:3927:21: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_32383: ;;// porth.porth:3927:23: OP_INLINED 418
addr_32384: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_32385: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_32386: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_32387: ;;// porth.porth:3927:28: OP_INTRINSIC drop
    pop rax
addr_32388: ;;// porth.porth:3928:19: OP_END_IF 0
addr_32389: ;;// porth.porth:3929:17: OP_ELSE 60
    jmp addr_32449
addr_32390: ;;// porth.porth:3929:22: OP_INTRINSIC drop
    pop rax
addr_32391: ;;// porth.porth:3929:27: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_32392: ;;// porth.porth:3929:31: OP_INLINED 753
addr_32393: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_32394: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_32395: ;;// std/std.porth:65:7: OP_INLINED 704
addr_32396: ;;// std/std.porth:58:38: OP_INLINED 684
addr_32397: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_32398: ;;// std/std.porth:56:57: OP_INLINED 36
addr_32399: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32400: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32401: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32402: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32403: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32404: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32405: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32406: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_32407: ;;// std/std.porth:66:7: OP_INLINED 716
addr_32408: ;;// std/std.porth:59:37: OP_INLINED 694
addr_32409: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_32410: ;;// std/std.porth:57:55: OP_INLINED 36
addr_32411: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32412: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32413: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32414: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32415: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32416: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32417: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32418: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_32419: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_32420: ;;// porth.porth:3929:36: OP_CALL 14249
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_14249
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_32421: ;;// porth.porth:3929:58: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_32422: ;;// porth.porth:3929:62: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_32423: ;;// porth.porth:3929:67: OP_INLINED 52
addr_32424: ;;// std/core.porth:46:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32425: ;;// std/core.porth:46:8: OP_INTRINSIC cast(int)
addr_32426: ;;// std/core.porth:47:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32427: ;;// std/core.porth:47:8: OP_INTRINSIC cast(int)
addr_32428: ;;// std/core.porth:48:3: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_32429: ;;// porth.porth:3929:73: OP_IFSTAR 21
    pop rax
    test rax, rax
    jz addr_32450
addr_32430: ;;// porth.porth:3932:19: OP_PUSH_INT 6
    mov rax, 6
    push rax
addr_32431: ;;// porth.porth:3933:21: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32432: ;;// porth.porth:3933:26: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_32433: ;;// porth.porth:3933:40: OP_INLINED 36
addr_32434: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32435: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32436: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32437: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32438: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32439: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32440: ;;// porth.porth:3933:45: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32441: ;;// porth.porth:3934:21: OP_PUSH_GLOBAL_MEM 15388856
    lea rax, [mem+15388856]
    push rax
addr_32442: ;;// porth.porth:3934:38: OP_INLINED 16
addr_32443: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32444: ;;// porth.porth:3934:43: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_32445: ;;// porth.porth:3934:45: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_32446: ;;// porth.porth:3935:21: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32447: ;;// porth.porth:3936:19: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_32448: ;;// porth.porth:3937:19: OP_CALL 12921
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_12921
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_32449: ;;// porth.porth:3938:17: OP_ELSE 54
    jmp addr_32503
addr_32450: ;;// porth.porth:3938:22: OP_INTRINSIC drop
    pop rax
addr_32451: ;;// porth.porth:3938:27: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_32452: ;;// porth.porth:3938:31: OP_INLINED 753
addr_32453: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_32454: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_32455: ;;// std/std.porth:65:7: OP_INLINED 704
addr_32456: ;;// std/std.porth:58:38: OP_INLINED 684
addr_32457: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_32458: ;;// std/std.porth:56:57: OP_INLINED 36
addr_32459: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32460: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32461: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32462: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32463: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32464: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32465: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32466: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_32467: ;;// std/std.porth:66:7: OP_INLINED 716
addr_32468: ;;// std/std.porth:59:37: OP_INLINED 694
addr_32469: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_32470: ;;// std/std.porth:57:55: OP_INLINED 36
addr_32471: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32472: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32473: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32474: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32475: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32476: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32477: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32478: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_32479: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_32480: ;;// porth.porth:3938:36: OP_CALL 14391
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_14391
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_32481: ;;// porth.porth:3938:59: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_32482: ;;// porth.porth:3938:63: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_32483: ;;// porth.porth:3938:68: OP_INLINED 52
addr_32484: ;;// std/core.porth:46:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32485: ;;// std/core.porth:46:8: OP_INTRINSIC cast(int)
addr_32486: ;;// std/core.porth:47:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32487: ;;// std/core.porth:47:8: OP_INTRINSIC cast(int)
addr_32488: ;;// std/core.porth:48:3: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_32489: ;;// porth.porth:3938:74: OP_IFSTAR 15
    pop rax
    test rax, rax
    jz addr_32504
addr_32490: ;;// porth.porth:3939:19: OP_PUSH_INT 7
    mov rax, 7
    push rax
addr_32491: ;;// porth.porth:3940:19: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32492: ;;// porth.porth:3940:24: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_32493: ;;// porth.porth:3940:38: OP_INLINED 36
addr_32494: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32495: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32496: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32497: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32498: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32499: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32500: ;;// porth.porth:3940:43: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32501: ;;// porth.porth:3941:19: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_32502: ;;// porth.porth:3942:19: OP_CALL 12921
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_12921
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_32503: ;;// porth.porth:3943:17: OP_ELSE 146
    jmp addr_32649
addr_32504: ;;// porth.porth:3943:22: OP_INTRINSIC drop
    pop rax
addr_32505: ;;// porth.porth:3944:19: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_32506: ;;// porth.porth:3944:28: OP_INLINED 5367
addr_32507: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_32508: ;;// porth.porth:32:35: OP_INLINED 5195
addr_32509: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_32510: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_32511: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_32512: ;;// porth.porth:24:23: OP_INLINED 36
addr_32513: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32514: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32515: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32516: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32517: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32518: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32519: ;;// porth.porth:24:28: OP_INLINED 753
addr_32520: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_32521: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_32522: ;;// std/std.porth:65:7: OP_INLINED 704
addr_32523: ;;// std/std.porth:58:38: OP_INLINED 684
addr_32524: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_32525: ;;// std/std.porth:56:57: OP_INLINED 36
addr_32526: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32527: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32528: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32529: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32530: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32531: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32532: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32533: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_32534: ;;// std/std.porth:66:7: OP_INLINED 716
addr_32535: ;;// std/std.porth:59:37: OP_INLINED 694
addr_32536: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_32537: ;;// std/std.porth:57:55: OP_INLINED 36
addr_32538: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32539: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32540: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32541: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32542: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32543: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32544: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32545: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_32546: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_32547: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_32548: ;;// porth.porth:24:36: OP_INLINED 662
addr_32549: ;;// std/std.porth:48:34: OP_INLINED 394
addr_32550: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_32551: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_32552: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_32553: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_32554: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_32555: ;;// porth.porth:25:36: OP_INLINED 662
addr_32556: ;;// std/std.porth:48:34: OP_INLINED 394
addr_32557: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_32558: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_32559: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_32560: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_32561: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_32562: ;;// porth.porth:26:17: OP_INLINED 36
addr_32563: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32564: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32565: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32566: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32567: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32568: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32569: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32570: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_32571: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_32572: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_32573: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_32574: ;;// porth.porth:27:36: OP_INLINED 662
addr_32575: ;;// std/std.porth:48:34: OP_INLINED 394
addr_32576: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_32577: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_32578: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_32579: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_32580: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_32581: ;;// porth.porth:28:17: OP_INLINED 36
addr_32582: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32583: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32584: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32585: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32586: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32587: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32588: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32589: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_32590: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_32591: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_32592: ;;// porth.porth:3945:19: OP_PUSH_STR 912
    mov rax, 23
    push rax
    lea rax, [str_912]
    push rax
addr_32593: ;;// porth.porth:3945:45: OP_INLINED 676
addr_32594: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_32595: ;;// std/std.porth:50:37: OP_INLINED 662
addr_32596: ;;// std/std.porth:48:34: OP_INLINED 394
addr_32597: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_32598: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_32599: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_32600: ;;// porth.porth:3946:19: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_32601: ;;// porth.porth:3946:23: OP_INLINED 753
addr_32602: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_32603: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_32604: ;;// std/std.porth:65:7: OP_INLINED 704
addr_32605: ;;// std/std.porth:58:38: OP_INLINED 684
addr_32606: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_32607: ;;// std/std.porth:56:57: OP_INLINED 36
addr_32608: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32609: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32610: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32611: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32612: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32613: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32614: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32615: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_32616: ;;// std/std.porth:66:7: OP_INLINED 716
addr_32617: ;;// std/std.porth:59:37: OP_INLINED 694
addr_32618: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_32619: ;;// std/std.porth:57:55: OP_INLINED 36
addr_32620: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32621: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32622: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32623: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32624: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32625: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32626: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32627: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_32628: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_32629: ;;// porth.porth:3946:45: OP_INLINED 676
addr_32630: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_32631: ;;// std/std.porth:50:37: OP_INLINED 662
addr_32632: ;;// std/std.porth:48:34: OP_INLINED 394
addr_32633: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_32634: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_32635: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_32636: ;;// porth.porth:3947:19: OP_PUSH_STR 913
    mov rax, 2
    push rax
    lea rax, [str_913]
    push rax
addr_32637: ;;// porth.porth:3947:45: OP_INLINED 676
addr_32638: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_32639: ;;// std/std.porth:50:37: OP_INLINED 662
addr_32640: ;;// std/std.porth:48:34: OP_INLINED 394
addr_32641: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_32642: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_32643: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_32644: ;;// porth.porth:3948:19: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_32645: ;;// porth.porth:3948:21: OP_INLINED 418
addr_32646: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_32647: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_32648: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_32649: ;;// porth.porth:3949:17: OP_END_IF 0
addr_32650: ;;// porth.porth:3950:15: OP_INTRINSIC drop
    pop rax
addr_32651: ;;// porth.porth:3951:13: OP_ELSE 180
    jmp addr_32831
addr_32652: ;;// porth.porth:3951:18: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_32653: ;;// porth.porth:3951:23: OP_INLINED 16
addr_32654: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32655: ;;// porth.porth:3951:28: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_32656: ;;// porth.porth:3951:38: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_32657: ;;// porth.porth:3951:40: OP_IFSTAR 175
    pop rax
    test rax, rax
    jz addr_32832
addr_32658: ;;// porth.porth:3952:15: OP_PUSH_GLOBAL_MEM 15196248
    lea rax, [mem+15196248]
    push rax
addr_32659: ;;// porth.porth:3952:27: OP_INLINED 12
addr_32660: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32661: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_32662: ;;// porth.porth:3952:33: OP_INLINED 131
addr_32663: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_32664: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_32665: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32666: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_32667: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_32668: ;;// porth.porth:3952:38: OP_IF 129
    pop rax
    test rax, rax
    jz addr_32797
addr_32669: ;;// porth.porth:3953:17: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_32670: ;;// porth.porth:3953:57: OP_INLINED 5367
addr_32671: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_32672: ;;// porth.porth:32:35: OP_INLINED 5195
addr_32673: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_32674: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_32675: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_32676: ;;// porth.porth:24:23: OP_INLINED 36
addr_32677: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32678: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32679: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32680: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32681: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32682: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32683: ;;// porth.porth:24:28: OP_INLINED 753
addr_32684: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_32685: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_32686: ;;// std/std.porth:65:7: OP_INLINED 704
addr_32687: ;;// std/std.porth:58:38: OP_INLINED 684
addr_32688: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_32689: ;;// std/std.porth:56:57: OP_INLINED 36
addr_32690: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32691: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32692: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32693: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32694: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32695: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32696: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32697: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_32698: ;;// std/std.porth:66:7: OP_INLINED 716
addr_32699: ;;// std/std.porth:59:37: OP_INLINED 694
addr_32700: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_32701: ;;// std/std.porth:57:55: OP_INLINED 36
addr_32702: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32703: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32704: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32705: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32706: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32707: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32708: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32709: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_32710: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_32711: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_32712: ;;// porth.porth:24:36: OP_INLINED 662
addr_32713: ;;// std/std.porth:48:34: OP_INLINED 394
addr_32714: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_32715: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_32716: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_32717: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_32718: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_32719: ;;// porth.porth:25:36: OP_INLINED 662
addr_32720: ;;// std/std.porth:48:34: OP_INLINED 394
addr_32721: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_32722: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_32723: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_32724: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_32725: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_32726: ;;// porth.porth:26:17: OP_INLINED 36
addr_32727: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32728: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32729: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32730: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32731: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32732: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32733: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32734: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_32735: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_32736: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_32737: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_32738: ;;// porth.porth:27:36: OP_INLINED 662
addr_32739: ;;// std/std.porth:48:34: OP_INLINED 394
addr_32740: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_32741: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_32742: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_32743: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_32744: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_32745: ;;// porth.porth:28:17: OP_INLINED 36
addr_32746: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32747: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32748: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32749: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32750: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32751: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32752: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32753: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_32754: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_32755: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_32756: ;;// porth.porth:3954:17: OP_PUSH_STR 914
    mov rax, 9
    push rax
    lea rax, [str_914]
    push rax
addr_32757: ;;// porth.porth:3954:74: OP_INLINED 676
addr_32758: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_32759: ;;// std/std.porth:50:37: OP_INLINED 662
addr_32760: ;;// std/std.porth:48:34: OP_INLINED 394
addr_32761: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_32762: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_32763: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_32764: ;;// porth.porth:3955:17: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_32765: ;;// porth.porth:3955:23: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_32766: ;;// porth.porth:3955:34: OP_INLINED 36
addr_32767: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32768: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32769: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32770: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32771: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32772: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32773: ;;// porth.porth:3955:39: OP_INLINED 16
addr_32774: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32775: ;;// porth.porth:3955:44: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_32776: ;;// porth.porth:3955:57: OP_CALL 10127
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_10127
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_32777: ;;// porth.porth:3955:74: OP_INLINED 676
addr_32778: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_32779: ;;// std/std.porth:50:37: OP_INLINED 662
addr_32780: ;;// std/std.porth:48:34: OP_INLINED 394
addr_32781: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_32782: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_32783: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_32784: ;;// porth.porth:3956:17: OP_PUSH_STR 915
    mov rax, 49
    push rax
    lea rax, [str_915]
    push rax
addr_32785: ;;// porth.porth:3956:74: OP_INLINED 676
addr_32786: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_32787: ;;// std/std.porth:50:37: OP_INLINED 662
addr_32788: ;;// std/std.porth:48:34: OP_INLINED 394
addr_32789: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_32790: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_32791: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_32792: ;;// porth.porth:3957:17: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_32793: ;;// porth.porth:3957:19: OP_INLINED 418
addr_32794: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_32795: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_32796: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_32797: ;;// porth.porth:3958:15: OP_END_IF 0
addr_32798: ;;// porth.porth:3960:15: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_32799: ;;// porth.porth:3961:15: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_32800: ;;// porth.porth:3961:21: OP_INLINED 753
addr_32801: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_32802: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_32803: ;;// std/std.porth:65:7: OP_INLINED 704
addr_32804: ;;// std/std.porth:58:38: OP_INLINED 684
addr_32805: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_32806: ;;// std/std.porth:56:57: OP_INLINED 36
addr_32807: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32808: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32809: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32810: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32811: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32812: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32813: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32814: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_32815: ;;// std/std.porth:66:7: OP_INLINED 716
addr_32816: ;;// std/std.porth:59:37: OP_INLINED 694
addr_32817: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_32818: ;;// std/std.porth:57:55: OP_INLINED 36
addr_32819: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32820: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32821: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32822: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32823: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32824: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32825: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32826: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_32827: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_32828: ;;// porth.porth:3961:26: OP_CALL 13257
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13257
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_32829: ;;// porth.porth:3962:15: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_32830: ;;// porth.porth:3963:15: OP_CALL 12921
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_12921
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_32831: ;;// porth.porth:3964:13: OP_ELSE 180
    jmp addr_33011
addr_32832: ;;// porth.porth:3964:18: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_32833: ;;// porth.porth:3964:23: OP_INLINED 16
addr_32834: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32835: ;;// porth.porth:3964:28: OP_PUSH_INT 4
    mov rax, 4
    push rax
addr_32836: ;;// porth.porth:3964:39: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_32837: ;;// porth.porth:3964:41: OP_IFSTAR 175
    pop rax
    test rax, rax
    jz addr_33012
addr_32838: ;;// porth.porth:3965:15: OP_PUSH_GLOBAL_MEM 15196248
    lea rax, [mem+15196248]
    push rax
addr_32839: ;;// porth.porth:3965:27: OP_INLINED 12
addr_32840: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32841: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_32842: ;;// porth.porth:3965:33: OP_INLINED 131
addr_32843: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_32844: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_32845: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32846: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_32847: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_32848: ;;// porth.porth:3965:38: OP_IF 129
    pop rax
    test rax, rax
    jz addr_32977
addr_32849: ;;// porth.porth:3966:17: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_32850: ;;// porth.porth:3966:57: OP_INLINED 5367
addr_32851: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_32852: ;;// porth.porth:32:35: OP_INLINED 5195
addr_32853: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_32854: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_32855: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_32856: ;;// porth.porth:24:23: OP_INLINED 36
addr_32857: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32858: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32859: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32860: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32861: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32862: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32863: ;;// porth.porth:24:28: OP_INLINED 753
addr_32864: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_32865: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_32866: ;;// std/std.porth:65:7: OP_INLINED 704
addr_32867: ;;// std/std.porth:58:38: OP_INLINED 684
addr_32868: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_32869: ;;// std/std.porth:56:57: OP_INLINED 36
addr_32870: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32871: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32872: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32873: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32874: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32875: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32876: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32877: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_32878: ;;// std/std.porth:66:7: OP_INLINED 716
addr_32879: ;;// std/std.porth:59:37: OP_INLINED 694
addr_32880: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_32881: ;;// std/std.porth:57:55: OP_INLINED 36
addr_32882: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32883: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32884: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32885: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32886: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32887: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32888: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32889: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_32890: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_32891: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_32892: ;;// porth.porth:24:36: OP_INLINED 662
addr_32893: ;;// std/std.porth:48:34: OP_INLINED 394
addr_32894: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_32895: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_32896: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_32897: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_32898: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_32899: ;;// porth.porth:25:36: OP_INLINED 662
addr_32900: ;;// std/std.porth:48:34: OP_INLINED 394
addr_32901: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_32902: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_32903: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_32904: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_32905: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_32906: ;;// porth.porth:26:17: OP_INLINED 36
addr_32907: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32908: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32909: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32910: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32911: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32912: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32913: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32914: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_32915: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_32916: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_32917: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_32918: ;;// porth.porth:27:36: OP_INLINED 662
addr_32919: ;;// std/std.porth:48:34: OP_INLINED 394
addr_32920: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_32921: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_32922: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_32923: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_32924: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_32925: ;;// porth.porth:28:17: OP_INLINED 36
addr_32926: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32927: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32928: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32929: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32930: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32931: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32932: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32933: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_32934: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_32935: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_32936: ;;// porth.porth:3967:17: OP_PUSH_STR 916
    mov rax, 9
    push rax
    lea rax, [str_916]
    push rax
addr_32937: ;;// porth.porth:3967:74: OP_INLINED 676
addr_32938: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_32939: ;;// std/std.porth:50:37: OP_INLINED 662
addr_32940: ;;// std/std.porth:48:34: OP_INLINED 394
addr_32941: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_32942: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_32943: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_32944: ;;// porth.porth:3968:17: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_32945: ;;// porth.porth:3968:23: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_32946: ;;// porth.porth:3968:34: OP_INLINED 36
addr_32947: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32948: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32949: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32950: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32951: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32952: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32953: ;;// porth.porth:3968:39: OP_INLINED 16
addr_32954: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32955: ;;// porth.porth:3968:44: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_32956: ;;// porth.porth:3968:57: OP_CALL 10127
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_10127
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_32957: ;;// porth.porth:3968:74: OP_INLINED 676
addr_32958: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_32959: ;;// std/std.porth:50:37: OP_INLINED 662
addr_32960: ;;// std/std.porth:48:34: OP_INLINED 394
addr_32961: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_32962: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_32963: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_32964: ;;// porth.porth:3969:17: OP_PUSH_STR 917
    mov rax, 49
    push rax
    lea rax, [str_917]
    push rax
addr_32965: ;;// porth.porth:3969:74: OP_INLINED 676
addr_32966: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_32967: ;;// std/std.porth:50:37: OP_INLINED 662
addr_32968: ;;// std/std.porth:48:34: OP_INLINED 394
addr_32969: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_32970: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_32971: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_32972: ;;// porth.porth:3970:17: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_32973: ;;// porth.porth:3970:19: OP_INLINED 418
addr_32974: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_32975: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_32976: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_32977: ;;// porth.porth:3971:15: OP_END_IF 0
addr_32978: ;;// porth.porth:3973:15: OP_PUSH_INT 9
    mov rax, 9
    push rax
addr_32979: ;;// porth.porth:3974:15: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_32980: ;;// porth.porth:3974:21: OP_INLINED 753
addr_32981: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_32982: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_32983: ;;// std/std.porth:65:7: OP_INLINED 704
addr_32984: ;;// std/std.porth:58:38: OP_INLINED 684
addr_32985: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_32986: ;;// std/std.porth:56:57: OP_INLINED 36
addr_32987: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32988: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_32989: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_32990: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_32991: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_32992: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_32993: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_32994: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_32995: ;;// std/std.porth:66:7: OP_INLINED 716
addr_32996: ;;// std/std.porth:59:37: OP_INLINED 694
addr_32997: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_32998: ;;// std/std.porth:57:55: OP_INLINED 36
addr_32999: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33000: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33001: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33002: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33003: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33004: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33005: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33006: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_33007: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_33008: ;;// porth.porth:3974:26: OP_CALL 13257
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13257
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_33009: ;;// porth.porth:3975:15: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_33010: ;;// porth.porth:3976:15: OP_CALL 12921
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_12921
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_33011: ;;// porth.porth:3977:13: OP_ELSE 153
    jmp addr_33164
addr_33012: ;;// porth.porth:3977:18: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_33013: ;;// porth.porth:3977:23: OP_INLINED 16
addr_33014: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33015: ;;// porth.porth:3977:28: OP_PUSH_INT 5
    mov rax, 5
    push rax
addr_33016: ;;// porth.porth:3977:39: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_33017: ;;// porth.porth:3977:41: OP_IFSTAR 148
    pop rax
    test rax, rax
    jz addr_33165
addr_33018: ;;// porth.porth:3978:15: OP_PUSH_GLOBAL_MEM 15196248
    lea rax, [mem+15196248]
    push rax
addr_33019: ;;// porth.porth:3978:27: OP_INLINED 12
addr_33020: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33021: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_33022: ;;// porth.porth:3978:33: OP_INLINED 131
addr_33023: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_33024: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33025: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33026: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_33027: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_33028: ;;// porth.porth:3978:38: OP_IF 129
    pop rax
    test rax, rax
    jz addr_33157
addr_33029: ;;// porth.porth:3979:17: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_33030: ;;// porth.porth:3979:57: OP_INLINED 5367
addr_33031: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_33032: ;;// porth.porth:32:35: OP_INLINED 5195
addr_33033: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_33034: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_33035: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_33036: ;;// porth.porth:24:23: OP_INLINED 36
addr_33037: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33038: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33039: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33040: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33041: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33042: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33043: ;;// porth.porth:24:28: OP_INLINED 753
addr_33044: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_33045: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_33046: ;;// std/std.porth:65:7: OP_INLINED 704
addr_33047: ;;// std/std.porth:58:38: OP_INLINED 684
addr_33048: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_33049: ;;// std/std.porth:56:57: OP_INLINED 36
addr_33050: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33051: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33052: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33053: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33054: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33055: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33056: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33057: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_33058: ;;// std/std.porth:66:7: OP_INLINED 716
addr_33059: ;;// std/std.porth:59:37: OP_INLINED 694
addr_33060: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_33061: ;;// std/std.porth:57:55: OP_INLINED 36
addr_33062: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33063: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33064: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33065: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33066: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33067: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33068: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33069: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_33070: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_33071: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_33072: ;;// porth.porth:24:36: OP_INLINED 662
addr_33073: ;;// std/std.porth:48:34: OP_INLINED 394
addr_33074: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33075: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_33076: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_33077: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_33078: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_33079: ;;// porth.porth:25:36: OP_INLINED 662
addr_33080: ;;// std/std.porth:48:34: OP_INLINED 394
addr_33081: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33082: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_33083: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_33084: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_33085: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_33086: ;;// porth.porth:26:17: OP_INLINED 36
addr_33087: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33088: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33089: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33090: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33091: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33092: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33093: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33094: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_33095: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_33096: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_33097: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_33098: ;;// porth.porth:27:36: OP_INLINED 662
addr_33099: ;;// std/std.porth:48:34: OP_INLINED 394
addr_33100: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33101: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_33102: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_33103: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_33104: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_33105: ;;// porth.porth:28:17: OP_INLINED 36
addr_33106: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33107: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33108: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33109: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33110: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33111: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33112: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33113: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_33114: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_33115: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_33116: ;;// porth.porth:3980:17: OP_PUSH_STR 918
    mov rax, 9
    push rax
    lea rax, [str_918]
    push rax
addr_33117: ;;// porth.porth:3980:74: OP_INLINED 676
addr_33118: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_33119: ;;// std/std.porth:50:37: OP_INLINED 662
addr_33120: ;;// std/std.porth:48:34: OP_INLINED 394
addr_33121: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33122: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_33123: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_33124: ;;// porth.porth:3981:17: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_33125: ;;// porth.porth:3981:23: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_33126: ;;// porth.porth:3981:34: OP_INLINED 36
addr_33127: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33128: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33129: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33130: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33131: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33132: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33133: ;;// porth.porth:3981:39: OP_INLINED 16
addr_33134: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33135: ;;// porth.porth:3981:44: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33136: ;;// porth.porth:3981:57: OP_CALL 10127
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_10127
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_33137: ;;// porth.porth:3981:74: OP_INLINED 676
addr_33138: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_33139: ;;// std/std.porth:50:37: OP_INLINED 662
addr_33140: ;;// std/std.porth:48:34: OP_INLINED 394
addr_33141: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33142: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_33143: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_33144: ;;// porth.porth:3982:17: OP_PUSH_STR 919
    mov rax, 49
    push rax
    lea rax, [str_919]
    push rax
addr_33145: ;;// porth.porth:3982:74: OP_INLINED 676
addr_33146: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_33147: ;;// std/std.porth:50:37: OP_INLINED 662
addr_33148: ;;// std/std.porth:48:34: OP_INLINED 394
addr_33149: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33150: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_33151: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_33152: ;;// porth.porth:3983:17: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33153: ;;// porth.porth:3983:19: OP_INLINED 418
addr_33154: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_33155: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_33156: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_33157: ;;// porth.porth:3984:15: OP_END_IF 0
addr_33158: ;;// porth.porth:3986:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_33159: ;;// porth.porth:3987:15: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_33160: ;;// porth.porth:3987:21: OP_INLINED 16
addr_33161: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33162: ;;// porth.porth:3988:15: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_33163: ;;// porth.porth:3989:15: OP_CALL 12921
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_12921
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_33164: ;;// porth.porth:3990:13: OP_ELSE 22
    jmp addr_33186
addr_33165: ;;// porth.porth:3991:15: OP_PUSH_STR 920
    mov rax, 19
    push rax
    lea rax, [str_920]
    push rax
addr_33166: ;;// porth.porth:3991:20: OP_INLINED 676
addr_33167: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_33168: ;;// std/std.porth:50:37: OP_INLINED 662
addr_33169: ;;// std/std.porth:48:34: OP_INLINED 394
addr_33170: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33171: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_33172: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_33173: ;;// porth.porth:3991:26: OP_PUSH_STR 921
    mov rax, 35
    push rax
    lea rax, [str_921]
    push rax
addr_33174: ;;// porth.porth:3991:65: OP_INLINED 676
addr_33175: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_33176: ;;// std/std.porth:50:37: OP_INLINED 662
addr_33177: ;;// std/std.porth:48:34: OP_INLINED 394
addr_33178: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33179: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_33180: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_33181: ;;// porth.porth:3992:15: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33182: ;;// porth.porth:3992:17: OP_INLINED 418
addr_33183: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_33184: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_33185: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_33186: ;;// porth.porth:3993:13: OP_END_IF 0
addr_33187: ;;// porth.porth:3994:11: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_33188: ;;// porth.porth:3996:9: OP_END_WHILE 7033
    jmp addr_26155
addr_33189: ;;// porth.porth:3998:9: OP_PUSH_GLOBAL_MEM 15347872
    lea rax, [mem+15347872]
    push rax
addr_33190: ;;// porth.porth:3998:33: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33191: ;;// porth.porth:3998:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_33192: ;;// porth.porth:3998:39: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_33193: ;;// porth.porth:3998:41: OP_IF 126
    pop rax
    test rax, rax
    jz addr_33319
addr_33194: ;;// porth.porth:3999:11: OP_CALL 18235
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18235
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_33195: ;;// porth.porth:4000:11: OP_PUSH_INT 88
    mov rax, 88
    push rax
addr_33196: ;;// porth.porth:4000:22: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_33197: ;;// porth.porth:4001:11: OP_PUSH_GLOBAL_MEM 8421432
    lea rax, [mem+8421432]
    push rax
addr_33198: ;;// porth.porth:4001:15: OP_INLINED 73
addr_33199: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_33200: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33201: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_33202: ;;// porth.porth:4003:11: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_33203: ;;// porth.porth:4003:15: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_33204: ;;// porth.porth:4003:24: OP_INLINED 36
addr_33205: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33206: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33207: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33208: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33209: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33210: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33211: ;;// porth.porth:4003:29: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_33212: ;;// porth.porth:4003:39: OP_INLINED 36
addr_33213: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33214: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33215: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33216: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33217: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33218: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33219: ;;// porth.porth:4003:44: OP_INLINED 5367
addr_33220: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_33221: ;;// porth.porth:32:35: OP_INLINED 5195
addr_33222: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_33223: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_33224: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_33225: ;;// porth.porth:24:23: OP_INLINED 36
addr_33226: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33227: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33228: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33229: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33230: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33231: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33232: ;;// porth.porth:24:28: OP_INLINED 753
addr_33233: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_33234: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_33235: ;;// std/std.porth:65:7: OP_INLINED 704
addr_33236: ;;// std/std.porth:58:38: OP_INLINED 684
addr_33237: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_33238: ;;// std/std.porth:56:57: OP_INLINED 36
addr_33239: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33240: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33241: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33242: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33243: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33244: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33245: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33246: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_33247: ;;// std/std.porth:66:7: OP_INLINED 716
addr_33248: ;;// std/std.porth:59:37: OP_INLINED 694
addr_33249: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_33250: ;;// std/std.porth:57:55: OP_INLINED 36
addr_33251: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33252: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33253: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33254: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33255: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33256: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33257: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33258: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_33259: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_33260: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_33261: ;;// porth.porth:24:36: OP_INLINED 662
addr_33262: ;;// std/std.porth:48:34: OP_INLINED 394
addr_33263: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33264: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_33265: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_33266: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_33267: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_33268: ;;// porth.porth:25:36: OP_INLINED 662
addr_33269: ;;// std/std.porth:48:34: OP_INLINED 394
addr_33270: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33271: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_33272: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_33273: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_33274: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_33275: ;;// porth.porth:26:17: OP_INLINED 36
addr_33276: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33277: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33278: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33279: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33280: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33281: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33282: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33283: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_33284: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_33285: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_33286: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_33287: ;;// porth.porth:27:36: OP_INLINED 662
addr_33288: ;;// std/std.porth:48:34: OP_INLINED 394
addr_33289: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33290: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_33291: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_33292: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_33293: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_33294: ;;// porth.porth:28:17: OP_INLINED 36
addr_33295: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33296: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33297: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33298: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33299: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33300: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33301: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33302: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_33303: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_33304: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_33305: ;;// porth.porth:4003:52: OP_PUSH_STR 922
    mov rax, 24
    push rax
    lea rax, [str_922]
    push rax
addr_33306: ;;// porth.porth:4003:80: OP_INLINED 676
addr_33307: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_33308: ;;// std/std.porth:50:37: OP_INLINED 662
addr_33309: ;;// std/std.porth:48:34: OP_INLINED 394
addr_33310: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33311: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_33312: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_33313: ;;// porth.porth:4005:11: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33314: ;;// porth.porth:4005:13: OP_INLINED 418
addr_33315: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_33316: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_33317: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_33318: ;;// porth.porth:4006:11: OP_INTRINSIC drop
    pop rax
addr_33319: ;;// porth.porth:4007:9: OP_END_IF 0
addr_33320: ;;// porth.porth:4008:7: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_33321: ;;// porth.porth:4009:5: OP_INLINED 2426
addr_33322: ;;// std/std.porth:509:31: OP_PUSH_GLOBAL_MEM 8
    lea rax, [mem+8]
    push rax
addr_33323: ;;// std/std.porth:509:41: OP_INLINED 78
addr_33324: ;;// std/core.porth:68:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33325: ;;// std/core.porth:68:8: OP_INTRINSIC cast(int)
addr_33326: ;;// std/core.porth:69:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33327: ;;// std/core.porth:69:8: OP_INTRINSIC cast(int)
addr_33328: ;;// std/core.porth:70:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_33329: ;;// std/std.porth:509:50: OP_PUSH_GLOBAL_MEM 8388616
    lea rax, [mem+8388616]
    push rax
addr_33330: ;;// std/std.porth:509:59: OP_INLINED 30
addr_33331: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_33332: ;;// porth.porth:4010:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_33333: ;;// porth.porth:4011:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_33334: ;;// porth.porth:4014:6: OP_PREP_PROC 32
    sub rsp, 32
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_33335: ;;// porth.porth:4021:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_33336: ;;// porth.porth:4021:9: OP_INLINED 27
addr_33337: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_33338: ;;// porth.porth:4023:3: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_33339: ;;// porth.porth:4023:12: OP_INLINED 27
addr_33340: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_33341: ;;// porth.porth:4025:3: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_33342: ;;// porth.porth:4025:10: OP_INLINED 27
addr_33343: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_33344: ;;// porth.porth:4027:3: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_33345: ;;// porth.porth:4027:14: OP_INLINED 30
addr_33346: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_33347: ;;// porth.porth:4029:3: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_33348: ;;// porth.porth:4029:12: OP_INLINED 0
addr_33349: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33350: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_33351: ;;// porth.porth:4029:17: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_33352: ;;// porth.porth:4029:32: OP_INLINED 36
addr_33353: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33354: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33355: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33356: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33357: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33358: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33359: ;;// porth.porth:4029:37: OP_INLINED 16
addr_33360: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33361: ;;// porth.porth:4030:3: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_33362: ;;// porth.porth:4030:12: OP_INLINED 0
addr_33363: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33364: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_33365: ;;// porth.porth:4030:17: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_33366: ;;// porth.porth:4030:32: OP_INLINED 36
addr_33367: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33368: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33369: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33370: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33371: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33372: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33373: ;;// porth.porth:4030:37: OP_INLINED 16
addr_33374: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33375: ;;// porth.porth:4031:3: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_33376: ;;// porth.porth:4031:6: OP_IF 467
    pop rax
    test rax, rax
    jz addr_33843
addr_33377: ;;// porth.porth:4032:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_33378: ;;// porth.porth:4032:11: OP_INLINED 0
addr_33379: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33380: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_33381: ;;// porth.porth:4032:16: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_33382: ;;// porth.porth:4032:26: OP_INLINED 36
addr_33383: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33384: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33385: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33386: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33387: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33388: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33389: ;;// porth.porth:4032:58: OP_INLINED 5367
addr_33390: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_33391: ;;// porth.porth:32:35: OP_INLINED 5195
addr_33392: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_33393: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_33394: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_33395: ;;// porth.porth:24:23: OP_INLINED 36
addr_33396: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33397: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33398: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33399: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33400: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33401: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33402: ;;// porth.porth:24:28: OP_INLINED 753
addr_33403: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_33404: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_33405: ;;// std/std.porth:65:7: OP_INLINED 704
addr_33406: ;;// std/std.porth:58:38: OP_INLINED 684
addr_33407: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_33408: ;;// std/std.porth:56:57: OP_INLINED 36
addr_33409: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33410: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33411: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33412: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33413: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33414: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33415: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33416: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_33417: ;;// std/std.porth:66:7: OP_INLINED 716
addr_33418: ;;// std/std.porth:59:37: OP_INLINED 694
addr_33419: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_33420: ;;// std/std.porth:57:55: OP_INLINED 36
addr_33421: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33422: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33423: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33424: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33425: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33426: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33427: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33428: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_33429: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_33430: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_33431: ;;// porth.porth:24:36: OP_INLINED 662
addr_33432: ;;// std/std.porth:48:34: OP_INLINED 394
addr_33433: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33434: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_33435: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_33436: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_33437: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_33438: ;;// porth.porth:25:36: OP_INLINED 662
addr_33439: ;;// std/std.porth:48:34: OP_INLINED 394
addr_33440: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33441: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_33442: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_33443: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_33444: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_33445: ;;// porth.porth:26:17: OP_INLINED 36
addr_33446: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33447: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33448: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33449: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33450: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33451: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33452: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33453: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_33454: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_33455: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_33456: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_33457: ;;// porth.porth:27:36: OP_INLINED 662
addr_33458: ;;// std/std.porth:48:34: OP_INLINED 394
addr_33459: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33460: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_33461: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_33462: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_33463: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_33464: ;;// porth.porth:28:17: OP_INLINED 36
addr_33465: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33466: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33467: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33468: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33469: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33470: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33471: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33472: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_33473: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_33474: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_33475: ;;// porth.porth:4033:5: OP_PUSH_STR 923
    mov rax, 18
    push rax
    lea rax, [str_923]
    push rax
addr_33476: ;;// porth.porth:4033:58: OP_INLINED 676
addr_33477: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_33478: ;;// std/std.porth:50:37: OP_INLINED 662
addr_33479: ;;// std/std.porth:48:34: OP_INLINED 394
addr_33480: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33481: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_33482: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_33483: ;;// porth.porth:4034:5: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_33484: ;;// porth.porth:4034:16: OP_INLINED 16
addr_33485: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33486: ;;// porth.porth:4034:58: OP_INLINED 2119
addr_33487: ;;// std/std.porth:410:26: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_33488: ;;// std/std.porth:410:33: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_33489: ;;// porth.porth:4035:5: OP_PUSH_STR 924
    mov rax, 5
    push rax
    lea rax, [str_924]
    push rax
addr_33490: ;;// porth.porth:4035:58: OP_INLINED 676
addr_33491: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_33492: ;;// std/std.porth:50:37: OP_INLINED 662
addr_33493: ;;// std/std.porth:48:34: OP_INLINED 394
addr_33494: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33495: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_33496: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_33497: ;;// porth.porth:4036:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_33498: ;;// porth.porth:4036:11: OP_INLINED 0
addr_33499: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33500: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_33501: ;;// porth.porth:4036:16: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_33502: ;;// porth.porth:4036:27: OP_INLINED 36
addr_33503: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33504: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33505: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33506: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33507: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33508: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33509: ;;// porth.porth:4036:32: OP_INLINED 753
addr_33510: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_33511: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_33512: ;;// std/std.porth:65:7: OP_INLINED 704
addr_33513: ;;// std/std.porth:58:38: OP_INLINED 684
addr_33514: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_33515: ;;// std/std.porth:56:57: OP_INLINED 36
addr_33516: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33517: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33518: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33519: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33520: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33521: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33522: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33523: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_33524: ;;// std/std.porth:66:7: OP_INLINED 716
addr_33525: ;;// std/std.porth:59:37: OP_INLINED 694
addr_33526: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_33527: ;;// std/std.porth:57:55: OP_INLINED 36
addr_33528: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33529: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33530: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33531: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33532: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33533: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33534: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33535: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_33536: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_33537: ;;// porth.porth:4036:58: OP_INLINED 676
addr_33538: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_33539: ;;// std/std.porth:50:37: OP_INLINED 662
addr_33540: ;;// std/std.porth:48:34: OP_INLINED 394
addr_33541: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33542: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_33543: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_33544: ;;// porth.porth:4037:5: OP_PUSH_STR 925
    mov rax, 26
    push rax
    lea rax, [str_925]
    push rax
addr_33545: ;;// porth.porth:4037:58: OP_INLINED 676
addr_33546: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_33547: ;;// std/std.porth:50:37: OP_INLINED 662
addr_33548: ;;// std/std.porth:48:34: OP_INLINED 394
addr_33549: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33550: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_33551: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_33552: ;;// porth.porth:4038:5: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_33553: ;;// porth.porth:4038:14: OP_INLINED 0
addr_33554: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33555: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_33556: ;;// porth.porth:4038:19: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_33557: ;;// porth.porth:4038:34: OP_INLINED 36
addr_33558: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33559: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33560: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33561: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33562: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33563: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33564: ;;// porth.porth:4038:39: OP_INLINED 16
addr_33565: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33566: ;;// porth.porth:4038:44: OP_CALL 10541
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_10541
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_33567: ;;// porth.porth:4038:58: OP_INLINED 676
addr_33568: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_33569: ;;// std/std.porth:50:37: OP_INLINED 662
addr_33570: ;;// std/std.porth:48:34: OP_INLINED 394
addr_33571: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33572: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_33573: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_33574: ;;// porth.porth:4039:5: OP_PUSH_STR 926
    mov rax, 16
    push rax
    lea rax, [str_926]
    push rax
addr_33575: ;;// porth.porth:4039:58: OP_INLINED 676
addr_33576: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_33577: ;;// std/std.porth:50:37: OP_INLINED 662
addr_33578: ;;// std/std.porth:48:34: OP_INLINED 394
addr_33579: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33580: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_33581: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_33582: ;;// porth.porth:4040:5: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_33583: ;;// porth.porth:4040:12: OP_INLINED 0
addr_33584: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33585: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_33586: ;;// porth.porth:4040:17: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_33587: ;;// porth.porth:4040:32: OP_INLINED 36
addr_33588: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33589: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33590: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33591: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33592: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33593: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33594: ;;// porth.porth:4040:37: OP_INLINED 16
addr_33595: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33596: ;;// porth.porth:4040:42: OP_CALL 10541
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_10541
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_33597: ;;// porth.porth:4040:58: OP_INLINED 676
addr_33598: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_33599: ;;// std/std.porth:50:37: OP_INLINED 662
addr_33600: ;;// std/std.porth:48:34: OP_INLINED 394
addr_33601: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33602: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_33603: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_33604: ;;// porth.porth:4041:5: OP_PUSH_STR 927
    mov rax, 2
    push rax
    lea rax, [str_927]
    push rax
addr_33605: ;;// porth.porth:4041:58: OP_INLINED 676
addr_33606: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_33607: ;;// std/std.porth:50:37: OP_INLINED 662
addr_33608: ;;// std/std.porth:48:34: OP_INLINED 394
addr_33609: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33610: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_33611: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_33612: ;;// porth.porth:4043:5: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_33613: ;;// porth.porth:4043:12: OP_INLINED 0
addr_33614: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33615: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_33616: ;;// porth.porth:4043:17: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_33617: ;;// porth.porth:4043:31: OP_INLINED 36
addr_33618: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33619: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33620: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33621: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33622: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33623: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33624: ;;// porth.porth:4043:58: OP_INLINED 5367
addr_33625: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_33626: ;;// porth.porth:32:35: OP_INLINED 5195
addr_33627: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_33628: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_33629: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_33630: ;;// porth.porth:24:23: OP_INLINED 36
addr_33631: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33632: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33633: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33634: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33635: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33636: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33637: ;;// porth.porth:24:28: OP_INLINED 753
addr_33638: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_33639: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_33640: ;;// std/std.porth:65:7: OP_INLINED 704
addr_33641: ;;// std/std.porth:58:38: OP_INLINED 684
addr_33642: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_33643: ;;// std/std.porth:56:57: OP_INLINED 36
addr_33644: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33645: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33646: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33647: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33648: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33649: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33650: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33651: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_33652: ;;// std/std.porth:66:7: OP_INLINED 716
addr_33653: ;;// std/std.porth:59:37: OP_INLINED 694
addr_33654: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_33655: ;;// std/std.porth:57:55: OP_INLINED 36
addr_33656: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33657: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33658: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33659: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33660: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33661: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33662: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33663: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_33664: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_33665: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_33666: ;;// porth.porth:24:36: OP_INLINED 662
addr_33667: ;;// std/std.porth:48:34: OP_INLINED 394
addr_33668: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33669: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_33670: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_33671: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_33672: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_33673: ;;// porth.porth:25:36: OP_INLINED 662
addr_33674: ;;// std/std.porth:48:34: OP_INLINED 394
addr_33675: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33676: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_33677: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_33678: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_33679: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_33680: ;;// porth.porth:26:17: OP_INLINED 36
addr_33681: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33682: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33683: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33684: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33685: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33686: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33687: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33688: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_33689: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_33690: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_33691: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_33692: ;;// porth.porth:27:36: OP_INLINED 662
addr_33693: ;;// std/std.porth:48:34: OP_INLINED 394
addr_33694: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33695: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_33696: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_33697: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_33698: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_33699: ;;// porth.porth:28:17: OP_INLINED 36
addr_33700: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33701: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33702: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33703: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33704: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33705: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33706: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33707: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_33708: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_33709: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_33710: ;;// porth.porth:4044:5: OP_PUSH_STR 928
    mov rax, 17
    push rax
    lea rax, [str_928]
    push rax
addr_33711: ;;// porth.porth:4044:58: OP_INLINED 676
addr_33712: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_33713: ;;// std/std.porth:50:37: OP_INLINED 662
addr_33714: ;;// std/std.porth:48:34: OP_INLINED 394
addr_33715: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33716: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_33717: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_33718: ;;// porth.porth:4045:5: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_33719: ;;// porth.porth:4045:16: OP_INLINED 16
addr_33720: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33721: ;;// porth.porth:4045:58: OP_INLINED 2119
addr_33722: ;;// std/std.porth:410:26: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_33723: ;;// std/std.porth:410:33: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_33724: ;;// porth.porth:4046:5: OP_PUSH_STR 929
    mov rax, 19
    push rax
    lea rax, [str_929]
    push rax
addr_33725: ;;// porth.porth:4046:58: OP_INLINED 676
addr_33726: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_33727: ;;// std/std.porth:50:37: OP_INLINED 662
addr_33728: ;;// std/std.porth:48:34: OP_INLINED 394
addr_33729: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33730: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_33731: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_33732: ;;// porth.porth:4048:5: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_33733: ;;// porth.porth:4048:14: OP_INLINED 0
addr_33734: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33735: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_33736: ;;// porth.porth:4048:19: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_33737: ;;// porth.porth:4048:33: OP_INLINED 36
addr_33738: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33739: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33740: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33741: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33742: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33743: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33744: ;;// porth.porth:4048:58: OP_INLINED 5367
addr_33745: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_33746: ;;// porth.porth:32:35: OP_INLINED 5195
addr_33747: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_33748: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_33749: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_33750: ;;// porth.porth:24:23: OP_INLINED 36
addr_33751: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33752: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33753: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33754: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33755: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33756: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33757: ;;// porth.porth:24:28: OP_INLINED 753
addr_33758: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_33759: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_33760: ;;// std/std.porth:65:7: OP_INLINED 704
addr_33761: ;;// std/std.porth:58:38: OP_INLINED 684
addr_33762: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_33763: ;;// std/std.porth:56:57: OP_INLINED 36
addr_33764: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33765: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33766: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33767: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33768: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33769: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33770: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33771: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_33772: ;;// std/std.porth:66:7: OP_INLINED 716
addr_33773: ;;// std/std.porth:59:37: OP_INLINED 694
addr_33774: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_33775: ;;// std/std.porth:57:55: OP_INLINED 36
addr_33776: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33777: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33778: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33779: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33780: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33781: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33782: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33783: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_33784: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_33785: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_33786: ;;// porth.porth:24:36: OP_INLINED 662
addr_33787: ;;// std/std.porth:48:34: OP_INLINED 394
addr_33788: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33789: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_33790: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_33791: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_33792: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_33793: ;;// porth.porth:25:36: OP_INLINED 662
addr_33794: ;;// std/std.porth:48:34: OP_INLINED 394
addr_33795: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33796: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_33797: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_33798: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_33799: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_33800: ;;// porth.porth:26:17: OP_INLINED 36
addr_33801: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33802: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33803: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33804: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33805: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33806: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33807: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33808: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_33809: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_33810: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_33811: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_33812: ;;// porth.porth:27:36: OP_INLINED 662
addr_33813: ;;// std/std.porth:48:34: OP_INLINED 394
addr_33814: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33815: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_33816: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_33817: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_33818: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_33819: ;;// porth.porth:28:17: OP_INLINED 36
addr_33820: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33821: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33822: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33823: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33824: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33825: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33826: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33827: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_33828: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_33829: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_33830: ;;// porth.porth:4049:5: OP_PUSH_STR 930
    mov rax, 40
    push rax
    lea rax, [str_930]
    push rax
addr_33831: ;;// porth.porth:4049:58: OP_INLINED 676
addr_33832: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_33833: ;;// std/std.porth:50:37: OP_INLINED 662
addr_33834: ;;// std/std.porth:48:34: OP_INLINED 394
addr_33835: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33836: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_33837: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_33838: ;;// porth.porth:4051:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33839: ;;// porth.porth:4051:7: OP_INLINED 418
addr_33840: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_33841: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_33842: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_33843: ;;// porth.porth:4052:3: OP_END_IF 0
addr_33844: ;;// porth.porth:4053:1: OP_RET 32
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 32
    ret
addr_33845: ;;// porth.porth:4055:6: OP_PREP_PROC 48
    sub rsp, 48
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_33846: ;;// porth.porth:4063:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_33847: ;;// porth.porth:4063:9: OP_INLINED 30
addr_33848: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_33849: ;;// porth.porth:4065:3: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_33850: ;;// porth.porth:4065:9: OP_INLINED 27
addr_33851: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_33852: ;;// porth.porth:4067:3: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_33853: ;;// porth.porth:4067:9: OP_INLINED 27
addr_33854: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_33855: ;;// porth.porth:4069:3: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_33856: ;;// porth.porth:4069:21: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_33857: ;;// porth.porth:4069:31: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_33858: ;;// porth.porth:4069:35: OP_INLINED 27
addr_33859: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_33860: ;;// porth.porth:4071:3: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_33861: ;;// porth.porth:4071:21: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_33862: ;;// porth.porth:4071:23: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_33863: ;;// porth.porth:4071:27: OP_CALL 2169
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2169
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_33864: ;;// porth.porth:4071:34: OP_INTRINSIC drop
    pop rax
addr_33865: ;;// porth.porth:4073:3: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_33866: ;;// porth.porth:4073:9: OP_INLINED 0
addr_33867: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33868: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_33869: ;;// porth.porth:4073:14: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_33870: ;;// porth.porth:4073:30: OP_INLINED 36
addr_33871: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33872: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33873: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33874: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33875: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33876: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33877: ;;// porth.porth:4073:35: OP_INLINED 16
addr_33878: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33879: ;;// porth.porth:4074:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_33880: ;;// porth.porth:4074:9: OP_INLINED 16
addr_33881: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33882: ;;// porth.porth:4075:3: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_33883: ;;// porth.porth:4075:5: OP_IF 206
    pop rax
    test rax, rax
    jz addr_34089
addr_33884: ;;// porth.porth:4076:5: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_33885: ;;// porth.porth:4076:11: OP_INLINED 0
addr_33886: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33887: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_33888: ;;// porth.porth:4076:16: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_33889: ;;// porth.porth:4076:26: OP_INLINED 36
addr_33890: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33891: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33892: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33893: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33894: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33895: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33896: ;;// porth.porth:4076:52: OP_INLINED 5367
addr_33897: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_33898: ;;// porth.porth:32:35: OP_INLINED 5195
addr_33899: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_33900: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_33901: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_33902: ;;// porth.porth:24:23: OP_INLINED 36
addr_33903: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33904: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33905: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33906: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33907: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33908: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33909: ;;// porth.porth:24:28: OP_INLINED 753
addr_33910: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_33911: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_33912: ;;// std/std.porth:65:7: OP_INLINED 704
addr_33913: ;;// std/std.porth:58:38: OP_INLINED 684
addr_33914: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_33915: ;;// std/std.porth:56:57: OP_INLINED 36
addr_33916: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33917: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33918: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33919: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33920: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33921: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33922: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33923: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_33924: ;;// std/std.porth:66:7: OP_INLINED 716
addr_33925: ;;// std/std.porth:59:37: OP_INLINED 694
addr_33926: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_33927: ;;// std/std.porth:57:55: OP_INLINED 36
addr_33928: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33929: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33930: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33931: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33932: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33933: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33934: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33935: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_33936: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_33937: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_33938: ;;// porth.porth:24:36: OP_INLINED 662
addr_33939: ;;// std/std.porth:48:34: OP_INLINED 394
addr_33940: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33941: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_33942: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_33943: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_33944: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_33945: ;;// porth.porth:25:36: OP_INLINED 662
addr_33946: ;;// std/std.porth:48:34: OP_INLINED 394
addr_33947: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33948: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_33949: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_33950: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_33951: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_33952: ;;// porth.porth:26:17: OP_INLINED 36
addr_33953: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33954: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33955: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33956: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33957: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33958: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33959: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33960: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_33961: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_33962: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_33963: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_33964: ;;// porth.porth:27:36: OP_INLINED 662
addr_33965: ;;// std/std.porth:48:34: OP_INLINED 394
addr_33966: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33967: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_33968: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_33969: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_33970: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_33971: ;;// porth.porth:28:17: OP_INLINED 36
addr_33972: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33973: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33974: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33975: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_33976: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_33977: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_33978: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33979: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_33980: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_33981: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_33982: ;;// porth.porth:4077:5: OP_PUSH_STR 931
    mov rax, 44
    push rax
    lea rax, [str_931]
    push rax
addr_33983: ;;// porth.porth:4077:52: OP_INLINED 676
addr_33984: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_33985: ;;// std/std.porth:50:37: OP_INLINED 662
addr_33986: ;;// std/std.porth:48:34: OP_INLINED 394
addr_33987: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_33988: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_33989: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_33990: ;;// porth.porth:4078:5: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_33991: ;;// porth.porth:4078:11: OP_INLINED 0
addr_33992: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_33993: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_33994: ;;// porth.porth:4078:16: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_33995: ;;// porth.porth:4078:27: OP_INLINED 36
addr_33996: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33997: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_33998: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_33999: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34000: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34001: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34002: ;;// porth.porth:4078:32: OP_INLINED 753
addr_34003: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_34004: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_34005: ;;// std/std.porth:65:7: OP_INLINED 704
addr_34006: ;;// std/std.porth:58:38: OP_INLINED 684
addr_34007: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_34008: ;;// std/std.porth:56:57: OP_INLINED 36
addr_34009: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34010: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34011: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34012: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34013: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34014: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34015: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34016: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_34017: ;;// std/std.porth:66:7: OP_INLINED 716
addr_34018: ;;// std/std.porth:59:37: OP_INLINED 694
addr_34019: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_34020: ;;// std/std.porth:57:55: OP_INLINED 36
addr_34021: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34022: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34023: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34024: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34025: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34026: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34027: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34028: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_34029: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_34030: ;;// porth.porth:4078:52: OP_INLINED 676
addr_34031: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_34032: ;;// std/std.porth:50:37: OP_INLINED 662
addr_34033: ;;// std/std.porth:48:34: OP_INLINED 394
addr_34034: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34035: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_34036: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_34037: ;;// porth.porth:4079:5: OP_PUSH_STR 932
    mov rax, 12
    push rax
    lea rax, [str_932]
    push rax
addr_34038: ;;// porth.porth:4079:52: OP_INLINED 676
addr_34039: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_34040: ;;// std/std.porth:50:37: OP_INLINED 662
addr_34041: ;;// std/std.porth:48:34: OP_INLINED 394
addr_34042: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34043: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_34044: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_34045: ;;// porth.porth:4080:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_34046: ;;// porth.porth:4080:11: OP_INLINED 16
addr_34047: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34048: ;;// porth.porth:4080:52: OP_INLINED 2119
addr_34049: ;;// std/std.porth:410:26: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_34050: ;;// std/std.porth:410:33: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_34051: ;;// porth.porth:4081:5: OP_PUSH_STR 933
    mov rax, 9
    push rax
    lea rax, [str_933]
    push rax
addr_34052: ;;// porth.porth:4081:52: OP_INLINED 676
addr_34053: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_34054: ;;// std/std.porth:50:37: OP_INLINED 662
addr_34055: ;;// std/std.porth:48:34: OP_INLINED 394
addr_34056: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34057: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_34058: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_34059: ;;// porth.porth:4082:5: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_34060: ;;// porth.porth:4082:11: OP_INLINED 0
addr_34061: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34062: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_34063: ;;// porth.porth:4082:16: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_34064: ;;// porth.porth:4082:32: OP_INLINED 36
addr_34065: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34066: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34067: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34068: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34069: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34070: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34071: ;;// porth.porth:4082:37: OP_INLINED 16
addr_34072: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34073: ;;// porth.porth:4082:52: OP_INLINED 2119
addr_34074: ;;// std/std.porth:410:26: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_34075: ;;// std/std.porth:410:33: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_34076: ;;// porth.porth:4083:5: OP_PUSH_STR 934
    mov rax, 2
    push rax
    lea rax, [str_934]
    push rax
addr_34077: ;;// porth.porth:4083:52: OP_INLINED 676
addr_34078: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_34079: ;;// std/std.porth:50:37: OP_INLINED 662
addr_34080: ;;// std/std.porth:48:34: OP_INLINED 394
addr_34081: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34082: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_34083: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_34084: ;;// porth.porth:4084:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34085: ;;// porth.porth:4084:7: OP_INLINED 418
addr_34086: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_34087: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_34088: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_34089: ;;// porth.porth:4085:3: OP_END_IF 0
addr_34090: ;;// porth.porth:4087:3: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_34091: ;;// porth.porth:4087:9: OP_INLINED 0
addr_34092: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34093: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_34094: ;;// porth.porth:4087:14: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_34095: ;;// porth.porth:4087:28: OP_INLINED 36
addr_34096: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34097: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34098: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34099: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34100: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34101: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34102: ;;// porth.porth:4087:33: OP_INLINED 0
addr_34103: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34104: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_34105: ;;// porth.porth:4088:5: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_34106: ;;// porth.porth:4089:7: OP_WHILE 45
addr_34107: ;;// porth.porth:4089:13: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_34108: ;;// porth.porth:4089:17: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_34109: ;;// porth.porth:4089:23: OP_INLINED 16
addr_34110: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34111: ;;// porth.porth:4089:28: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_34112: ;;// porth.porth:4089:30: OP_DO 39
    pop rax
    test rax, rax
    jz addr_34151
addr_34113: ;;// porth.porth:4090:9: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34114: ;;// porth.porth:4091:11: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_34115: ;;// porth.porth:4091:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_34116: ;;// porth.porth:4091:30: OP_INLINED 36
addr_34117: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34118: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34119: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34120: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34121: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34122: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34123: ;;// porth.porth:4091:35: OP_INLINED 16
addr_34124: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34125: ;;// porth.porth:4092:11: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_34126: ;;// porth.porth:4092:16: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_34127: ;;// porth.porth:4092:30: OP_INLINED 36
addr_34128: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34129: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34130: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34131: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34132: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34133: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34134: ;;// porth.porth:4093:11: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_34135: ;;// porth.porth:4094:11: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_34136: ;;// porth.porth:4096:11: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_34137: ;;// porth.porth:4096:26: OP_INLINED 36
addr_34138: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34139: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34140: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34141: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34142: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34143: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34144: ;;// porth.porth:4096:31: OP_INLINED 0
addr_34145: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34146: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_34147: ;;// porth.porth:4097:9: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34148: ;;// porth.porth:4098:9: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34149: ;;// porth.porth:4098:11: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34150: ;;// porth.porth:4099:7: OP_END_WHILE 44
    jmp addr_34106
addr_34151: ;;// porth.porth:4100:5: OP_INTRINSIC drop
    pop rax
addr_34152: ;;// porth.porth:4101:3: OP_INTRINSIC drop
    pop rax
addr_34153: ;;// porth.porth:4103:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_34154: ;;// porth.porth:4103:5: OP_WHILE 50
addr_34155: ;;// porth.porth:4103:11: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_34156: ;;// porth.porth:4103:15: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_34157: ;;// porth.porth:4103:21: OP_INLINED 16
addr_34158: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34159: ;;// porth.porth:4103:26: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_34160: ;;// porth.porth:4103:28: OP_DO 44
    pop rax
    test rax, rax
    jz addr_34204
addr_34161: ;;// porth.porth:4104:5: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_34162: ;;// porth.porth:4104:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_34163: ;;// porth.porth:4104:23: OP_INLINED 36
addr_34164: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34165: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34166: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34167: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34168: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34169: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34170: ;;// porth.porth:4104:28: OP_INLINED 0
addr_34171: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34172: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_34173: ;;// porth.porth:4105:7: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_34174: ;;// porth.porth:4105:12: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_34175: ;;// porth.porth:4105:27: OP_INLINED 36
addr_34176: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34177: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34178: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34179: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34180: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34181: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34182: ;;// porth.porth:4105:32: OP_INLINED 16
addr_34183: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34184: ;;// porth.porth:4106:7: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_34185: ;;// porth.porth:4106:12: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_34186: ;;// porth.porth:4106:26: OP_INLINED 36
addr_34187: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34188: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34189: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34190: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34191: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34192: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34193: ;;// porth.porth:4107:7: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_34194: ;;// porth.porth:4107:11: OP_INLINED 0
addr_34195: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34196: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_34197: ;;// porth.porth:4108:7: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_34198: ;;// porth.porth:4109:5: OP_INTRINSIC drop
    pop rax
addr_34199: ;;// porth.porth:4110:5: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_34200: ;;// porth.porth:4110:9: OP_CALL 13682
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13682
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_34201: ;;// porth.porth:4111:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34202: ;;// porth.porth:4111:7: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34203: ;;// porth.porth:4112:3: OP_END_WHILE 49
    jmp addr_34154
addr_34204: ;;// porth.porth:4112:7: OP_INTRINSIC drop
    pop rax
addr_34205: ;;// porth.porth:4114:3: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_34206: ;;// porth.porth:4114:7: OP_INLINED 0
addr_34207: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34208: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_34209: ;;// porth.porth:4115:1: OP_RET 48
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 48
    ret
addr_34210: ;;// porth.porth:4121:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_34211: ;;// porth.porth:4122:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_34212: ;;// porth.porth:4123:5: OP_PUSH_GLOBAL_MEM 15421640
    lea rax, [mem+15421640]
    push rax
addr_34213: ;;// porth.porth:4123:25: OP_INLINED 16
addr_34214: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34215: ;;// porth.porth:4128:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_34216: ;;// porth.porth:4128:22: OP_INLINED 657
addr_34217: ;;// std/std.porth:45:43: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_34218: ;;// std/std.porth:45:47: OP_CALL 564
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_564
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_34219: ;;// std/std.porth:45:55: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34220: ;;// porth.porth:4128:34: OP_CALL 3739
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_3739
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_34221: ;;// porth.porth:4128:42: OP_CALL 25750
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_25750
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_34222: ;;// porth.porth:4130:7: OP_CALL 3443
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_3443
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_34223: ;;// porth.porth:4131:9: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_34224: ;;// porth.porth:4131:24: OP_CALL 25605
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_25605
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_34225: ;;// porth.porth:4131:38: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_34226: ;;// porth.porth:4131:43: OP_INLINED 52
addr_34227: ;;// std/core.porth:46:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34228: ;;// std/core.porth:46:8: OP_INTRINSIC cast(int)
addr_34229: ;;// std/core.porth:47:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34230: ;;// std/core.porth:47:8: OP_INTRINSIC cast(int)
addr_34231: ;;// std/core.porth:48:3: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_34232: ;;// porth.porth:4131:49: OP_IF 22
    pop rax
    test rax, rax
    jz addr_34254
addr_34233: ;;// porth.porth:4132:11: OP_PUSH_STR 935
    mov rax, 19
    push rax
    lea rax, [str_935]
    push rax
addr_34234: ;;// porth.porth:4132:16: OP_INLINED 676
addr_34235: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_34236: ;;// std/std.porth:50:37: OP_INLINED 662
addr_34237: ;;// std/std.porth:48:34: OP_INLINED 394
addr_34238: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34239: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_34240: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_34241: ;;// porth.porth:4132:22: OP_PUSH_STR 936
    mov rax, 74
    push rax
    lea rax, [str_936]
    push rax
addr_34242: ;;// porth.porth:4132:100: OP_INLINED 676
addr_34243: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_34244: ;;// std/std.porth:50:37: OP_INLINED 662
addr_34245: ;;// std/std.porth:48:34: OP_INLINED 394
addr_34246: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34247: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_34248: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_34249: ;;// porth.porth:4133:11: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34250: ;;// porth.porth:4133:13: OP_INLINED 418
addr_34251: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_34252: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_34253: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_34254: ;;// porth.porth:4134:9: OP_END_IF 0
addr_34255: ;;// porth.porth:4137:9: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_34256: ;;// porth.porth:4137:24: OP_CALL 25673
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_25673
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_34257: ;;// porth.porth:4138:11: OP_PUSH_GLOBAL_MEM 15310976
    lea rax, [mem+15310976]
    push rax
addr_34258: ;;// porth.porth:4138:18: OP_INLINED 12
addr_34259: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34260: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_34261: ;;// porth.porth:4138:24: OP_INLINED 131
addr_34262: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_34263: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34264: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34265: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_34266: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_34267: ;;// porth.porth:4138:29: OP_IF 29
    pop rax
    test rax, rax
    jz addr_34296
addr_34268: ;;// porth.porth:4139:13: OP_PUSH_STR 937
    mov rax, 17
    push rax
    lea rax, [str_937]
    push rax
addr_34269: ;;// porth.porth:4139:40: OP_INLINED 668
addr_34270: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34271: ;;// std/std.porth:49:36: OP_INLINED 662
addr_34272: ;;// std/std.porth:48:34: OP_INLINED 394
addr_34273: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34274: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_34275: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_34276: ;;// porth.porth:4140:13: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_34277: ;;// porth.porth:4140:28: OP_INLINED 657
addr_34278: ;;// std/std.porth:45:43: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_34279: ;;// std/std.porth:45:47: OP_CALL 564
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_564
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_34280: ;;// std/std.porth:45:55: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34281: ;;// porth.porth:4140:40: OP_INLINED 668
addr_34282: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34283: ;;// std/std.porth:49:36: OP_INLINED 662
addr_34284: ;;// std/std.porth:48:34: OP_INLINED 394
addr_34285: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34286: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_34287: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_34288: ;;// porth.porth:4141:13: OP_PUSH_STR 938
    mov rax, 1
    push rax
    lea rax, [str_938]
    push rax
addr_34289: ;;// porth.porth:4141:40: OP_INLINED 668
addr_34290: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34291: ;;// std/std.porth:49:36: OP_INLINED 662
addr_34292: ;;// std/std.porth:48:34: OP_INLINED 394
addr_34293: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34294: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_34295: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_34296: ;;// porth.porth:4142:11: OP_END_IF 0
addr_34297: ;;// porth.porth:4143:11: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_34298: ;;// porth.porth:4143:26: OP_CALL 26046
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_26046
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_34299: ;;// porth.porth:4144:9: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_34300: ;;// porth.porth:4144:14: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34301: ;;// porth.porth:4144:19: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_34302: ;;// porth.porth:4144:35: OP_INLINED 36
addr_34303: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34304: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34305: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34306: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34307: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34308: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34309: ;;// porth.porth:4144:40: OP_INLINED 24
addr_34310: ;;// std/core.porth:26:31: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_34311: ;;// porth.porth:4145:7: OP_PUSH_STR 939
    mov rax, 18
    push rax
    lea rax, [str_939]
    push rax
addr_34312: ;;// porth.porth:4145:28: OP_PUSH_GLOBAL_MEM 15310976
    lea rax, [mem+15310976]
    push rax
addr_34313: ;;// porth.porth:4145:35: OP_INLINED 12
addr_34314: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34315: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_34316: ;;// porth.porth:4145:41: OP_CALL 3467
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_3467
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_34317: ;;// porth.porth:4146:5: OP_PUSH_GLOBAL_MEM 15405256
    lea rax, [mem+15405256]
    push rax
addr_34318: ;;// porth.porth:4146:19: OP_INLINED 30
addr_34319: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_34320: ;;// porth.porth:4147:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_34321: ;;// porth.porth:4148:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_34322: ;;// porth.porth:4153:6: OP_PREP_PROC 48
    sub rsp, 48
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_34323: ;;// porth.porth:4160:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_34324: ;;// porth.porth:4160:7: OP_INLINED 27
addr_34325: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_34326: ;;// porth.porth:4162:3: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_34327: ;;// porth.porth:4162:9: OP_INLINED 30
addr_34328: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_34329: ;;// porth.porth:4164:3: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_34330: ;;// porth.porth:4164:9: OP_INLINED 27
addr_34331: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_34332: ;;// porth.porth:4166:3: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_34333: ;;// porth.porth:4166:9: OP_INLINED 27
addr_34334: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_34335: ;;// porth.porth:4168:3: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_34336: ;;// porth.porth:4168:21: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_34337: ;;// porth.porth:4168:23: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_34338: ;;// porth.porth:4168:27: OP_CALL 2169
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2169
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_34339: ;;// porth.porth:4168:34: OP_INTRINSIC drop
    pop rax
addr_34340: ;;// porth.porth:4170:3: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_34341: ;;// porth.porth:4170:9: OP_INLINED 0
addr_34342: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34343: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_34344: ;;// porth.porth:4170:14: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_34345: ;;// porth.porth:4170:30: OP_INLINED 36
addr_34346: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34347: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34348: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34349: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34350: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34351: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34352: ;;// porth.porth:4170:35: OP_INLINED 16
addr_34353: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34354: ;;// porth.porth:4171:3: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_34355: ;;// porth.porth:4171:9: OP_INLINED 16
addr_34356: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34357: ;;// porth.porth:4172:3: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_34358: ;;// porth.porth:4172:5: OP_IF 206
    pop rax
    test rax, rax
    jz addr_34564
addr_34359: ;;// porth.porth:4173:5: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_34360: ;;// porth.porth:4173:11: OP_INLINED 0
addr_34361: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34362: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_34363: ;;// porth.porth:4173:16: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_34364: ;;// porth.porth:4173:26: OP_INLINED 36
addr_34365: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34366: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34367: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34368: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34369: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34370: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34371: ;;// porth.porth:4173:52: OP_INLINED 5367
addr_34372: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_34373: ;;// porth.porth:32:35: OP_INLINED 5195
addr_34374: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_34375: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_34376: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_34377: ;;// porth.porth:24:23: OP_INLINED 36
addr_34378: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34379: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34380: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34381: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34382: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34383: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34384: ;;// porth.porth:24:28: OP_INLINED 753
addr_34385: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_34386: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_34387: ;;// std/std.porth:65:7: OP_INLINED 704
addr_34388: ;;// std/std.porth:58:38: OP_INLINED 684
addr_34389: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_34390: ;;// std/std.porth:56:57: OP_INLINED 36
addr_34391: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34392: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34393: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34394: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34395: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34396: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34397: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34398: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_34399: ;;// std/std.porth:66:7: OP_INLINED 716
addr_34400: ;;// std/std.porth:59:37: OP_INLINED 694
addr_34401: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_34402: ;;// std/std.porth:57:55: OP_INLINED 36
addr_34403: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34404: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34405: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34406: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34407: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34408: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34409: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34410: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_34411: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_34412: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_34413: ;;// porth.porth:24:36: OP_INLINED 662
addr_34414: ;;// std/std.porth:48:34: OP_INLINED 394
addr_34415: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34416: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_34417: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_34418: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_34419: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_34420: ;;// porth.porth:25:36: OP_INLINED 662
addr_34421: ;;// std/std.porth:48:34: OP_INLINED 394
addr_34422: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34423: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_34424: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_34425: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_34426: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_34427: ;;// porth.porth:26:17: OP_INLINED 36
addr_34428: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34429: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34430: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34431: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34432: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34433: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34434: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34435: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_34436: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_34437: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_34438: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_34439: ;;// porth.porth:27:36: OP_INLINED 662
addr_34440: ;;// std/std.porth:48:34: OP_INLINED 394
addr_34441: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34442: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_34443: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_34444: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_34445: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_34446: ;;// porth.porth:28:17: OP_INLINED 36
addr_34447: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34448: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34449: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34450: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34451: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34452: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34453: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34454: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_34455: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_34456: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_34457: ;;// porth.porth:4174:5: OP_PUSH_STR 940
    mov rax, 44
    push rax
    lea rax, [str_940]
    push rax
addr_34458: ;;// porth.porth:4174:52: OP_INLINED 676
addr_34459: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_34460: ;;// std/std.porth:50:37: OP_INLINED 662
addr_34461: ;;// std/std.porth:48:34: OP_INLINED 394
addr_34462: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34463: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_34464: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_34465: ;;// porth.porth:4175:5: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_34466: ;;// porth.porth:4175:11: OP_INLINED 0
addr_34467: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34468: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_34469: ;;// porth.porth:4175:16: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_34470: ;;// porth.porth:4175:27: OP_INLINED 36
addr_34471: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34472: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34473: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34474: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34475: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34476: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34477: ;;// porth.porth:4175:32: OP_INLINED 753
addr_34478: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_34479: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_34480: ;;// std/std.porth:65:7: OP_INLINED 704
addr_34481: ;;// std/std.porth:58:38: OP_INLINED 684
addr_34482: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_34483: ;;// std/std.porth:56:57: OP_INLINED 36
addr_34484: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34485: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34486: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34487: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34488: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34489: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34490: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34491: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_34492: ;;// std/std.porth:66:7: OP_INLINED 716
addr_34493: ;;// std/std.porth:59:37: OP_INLINED 694
addr_34494: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_34495: ;;// std/std.porth:57:55: OP_INLINED 36
addr_34496: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34497: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34498: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34499: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34500: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34501: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34502: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34503: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_34504: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_34505: ;;// porth.porth:4175:52: OP_INLINED 676
addr_34506: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_34507: ;;// std/std.porth:50:37: OP_INLINED 662
addr_34508: ;;// std/std.porth:48:34: OP_INLINED 394
addr_34509: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34510: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_34511: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_34512: ;;// porth.porth:4176:5: OP_PUSH_STR 941
    mov rax, 12
    push rax
    lea rax, [str_941]
    push rax
addr_34513: ;;// porth.porth:4176:52: OP_INLINED 676
addr_34514: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_34515: ;;// std/std.porth:50:37: OP_INLINED 662
addr_34516: ;;// std/std.porth:48:34: OP_INLINED 394
addr_34517: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34518: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_34519: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_34520: ;;// porth.porth:4177:5: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_34521: ;;// porth.porth:4177:11: OP_INLINED 16
addr_34522: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34523: ;;// porth.porth:4177:52: OP_INLINED 2119
addr_34524: ;;// std/std.porth:410:26: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_34525: ;;// std/std.porth:410:33: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_34526: ;;// porth.porth:4178:5: OP_PUSH_STR 942
    mov rax, 9
    push rax
    lea rax, [str_942]
    push rax
addr_34527: ;;// porth.porth:4178:52: OP_INLINED 676
addr_34528: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_34529: ;;// std/std.porth:50:37: OP_INLINED 662
addr_34530: ;;// std/std.porth:48:34: OP_INLINED 394
addr_34531: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34532: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_34533: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_34534: ;;// porth.porth:4179:5: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_34535: ;;// porth.porth:4179:11: OP_INLINED 0
addr_34536: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34537: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_34538: ;;// porth.porth:4179:16: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_34539: ;;// porth.porth:4179:32: OP_INLINED 36
addr_34540: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34541: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34542: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34543: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34544: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34545: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34546: ;;// porth.porth:4179:37: OP_INLINED 16
addr_34547: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34548: ;;// porth.porth:4179:52: OP_INLINED 2119
addr_34549: ;;// std/std.porth:410:26: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_34550: ;;// std/std.porth:410:33: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_34551: ;;// porth.porth:4180:5: OP_PUSH_STR 943
    mov rax, 2
    push rax
    lea rax, [str_943]
    push rax
addr_34552: ;;// porth.porth:4180:52: OP_INLINED 676
addr_34553: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_34554: ;;// std/std.porth:50:37: OP_INLINED 662
addr_34555: ;;// std/std.porth:48:34: OP_INLINED 394
addr_34556: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34557: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_34558: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_34559: ;;// porth.porth:4181:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34560: ;;// porth.porth:4181:7: OP_INLINED 418
addr_34561: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_34562: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_34563: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_34564: ;;// porth.porth:4182:3: OP_END_IF 0
addr_34565: ;;// porth.porth:4184:3: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_34566: ;;// porth.porth:4184:9: OP_INLINED 0
addr_34567: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34568: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_34569: ;;// porth.porth:4184:14: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_34570: ;;// porth.porth:4184:28: OP_INLINED 36
addr_34571: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34572: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34573: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34574: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34575: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34576: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34577: ;;// porth.porth:4184:33: OP_INLINED 0
addr_34578: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34579: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_34580: ;;// porth.porth:4185:5: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_34581: ;;// porth.porth:4186:7: OP_WHILE 45
addr_34582: ;;// porth.porth:4186:13: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_34583: ;;// porth.porth:4186:17: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_34584: ;;// porth.porth:4186:23: OP_INLINED 16
addr_34585: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34586: ;;// porth.porth:4186:28: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_34587: ;;// porth.porth:4186:30: OP_DO 39
    pop rax
    test rax, rax
    jz addr_34626
addr_34588: ;;// porth.porth:4187:9: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34589: ;;// porth.porth:4188:11: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_34590: ;;// porth.porth:4188:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_34591: ;;// porth.porth:4188:30: OP_INLINED 36
addr_34592: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34593: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34594: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34595: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34596: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34597: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34598: ;;// porth.porth:4188:35: OP_INLINED 16
addr_34599: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34600: ;;// porth.porth:4189:11: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_34601: ;;// porth.porth:4189:16: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_34602: ;;// porth.porth:4189:30: OP_INLINED 36
addr_34603: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34604: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34605: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34606: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34607: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34608: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34609: ;;// porth.porth:4190:11: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_34610: ;;// porth.porth:4191:11: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_34611: ;;// porth.porth:4193:11: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_34612: ;;// porth.porth:4193:26: OP_INLINED 36
addr_34613: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34614: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34615: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34616: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34617: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34618: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34619: ;;// porth.porth:4193:31: OP_INLINED 0
addr_34620: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34621: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_34622: ;;// porth.porth:4194:9: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34623: ;;// porth.porth:4195:9: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34624: ;;// porth.porth:4195:11: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34625: ;;// porth.porth:4196:7: OP_END_WHILE 44
    jmp addr_34581
addr_34626: ;;// porth.porth:4197:5: OP_INTRINSIC drop
    pop rax
addr_34627: ;;// porth.porth:4198:3: OP_INTRINSIC drop
    pop rax
addr_34628: ;;// porth.porth:4200:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_34629: ;;// porth.porth:4200:5: OP_WHILE 50
addr_34630: ;;// porth.porth:4200:11: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_34631: ;;// porth.porth:4200:15: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_34632: ;;// porth.porth:4200:21: OP_INLINED 16
addr_34633: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34634: ;;// porth.porth:4200:26: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_34635: ;;// porth.porth:4200:28: OP_DO 44
    pop rax
    test rax, rax
    jz addr_34679
addr_34636: ;;// porth.porth:4201:5: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_34637: ;;// porth.porth:4201:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_34638: ;;// porth.porth:4201:23: OP_INLINED 36
addr_34639: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34640: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34641: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34642: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34643: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34644: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34645: ;;// porth.porth:4201:28: OP_INLINED 0
addr_34646: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34647: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_34648: ;;// porth.porth:4202:7: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_34649: ;;// porth.porth:4202:12: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_34650: ;;// porth.porth:4202:27: OP_INLINED 36
addr_34651: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34652: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34653: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34654: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34655: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34656: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34657: ;;// porth.porth:4202:32: OP_INLINED 16
addr_34658: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34659: ;;// porth.porth:4203:7: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_34660: ;;// porth.porth:4203:12: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_34661: ;;// porth.porth:4203:26: OP_INLINED 36
addr_34662: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34663: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34664: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34665: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34666: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34667: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34668: ;;// porth.porth:4204:7: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_34669: ;;// porth.porth:4204:11: OP_INLINED 0
addr_34670: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34671: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_34672: ;;// porth.porth:4205:7: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_34673: ;;// porth.porth:4206:5: OP_INTRINSIC drop
    pop rax
addr_34674: ;;// porth.porth:4207:5: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_34675: ;;// porth.porth:4207:9: OP_CALL 13682
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13682
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_34676: ;;// porth.porth:4208:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34677: ;;// porth.porth:4208:7: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34678: ;;// porth.porth:4209:3: OP_END_WHILE 49
    jmp addr_34629
addr_34679: ;;// porth.porth:4209:7: OP_INTRINSIC drop
    pop rax
addr_34680: ;;// porth.porth:4210:1: OP_RET 48
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 48
    ret
addr_34681: ;;// porth.porth:4212:6: OP_PREP_PROC 48
    sub rsp, 48
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_34682: ;;// porth.porth:4219:3: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_34683: ;;// porth.porth:4219:21: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34684: ;;// porth.porth:4219:26: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_34685: ;;// porth.porth:4219:31: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_34686: ;;// porth.porth:4219:38: OP_INTRINSIC drop
    pop rax
addr_34687: ;;// porth.porth:4221:3: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_34688: ;;// porth.porth:4221:21: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34689: ;;// porth.porth:4221:26: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_34690: ;;// porth.porth:4221:30: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_34691: ;;// porth.porth:4221:37: OP_INTRINSIC drop
    pop rax
addr_34692: ;;// porth.porth:4223:3: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_34693: ;;// porth.porth:4223:9: OP_INLINED 27
addr_34694: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_34695: ;;// porth.porth:4225:3: OP_PUSH_LOCAL_MEM 40
    mov rax, [ret_stack_rsp]
    add rax, 40
    push rax
addr_34696: ;;// porth.porth:4225:9: OP_INLINED 27
addr_34697: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_34698: ;;// porth.porth:4227:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_34699: ;;// porth.porth:4228:5: OP_WHILE 65
addr_34700: ;;// porth.porth:4229:7: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_34701: ;;// porth.porth:4229:13: OP_INLINED 0
addr_34702: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34703: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_34704: ;;// porth.porth:4229:18: OP_CALL 13741
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13741
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_34705: ;;// porth.porth:4230:7: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_34706: ;;// porth.porth:4230:18: OP_CALL 13741
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13741
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_34707: ;;// porth.porth:4231:7: OP_INLINED 146
addr_34708: ;;// std/core.porth:100:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34709: ;;// std/core.porth:100:8: OP_INTRINSIC cast(int)
addr_34710: ;;// std/core.porth:101:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34711: ;;// std/core.porth:101:8: OP_INTRINSIC cast(int)
addr_34712: ;;// std/core.porth:102:3: OP_INTRINSIC or
    pop rax
    pop rbx
    or rbx, rax
    push rbx
addr_34713: ;;// std/core.porth:103:3: OP_INTRINSIC cast(bool)
addr_34714: ;;// porth.porth:4232:7: OP_INLINED 131
addr_34715: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_34716: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34717: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34718: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_34719: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_34720: ;;// porth.porth:4233:5: OP_DO 44
    pop rax
    test rax, rax
    jz addr_34764
addr_34721: ;;// porth.porth:4234:7: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_34722: ;;// porth.porth:4235:7: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_34723: ;;// porth.porth:4235:13: OP_INLINED 0
addr_34724: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34725: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_34726: ;;// porth.porth:4235:18: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_34727: ;;// porth.porth:4235:32: OP_INLINED 36
addr_34728: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34729: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34730: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34731: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34732: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34733: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34734: ;;// porth.porth:4235:37: OP_INLINED 0
addr_34735: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34736: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_34737: ;;// porth.porth:4236:7: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_34738: ;;// porth.porth:4236:18: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_34739: ;;// porth.porth:4236:32: OP_INLINED 36
addr_34740: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34741: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34742: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34743: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34744: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34745: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34746: ;;// porth.porth:4236:37: OP_INLINED 0
addr_34747: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34748: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_34749: ;;// porth.porth:4237:7: OP_PUSH_LOCAL_MEM 40
    mov rax, [ret_stack_rsp]
    add rax, 40
    push rax
addr_34750: ;;// porth.porth:4237:13: OP_INLINED 0
addr_34751: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34752: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_34753: ;;// porth.porth:4238:7: OP_CALL 33334
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_33334
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_34754: ;;// porth.porth:4240:7: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_34755: ;;// porth.porth:4240:13: OP_INLINED 0
addr_34756: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34757: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_34758: ;;// porth.porth:4240:18: OP_CALL 13682
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13682
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_34759: ;;// porth.porth:4241:7: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_34760: ;;// porth.porth:4241:18: OP_CALL 13682
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13682
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_34761: ;;// porth.porth:4242:7: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34762: ;;// porth.porth:4242:9: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34763: ;;// porth.porth:4243:5: OP_END_WHILE 64
    jmp addr_34699
addr_34764: ;;// porth.porth:4245:5: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_34765: ;;// porth.porth:4245:9: OP_CALL 13741
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13741
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_34766: ;;// porth.porth:4245:27: OP_INLINED 131
addr_34767: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_34768: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34769: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34770: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_34771: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_34772: ;;// porth.porth:4245:32: OP_IF 219
    pop rax
    test rax, rax
    jz addr_34991
addr_34773: ;;// porth.porth:4246:7: OP_PUSH_LOCAL_MEM 40
    mov rax, [ret_stack_rsp]
    add rax, 40
    push rax
addr_34774: ;;// porth.porth:4246:13: OP_INLINED 0
addr_34775: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34776: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_34777: ;;// porth.porth:4246:18: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_34778: ;;// porth.porth:4246:28: OP_INLINED 36
addr_34779: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34780: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34781: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34782: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34783: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34784: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34785: ;;// porth.porth:4246:55: OP_INLINED 5367
addr_34786: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_34787: ;;// porth.porth:32:35: OP_INLINED 5195
addr_34788: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_34789: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_34790: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_34791: ;;// porth.porth:24:23: OP_INLINED 36
addr_34792: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34793: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34794: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34795: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34796: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34797: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34798: ;;// porth.porth:24:28: OP_INLINED 753
addr_34799: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_34800: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_34801: ;;// std/std.porth:65:7: OP_INLINED 704
addr_34802: ;;// std/std.porth:58:38: OP_INLINED 684
addr_34803: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_34804: ;;// std/std.porth:56:57: OP_INLINED 36
addr_34805: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34806: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34807: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34808: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34809: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34810: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34811: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34812: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_34813: ;;// std/std.porth:66:7: OP_INLINED 716
addr_34814: ;;// std/std.porth:59:37: OP_INLINED 694
addr_34815: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_34816: ;;// std/std.porth:57:55: OP_INLINED 36
addr_34817: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34818: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34819: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34820: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34821: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34822: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34823: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34824: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_34825: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_34826: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_34827: ;;// porth.porth:24:36: OP_INLINED 662
addr_34828: ;;// std/std.porth:48:34: OP_INLINED 394
addr_34829: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34830: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_34831: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_34832: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_34833: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_34834: ;;// porth.porth:25:36: OP_INLINED 662
addr_34835: ;;// std/std.porth:48:34: OP_INLINED 394
addr_34836: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34837: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_34838: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_34839: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_34840: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_34841: ;;// porth.porth:26:17: OP_INLINED 36
addr_34842: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34843: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34844: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34845: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34846: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34847: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34848: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34849: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_34850: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_34851: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_34852: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_34853: ;;// porth.porth:27:36: OP_INLINED 662
addr_34854: ;;// std/std.porth:48:34: OP_INLINED 394
addr_34855: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34856: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_34857: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_34858: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_34859: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_34860: ;;// porth.porth:28:17: OP_INLINED 36
addr_34861: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34862: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34863: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34864: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34865: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34866: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34867: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34868: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_34869: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_34870: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_34871: ;;// porth.porth:4247:7: OP_PUSH_STR 944
    mov rax, 44
    push rax
    lea rax, [str_944]
    push rax
addr_34872: ;;// porth.porth:4247:55: OP_INLINED 676
addr_34873: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_34874: ;;// std/std.porth:50:37: OP_INLINED 662
addr_34875: ;;// std/std.porth:48:34: OP_INLINED 394
addr_34876: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34877: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_34878: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_34879: ;;// porth.porth:4248:7: OP_PUSH_LOCAL_MEM 40
    mov rax, [ret_stack_rsp]
    add rax, 40
    push rax
addr_34880: ;;// porth.porth:4248:13: OP_INLINED 0
addr_34881: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34882: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_34883: ;;// porth.porth:4248:18: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_34884: ;;// porth.porth:4248:29: OP_INLINED 36
addr_34885: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34886: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34887: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34888: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34889: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34890: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34891: ;;// porth.porth:4248:34: OP_INLINED 753
addr_34892: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_34893: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_34894: ;;// std/std.porth:65:7: OP_INLINED 704
addr_34895: ;;// std/std.porth:58:38: OP_INLINED 684
addr_34896: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_34897: ;;// std/std.porth:56:57: OP_INLINED 36
addr_34898: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34899: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34900: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34901: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34902: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34903: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34904: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34905: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_34906: ;;// std/std.porth:66:7: OP_INLINED 716
addr_34907: ;;// std/std.porth:59:37: OP_INLINED 694
addr_34908: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_34909: ;;// std/std.porth:57:55: OP_INLINED 36
addr_34910: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34911: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34912: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34913: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34914: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34915: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34916: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34917: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_34918: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_34919: ;;// porth.porth:4248:55: OP_INLINED 676
addr_34920: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_34921: ;;// std/std.porth:50:37: OP_INLINED 662
addr_34922: ;;// std/std.porth:48:34: OP_INLINED 394
addr_34923: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34924: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_34925: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_34926: ;;// porth.porth:4249:7: OP_PUSH_STR 945
    mov rax, 12
    push rax
    lea rax, [str_945]
    push rax
addr_34927: ;;// porth.porth:4249:55: OP_INLINED 676
addr_34928: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_34929: ;;// std/std.porth:50:37: OP_INLINED 662
addr_34930: ;;// std/std.porth:48:34: OP_INLINED 394
addr_34931: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34932: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_34933: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_34934: ;;// porth.porth:4250:7: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_34935: ;;// porth.porth:4250:11: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_34936: ;;// porth.porth:4250:15: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_34937: ;;// porth.porth:4250:31: OP_INLINED 36
addr_34938: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34939: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34940: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34941: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_34942: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34943: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_34944: ;;// porth.porth:4250:36: OP_INLINED 16
addr_34945: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_34946: ;;// porth.porth:4250:41: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_34947: ;;// porth.porth:4250:55: OP_INLINED 2119
addr_34948: ;;// std/std.porth:410:26: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_34949: ;;// std/std.porth:410:33: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_34950: ;;// porth.porth:4251:7: OP_PUSH_STR 946
    mov rax, 9
    push rax
    lea rax, [str_946]
    push rax
addr_34951: ;;// porth.porth:4251:55: OP_INLINED 676
addr_34952: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_34953: ;;// std/std.porth:50:37: OP_INLINED 662
addr_34954: ;;// std/std.porth:48:34: OP_INLINED 394
addr_34955: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34956: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_34957: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_34958: ;;// porth.porth:4252:7: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_34959: ;;// porth.porth:4252:55: OP_INLINED 2119
addr_34960: ;;// std/std.porth:410:26: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_34961: ;;// std/std.porth:410:33: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_34962: ;;// porth.porth:4253:7: OP_PUSH_STR 947
    mov rax, 2
    push rax
    lea rax, [str_947]
    push rax
addr_34963: ;;// porth.porth:4253:55: OP_INLINED 676
addr_34964: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_34965: ;;// std/std.porth:50:37: OP_INLINED 662
addr_34966: ;;// std/std.porth:48:34: OP_INLINED 394
addr_34967: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34968: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_34969: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_34970: ;;// porth.porth:4254:7: OP_PUSH_STR 948
    mov rax, 18
    push rax
    lea rax, [str_948]
    push rax
addr_34971: ;;// porth.porth:4254:12: OP_INLINED 676
addr_34972: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_34973: ;;// std/std.porth:50:37: OP_INLINED 662
addr_34974: ;;// std/std.porth:48:34: OP_INLINED 394
addr_34975: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34976: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_34977: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_34978: ;;// porth.porth:4254:18: OP_PUSH_STR 949
    mov rax, 60
    push rax
    lea rax, [str_949]
    push rax
addr_34979: ;;// porth.porth:4254:82: OP_INLINED 676
addr_34980: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_34981: ;;// std/std.porth:50:37: OP_INLINED 662
addr_34982: ;;// std/std.porth:48:34: OP_INLINED 394
addr_34983: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34984: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_34985: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_34986: ;;// porth.porth:4255:7: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_34987: ;;// porth.porth:4255:9: OP_INLINED 418
addr_34988: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_34989: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_34990: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_34991: ;;// porth.porth:4256:5: OP_END_IF 0
addr_34992: ;;// porth.porth:4257:3: OP_INTRINSIC drop
    pop rax
addr_34993: ;;// porth.porth:4259:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_34994: ;;// porth.porth:4259:8: OP_CALL 13934
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13934
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_34995: ;;// porth.porth:4259:27: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_34996: ;;// porth.porth:4259:41: OP_INLINED 36
addr_34997: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_34998: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_34999: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35000: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35001: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35002: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35003: ;;// porth.porth:4259:46: OP_INLINED 0
addr_35004: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_35005: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_35006: ;;// porth.porth:4260:3: OP_WHILE 50
addr_35007: ;;// porth.porth:4260:9: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_35008: ;;// porth.porth:4260:13: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_35009: ;;// porth.porth:4260:18: OP_INLINED 52
addr_35010: ;;// std/core.porth:46:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35011: ;;// std/core.porth:46:8: OP_INTRINSIC cast(int)
addr_35012: ;;// std/core.porth:47:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35013: ;;// std/core.porth:47:8: OP_INTRINSIC cast(int)
addr_35014: ;;// std/core.porth:48:3: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_35015: ;;// porth.porth:4260:24: OP_DO 41
    pop rax
    test rax, rax
    jz addr_35056
addr_35016: ;;// porth.porth:4261:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_35017: ;;// porth.porth:4261:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35018: ;;// porth.porth:4261:24: OP_INLINED 36
addr_35019: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35020: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35021: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35022: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35023: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35024: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35025: ;;// porth.porth:4261:29: OP_INLINED 16
addr_35026: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_35027: ;;// porth.porth:4262:5: OP_PUSH_LOCAL_MEM 40
    mov rax, [ret_stack_rsp]
    add rax, 40
    push rax
addr_35028: ;;// porth.porth:4262:11: OP_INLINED 0
addr_35029: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_35030: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_35031: ;;// porth.porth:4262:16: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_35032: ;;// porth.porth:4262:26: OP_INLINED 36
addr_35033: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35034: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35035: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35036: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35037: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35038: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35039: ;;// porth.porth:4263:5: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_35040: ;;// porth.porth:4263:11: OP_INLINED 0
addr_35041: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_35042: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_35043: ;;// porth.porth:4264:5: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35044: ;;// porth.porth:4266:5: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_35045: ;;// porth.porth:4266:20: OP_INLINED 36
addr_35046: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35047: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35048: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35049: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35050: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35051: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35052: ;;// porth.porth:4266:25: OP_INLINED 0
addr_35053: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_35054: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_35055: ;;// porth.porth:4267:3: OP_END_WHILE 49
    jmp addr_35006
addr_35056: ;;// porth.porth:4267:7: OP_INTRINSIC drop
    pop rax
addr_35057: ;;// porth.porth:4268:1: OP_RET 48
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 48
    ret
addr_35058: ;;// porth.porth:4270:6: OP_PREP_PROC 32
    sub rsp, 32
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35059: ;;// porth.porth:4275:3: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_35060: ;;// porth.porth:4275:21: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35061: ;;// porth.porth:4275:23: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35062: ;;// porth.porth:4275:27: OP_CALL 2169
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2169
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35063: ;;// porth.porth:4275:34: OP_INTRINSIC drop
    pop rax
addr_35064: ;;// porth.porth:4276:3: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_35065: ;;// porth.porth:4276:8: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_35066: ;;// porth.porth:4276:13: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_35067: ;;// porth.porth:4276:15: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35068: ;;// porth.porth:4276:19: OP_CALL 34322
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_34322
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35069: ;;// porth.porth:4279:3: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_35070: ;;// porth.porth:4279:21: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35071: ;;// porth.porth:4279:25: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_35072: ;;// porth.porth:4279:30: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35073: ;;// porth.porth:4279:37: OP_INTRINSIC drop
    pop rax
addr_35074: ;;// porth.porth:4280:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35075: ;;// porth.porth:4280:7: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35076: ;;// porth.porth:4280:21: OP_INLINED 36
addr_35077: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35078: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35079: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35080: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35081: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35082: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35083: ;;// porth.porth:4280:26: OP_INLINED 0
addr_35084: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_35085: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_35086: ;;// porth.porth:4280:31: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_35087: ;;// porth.porth:4280:46: OP_INLINED 36
addr_35088: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35089: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35090: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35091: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35092: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35093: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35094: ;;// porth.porth:4280:51: OP_INLINED 0
addr_35095: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_35096: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_35097: ;;// porth.porth:4281:3: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_35098: ;;// porth.porth:4282:3: OP_CALL 13657
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13657
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35099: ;;// porth.porth:4284:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35100: ;;// porth.porth:4284:7: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_35101: ;;// porth.porth:4284:12: OP_CALL 34681
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_34681
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35102: ;;// porth.porth:4285:1: OP_RET 32
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 32
    ret
addr_35103: ;;// porth.porth:4287:6: OP_PREP_PROC 32
    sub rsp, 32
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35104: ;;// porth.porth:4292:3: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_35105: ;;// porth.porth:4292:21: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35106: ;;// porth.porth:4292:23: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35107: ;;// porth.porth:4292:27: OP_CALL 2169
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2169
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35108: ;;// porth.porth:4292:34: OP_INTRINSIC drop
    pop rax
addr_35109: ;;// porth.porth:4293:3: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_35110: ;;// porth.porth:4293:8: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_35111: ;;// porth.porth:4293:13: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_35112: ;;// porth.porth:4293:15: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35113: ;;// porth.porth:4293:19: OP_CALL 34322
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_34322
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35114: ;;// porth.porth:4296:3: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_35115: ;;// porth.porth:4296:21: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35116: ;;// porth.porth:4296:23: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_35117: ;;// porth.porth:4296:28: OP_CALL 2169
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2169
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35118: ;;// porth.porth:4296:35: OP_INTRINSIC drop
    pop rax
addr_35119: ;;// porth.porth:4298:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35120: ;;// porth.porth:4298:7: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35121: ;;// porth.porth:4298:21: OP_INLINED 36
addr_35122: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35123: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35124: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35125: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35126: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35127: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35128: ;;// porth.porth:4298:26: OP_INLINED 0
addr_35129: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_35130: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_35131: ;;// porth.porth:4299:3: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_35132: ;;// porth.porth:4299:18: OP_INLINED 36
addr_35133: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35134: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35135: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35136: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35137: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35138: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35139: ;;// porth.porth:4299:23: OP_INLINED 0
addr_35140: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_35141: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_35142: ;;// porth.porth:4300:3: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_35143: ;;// porth.porth:4300:8: OP_CALL 13657
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13657
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35144: ;;// porth.porth:4302:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35145: ;;// porth.porth:4302:7: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35146: ;;// porth.porth:4302:21: OP_INLINED 36
addr_35147: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35148: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35149: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35150: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35151: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35152: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35153: ;;// porth.porth:4302:26: OP_INLINED 0
addr_35154: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_35155: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_35156: ;;// porth.porth:4303:3: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_35157: ;;// porth.porth:4303:8: OP_CALL 13657
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13657
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35158: ;;// porth.porth:4305:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35159: ;;// porth.porth:4305:7: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35160: ;;// porth.porth:4305:21: OP_INLINED 36
addr_35161: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35162: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35163: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35164: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35165: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35166: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35167: ;;// porth.porth:4305:26: OP_INLINED 0
addr_35168: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_35169: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_35170: ;;// porth.porth:4306:3: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_35171: ;;// porth.porth:4306:18: OP_INLINED 36
addr_35172: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35173: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35174: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35175: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35176: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35177: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35178: ;;// porth.porth:4306:23: OP_INLINED 0
addr_35179: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_35180: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_35181: ;;// porth.porth:4307:3: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_35182: ;;// porth.porth:4307:18: OP_INLINED 36
addr_35183: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35184: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35185: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35186: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35187: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35188: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35189: ;;// porth.porth:4307:23: OP_INLINED 0
addr_35190: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_35191: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_35192: ;;// porth.porth:4308:3: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_35193: ;;// porth.porth:4308:8: OP_CALL 13657
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13657
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35194: ;;// porth.porth:4310:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35195: ;;// porth.porth:4310:7: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_35196: ;;// porth.porth:4310:12: OP_CALL 34681
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_34681
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35197: ;;// porth.porth:4311:1: OP_RET 32
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 32
    ret
addr_35198: ;;// porth.porth:4313:6: OP_PREP_PROC 32
    sub rsp, 32
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35199: ;;// porth.porth:4318:3: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_35200: ;;// porth.porth:4318:21: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35201: ;;// porth.porth:4318:23: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35202: ;;// porth.porth:4318:27: OP_CALL 2169
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2169
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35203: ;;// porth.porth:4318:34: OP_INTRINSIC drop
    pop rax
addr_35204: ;;// porth.porth:4319:3: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_35205: ;;// porth.porth:4319:8: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_35206: ;;// porth.porth:4319:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_35207: ;;// porth.porth:4319:15: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35208: ;;// porth.porth:4319:19: OP_CALL 34322
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_34322
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35209: ;;// porth.porth:4322:3: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_35210: ;;// porth.porth:4322:21: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35211: ;;// porth.porth:4322:25: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_35212: ;;// porth.porth:4322:30: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35213: ;;// porth.porth:4322:37: OP_INTRINSIC drop
    pop rax
addr_35214: ;;// porth.porth:4323:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35215: ;;// porth.porth:4323:7: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35216: ;;// porth.porth:4323:21: OP_INLINED 36
addr_35217: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35218: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35219: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35220: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35221: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35222: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35223: ;;// porth.porth:4323:26: OP_INLINED 0
addr_35224: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_35225: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_35226: ;;// porth.porth:4324:3: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_35227: ;;// porth.porth:4325:3: OP_CALL 13657
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13657
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35228: ;;// porth.porth:4327:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35229: ;;// porth.porth:4327:7: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_35230: ;;// porth.porth:4327:12: OP_CALL 34681
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_34681
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35231: ;;// porth.porth:4328:1: OP_RET 32
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 32
    ret
addr_35232: ;;// porth.porth:4330:6: OP_PREP_PROC 32
    sub rsp, 32
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35233: ;;// porth.porth:4335:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_35234: ;;// porth.porth:4337:5: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_35235: ;;// porth.porth:4337:23: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35236: ;;// porth.porth:4337:25: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_35237: ;;// porth.porth:4337:29: OP_CALL 2169
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2169
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35238: ;;// porth.porth:4337:36: OP_INTRINSIC drop
    pop rax
addr_35239: ;;// porth.porth:4338:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_35240: ;;// porth.porth:4339:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_35241: ;;// porth.porth:4339:16: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_35242: ;;// porth.porth:4339:22: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_35243: ;;// porth.porth:4339:32: OP_INLINED 36
addr_35244: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35245: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35246: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35247: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35248: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35249: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35250: ;;// porth.porth:4339:37: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_35251: ;;// porth.porth:4339:41: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35252: ;;// porth.porth:4340:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_35253: ;;// porth.porth:4340:16: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_35254: ;;// porth.porth:4340:22: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_35255: ;;// porth.porth:4340:32: OP_INLINED 36
addr_35256: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35257: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35258: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35259: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35260: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35261: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35262: ;;// porth.porth:4340:37: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_35263: ;;// porth.porth:4340:41: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35264: ;;// porth.porth:4341:5: OP_INTRINSIC drop
    pop rax
addr_35265: ;;// porth.porth:4343:5: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_35266: ;;// porth.porth:4343:23: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35267: ;;// porth.porth:4343:25: OP_PUSH_LOCAL_MEM 40
    mov rax, [ret_stack_rsp]
    add rax, 40
    push rax
addr_35268: ;;// porth.porth:4343:30: OP_CALL 2169
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2169
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35269: ;;// porth.porth:4343:37: OP_INTRINSIC drop
    pop rax
addr_35270: ;;// porth.porth:4344:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_35271: ;;// porth.porth:4345:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_35272: ;;// porth.porth:4345:16: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_35273: ;;// porth.porth:4345:22: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_35274: ;;// porth.porth:4345:32: OP_INLINED 36
addr_35275: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35276: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35277: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35278: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35279: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35280: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35281: ;;// porth.porth:4345:37: OP_PUSH_LOCAL_MEM 40
    mov rax, [ret_stack_rsp]
    add rax, 40
    push rax
addr_35282: ;;// porth.porth:4345:42: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35283: ;;// porth.porth:4346:5: OP_INTRINSIC drop
    pop rax
addr_35284: ;;// porth.porth:4347:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_35285: ;;// porth.porth:4347:11: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_35286: ;;// porth.porth:4347:17: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_35287: ;;// porth.porth:4347:21: OP_PUSH_LOCAL_MEM 40
    mov rax, [ret_stack_rsp]
    add rax, 40
    push rax
addr_35288: ;;// porth.porth:4347:26: OP_CALL 34681
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_34681
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35289: ;;// porth.porth:4348:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_35290: ;;// porth.porth:4349:1: OP_RET 32
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 32
    ret
addr_35291: ;;// porth.porth:4351:6: OP_PREP_PROC 32
    sub rsp, 32
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35292: ;;// porth.porth:4356:3: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_35293: ;;// porth.porth:4356:21: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35294: ;;// porth.porth:4356:23: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35295: ;;// porth.porth:4356:27: OP_CALL 2169
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2169
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35296: ;;// porth.porth:4356:34: OP_INTRINSIC drop
    pop rax
addr_35297: ;;// porth.porth:4357:3: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_35298: ;;// porth.porth:4358:5: OP_PUSH_INT 4
    mov rax, 4
    push rax
addr_35299: ;;// porth.porth:4358:19: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_35300: ;;// porth.porth:4358:24: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_35301: ;;// porth.porth:4358:34: OP_INLINED 36
addr_35302: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35303: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35304: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35305: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35306: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35307: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35308: ;;// porth.porth:4358:39: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35309: ;;// porth.porth:4358:43: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35310: ;;// porth.porth:4359:3: OP_INTRINSIC drop
    pop rax
addr_35311: ;;// porth.porth:4361:3: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_35312: ;;// porth.porth:4361:21: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35313: ;;// porth.porth:4361:23: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_35314: ;;// porth.porth:4361:28: OP_CALL 2169
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2169
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35315: ;;// porth.porth:4361:35: OP_INTRINSIC drop
    pop rax
addr_35316: ;;// porth.porth:4362:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35317: ;;// porth.porth:4362:7: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_35318: ;;// porth.porth:4362:12: OP_CALL 34681
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_34681
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35319: ;;// porth.porth:4363:1: OP_RET 32
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 32
    ret
addr_35320: ;;// porth.porth:4365:6: OP_PREP_PROC 32
    sub rsp, 32
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35321: ;;// porth.porth:4370:3: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_35322: ;;// porth.porth:4370:21: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35323: ;;// porth.porth:4370:23: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35324: ;;// porth.porth:4370:27: OP_CALL 2169
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2169
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35325: ;;// porth.porth:4370:34: OP_INTRINSIC drop
    pop rax
addr_35326: ;;// porth.porth:4371:3: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_35327: ;;// porth.porth:4371:8: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_35328: ;;// porth.porth:4371:13: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_35329: ;;// porth.porth:4371:15: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35330: ;;// porth.porth:4371:19: OP_CALL 34322
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_34322
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35331: ;;// porth.porth:4372:3: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_35332: ;;// porth.porth:4372:16: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35333: ;;// porth.porth:4372:20: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35334: ;;// porth.porth:4372:34: OP_INLINED 36
addr_35335: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35336: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35337: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35338: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35339: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35340: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35341: ;;// porth.porth:4372:39: OP_INLINED 0
addr_35342: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_35343: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_35344: ;;// porth.porth:4372:44: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35345: ;;// porth.porth:4372:59: OP_INLINED 36
addr_35346: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35347: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35348: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35349: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35350: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35351: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35352: ;;// porth.porth:4372:64: OP_INLINED 30
addr_35353: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_35354: ;;// porth.porth:4375:3: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_35355: ;;// porth.porth:4375:21: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35356: ;;// porth.porth:4375:23: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_35357: ;;// porth.porth:4375:28: OP_CALL 2169
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2169
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35358: ;;// porth.porth:4375:35: OP_INTRINSIC drop
    pop rax
addr_35359: ;;// porth.porth:4377:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35360: ;;// porth.porth:4377:7: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_35361: ;;// porth.porth:4377:12: OP_CALL 34681
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_34681
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35362: ;;// porth.porth:4378:1: OP_RET 32
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 32
    ret
addr_35363: ;;// porth.porth:4380:6: OP_PREP_PROC 32
    sub rsp, 32
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35364: ;;// porth.porth:4385:3: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_35365: ;;// porth.porth:4385:21: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35366: ;;// porth.porth:4385:23: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35367: ;;// porth.porth:4385:27: OP_CALL 2169
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2169
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35368: ;;// porth.porth:4385:34: OP_INTRINSIC drop
    pop rax
addr_35369: ;;// porth.porth:4386:3: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_35370: ;;// porth.porth:4387:5: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_35371: ;;// porth.porth:4387:18: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_35372: ;;// porth.porth:4387:23: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_35373: ;;// porth.porth:4387:33: OP_INLINED 36
addr_35374: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35375: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35376: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35377: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35378: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35379: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35380: ;;// porth.porth:4387:38: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35381: ;;// porth.porth:4387:42: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35382: ;;// porth.porth:4388:3: OP_INTRINSIC drop
    pop rax
addr_35383: ;;// porth.porth:4390:3: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_35384: ;;// porth.porth:4390:21: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35385: ;;// porth.porth:4390:23: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_35386: ;;// porth.porth:4390:28: OP_CALL 2169
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2169
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35387: ;;// porth.porth:4390:35: OP_INTRINSIC drop
    pop rax
addr_35388: ;;// porth.porth:4391:3: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_35389: ;;// porth.porth:4392:5: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35390: ;;// porth.porth:4392:18: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_35391: ;;// porth.porth:4392:23: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_35392: ;;// porth.porth:4392:33: OP_INLINED 36
addr_35393: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35394: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35395: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35396: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35397: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35398: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35399: ;;// porth.porth:4392:38: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_35400: ;;// porth.porth:4392:43: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35401: ;;// porth.porth:4393:3: OP_INTRINSIC drop
    pop rax
addr_35402: ;;// porth.porth:4394:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35403: ;;// porth.porth:4394:7: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_35404: ;;// porth.porth:4394:12: OP_CALL 34681
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_34681
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35405: ;;// porth.porth:4395:1: OP_RET 32
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 32
    ret
addr_35406: ;;// porth.porth:4397:6: OP_PREP_PROC 32
    sub rsp, 32
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35407: ;;// porth.porth:4402:3: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_35408: ;;// porth.porth:4402:21: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35409: ;;// porth.porth:4402:23: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35410: ;;// porth.porth:4402:27: OP_CALL 2169
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2169
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35411: ;;// porth.porth:4402:34: OP_INTRINSIC drop
    pop rax
addr_35412: ;;// porth.porth:4403:3: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_35413: ;;// porth.porth:4404:5: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35414: ;;// porth.porth:4404:18: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_35415: ;;// porth.porth:4404:23: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_35416: ;;// porth.porth:4404:33: OP_INLINED 36
addr_35417: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35418: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35419: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35420: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35421: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35422: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35423: ;;// porth.porth:4404:38: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35424: ;;// porth.porth:4404:42: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35425: ;;// porth.porth:4405:3: OP_INTRINSIC drop
    pop rax
addr_35426: ;;// porth.porth:4407:3: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_35427: ;;// porth.porth:4407:21: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35428: ;;// porth.porth:4407:23: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_35429: ;;// porth.porth:4407:28: OP_CALL 2169
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2169
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35430: ;;// porth.porth:4407:35: OP_INTRINSIC drop
    pop rax
addr_35431: ;;// porth.porth:4408:3: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_35432: ;;// porth.porth:4409:5: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35433: ;;// porth.porth:4409:18: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_35434: ;;// porth.porth:4409:23: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_35435: ;;// porth.porth:4409:33: OP_INLINED 36
addr_35436: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35437: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35438: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35439: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35440: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35441: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35442: ;;// porth.porth:4409:38: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_35443: ;;// porth.porth:4409:43: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35444: ;;// porth.porth:4410:3: OP_INTRINSIC drop
    pop rax
addr_35445: ;;// porth.porth:4411:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35446: ;;// porth.porth:4411:7: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_35447: ;;// porth.porth:4411:12: OP_CALL 34681
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_34681
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35448: ;;// porth.porth:4412:1: OP_RET 32
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 32
    ret
addr_35449: ;;// porth.porth:4414:6: OP_PREP_PROC 32
    sub rsp, 32
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35450: ;;// porth.porth:4419:3: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_35451: ;;// porth.porth:4419:21: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35452: ;;// porth.porth:4419:23: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35453: ;;// porth.porth:4419:27: OP_CALL 2169
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2169
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35454: ;;// porth.porth:4419:34: OP_INTRINSIC drop
    pop rax
addr_35455: ;;// porth.porth:4420:3: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_35456: ;;// porth.porth:4421:5: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35457: ;;// porth.porth:4421:18: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_35458: ;;// porth.porth:4421:23: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_35459: ;;// porth.porth:4421:33: OP_INLINED 36
addr_35460: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35461: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35462: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35463: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35464: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35465: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35466: ;;// porth.porth:4421:38: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35467: ;;// porth.porth:4421:42: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35468: ;;// porth.porth:4422:5: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35469: ;;// porth.porth:4422:18: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_35470: ;;// porth.porth:4422:23: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_35471: ;;// porth.porth:4422:33: OP_INLINED 36
addr_35472: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35473: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35474: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35475: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35476: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35477: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35478: ;;// porth.porth:4422:38: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35479: ;;// porth.porth:4422:42: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35480: ;;// porth.porth:4423:3: OP_INTRINSIC drop
    pop rax
addr_35481: ;;// porth.porth:4425:3: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_35482: ;;// porth.porth:4425:21: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35483: ;;// porth.porth:4425:23: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_35484: ;;// porth.porth:4425:28: OP_CALL 2169
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2169
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35485: ;;// porth.porth:4425:35: OP_INTRINSIC drop
    pop rax
addr_35486: ;;// porth.porth:4426:3: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_35487: ;;// porth.porth:4427:5: OP_PUSH_INT 4
    mov rax, 4
    push rax
addr_35488: ;;// porth.porth:4427:19: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_35489: ;;// porth.porth:4427:24: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_35490: ;;// porth.porth:4427:34: OP_INLINED 36
addr_35491: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35492: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35493: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35494: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35495: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35496: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35497: ;;// porth.porth:4427:39: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_35498: ;;// porth.porth:4427:44: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35499: ;;// porth.porth:4428:3: OP_INTRINSIC drop
    pop rax
addr_35500: ;;// porth.porth:4429:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35501: ;;// porth.porth:4429:7: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_35502: ;;// porth.porth:4429:12: OP_CALL 34681
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_34681
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35503: ;;// porth.porth:4430:1: OP_RET 32
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 32
    ret
addr_35504: ;;// porth.porth:4432:6: OP_PREP_PROC 32
    sub rsp, 32
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35505: ;;// porth.porth:4437:3: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_35506: ;;// porth.porth:4437:21: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35507: ;;// porth.porth:4437:23: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35508: ;;// porth.porth:4437:27: OP_CALL 2169
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2169
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35509: ;;// porth.porth:4437:34: OP_INTRINSIC drop
    pop rax
addr_35510: ;;// porth.porth:4438:3: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_35511: ;;// porth.porth:4439:5: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35512: ;;// porth.porth:4439:18: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_35513: ;;// porth.porth:4439:23: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_35514: ;;// porth.porth:4439:33: OP_INLINED 36
addr_35515: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35516: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35517: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35518: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35519: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35520: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35521: ;;// porth.porth:4439:38: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35522: ;;// porth.porth:4439:42: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35523: ;;// porth.porth:4440:5: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35524: ;;// porth.porth:4440:18: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_35525: ;;// porth.porth:4440:23: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_35526: ;;// porth.porth:4440:33: OP_INLINED 36
addr_35527: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35528: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35529: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35530: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35531: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35532: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35533: ;;// porth.porth:4440:38: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35534: ;;// porth.porth:4440:42: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35535: ;;// porth.porth:4441:3: OP_INTRINSIC drop
    pop rax
addr_35536: ;;// porth.porth:4443:3: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_35537: ;;// porth.porth:4443:21: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35538: ;;// porth.porth:4443:23: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_35539: ;;// porth.porth:4443:28: OP_CALL 2169
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2169
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35540: ;;// porth.porth:4443:35: OP_INTRINSIC drop
    pop rax
addr_35541: ;;// porth.porth:4444:3: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_35542: ;;// porth.porth:4445:5: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35543: ;;// porth.porth:4445:18: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_35544: ;;// porth.porth:4445:23: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_35545: ;;// porth.porth:4445:33: OP_INLINED 36
addr_35546: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35547: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35548: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35549: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35550: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35551: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35552: ;;// porth.porth:4445:38: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_35553: ;;// porth.porth:4445:43: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35554: ;;// porth.porth:4446:5: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35555: ;;// porth.porth:4446:18: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_35556: ;;// porth.porth:4446:23: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_35557: ;;// porth.porth:4446:33: OP_INLINED 36
addr_35558: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35559: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35560: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35561: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35562: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35563: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35564: ;;// porth.porth:4446:38: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_35565: ;;// porth.porth:4446:43: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35566: ;;// porth.porth:4447:3: OP_INTRINSIC drop
    pop rax
addr_35567: ;;// porth.porth:4448:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35568: ;;// porth.porth:4448:7: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_35569: ;;// porth.porth:4448:12: OP_CALL 34681
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_34681
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35570: ;;// porth.porth:4449:1: OP_RET 32
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 32
    ret
addr_35571: ;;// porth.porth:4451:6: OP_PREP_PROC 48
    sub rsp, 48
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35572: ;;// porth.porth:4456:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35573: ;;// porth.porth:4456:9: OP_INLINED 27
addr_35574: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_35575: ;;// porth.porth:4458:3: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_35576: ;;// porth.porth:4458:6: OP_INLINED 27
addr_35577: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_35578: ;;// porth.porth:4463:3: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_35579: ;;// porth.porth:4463:6: OP_INLINED 0
addr_35580: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_35581: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_35582: ;;// porth.porth:4463:11: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_35583: ;;// porth.porth:4463:22: OP_INLINED 36
addr_35584: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35585: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35586: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35587: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35588: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35589: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35590: ;;// porth.porth:4463:27: OP_INLINED 16
addr_35591: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_35592: ;;// porth.porth:4463:32: OP_PUSH_INT 120
    mov rax, 120
    push rax
addr_35593: ;;// porth.porth:4463:45: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_35594: ;;// porth.porth:4463:47: OP_PUSH_GLOBAL_MEM 15073368
    lea rax, [mem+15073368]
    push rax
addr_35595: ;;// porth.porth:4463:53: OP_INLINED 73
addr_35596: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_35597: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35598: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_35599: ;;// porth.porth:4464:5: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_35600: ;;// porth.porth:4464:23: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_35601: ;;// porth.porth:4464:28: OP_PUSH_INT 72
    mov rax, 72
    push rax
addr_35602: ;;// porth.porth:4464:38: OP_INLINED 36
addr_35603: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35604: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35605: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35606: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35607: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35608: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35609: ;;// porth.porth:4464:43: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_35610: ;;// porth.porth:4464:48: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35611: ;;// porth.porth:4464:55: OP_INTRINSIC drop
    pop rax
addr_35612: ;;// porth.porth:4465:5: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_35613: ;;// porth.porth:4465:23: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_35614: ;;// porth.porth:4465:28: OP_PUSH_INT 88
    mov rax, 88
    push rax
addr_35615: ;;// porth.porth:4465:38: OP_INLINED 36
addr_35616: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35617: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35618: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35619: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35620: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35621: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35622: ;;// porth.porth:4465:43: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_35623: ;;// porth.porth:4465:48: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35624: ;;// porth.porth:4465:55: OP_INTRINSIC drop
    pop rax
addr_35625: ;;// porth.porth:4466:3: OP_INTRINSIC drop
    pop rax
addr_35626: ;;// porth.porth:4468:3: OP_PUSH_INT 5
    mov rax, 5
    push rax
addr_35627: ;;// porth.porth:4469:3: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_35628: ;;// porth.porth:4469:6: OP_INLINED 0
addr_35629: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_35630: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_35631: ;;// porth.porth:4469:11: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_35632: ;;// porth.porth:4469:20: OP_INLINED 36
addr_35633: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35634: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35635: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35636: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35637: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35638: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35639: ;;// porth.porth:4469:25: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_35640: ;;// porth.porth:4469:35: OP_INLINED 36
addr_35641: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35642: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35643: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35644: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35645: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35646: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35647: ;;// porth.porth:4470:3: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_35648: ;;// porth.porth:4471:3: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35649: ;;// porth.porth:4473:3: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_35650: ;;// porth.porth:4473:6: OP_INLINED 0
addr_35651: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_35652: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_35653: ;;// porth.porth:4473:11: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_35654: ;;// porth.porth:4473:20: OP_INLINED 36
addr_35655: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35656: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35657: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35658: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35659: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35660: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35661: ;;// porth.porth:4474:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35662: ;;// porth.porth:4474:9: OP_INLINED 0
addr_35663: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_35664: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_35665: ;;// porth.porth:4475:3: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_35666: ;;// porth.porth:4476:3: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_35667: ;;// porth.porth:4477:3: OP_CALL 34681
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_34681
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35668: ;;// porth.porth:4478:1: OP_RET 48
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 48
    ret
addr_35669: ;;// porth.porth:4487:6: OP_PREP_PROC 8
    sub rsp, 8
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35670: ;;// porth.porth:4498:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35671: ;;// porth.porth:4498:11: OP_INLINED 27
addr_35672: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_35673: ;;// porth.porth:4500:3: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_35674: ;;// porth.porth:4500:21: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35675: ;;// porth.porth:4500:26: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35676: ;;// porth.porth:4500:34: OP_INLINED 0
addr_35677: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_35678: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_35679: ;;// porth.porth:4500:39: OP_PUSH_INT 48
    mov rax, 48
    push rax
addr_35680: ;;// porth.porth:4500:55: OP_INLINED 36
addr_35681: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35682: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35683: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35684: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35685: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35686: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35687: ;;// porth.porth:4500:60: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35688: ;;// porth.porth:4500:67: OP_INTRINSIC drop
    pop rax
addr_35689: ;;// porth.porth:4501:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35690: ;;// porth.porth:4501:11: OP_INLINED 0
addr_35691: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_35692: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_35693: ;;// porth.porth:4501:16: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_35694: ;;// porth.porth:4501:43: OP_INLINED 36
addr_35695: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35696: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35697: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35698: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35699: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35700: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35701: ;;// porth.porth:4501:48: OP_INLINED 30
addr_35702: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_35703: ;;// porth.porth:4502:3: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_35704: ;;// porth.porth:4502:21: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35705: ;;// porth.porth:4502:26: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35706: ;;// porth.porth:4502:34: OP_INLINED 0
addr_35707: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_35708: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_35709: ;;// porth.porth:4502:39: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_35710: ;;// porth.porth:4502:56: OP_INLINED 36
addr_35711: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35712: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35713: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35714: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35715: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35716: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35717: ;;// porth.porth:4502:61: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35718: ;;// porth.porth:4502:68: OP_INTRINSIC drop
    pop rax
addr_35719: ;;// porth.porth:4503:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35720: ;;// porth.porth:4503:11: OP_INLINED 0
addr_35721: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_35722: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_35723: ;;// porth.porth:4503:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_35724: ;;// porth.porth:4503:31: OP_INLINED 36
addr_35725: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35726: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35727: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35728: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35729: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35730: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35731: ;;// porth.porth:4503:36: OP_INLINED 30
addr_35732: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_35733: ;;// porth.porth:4504:3: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_35734: ;;// porth.porth:4504:21: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35735: ;;// porth.porth:4504:26: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35736: ;;// porth.porth:4504:34: OP_INLINED 0
addr_35737: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_35738: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_35739: ;;// porth.porth:4504:39: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35740: ;;// porth.porth:4504:57: OP_INLINED 36
addr_35741: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35742: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35743: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35744: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35745: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35746: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35747: ;;// porth.porth:4504:62: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35748: ;;// porth.porth:4504:69: OP_INTRINSIC drop
    pop rax
addr_35749: ;;// porth.porth:4506:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35750: ;;// porth.porth:4506:11: OP_INLINED 0
addr_35751: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_35752: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_35753: ;;// porth.porth:4507:1: OP_RET 8
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 8
    ret
addr_35754: ;;// porth.porth:4509:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35755: ;;// porth.porth:4514:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_35756: ;;// porth.porth:4515:5: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_35757: ;;// porth.porth:4515:13: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35758: ;;// porth.porth:4515:31: OP_INLINED 36
addr_35759: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35760: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35761: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35762: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35763: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35764: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35765: ;;// porth.porth:4515:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_35766: ;;// porth.porth:4515:52: OP_INLINED 36
addr_35767: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35768: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35769: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35770: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35771: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35772: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35773: ;;// porth.porth:4515:57: OP_INLINED 16
addr_35774: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_35775: ;;// porth.porth:4516:5: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_35776: ;;// porth.porth:4517:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_35777: ;;// porth.porth:4517:18: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_35778: ;;// porth.porth:4517:29: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_35779: ;;// porth.porth:4517:31: OP_IF 147
    pop rax
    test rax, rax
    jz addr_35926
addr_35780: ;;// porth.porth:4518:9: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_35781: ;;// porth.porth:4518:15: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_35782: ;;// porth.porth:4518:25: OP_INLINED 36
addr_35783: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35784: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35785: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35786: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35787: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35788: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35789: ;;// porth.porth:4518:30: OP_INLINED 5367
addr_35790: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_35791: ;;// porth.porth:32:35: OP_INLINED 5195
addr_35792: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_35793: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_35794: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35795: ;;// porth.porth:24:23: OP_INLINED 36
addr_35796: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35797: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35798: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35799: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35800: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35801: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35802: ;;// porth.porth:24:28: OP_INLINED 753
addr_35803: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_35804: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_35805: ;;// std/std.porth:65:7: OP_INLINED 704
addr_35806: ;;// std/std.porth:58:38: OP_INLINED 684
addr_35807: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35808: ;;// std/std.porth:56:57: OP_INLINED 36
addr_35809: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35810: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35811: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35812: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35813: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35814: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35815: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_35816: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_35817: ;;// std/std.porth:66:7: OP_INLINED 716
addr_35818: ;;// std/std.porth:59:37: OP_INLINED 694
addr_35819: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_35820: ;;// std/std.porth:57:55: OP_INLINED 36
addr_35821: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35822: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35823: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35824: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35825: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35826: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35827: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_35828: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_35829: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_35830: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_35831: ;;// porth.porth:24:36: OP_INLINED 662
addr_35832: ;;// std/std.porth:48:34: OP_INLINED 394
addr_35833: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_35834: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_35835: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_35836: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_35837: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_35838: ;;// porth.porth:25:36: OP_INLINED 662
addr_35839: ;;// std/std.porth:48:34: OP_INLINED 394
addr_35840: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_35841: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_35842: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_35843: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_35844: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_35845: ;;// porth.porth:26:17: OP_INLINED 36
addr_35846: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35847: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35848: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35849: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35850: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35851: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35852: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_35853: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_35854: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35855: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_35856: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_35857: ;;// porth.porth:27:36: OP_INLINED 662
addr_35858: ;;// std/std.porth:48:34: OP_INLINED 394
addr_35859: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_35860: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_35861: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_35862: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_35863: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_35864: ;;// porth.porth:28:17: OP_INLINED 36
addr_35865: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35866: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35867: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35868: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35869: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35870: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35871: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_35872: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_35873: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35874: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_35875: ;;// porth.porth:4519:9: OP_PUSH_STR 950
    mov rax, 68
    push rax
    lea rax, [str_950]
    push rax
addr_35876: ;;// porth.porth:4519:80: OP_INLINED 676
addr_35877: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_35878: ;;// std/std.porth:50:37: OP_INLINED 662
addr_35879: ;;// std/std.porth:48:34: OP_INLINED 394
addr_35880: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_35881: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_35882: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_35883: ;;// porth.porth:4520:9: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_35884: ;;// porth.porth:4520:20: OP_INLINED 2119
addr_35885: ;;// std/std.porth:410:26: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_35886: ;;// std/std.porth:410:33: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35887: ;;// porth.porth:4521:9: OP_PUSH_STR 951
    mov rax, 9
    push rax
    lea rax, [str_951]
    push rax
addr_35888: ;;// porth.porth:4521:21: OP_INLINED 676
addr_35889: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_35890: ;;// std/std.porth:50:37: OP_INLINED 662
addr_35891: ;;// std/std.porth:48:34: OP_INLINED 394
addr_35892: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_35893: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_35894: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_35895: ;;// porth.porth:4522:9: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_35896: ;;// porth.porth:4522:20: OP_INLINED 2119
addr_35897: ;;// std/std.porth:410:26: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_35898: ;;// std/std.porth:410:33: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35899: ;;// porth.porth:4523:9: OP_PUSH_STR 952
    mov rax, 27
    push rax
    lea rax, [str_952]
    push rax
addr_35900: ;;// porth.porth:4523:40: OP_INLINED 676
addr_35901: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_35902: ;;// std/std.porth:50:37: OP_INLINED 662
addr_35903: ;;// std/std.porth:48:34: OP_INLINED 394
addr_35904: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_35905: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_35906: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_35907: ;;// porth.porth:4524:9: OP_PUSH_BIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov rbx, [rax]
    push rbx
addr_35908: ;;// porth.porth:4524:17: OP_INLINED 0
addr_35909: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_35910: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_35911: ;;// porth.porth:4524:22: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35912: ;;// porth.porth:4524:40: OP_INLINED 36
addr_35913: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35914: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35915: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35916: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35917: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35918: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35919: ;;// porth.porth:4524:45: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_35920: ;;// porth.porth:4524:52: OP_CALL 13761
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13761
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35921: ;;// porth.porth:4525:9: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_35922: ;;// porth.porth:4525:11: OP_INLINED 418
addr_35923: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_35924: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_35925: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_35926: ;;// porth.porth:4526:7: OP_END_IF 0
addr_35927: ;;// porth.porth:4527:5: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_35928: ;;// porth.porth:4529:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_35929: ;;// porth.porth:4530:5: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_35930: ;;// porth.porth:4530:13: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35931: ;;// porth.porth:4530:31: OP_INLINED 36
addr_35932: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35933: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35934: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35935: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35936: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35937: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35938: ;;// porth.porth:4530:36: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35939: ;;// porth.porth:4530:50: OP_INLINED 36
addr_35940: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35941: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35942: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35943: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35944: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35945: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35946: ;;// porth.porth:4530:55: OP_INLINED 0
addr_35947: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_35948: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_35949: ;;// porth.porth:4531:5: OP_WHILE 34
addr_35950: ;;// porth.porth:4531:11: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_35951: ;;// porth.porth:4531:16: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_35952: ;;// porth.porth:4531:18: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_35953: ;;// porth.porth:4531:20: OP_DO 30
    pop rax
    test rax, rax
    jz addr_35983
addr_35954: ;;// porth.porth:4532:7: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_35955: ;;// porth.porth:4533:9: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_35956: ;;// porth.porth:4534:9: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_35957: ;;// porth.porth:4534:17: OP_PUSH_INT 48
    mov rax, 48
    push rax
addr_35958: ;;// porth.porth:4534:33: OP_INLINED 36
addr_35959: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35960: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35961: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35962: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35963: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35964: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35965: ;;// porth.porth:4535:9: OP_CALL 13657
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13657
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35966: ;;// porth.porth:4537:9: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_35967: ;;// porth.porth:4537:20: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_35968: ;;// porth.porth:4537:22: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_35969: ;;// porth.porth:4538:9: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_35970: ;;// porth.porth:4538:13: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_35971: ;;// porth.porth:4538:28: OP_INLINED 36
addr_35972: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35973: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_35974: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35975: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_35976: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_35977: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_35978: ;;// porth.porth:4538:33: OP_INLINED 0
addr_35979: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_35980: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_35981: ;;// porth.porth:4539:7: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_35982: ;;// porth.porth:4540:5: OP_END_WHILE 33
    jmp addr_35949
addr_35983: ;;// porth.porth:4541:5: OP_INTRINSIC drop
    pop rax
addr_35984: ;;// porth.porth:4542:5: OP_INTRINSIC drop
    pop rax
addr_35985: ;;// porth.porth:4543:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_35986: ;;// porth.porth:4544:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_35987: ;;// porth.porth:4546:6: OP_PREP_PROC 88
    sub rsp, 88
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35988: ;;// porth.porth:4552:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_35989: ;;// porth.porth:4552:11: OP_INLINED 27
addr_35990: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_35991: ;;// porth.porth:4555:3: OP_PUSH_INT 72
    mov rax, 72
    push rax
addr_35992: ;;// porth.porth:4555:17: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_35993: ;;// porth.porth:4555:22: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_35994: ;;// porth.porth:4555:28: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_35995: ;;// porth.porth:4555:35: OP_INTRINSIC drop
    pop rax
addr_35996: ;;// porth.porth:4558:3: OP_PUSH_LOCAL_MEM 80
    mov rax, [ret_stack_rsp]
    add rax, 80
    push rax
addr_35997: ;;// porth.porth:4558:14: OP_INLINED 30
addr_35998: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_35999: ;;// porth.porth:4560:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_36000: ;;// porth.porth:4560:11: OP_INLINED 0
addr_36001: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36002: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_36003: ;;// porth.porth:4560:16: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_36004: ;;// porth.porth:4560:34: OP_INLINED 36
addr_36005: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36006: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36007: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36008: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36009: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36010: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36011: ;;// porth.porth:4560:39: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_36012: ;;// porth.porth:4560:55: OP_INLINED 36
addr_36013: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36014: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36015: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36016: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36017: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36018: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36019: ;;// porth.porth:4560:60: OP_INLINED 16
addr_36020: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36021: ;;// porth.porth:4561:3: OP_PUSH_LOCAL_MEM 80
    mov rax, [ret_stack_rsp]
    add rax, 80
    push rax
addr_36022: ;;// porth.porth:4561:14: OP_INLINED 16
addr_36023: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36024: ;;// porth.porth:4562:3: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_36025: ;;// porth.porth:4562:8: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_36026: ;;// porth.porth:4562:13: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_36027: ;;// porth.porth:4562:15: OP_IF 146
    pop rax
    test rax, rax
    jz addr_36173
addr_36028: ;;// porth.porth:4563:5: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_36029: ;;// porth.porth:4563:11: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_36030: ;;// porth.porth:4563:21: OP_INLINED 36
addr_36031: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36032: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36033: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36034: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36035: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36036: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36037: ;;// porth.porth:4563:26: OP_INLINED 5367
addr_36038: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_36039: ;;// porth.porth:32:35: OP_INLINED 5195
addr_36040: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_36041: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_36042: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_36043: ;;// porth.porth:24:23: OP_INLINED 36
addr_36044: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36045: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36046: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36047: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36048: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36049: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36050: ;;// porth.porth:24:28: OP_INLINED 753
addr_36051: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_36052: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_36053: ;;// std/std.porth:65:7: OP_INLINED 704
addr_36054: ;;// std/std.porth:58:38: OP_INLINED 684
addr_36055: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_36056: ;;// std/std.porth:56:57: OP_INLINED 36
addr_36057: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36058: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36059: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36060: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36061: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36062: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36063: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36064: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_36065: ;;// std/std.porth:66:7: OP_INLINED 716
addr_36066: ;;// std/std.porth:59:37: OP_INLINED 694
addr_36067: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_36068: ;;// std/std.porth:57:55: OP_INLINED 36
addr_36069: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36070: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36071: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36072: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36073: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36074: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36075: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36076: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_36077: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_36078: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_36079: ;;// porth.porth:24:36: OP_INLINED 662
addr_36080: ;;// std/std.porth:48:34: OP_INLINED 394
addr_36081: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_36082: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_36083: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_36084: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_36085: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_36086: ;;// porth.porth:25:36: OP_INLINED 662
addr_36087: ;;// std/std.porth:48:34: OP_INLINED 394
addr_36088: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_36089: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_36090: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_36091: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_36092: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_36093: ;;// porth.porth:26:17: OP_INLINED 36
addr_36094: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36095: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36096: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36097: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36098: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36099: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36100: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36101: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_36102: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_36103: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_36104: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_36105: ;;// porth.porth:27:36: OP_INLINED 662
addr_36106: ;;// std/std.porth:48:34: OP_INLINED 394
addr_36107: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_36108: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_36109: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_36110: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_36111: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_36112: ;;// porth.porth:28:17: OP_INLINED 36
addr_36113: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36114: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36115: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36116: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36117: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36118: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36119: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36120: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_36121: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_36122: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_36123: ;;// porth.porth:4564:5: OP_PUSH_STR 953
    mov rax, 68
    push rax
    lea rax, [str_953]
    push rax
addr_36124: ;;// porth.porth:4564:76: OP_INLINED 676
addr_36125: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_36126: ;;// std/std.porth:50:37: OP_INLINED 662
addr_36127: ;;// std/std.porth:48:34: OP_INLINED 394
addr_36128: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_36129: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_36130: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_36131: ;;// porth.porth:4565:5: OP_INLINED 2119
addr_36132: ;;// std/std.porth:410:26: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_36133: ;;// std/std.porth:410:33: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_36134: ;;// porth.porth:4566:5: OP_PUSH_STR 954
    mov rax, 9
    push rax
    lea rax, [str_954]
    push rax
addr_36135: ;;// porth.porth:4566:17: OP_INLINED 676
addr_36136: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_36137: ;;// std/std.porth:50:37: OP_INLINED 662
addr_36138: ;;// std/std.porth:48:34: OP_INLINED 394
addr_36139: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_36140: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_36141: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_36142: ;;// porth.porth:4567:5: OP_INLINED 2119
addr_36143: ;;// std/std.porth:410:26: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_36144: ;;// std/std.porth:410:33: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_36145: ;;// porth.porth:4568:5: OP_PUSH_STR 955
    mov rax, 27
    push rax
    lea rax, [str_955]
    push rax
addr_36146: ;;// porth.porth:4568:36: OP_INLINED 676
addr_36147: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_36148: ;;// std/std.porth:50:37: OP_INLINED 662
addr_36149: ;;// std/std.porth:48:34: OP_INLINED 394
addr_36150: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_36151: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_36152: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_36153: ;;// porth.porth:4569:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_36154: ;;// porth.porth:4569:13: OP_INLINED 0
addr_36155: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36156: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_36157: ;;// porth.porth:4569:18: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_36158: ;;// porth.porth:4569:36: OP_INLINED 36
addr_36159: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36160: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36161: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36162: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36163: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36164: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36165: ;;// porth.porth:4569:41: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_36166: ;;// porth.porth:4569:48: OP_CALL 13761
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13761
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_36167: ;;// porth.porth:4570:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_36168: ;;// porth.porth:4570:7: OP_INLINED 418
addr_36169: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_36170: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_36171: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_36172: ;;// porth.porth:4571:3: OP_ELSE 3
    jmp addr_36175
addr_36173: ;;// porth.porth:4572:5: OP_INTRINSIC drop
    pop rax
addr_36174: ;;// porth.porth:4572:10: OP_INTRINSIC drop
    pop rax
addr_36175: ;;// porth.porth:4573:3: OP_END_IF 0
addr_36176: ;;// porth.porth:4575:3: OP_WHILE 65
addr_36177: ;;// porth.porth:4575:9: OP_PUSH_LOCAL_MEM 80
    mov rax, [ret_stack_rsp]
    add rax, 80
    push rax
addr_36178: ;;// porth.porth:4575:20: OP_INLINED 16
addr_36179: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36180: ;;// porth.porth:4575:25: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_36181: ;;// porth.porth:4575:27: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_36182: ;;// porth.porth:4575:29: OP_DO 59
    pop rax
    test rax, rax
    jz addr_36241
addr_36183: ;;// porth.porth:4576:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_36184: ;;// porth.porth:4576:13: OP_INLINED 0
addr_36185: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36186: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_36187: ;;// porth.porth:4576:18: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_36188: ;;// porth.porth:4576:36: OP_INLINED 36
addr_36189: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36190: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36191: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36192: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36193: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36194: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36195: ;;// porth.porth:4576:41: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_36196: ;;// porth.porth:4576:55: OP_INLINED 36
addr_36197: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36198: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36199: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36200: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36201: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36202: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36203: ;;// porth.porth:4576:60: OP_INLINED 0
addr_36204: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36205: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_36206: ;;// porth.porth:4577:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_36207: ;;// porth.porth:4577:13: OP_INLINED 0
addr_36208: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36209: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_36210: ;;// porth.porth:4577:18: OP_PUSH_INT 48
    mov rax, 48
    push rax
addr_36211: ;;// porth.porth:4577:34: OP_INLINED 36
addr_36212: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36213: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36214: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36215: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36216: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36217: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36218: ;;// porth.porth:4578:5: OP_CALL 13657
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13657
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_36219: ;;// porth.porth:4580:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_36220: ;;// porth.porth:4580:13: OP_INLINED 0
addr_36221: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36222: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_36223: ;;// porth.porth:4580:18: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_36224: ;;// porth.porth:4580:36: OP_INLINED 36
addr_36225: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36226: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36227: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36228: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36229: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36230: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36231: ;;// porth.porth:4581:5: OP_CALL 13682
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13682
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_36232: ;;// porth.porth:4583:5: OP_PUSH_LOCAL_MEM 80
    mov rax, [ret_stack_rsp]
    add rax, 80
    push rax
addr_36233: ;;// porth.porth:4583:16: OP_INLINED 169
addr_36234: ;;// std/core.porth:108:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_36235: ;;// std/core.porth:108:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36236: ;;// std/core.porth:108:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_36237: ;;// std/core.porth:108:36: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_36238: ;;// std/core.porth:108:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36239: ;;// std/core.porth:108:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_36240: ;;// porth.porth:4584:3: OP_END_WHILE 64
    jmp addr_36176
addr_36241: ;;// porth.porth:4585:1: OP_RET 88
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 88
    ret
addr_36242: ;;// porth.porth:4587:6: OP_PREP_PROC 88
    sub rsp, 88
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_36243: ;;// porth.porth:4593:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_36244: ;;// porth.porth:4593:11: OP_INLINED 27
addr_36245: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_36246: ;;// porth.porth:4596:3: OP_PUSH_INT 72
    mov rax, 72
    push rax
addr_36247: ;;// porth.porth:4596:17: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36248: ;;// porth.porth:4596:22: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_36249: ;;// porth.porth:4596:28: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_36250: ;;// porth.porth:4596:35: OP_INTRINSIC drop
    pop rax
addr_36251: ;;// porth.porth:4598:3: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_36252: ;;// porth.porth:4599:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_36253: ;;// porth.porth:4599:11: OP_INLINED 0
addr_36254: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36255: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_36256: ;;// porth.porth:4599:16: OP_PUSH_INT 48
    mov rax, 48
    push rax
addr_36257: ;;// porth.porth:4599:32: OP_INLINED 36
addr_36258: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36259: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36260: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36261: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36262: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36263: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36264: ;;// porth.porth:4599:37: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_36265: ;;// porth.porth:4599:53: OP_INLINED 36
addr_36266: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36267: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36268: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36269: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36270: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36271: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36272: ;;// porth.porth:4599:58: OP_INLINED 16
addr_36273: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36274: ;;// porth.porth:4600:3: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_36275: ;;// porth.porth:4600:5: OP_IF 22
    pop rax
    test rax, rax
    jz addr_36297
addr_36276: ;;// porth.porth:4601:5: OP_PUSH_STR 956
    mov rax, 18
    push rax
    lea rax, [str_956]
    push rax
addr_36277: ;;// porth.porth:4601:10: OP_INLINED 676
addr_36278: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_36279: ;;// std/std.porth:50:37: OP_INLINED 662
addr_36280: ;;// std/std.porth:48:34: OP_INLINED 394
addr_36281: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_36282: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_36283: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_36284: ;;// porth.porth:4601:16: OP_PUSH_STR 957
    mov rax, 74
    push rax
    lea rax, [str_957]
    push rax
addr_36285: ;;// porth.porth:4601:93: OP_INLINED 676
addr_36286: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_36287: ;;// std/std.porth:50:37: OP_INLINED 662
addr_36288: ;;// std/std.porth:48:34: OP_INLINED 394
addr_36289: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_36290: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_36291: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_36292: ;;// porth.porth:4602:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_36293: ;;// porth.porth:4602:7: OP_INLINED 418
addr_36294: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_36295: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_36296: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_36297: ;;// porth.porth:4603:3: OP_END_IF 0
addr_36298: ;;// porth.porth:4606:3: OP_PUSH_LOCAL_MEM 80
    mov rax, [ret_stack_rsp]
    add rax, 80
    push rax
addr_36299: ;;// porth.porth:4606:14: OP_INLINED 30
addr_36300: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_36301: ;;// porth.porth:4608:3: OP_WHILE 29
addr_36302: ;;// porth.porth:4608:9: OP_PUSH_LOCAL_MEM 80
    mov rax, [ret_stack_rsp]
    add rax, 80
    push rax
addr_36303: ;;// porth.porth:4608:20: OP_INLINED 16
addr_36304: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36305: ;;// porth.porth:4608:25: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_36306: ;;// porth.porth:4608:27: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_36307: ;;// porth.porth:4608:29: OP_DO 23
    pop rax
    test rax, rax
    jz addr_36330
addr_36308: ;;// porth.porth:4609:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_36309: ;;// porth.porth:4609:13: OP_INLINED 0
addr_36310: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36311: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_36312: ;;// porth.porth:4609:18: OP_PUSH_INT 48
    mov rax, 48
    push rax
addr_36313: ;;// porth.porth:4609:34: OP_INLINED 36
addr_36314: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36315: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36316: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36317: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36318: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36319: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36320: ;;// porth.porth:4610:5: OP_CALL 13682
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13682
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_36321: ;;// porth.porth:4612:5: OP_PUSH_LOCAL_MEM 80
    mov rax, [ret_stack_rsp]
    add rax, 80
    push rax
addr_36322: ;;// porth.porth:4612:16: OP_INLINED 169
addr_36323: ;;// std/core.porth:108:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_36324: ;;// std/core.porth:108:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36325: ;;// std/core.porth:108:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_36326: ;;// std/core.porth:108:36: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_36327: ;;// std/core.porth:108:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36328: ;;// std/core.porth:108:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_36329: ;;// porth.porth:4613:3: OP_END_WHILE 28
    jmp addr_36301
addr_36330: ;;// porth.porth:4614:1: OP_RET 88
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 88
    ret
addr_36331: ;;// porth.porth:4616:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_36332: ;;// porth.porth:4621:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_36333: ;;// porth.porth:4622:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_36334: ;;// porth.porth:4623:5: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_36335: ;;// porth.porth:4623:13: OP_PUSH_INT 48
    mov rax, 48
    push rax
addr_36336: ;;// porth.porth:4623:29: OP_INLINED 36
addr_36337: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36338: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36339: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36340: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36341: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36342: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36343: ;;// porth.porth:4623:34: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_36344: ;;// porth.porth:4623:50: OP_INLINED 36
addr_36345: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36346: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36347: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36348: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36349: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36350: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36351: ;;// porth.porth:4623:55: OP_INLINED 16
addr_36352: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36353: ;;// porth.porth:4624:5: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_36354: ;;// porth.porth:4624:7: OP_IF 22
    pop rax
    test rax, rax
    jz addr_36376
addr_36355: ;;// porth.porth:4625:7: OP_PUSH_STR 958
    mov rax, 18
    push rax
    lea rax, [str_958]
    push rax
addr_36356: ;;// porth.porth:4625:12: OP_INLINED 676
addr_36357: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_36358: ;;// std/std.porth:50:37: OP_INLINED 662
addr_36359: ;;// std/std.porth:48:34: OP_INLINED 394
addr_36360: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_36361: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_36362: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_36363: ;;// porth.porth:4625:18: OP_PUSH_STR 959
    mov rax, 176
    push rax
    lea rax, [str_959]
    push rax
addr_36364: ;;// porth.porth:4625:198: OP_INLINED 676
addr_36365: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_36366: ;;// std/std.porth:50:37: OP_INLINED 662
addr_36367: ;;// std/std.porth:48:34: OP_INLINED 394
addr_36368: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_36369: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_36370: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_36371: ;;// porth.porth:4626:7: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_36372: ;;// porth.porth:4626:9: OP_INLINED 418
addr_36373: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_36374: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_36375: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_36376: ;;// porth.porth:4627:5: OP_END_IF 0
addr_36377: ;;// porth.porth:4629:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_36378: ;;// porth.porth:4630:5: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_36379: ;;// porth.porth:4630:13: OP_PUSH_INT 48
    mov rax, 48
    push rax
addr_36380: ;;// porth.porth:4630:29: OP_INLINED 36
addr_36381: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36382: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36383: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36384: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36385: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36386: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36387: ;;// porth.porth:4630:34: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_36388: ;;// porth.porth:4630:48: OP_INLINED 36
addr_36389: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36390: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36391: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36392: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36393: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36394: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36395: ;;// porth.porth:4630:53: OP_INLINED 0
addr_36396: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36397: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_36398: ;;// porth.porth:4631:5: OP_WHILE 23
addr_36399: ;;// porth.porth:4631:11: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_36400: ;;// porth.porth:4631:16: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_36401: ;;// porth.porth:4631:18: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_36402: ;;// porth.porth:4631:20: OP_DO 19
    pop rax
    test rax, rax
    jz addr_36421
addr_36403: ;;// porth.porth:4632:7: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_36404: ;;// porth.porth:4633:9: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_36405: ;;// porth.porth:4633:15: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_36406: ;;// porth.porth:4633:17: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_36407: ;;// porth.porth:4634:9: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_36408: ;;// porth.porth:4634:15: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_36409: ;;// porth.porth:4634:30: OP_INLINED 36
addr_36410: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36411: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36412: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36413: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36414: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36415: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36416: ;;// porth.porth:4634:35: OP_INLINED 0
addr_36417: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36418: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_36419: ;;// porth.porth:4635:7: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_36420: ;;// porth.porth:4636:5: OP_END_WHILE 22
    jmp addr_36398
addr_36421: ;;// porth.porth:4638:5: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_36422: ;;// porth.porth:4639:7: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_36423: ;;// porth.porth:4639:13: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_36424: ;;// porth.porth:4639:28: OP_INLINED 36
addr_36425: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36426: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36427: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36428: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36429: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36430: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36431: ;;// porth.porth:4639:33: OP_INLINED 16
addr_36432: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36433: ;;// porth.porth:4640:7: OP_PUSH_BIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov rbx, [rax]
    push rbx
addr_36434: ;;// porth.porth:4640:13: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_36435: ;;// porth.porth:4640:23: OP_INLINED 36
addr_36436: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36437: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36438: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36439: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36440: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36441: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36442: ;;// porth.porth:4641:7: OP_PUSH_BIND 4
    mov rax, [ret_stack_rsp]
    add rax, 32
    mov rbx, [rax]
    push rbx
addr_36443: ;;// porth.porth:4641:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_36444: ;;// porth.porth:4641:33: OP_INLINED 36
addr_36445: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36446: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36447: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36448: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36449: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36450: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36451: ;;// porth.porth:4642:7: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_36452: ;;// porth.porth:4643:5: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_36453: ;;// porth.porth:4644:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_36454: ;;// porth.porth:4645:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_36455: ;;// porth.porth:4647:6: OP_PREP_PROC 216
    sub rsp, 216
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_36456: ;;// porth.porth:4651:3: OP_PUSH_INT 64
    mov rax, 64
    push rax
addr_36457: ;;// porth.porth:4651:23: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36458: ;;// porth.porth:4651:28: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_36459: ;;// porth.porth:4651:36: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_36460: ;;// porth.porth:4651:43: OP_INTRINSIC drop
    pop rax
addr_36461: ;;// porth.porth:4657:3: OP_PUSH_GLOBAL_MEM 15073352
    lea rax, [mem+15073352]
    push rax
addr_36462: ;;// porth.porth:4657:25: OP_INLINED 16
addr_36463: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36464: ;;// porth.porth:4659:3: OP_WHILE 3855
addr_36465: ;;// porth.porth:4660:5: OP_INLINED 2414
addr_36466: ;;// std/std.porth:506:31: OP_PUSH_GLOBAL_MEM 8
    lea rax, [mem+8]
    push rax
addr_36467: ;;// std/std.porth:506:41: OP_PUSH_GLOBAL_MEM 8388616
    lea rax, [mem+8388616]
    push rax
addr_36468: ;;// std/std.porth:506:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36469: ;;// std/std.porth:506:54: OP_INLINED 36
addr_36470: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36471: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36472: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36473: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36474: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36475: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36476: ;;// porth.porth:4661:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_36477: ;;// porth.porth:4661:13: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_36478: ;;// porth.porth:4661:28: OP_INLINED 36
addr_36479: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36480: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36481: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36482: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36483: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36484: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36485: ;;// porth.porth:4661:33: OP_INLINED 16
addr_36486: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36487: ;;// porth.porth:4661:38: OP_PUSH_GLOBAL_MEM 8421424
    lea rax, [mem+8421424]
    push rax
addr_36488: ;;// porth.porth:4661:48: OP_INLINED 16
addr_36489: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36490: ;;// porth.porth:4661:53: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_36491: ;;// porth.porth:4661:55: OP_IF 3812
    pop rax
    test rax, rax
    jz addr_40303
addr_36492: ;;// porth.porth:4662:7: OP_PUSH_INT 88
    mov rax, 88
    push rax
addr_36493: ;;// porth.porth:4663:7: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_36494: ;;// porth.porth:4663:15: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_36495: ;;// porth.porth:4663:30: OP_INLINED 36
addr_36496: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36497: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36498: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36499: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36500: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36501: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36502: ;;// porth.porth:4663:35: OP_INLINED 16
addr_36503: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36504: ;;// porth.porth:4663:40: OP_PUSH_INT 88
    mov rax, 88
    push rax
addr_36505: ;;// porth.porth:4663:51: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_36506: ;;// porth.porth:4663:53: OP_PUSH_GLOBAL_MEM 8421432
    lea rax, [mem+8421432]
    push rax
addr_36507: ;;// porth.porth:4663:57: OP_INLINED 73
addr_36508: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_36509: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36510: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_36511: ;;// porth.porth:4664:7: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_36512: ;;// porth.porth:4665:7: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_36513: ;;// porth.porth:4665:14: OP_INTRINSIC drop
    pop rax
addr_36514: ;;// porth.porth:4669:7: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_36515: ;;// porth.porth:4669:10: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_36516: ;;// porth.porth:4669:18: OP_INLINED 36
addr_36517: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36518: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36519: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36520: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36521: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36522: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36523: ;;// porth.porth:4669:23: OP_INLINED 16
addr_36524: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36525: ;;// porth.porth:4669:28: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_36526: ;;// porth.porth:4669:40: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_36527: ;;// porth.porth:4669:42: OP_IF 47
    pop rax
    test rax, rax
    jz addr_36574
addr_36528: ;;// porth.porth:4670:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_36529: ;;// porth.porth:4671:9: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_36530: ;;// porth.porth:4671:12: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_36531: ;;// porth.porth:4671:21: OP_INLINED 36
addr_36532: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36533: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36534: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36535: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36536: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36537: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36538: ;;// porth.porth:4671:26: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_36539: ;;// porth.porth:4671:36: OP_INLINED 36
addr_36540: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36541: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36542: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36543: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36544: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36545: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36546: ;;// porth.porth:4672:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_36547: ;;// porth.porth:4672:17: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_36548: ;;// porth.porth:4672:35: OP_INLINED 36
addr_36549: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36550: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36551: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36552: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36553: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36554: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36555: ;;// porth.porth:4673:9: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_36556: ;;// porth.porth:4675:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_36557: ;;// porth.porth:4675:17: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_36558: ;;// porth.porth:4675:32: OP_INLINED 36
addr_36559: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36560: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36561: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36562: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36563: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36564: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36565: ;;// porth.porth:4675:37: OP_INLINED 161
addr_36566: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_36567: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36568: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_36569: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36570: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36571: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_36572: ;;// porth.porth:4677:9: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_36573: ;;// porth.porth:4678:7: OP_ELSE 60
    jmp addr_36633
addr_36574: ;;// porth.porth:4678:12: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_36575: ;;// porth.porth:4678:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_36576: ;;// porth.porth:4678:23: OP_INLINED 36
addr_36577: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36578: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36579: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36580: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36581: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36582: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36583: ;;// porth.porth:4678:28: OP_INLINED 16
addr_36584: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36585: ;;// porth.porth:4678:33: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_36586: ;;// porth.porth:4678:46: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_36587: ;;// porth.porth:4678:48: OP_IFSTAR 47
    pop rax
    test rax, rax
    jz addr_36634
addr_36588: ;;// porth.porth:4679:9: OP_PUSH_INT 4
    mov rax, 4
    push rax
addr_36589: ;;// porth.porth:4680:9: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_36590: ;;// porth.porth:4680:12: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_36591: ;;// porth.porth:4680:21: OP_INLINED 36
addr_36592: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36593: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36594: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36595: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36596: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36597: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36598: ;;// porth.porth:4680:26: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_36599: ;;// porth.porth:4680:36: OP_INLINED 36
addr_36600: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36601: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36602: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36603: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36604: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36605: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36606: ;;// porth.porth:4681:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_36607: ;;// porth.porth:4681:17: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_36608: ;;// porth.porth:4681:35: OP_INLINED 36
addr_36609: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36610: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36611: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36612: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36613: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36614: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36615: ;;// porth.porth:4682:9: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_36616: ;;// porth.porth:4684:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_36617: ;;// porth.porth:4684:17: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_36618: ;;// porth.porth:4684:32: OP_INLINED 36
addr_36619: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36620: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36621: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36622: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36623: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36624: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36625: ;;// porth.porth:4684:37: OP_INLINED 161
addr_36626: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_36627: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36628: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_36629: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36630: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36631: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_36632: ;;// porth.porth:4686:9: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_36633: ;;// porth.porth:4687:7: OP_ELSE 60
    jmp addr_36693
addr_36634: ;;// porth.porth:4687:12: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_36635: ;;// porth.porth:4687:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_36636: ;;// porth.porth:4687:23: OP_INLINED 36
addr_36637: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36638: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36639: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36640: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36641: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36642: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36643: ;;// porth.porth:4687:28: OP_INLINED 16
addr_36644: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36645: ;;// porth.porth:4687:33: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_36646: ;;// porth.porth:4687:47: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_36647: ;;// porth.porth:4687:49: OP_IFSTAR 47
    pop rax
    test rax, rax
    jz addr_36694
addr_36648: ;;// porth.porth:4688:9: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_36649: ;;// porth.porth:4689:9: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_36650: ;;// porth.porth:4689:12: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_36651: ;;// porth.porth:4689:21: OP_INLINED 36
addr_36652: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36653: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36654: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36655: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36656: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36657: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36658: ;;// porth.porth:4689:26: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_36659: ;;// porth.porth:4689:36: OP_INLINED 36
addr_36660: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36661: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36662: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36663: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36664: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36665: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36666: ;;// porth.porth:4690:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_36667: ;;// porth.porth:4690:17: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_36668: ;;// porth.porth:4690:35: OP_INLINED 36
addr_36669: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36670: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36671: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36672: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36673: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36674: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36675: ;;// porth.porth:4691:9: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_36676: ;;// porth.porth:4693:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_36677: ;;// porth.porth:4693:17: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_36678: ;;// porth.porth:4693:32: OP_INLINED 36
addr_36679: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36680: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36681: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36682: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36683: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36684: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36685: ;;// porth.porth:4693:37: OP_INLINED 161
addr_36686: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_36687: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36688: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_36689: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36690: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36691: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_36692: ;;// porth.porth:4695:9: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_36693: ;;// porth.porth:4696:7: OP_ELSE 60
    jmp addr_36753
addr_36694: ;;// porth.porth:4696:12: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_36695: ;;// porth.porth:4696:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_36696: ;;// porth.porth:4696:23: OP_INLINED 36
addr_36697: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36698: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36699: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36700: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36701: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36702: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36703: ;;// porth.porth:4696:28: OP_INLINED 16
addr_36704: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36705: ;;// porth.porth:4696:33: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_36706: ;;// porth.porth:4696:48: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_36707: ;;// porth.porth:4696:50: OP_IFSTAR 47
    pop rax
    test rax, rax
    jz addr_36754
addr_36708: ;;// porth.porth:4697:9: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_36709: ;;// porth.porth:4698:9: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_36710: ;;// porth.porth:4698:12: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_36711: ;;// porth.porth:4698:21: OP_INLINED 36
addr_36712: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36713: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36714: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36715: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36716: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36717: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36718: ;;// porth.porth:4698:26: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_36719: ;;// porth.porth:4698:36: OP_INLINED 36
addr_36720: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36721: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36722: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36723: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36724: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36725: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36726: ;;// porth.porth:4699:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_36727: ;;// porth.porth:4699:17: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_36728: ;;// porth.porth:4699:35: OP_INLINED 36
addr_36729: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36730: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36731: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36732: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36733: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36734: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36735: ;;// porth.porth:4700:9: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_36736: ;;// porth.porth:4702:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_36737: ;;// porth.porth:4702:17: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_36738: ;;// porth.porth:4702:32: OP_INLINED 36
addr_36739: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36740: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36741: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36742: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36743: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36744: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36745: ;;// porth.porth:4702:37: OP_INLINED 161
addr_36746: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_36747: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36748: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_36749: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36750: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36751: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_36752: ;;// porth.porth:4704:9: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_36753: ;;// porth.porth:4705:7: OP_ELSE 60
    jmp addr_36813
addr_36754: ;;// porth.porth:4705:12: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_36755: ;;// porth.porth:4705:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_36756: ;;// porth.porth:4705:23: OP_INLINED 36
addr_36757: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36758: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36759: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36760: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36761: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36762: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36763: ;;// porth.porth:4705:28: OP_INLINED 16
addr_36764: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36765: ;;// porth.porth:4705:33: OP_PUSH_INT 4
    mov rax, 4
    push rax
addr_36766: ;;// porth.porth:4705:45: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_36767: ;;// porth.porth:4705:47: OP_IFSTAR 47
    pop rax
    test rax, rax
    jz addr_36814
addr_36768: ;;// porth.porth:4706:9: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_36769: ;;// porth.porth:4707:9: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_36770: ;;// porth.porth:4707:12: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_36771: ;;// porth.porth:4707:21: OP_INLINED 36
addr_36772: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36773: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36774: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36775: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36776: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36777: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36778: ;;// porth.porth:4707:26: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_36779: ;;// porth.porth:4707:36: OP_INLINED 36
addr_36780: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36781: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36782: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36783: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36784: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36785: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36786: ;;// porth.porth:4708:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_36787: ;;// porth.porth:4708:17: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_36788: ;;// porth.porth:4708:35: OP_INLINED 36
addr_36789: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36790: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36791: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36792: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36793: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36794: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36795: ;;// porth.porth:4709:9: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_36796: ;;// porth.porth:4711:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_36797: ;;// porth.porth:4711:17: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_36798: ;;// porth.porth:4711:32: OP_INLINED 36
addr_36799: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36800: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36801: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36802: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36803: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36804: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36805: ;;// porth.porth:4711:37: OP_INLINED 161
addr_36806: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_36807: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36808: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_36809: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36810: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36811: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_36812: ;;// porth.porth:4713:9: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_36813: ;;// porth.porth:4714:7: OP_ELSE 60
    jmp addr_36873
addr_36814: ;;// porth.porth:4714:12: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_36815: ;;// porth.porth:4714:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_36816: ;;// porth.porth:4714:23: OP_INLINED 36
addr_36817: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36818: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36819: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36820: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36821: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36822: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36823: ;;// porth.porth:4714:28: OP_INLINED 16
addr_36824: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36825: ;;// porth.porth:4714:33: OP_PUSH_INT 5
    mov rax, 5
    push rax
addr_36826: ;;// porth.porth:4714:46: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_36827: ;;// porth.porth:4714:48: OP_IFSTAR 47
    pop rax
    test rax, rax
    jz addr_36874
addr_36828: ;;// porth.porth:4715:9: OP_PUSH_INT 5
    mov rax, 5
    push rax
addr_36829: ;;// porth.porth:4716:9: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_36830: ;;// porth.porth:4716:12: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_36831: ;;// porth.porth:4716:21: OP_INLINED 36
addr_36832: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36833: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36834: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36835: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36836: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36837: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36838: ;;// porth.porth:4716:26: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_36839: ;;// porth.porth:4716:36: OP_INLINED 36
addr_36840: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36841: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36842: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36843: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36844: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36845: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36846: ;;// porth.porth:4717:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_36847: ;;// porth.porth:4717:17: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_36848: ;;// porth.porth:4717:35: OP_INLINED 36
addr_36849: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36850: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36851: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36852: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36853: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36854: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36855: ;;// porth.porth:4718:9: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_36856: ;;// porth.porth:4720:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_36857: ;;// porth.porth:4720:17: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_36858: ;;// porth.porth:4720:32: OP_INLINED 36
addr_36859: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36860: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36861: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36862: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36863: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36864: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36865: ;;// porth.porth:4720:37: OP_INLINED 161
addr_36866: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_36867: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36868: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_36869: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36870: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36871: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_36872: ;;// porth.porth:4722:9: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_36873: ;;// porth.porth:4723:7: OP_ELSE 60
    jmp addr_36933
addr_36874: ;;// porth.porth:4723:12: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_36875: ;;// porth.porth:4723:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_36876: ;;// porth.porth:4723:23: OP_INLINED 36
addr_36877: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36878: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36879: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36880: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36881: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36882: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36883: ;;// porth.porth:4723:28: OP_INLINED 16
addr_36884: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36885: ;;// porth.porth:4723:33: OP_PUSH_INT 6
    mov rax, 6
    push rax
addr_36886: ;;// porth.porth:4723:51: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_36887: ;;// porth.porth:4723:53: OP_IFSTAR 47
    pop rax
    test rax, rax
    jz addr_36934
addr_36888: ;;// porth.porth:4724:9: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_36889: ;;// porth.porth:4725:9: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_36890: ;;// porth.porth:4725:12: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_36891: ;;// porth.porth:4725:21: OP_INLINED 36
addr_36892: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36893: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36894: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36895: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36896: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36897: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36898: ;;// porth.porth:4725:26: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_36899: ;;// porth.porth:4725:36: OP_INLINED 36
addr_36900: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36901: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36902: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36903: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36904: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36905: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36906: ;;// porth.porth:4726:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_36907: ;;// porth.porth:4726:17: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_36908: ;;// porth.porth:4726:35: OP_INLINED 36
addr_36909: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36910: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36911: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36912: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36913: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36914: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36915: ;;// porth.porth:4727:9: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_36916: ;;// porth.porth:4729:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_36917: ;;// porth.porth:4729:17: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_36918: ;;// porth.porth:4729:32: OP_INLINED 36
addr_36919: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36920: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36921: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36922: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36923: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36924: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36925: ;;// porth.porth:4729:37: OP_INLINED 161
addr_36926: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_36927: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36928: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_36929: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36930: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36931: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_36932: ;;// porth.porth:4731:9: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_36933: ;;// porth.porth:4732:7: OP_ELSE 60
    jmp addr_36993
addr_36934: ;;// porth.porth:4732:12: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_36935: ;;// porth.porth:4732:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_36936: ;;// porth.porth:4732:23: OP_INLINED 36
addr_36937: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36938: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36939: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36940: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36941: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36942: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36943: ;;// porth.porth:4732:28: OP_INLINED 16
addr_36944: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36945: ;;// porth.porth:4732:33: OP_PUSH_INT 7
    mov rax, 7
    push rax
addr_36946: ;;// porth.porth:4732:52: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_36947: ;;// porth.porth:4732:54: OP_IFSTAR 47
    pop rax
    test rax, rax
    jz addr_36994
addr_36948: ;;// porth.porth:4733:9: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_36949: ;;// porth.porth:4734:9: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_36950: ;;// porth.porth:4734:12: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_36951: ;;// porth.porth:4734:21: OP_INLINED 36
addr_36952: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36953: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36954: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36955: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36956: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36957: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36958: ;;// porth.porth:4734:26: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_36959: ;;// porth.porth:4734:36: OP_INLINED 36
addr_36960: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36961: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36962: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36963: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36964: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36965: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36966: ;;// porth.porth:4735:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_36967: ;;// porth.porth:4735:17: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_36968: ;;// porth.porth:4735:35: OP_INLINED 36
addr_36969: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36970: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36971: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36972: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36973: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36974: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36975: ;;// porth.porth:4736:9: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_36976: ;;// porth.porth:4738:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_36977: ;;// porth.porth:4738:17: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_36978: ;;// porth.porth:4738:32: OP_INLINED 36
addr_36979: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36980: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36981: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36982: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_36983: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36984: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_36985: ;;// porth.porth:4738:37: OP_INLINED 161
addr_36986: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_36987: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_36988: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_36989: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_36990: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36991: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_36992: ;;// porth.porth:4740:9: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_36993: ;;// porth.porth:4741:7: OP_ELSE 74
    jmp addr_37067
addr_36994: ;;// porth.porth:4741:12: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_36995: ;;// porth.porth:4741:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_36996: ;;// porth.porth:4741:23: OP_INLINED 36
addr_36997: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_36998: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_36999: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37000: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37001: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37002: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37003: ;;// porth.porth:4741:28: OP_INLINED 16
addr_37004: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37005: ;;// porth.porth:4741:33: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_37006: ;;// porth.porth:4741:45: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_37007: ;;// porth.porth:4741:47: OP_IFSTAR 61
    pop rax
    test rax, rax
    jz addr_37068
addr_37008: ;;// porth.porth:4742:9: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_37009: ;;// porth.porth:4742:12: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_37010: ;;// porth.porth:4742:21: OP_INLINED 36
addr_37011: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37012: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37013: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37014: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37015: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37016: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37017: ;;// porth.porth:4742:26: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_37018: ;;// porth.porth:4742:36: OP_INLINED 36
addr_37019: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37020: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37021: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37022: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37023: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37024: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37025: ;;// porth.porth:4743:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_37026: ;;// porth.porth:4743:24: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_37027: ;;// porth.porth:4743:29: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_37028: ;;// porth.porth:4743:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_37029: ;;// porth.porth:4743:55: OP_INLINED 36
addr_37030: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37031: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37032: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37033: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37034: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37035: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37036: ;;// porth.porth:4743:60: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_37037: ;;// porth.porth:4744:11: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_37038: ;;// porth.porth:4744:24: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_37039: ;;// porth.porth:4744:29: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_37040: ;;// porth.porth:4744:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_37041: ;;// porth.porth:4744:55: OP_INLINED 36
addr_37042: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37043: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37044: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37045: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37046: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37047: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37048: ;;// porth.porth:4744:60: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_37049: ;;// porth.porth:4745:9: OP_INTRINSIC drop
    pop rax
addr_37050: ;;// porth.porth:4747:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_37051: ;;// porth.porth:4747:17: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_37052: ;;// porth.porth:4747:32: OP_INLINED 36
addr_37053: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37054: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37055: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37056: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37057: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37058: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37059: ;;// porth.porth:4747:37: OP_INLINED 161
addr_37060: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_37061: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37062: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_37063: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37064: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37065: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_37066: ;;// porth.porth:4749:9: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_37067: ;;// porth.porth:4750:7: OP_ELSE 62
    jmp addr_37129
addr_37068: ;;// porth.porth:4750:12: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_37069: ;;// porth.porth:4750:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_37070: ;;// porth.porth:4750:23: OP_INLINED 36
addr_37071: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37072: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37073: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37074: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37075: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37076: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37077: ;;// porth.porth:4750:28: OP_INLINED 16
addr_37078: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37079: ;;// porth.porth:4750:33: OP_PUSH_INT 9
    mov rax, 9
    push rax
addr_37080: ;;// porth.porth:4750:46: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_37081: ;;// porth.porth:4750:48: OP_IFSTAR 49
    pop rax
    test rax, rax
    jz addr_37130
addr_37082: ;;// porth.porth:4751:9: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_37083: ;;// porth.porth:4751:12: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_37084: ;;// porth.porth:4751:21: OP_INLINED 36
addr_37085: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37086: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37087: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37088: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37089: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37090: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37091: ;;// porth.porth:4751:26: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_37092: ;;// porth.porth:4751:36: OP_INLINED 36
addr_37093: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37094: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37095: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37096: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37097: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37098: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37099: ;;// porth.porth:4752:11: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_37100: ;;// porth.porth:4752:24: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_37101: ;;// porth.porth:4752:29: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_37102: ;;// porth.porth:4752:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_37103: ;;// porth.porth:4752:55: OP_INLINED 36
addr_37104: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37105: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37106: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37107: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37108: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37109: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37110: ;;// porth.porth:4752:60: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_37111: ;;// porth.porth:4753:9: OP_INTRINSIC drop
    pop rax
addr_37112: ;;// porth.porth:4755:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_37113: ;;// porth.porth:4755:17: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_37114: ;;// porth.porth:4755:32: OP_INLINED 36
addr_37115: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37116: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37117: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37118: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37119: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37120: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37121: ;;// porth.porth:4755:37: OP_INLINED 161
addr_37122: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_37123: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37124: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_37125: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37126: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37127: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_37128: ;;// porth.porth:4757:9: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_37129: ;;// porth.porth:4758:7: OP_ELSE 98
    jmp addr_37227
addr_37130: ;;// porth.porth:4758:12: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_37131: ;;// porth.porth:4758:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_37132: ;;// porth.porth:4758:23: OP_INLINED 36
addr_37133: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37134: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37135: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37136: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37137: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37138: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37139: ;;// porth.porth:4758:28: OP_INLINED 16
addr_37140: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37141: ;;// porth.porth:4758:33: OP_PUSH_INT 10
    mov rax, 10
    push rax
addr_37142: ;;// porth.porth:4758:39: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_37143: ;;// porth.porth:4758:41: OP_IFSTAR 85
    pop rax
    test rax, rax
    jz addr_37228
addr_37144: ;;// porth.porth:4759:9: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_37145: ;;// porth.porth:4759:12: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_37146: ;;// porth.porth:4759:21: OP_INLINED 36
addr_37147: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37148: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37149: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37150: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37151: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37152: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37153: ;;// porth.porth:4759:26: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_37154: ;;// porth.porth:4759:34: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_37155: ;;// porth.porth:4759:52: OP_INLINED 36
addr_37156: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37157: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37158: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37159: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37160: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37161: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37162: ;;// porth.porth:4759:57: OP_CALL 35291
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_35291
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_37163: ;;// porth.porth:4762:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_37164: ;;// porth.porth:4762:17: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_37165: ;;// porth.porth:4762:32: OP_INLINED 36
addr_37166: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37167: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37168: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37169: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37170: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37171: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37172: ;;// porth.porth:4762:37: OP_INLINED 161
addr_37173: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_37174: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37175: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_37176: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37177: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37178: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_37179: ;;// porth.porth:4763:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_37180: ;;// porth.porth:4763:17: OP_CALL 36455
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_36455
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_37181: ;;// porth.porth:4764:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_37182: ;;// porth.porth:4764:17: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_37183: ;;// porth.porth:4764:32: OP_INLINED 36
addr_37184: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37185: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37186: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37187: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37188: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37189: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37190: ;;// porth.porth:4764:37: OP_INLINED 169
addr_37191: ;;// std/core.porth:108:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_37192: ;;// std/core.porth:108:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37193: ;;// std/core.porth:108:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_37194: ;;// std/core.porth:108:36: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_37195: ;;// std/core.porth:108:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37196: ;;// std/core.porth:108:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_37197: ;;// porth.porth:4767:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_37198: ;;// porth.porth:4767:17: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_37199: ;;// porth.porth:4767:32: OP_INLINED 36
addr_37200: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37201: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37202: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37203: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37204: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37205: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37206: ;;// porth.porth:4768:9: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_37207: ;;// porth.porth:4769:11: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_37208: ;;// porth.porth:4769:14: OP_INLINED 16
addr_37209: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37210: ;;// porth.porth:4770:11: OP_PUSH_LOCAL_MEM 136
    mov rax, [ret_stack_rsp]
    add rax, 136
    push rax
addr_37211: ;;// porth.porth:4770:14: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_37212: ;;// porth.porth:4770:25: OP_INLINED 36
addr_37213: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37214: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37215: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37216: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37217: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37218: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37219: ;;// porth.porth:4770:30: OP_INLINED 16
addr_37220: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37221: ;;// porth.porth:4771:11: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37222: ;;// porth.porth:4772:11: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_37223: ;;// porth.porth:4772:14: OP_INLINED 30
addr_37224: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_37225: ;;// porth.porth:4773:9: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_37226: ;;// porth.porth:4774:9: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_37227: ;;// porth.porth:4775:7: OP_ELSE 98
    jmp addr_37325
addr_37228: ;;// porth.porth:4775:12: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_37229: ;;// porth.porth:4775:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_37230: ;;// porth.porth:4775:23: OP_INLINED 36
addr_37231: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37232: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37233: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37234: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37235: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37236: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37237: ;;// porth.porth:4775:28: OP_INLINED 16
addr_37238: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37239: ;;// porth.porth:4775:33: OP_PUSH_INT 11
    mov rax, 11
    push rax
addr_37240: ;;// porth.porth:4775:43: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_37241: ;;// porth.porth:4775:45: OP_IFSTAR 85
    pop rax
    test rax, rax
    jz addr_37326
addr_37242: ;;// porth.porth:4776:9: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_37243: ;;// porth.porth:4776:12: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_37244: ;;// porth.porth:4776:21: OP_INLINED 36
addr_37245: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37246: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37247: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37248: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37249: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37250: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37251: ;;// porth.porth:4776:26: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_37252: ;;// porth.porth:4776:34: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_37253: ;;// porth.porth:4776:52: OP_INLINED 36
addr_37254: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37255: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37256: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37257: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37258: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37259: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37260: ;;// porth.porth:4776:57: OP_CALL 35291
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_35291
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_37261: ;;// porth.porth:4779:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_37262: ;;// porth.porth:4779:17: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_37263: ;;// porth.porth:4779:32: OP_INLINED 36
addr_37264: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37265: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37266: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37267: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37268: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37269: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37270: ;;// porth.porth:4779:37: OP_INLINED 161
addr_37271: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_37272: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37273: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_37274: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37275: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37276: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_37277: ;;// porth.porth:4780:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_37278: ;;// porth.porth:4780:17: OP_CALL 36455
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_36455
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_37279: ;;// porth.porth:4781:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_37280: ;;// porth.porth:4781:17: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_37281: ;;// porth.porth:4781:32: OP_INLINED 36
addr_37282: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37283: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37284: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37285: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37286: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37287: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37288: ;;// porth.porth:4781:37: OP_INLINED 169
addr_37289: ;;// std/core.porth:108:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_37290: ;;// std/core.porth:108:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37291: ;;// std/core.porth:108:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_37292: ;;// std/core.porth:108:36: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_37293: ;;// std/core.porth:108:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37294: ;;// std/core.porth:108:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_37295: ;;// porth.porth:4784:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_37296: ;;// porth.porth:4784:17: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_37297: ;;// porth.porth:4784:32: OP_INLINED 36
addr_37298: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37299: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37300: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37301: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37302: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37303: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37304: ;;// porth.porth:4785:9: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_37305: ;;// porth.porth:4786:11: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_37306: ;;// porth.porth:4786:14: OP_INLINED 16
addr_37307: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37308: ;;// porth.porth:4787:11: OP_PUSH_LOCAL_MEM 136
    mov rax, [ret_stack_rsp]
    add rax, 136
    push rax
addr_37309: ;;// porth.porth:4787:14: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_37310: ;;// porth.porth:4787:25: OP_INLINED 36
addr_37311: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37312: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37313: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37314: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37315: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37316: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37317: ;;// porth.porth:4787:30: OP_INLINED 16
addr_37318: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37319: ;;// porth.porth:4788:11: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37320: ;;// porth.porth:4789:11: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_37321: ;;// porth.porth:4789:14: OP_INLINED 30
addr_37322: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_37323: ;;// porth.porth:4790:9: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_37324: ;;// porth.porth:4791:9: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_37325: ;;// porth.porth:4792:7: OP_ELSE 45
    jmp addr_37370
addr_37326: ;;// porth.porth:4792:12: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_37327: ;;// porth.porth:4792:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_37328: ;;// porth.porth:4792:23: OP_INLINED 36
addr_37329: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37330: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37331: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37332: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37333: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37334: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37335: ;;// porth.porth:4792:28: OP_INLINED 16
addr_37336: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37337: ;;// porth.porth:4792:33: OP_PUSH_INT 12
    mov rax, 12
    push rax
addr_37338: ;;// porth.porth:4792:41: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_37339: ;;// porth.porth:4792:43: OP_IFSTAR 32
    pop rax
    test rax, rax
    jz addr_37371
addr_37340: ;;// porth.porth:4793:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_37341: ;;// porth.porth:4793:17: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_37342: ;;// porth.porth:4793:32: OP_INLINED 36
addr_37343: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37344: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37345: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37346: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37347: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37348: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37349: ;;// porth.porth:4794:9: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_37350: ;;// porth.porth:4795:11: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_37351: ;;// porth.porth:4795:14: OP_INLINED 16
addr_37352: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37353: ;;// porth.porth:4796:11: OP_PUSH_LOCAL_MEM 136
    mov rax, [ret_stack_rsp]
    add rax, 136
    push rax
addr_37354: ;;// porth.porth:4796:14: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_37355: ;;// porth.porth:4796:25: OP_INLINED 36
addr_37356: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37357: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37358: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37359: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37360: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37361: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37362: ;;// porth.porth:4796:30: OP_INLINED 16
addr_37363: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37364: ;;// porth.porth:4797:11: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37365: ;;// porth.porth:4798:11: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_37366: ;;// porth.porth:4798:14: OP_INLINED 30
addr_37367: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_37368: ;;// porth.porth:4799:9: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_37369: ;;// porth.porth:4800:9: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_37370: ;;// porth.porth:4801:7: OP_ELSE 32
    jmp addr_37402
addr_37371: ;;// porth.porth:4801:12: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_37372: ;;// porth.porth:4801:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_37373: ;;// porth.porth:4801:23: OP_INLINED 36
addr_37374: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37375: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37376: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37377: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37378: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37379: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37380: ;;// porth.porth:4801:28: OP_INLINED 16
addr_37381: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37382: ;;// porth.porth:4801:33: OP_PUSH_INT 13
    mov rax, 13
    push rax
addr_37383: ;;// porth.porth:4801:43: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_37384: ;;// porth.porth:4801:45: OP_IFSTAR 19
    pop rax
    test rax, rax
    jz addr_37403
addr_37385: ;;// porth.porth:4802:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_37386: ;;// porth.porth:4802:17: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_37387: ;;// porth.porth:4802:32: OP_INLINED 36
addr_37388: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37389: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37390: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37391: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37392: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37393: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37394: ;;// porth.porth:4802:37: OP_INLINED 161
addr_37395: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_37396: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37397: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_37398: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37399: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37400: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_37401: ;;// porth.porth:4803:9: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_37402: ;;// porth.porth:4804:7: OP_ELSE 45
    jmp addr_37447
addr_37403: ;;// porth.porth:4804:12: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_37404: ;;// porth.porth:4804:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_37405: ;;// porth.porth:4804:23: OP_INLINED 36
addr_37406: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37407: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37408: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37409: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37410: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37411: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37412: ;;// porth.porth:4804:28: OP_INLINED 16
addr_37413: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37414: ;;// porth.porth:4804:33: OP_PUSH_INT 14
    mov rax, 14
    push rax
addr_37415: ;;// porth.porth:4804:46: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_37416: ;;// porth.porth:4804:48: OP_IFSTAR 32
    pop rax
    test rax, rax
    jz addr_37448
addr_37417: ;;// porth.porth:4805:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_37418: ;;// porth.porth:4805:17: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_37419: ;;// porth.porth:4805:32: OP_INLINED 36
addr_37420: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37421: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37422: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37423: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37424: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37425: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37426: ;;// porth.porth:4806:9: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_37427: ;;// porth.porth:4807:11: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_37428: ;;// porth.porth:4807:14: OP_INLINED 16
addr_37429: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37430: ;;// porth.porth:4808:11: OP_PUSH_LOCAL_MEM 136
    mov rax, [ret_stack_rsp]
    add rax, 136
    push rax
addr_37431: ;;// porth.porth:4808:14: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_37432: ;;// porth.porth:4808:25: OP_INLINED 36
addr_37433: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37434: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37435: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37436: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37437: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37438: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37439: ;;// porth.porth:4808:30: OP_INLINED 16
addr_37440: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37441: ;;// porth.porth:4809:11: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_37442: ;;// porth.porth:4810:11: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_37443: ;;// porth.porth:4810:14: OP_INLINED 30
addr_37444: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_37445: ;;// porth.porth:4811:9: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_37446: ;;// porth.porth:4812:9: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_37447: ;;// porth.porth:4813:7: OP_ELSE 32
    jmp addr_37479
addr_37448: ;;// porth.porth:4813:12: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_37449: ;;// porth.porth:4813:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_37450: ;;// porth.porth:4813:23: OP_INLINED 36
addr_37451: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37452: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37453: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37454: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37455: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37456: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37457: ;;// porth.porth:4813:28: OP_INLINED 16
addr_37458: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37459: ;;// porth.porth:4813:33: OP_PUSH_INT 15
    mov rax, 15
    push rax
addr_37460: ;;// porth.porth:4813:46: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_37461: ;;// porth.porth:4813:48: OP_IFSTAR 19
    pop rax
    test rax, rax
    jz addr_37480
addr_37462: ;;// porth.porth:4814:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_37463: ;;// porth.porth:4814:17: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_37464: ;;// porth.porth:4814:32: OP_INLINED 36
addr_37465: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37466: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37467: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37468: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37469: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37470: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37471: ;;// porth.porth:4814:37: OP_INLINED 161
addr_37472: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_37473: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37474: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_37475: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37476: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37477: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_37478: ;;// porth.porth:4815:9: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_37479: ;;// porth.porth:4816:7: OP_ELSE 16
    jmp addr_37495
addr_37480: ;;// porth.porth:4816:12: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_37481: ;;// porth.porth:4816:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_37482: ;;// porth.porth:4816:23: OP_INLINED 36
addr_37483: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37484: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37485: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37486: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37487: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37488: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37489: ;;// porth.porth:4816:28: OP_INLINED 16
addr_37490: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37491: ;;// porth.porth:4816:33: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_37492: ;;// porth.porth:4816:40: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_37493: ;;// porth.porth:4816:42: OP_IFSTAR 3
    pop rax
    test rax, rax
    jz addr_37496
addr_37494: ;;// porth.porth:4817:9: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_37495: ;;// porth.porth:4818:7: OP_ELSE 89
    jmp addr_37584
addr_37496: ;;// porth.porth:4818:12: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_37497: ;;// porth.porth:4818:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_37498: ;;// porth.porth:4818:23: OP_INLINED 36
addr_37499: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37500: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37501: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37502: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37503: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37504: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37505: ;;// porth.porth:4818:28: OP_INLINED 16
addr_37506: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37507: ;;// porth.porth:4818:33: OP_PUSH_INT 18
    mov rax, 18
    push rax
addr_37508: ;;// porth.porth:4818:48: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_37509: ;;// porth.porth:4818:50: OP_IFSTAR 76
    pop rax
    test rax, rax
    jz addr_37585
addr_37510: ;;// porth.porth:4819:9: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_37511: ;;// porth.porth:4819:12: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_37512: ;;// porth.porth:4819:23: OP_INLINED 36
addr_37513: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37514: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37515: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37516: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37517: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37518: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37519: ;;// porth.porth:4819:28: OP_INLINED 16
addr_37520: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37521: ;;// porth.porth:4819:33: OP_PUSH_INT 120
    mov rax, 120
    push rax
addr_37522: ;;// porth.porth:4819:46: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_37523: ;;// porth.porth:4819:48: OP_PUSH_GLOBAL_MEM 15073368
    lea rax, [mem+15073368]
    push rax
addr_37524: ;;// porth.porth:4819:54: OP_INLINED 73
addr_37525: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_37526: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37527: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_37528: ;;// porth.porth:4820:9: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_37529: ;;// porth.porth:4821:11: OP_PUSH_LOCAL_MEM 136
    mov rax, [ret_stack_rsp]
    add rax, 136
    push rax
addr_37530: ;;// porth.porth:4821:14: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_37531: ;;// porth.porth:4821:23: OP_INLINED 36
addr_37532: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37533: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37534: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37535: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37536: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37537: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37538: ;;// porth.porth:4822:11: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_37539: ;;// porth.porth:4822:19: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_37540: ;;// porth.porth:4822:37: OP_INLINED 36
addr_37541: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37542: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37543: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37544: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37545: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37546: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37547: ;;// porth.porth:4823:11: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_37548: ;;// porth.porth:4823:16: OP_PUSH_INT 72
    mov rax, 72
    push rax
addr_37549: ;;// porth.porth:4823:25: OP_INLINED 36
addr_37550: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37551: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37552: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37553: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37554: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37555: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37556: ;;// porth.porth:4824:11: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_37557: ;;// porth.porth:4824:16: OP_PUSH_INT 88
    mov rax, 88
    push rax
addr_37558: ;;// porth.porth:4824:26: OP_INLINED 36
addr_37559: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37560: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37561: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37562: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37563: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37564: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37565: ;;// porth.porth:4825:11: OP_CALL 34681
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_34681
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_37566: ;;// porth.porth:4826:9: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_37567: ;;// porth.porth:4827:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_37568: ;;// porth.porth:4827:17: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_37569: ;;// porth.porth:4827:32: OP_INLINED 36
addr_37570: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37571: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37572: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37573: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37574: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37575: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37576: ;;// porth.porth:4827:37: OP_INLINED 161
addr_37577: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_37578: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37579: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_37580: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37581: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37582: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_37583: ;;// porth.porth:4828:9: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_37584: ;;// porth.porth:4829:7: OP_ELSE 112
    jmp addr_37696
addr_37585: ;;// porth.porth:4829:12: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_37586: ;;// porth.porth:4829:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_37587: ;;// porth.porth:4829:23: OP_INLINED 36
addr_37588: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37589: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37590: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37591: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37592: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37593: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37594: ;;// porth.porth:4829:28: OP_INLINED 16
addr_37595: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37596: ;;// porth.porth:4829:33: OP_PUSH_INT 17
    mov rax, 17
    push rax
addr_37597: ;;// porth.porth:4829:41: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_37598: ;;// porth.porth:4829:43: OP_IFSTAR 99
    pop rax
    test rax, rax
    jz addr_37697
addr_37599: ;;// porth.porth:4830:9: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_37600: ;;// porth.porth:4830:12: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_37601: ;;// porth.porth:4830:21: OP_INLINED 36
addr_37602: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37603: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37604: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37605: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37606: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37607: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37608: ;;// porth.porth:4831:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_37609: ;;// porth.porth:4831:17: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_37610: ;;// porth.porth:4831:35: OP_INLINED 36
addr_37611: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37612: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37613: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37614: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37615: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37616: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37617: ;;// porth.porth:4832:9: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_37618: ;;// porth.porth:4832:12: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_37619: ;;// porth.porth:4832:23: OP_INLINED 36
addr_37620: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37621: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37622: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37623: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37624: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37625: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37626: ;;// porth.porth:4832:28: OP_INLINED 16
addr_37627: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37628: ;;// porth.porth:4832:33: OP_CALL 14146
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_14146
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_37629: ;;// porth.porth:4833:11: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_37630: ;;// porth.porth:4833:15: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_37631: ;;// porth.porth:4833:20: OP_INLINED 59
addr_37632: ;;// std/core.porth:52:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37633: ;;// std/core.porth:52:8: OP_INTRINSIC cast(int)
addr_37634: ;;// std/core.porth:53:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37635: ;;// std/core.porth:53:8: OP_INTRINSIC cast(int)
addr_37636: ;;// std/core.porth:54:3: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_37637: ;;// porth.porth:4833:25: OP_IF 22
    pop rax
    test rax, rax
    jz addr_37659
addr_37638: ;;// porth.porth:4834:13: OP_PUSH_STR 960
    mov rax, 19
    push rax
    lea rax, [str_960]
    push rax
addr_37639: ;;// porth.porth:4834:18: OP_INLINED 676
addr_37640: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_37641: ;;// std/std.porth:50:37: OP_INLINED 662
addr_37642: ;;// std/std.porth:48:34: OP_INLINED 394
addr_37643: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_37644: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_37645: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_37646: ;;// porth.porth:4834:24: OP_PUSH_STR 961
    mov rax, 125
    push rax
    lea rax, [str_961]
    push rax
addr_37647: ;;// porth.porth:4834:153: OP_INLINED 676
addr_37648: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_37649: ;;// std/std.porth:50:37: OP_INLINED 662
addr_37650: ;;// std/std.porth:48:34: OP_INLINED 394
addr_37651: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_37652: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_37653: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_37654: ;;// porth.porth:4835:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_37655: ;;// porth.porth:4835:15: OP_INLINED 418
addr_37656: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_37657: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_37658: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_37659: ;;// porth.porth:4836:11: OP_END_IF 0
addr_37660: ;;// porth.porth:4837:11: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_37661: ;;// porth.porth:4837:16: OP_PUSH_INT 72
    mov rax, 72
    push rax
addr_37662: ;;// porth.porth:4837:26: OP_INLINED 36
addr_37663: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37664: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37665: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37666: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37667: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37668: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37669: ;;// porth.porth:4838:11: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37670: ;;// porth.porth:4838:16: OP_PUSH_INT 88
    mov rax, 88
    push rax
addr_37671: ;;// porth.porth:4838:26: OP_INLINED 36
addr_37672: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37673: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37674: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37675: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37676: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37677: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37678: ;;// porth.porth:4839:9: OP_CALL 34681
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_34681
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_37679: ;;// porth.porth:4841:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_37680: ;;// porth.porth:4841:17: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_37681: ;;// porth.porth:4841:32: OP_INLINED 36
addr_37682: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37683: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37684: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37685: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37686: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37687: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37688: ;;// porth.porth:4841:37: OP_INLINED 161
addr_37689: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_37690: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37691: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_37692: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37693: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37694: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_37695: ;;// porth.porth:4843:9: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_37696: ;;// porth.porth:4844:7: OP_ELSE 43
    jmp addr_37739
addr_37697: ;;// porth.porth:4844:12: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_37698: ;;// porth.porth:4844:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_37699: ;;// porth.porth:4844:23: OP_INLINED 36
addr_37700: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37701: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37702: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37703: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37704: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37705: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37706: ;;// porth.porth:4844:28: OP_INLINED 16
addr_37707: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37708: ;;// porth.porth:4844:33: OP_PUSH_INT 23
    mov rax, 23
    push rax
addr_37709: ;;// porth.porth:4844:46: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_37710: ;;// porth.porth:4844:48: OP_IFSTAR 30
    pop rax
    test rax, rax
    jz addr_37740
addr_37711: ;;// porth.porth:4845:9: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_37712: ;;// porth.porth:4845:12: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_37713: ;;// porth.porth:4845:20: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_37714: ;;// porth.porth:4845:38: OP_INLINED 36
addr_37715: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37716: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37717: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37718: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37719: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37720: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37721: ;;// porth.porth:4845:43: OP_CALL 35571
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_35571
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_37722: ;;// porth.porth:4846:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_37723: ;;// porth.porth:4846:17: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_37724: ;;// porth.porth:4846:32: OP_INLINED 36
addr_37725: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37726: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37727: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37728: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37729: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37730: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37731: ;;// porth.porth:4846:37: OP_INLINED 161
addr_37732: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_37733: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37734: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_37735: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37736: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37737: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_37738: ;;// porth.porth:4848:9: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_37739: ;;// porth.porth:4849:7: OP_ELSE 54
    jmp addr_37793
addr_37740: ;;// porth.porth:4849:12: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_37741: ;;// porth.porth:4849:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_37742: ;;// porth.porth:4849:23: OP_INLINED 36
addr_37743: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37744: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37745: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37746: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37747: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37748: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37749: ;;// porth.porth:4849:28: OP_INLINED 16
addr_37750: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37751: ;;// porth.porth:4849:33: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_37752: ;;// porth.porth:4849:45: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_37753: ;;// porth.porth:4849:47: OP_IFSTAR 41
    pop rax
    test rax, rax
    jz addr_37794
addr_37754: ;;// porth.porth:4850:9: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_37755: ;;// porth.porth:4850:12: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_37756: ;;// porth.porth:4850:23: OP_INLINED 36
addr_37757: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37758: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37759: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37760: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37761: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37762: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37763: ;;// porth.porth:4850:28: OP_INLINED 16
addr_37764: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37765: ;;// porth.porth:4851:9: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_37766: ;;// porth.porth:4851:12: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_37767: ;;// porth.porth:4851:21: OP_INLINED 36
addr_37768: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37769: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37770: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37771: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37772: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37773: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37774: ;;// porth.porth:4852:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_37775: ;;// porth.porth:4853:9: OP_CALL 35987
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_35987
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_37776: ;;// porth.porth:4855:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_37777: ;;// porth.porth:4855:17: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_37778: ;;// porth.porth:4855:32: OP_INLINED 36
addr_37779: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37780: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37781: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37782: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37783: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37784: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37785: ;;// porth.porth:4855:37: OP_INLINED 161
addr_37786: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_37787: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37788: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_37789: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37790: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37791: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_37792: ;;// porth.porth:4856:9: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_37793: ;;// porth.porth:4857:7: OP_ELSE 54
    jmp addr_37847
addr_37794: ;;// porth.porth:4857:12: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_37795: ;;// porth.porth:4857:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_37796: ;;// porth.porth:4857:23: OP_INLINED 36
addr_37797: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37798: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37799: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37800: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37801: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37802: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37803: ;;// porth.porth:4857:28: OP_INLINED 16
addr_37804: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37805: ;;// porth.porth:4857:33: OP_PUSH_INT 25
    mov rax, 25
    push rax
addr_37806: ;;// porth.porth:4857:46: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_37807: ;;// porth.porth:4857:48: OP_IFSTAR 41
    pop rax
    test rax, rax
    jz addr_37848
addr_37808: ;;// porth.porth:4858:9: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_37809: ;;// porth.porth:4858:12: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_37810: ;;// porth.porth:4858:23: OP_INLINED 36
addr_37811: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37812: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37813: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37814: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37815: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37816: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37817: ;;// porth.porth:4858:28: OP_INLINED 16
addr_37818: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37819: ;;// porth.porth:4859:9: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_37820: ;;// porth.porth:4859:12: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_37821: ;;// porth.porth:4859:21: OP_INLINED 36
addr_37822: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37823: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37824: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37825: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37826: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37827: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37828: ;;// porth.porth:4860:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_37829: ;;// porth.porth:4861:9: OP_CALL 35754
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_35754
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_37830: ;;// porth.porth:4863:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_37831: ;;// porth.porth:4863:17: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_37832: ;;// porth.porth:4863:32: OP_INLINED 36
addr_37833: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37834: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37835: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37836: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37837: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37838: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37839: ;;// porth.porth:4863:37: OP_INLINED 161
addr_37840: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_37841: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37842: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_37843: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37844: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37845: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_37846: ;;// porth.porth:4864:9: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_37847: ;;// porth.porth:4865:7: OP_ELSE 54
    jmp addr_37901
addr_37848: ;;// porth.porth:4865:12: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_37849: ;;// porth.porth:4865:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_37850: ;;// porth.porth:4865:23: OP_INLINED 36
addr_37851: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37852: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37853: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37854: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37855: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37856: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37857: ;;// porth.porth:4865:28: OP_INLINED 16
addr_37858: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37859: ;;// porth.porth:4865:33: OP_PUSH_INT 27
    mov rax, 27
    push rax
addr_37860: ;;// porth.porth:4865:43: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_37861: ;;// porth.porth:4865:45: OP_IFSTAR 41
    pop rax
    test rax, rax
    jz addr_37902
addr_37862: ;;// porth.porth:4866:9: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_37863: ;;// porth.porth:4866:12: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_37864: ;;// porth.porth:4866:23: OP_INLINED 36
addr_37865: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37866: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37867: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37868: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37869: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37870: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37871: ;;// porth.porth:4866:28: OP_INLINED 16
addr_37872: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37873: ;;// porth.porth:4867:9: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_37874: ;;// porth.porth:4867:12: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_37875: ;;// porth.porth:4867:21: OP_INLINED 36
addr_37876: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37877: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37878: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37879: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37880: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37881: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37882: ;;// porth.porth:4868:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_37883: ;;// porth.porth:4869:9: OP_CALL 36242
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_36242
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_37884: ;;// porth.porth:4871:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_37885: ;;// porth.porth:4871:17: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_37886: ;;// porth.porth:4871:32: OP_INLINED 36
addr_37887: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37888: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37889: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37890: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37891: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37892: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37893: ;;// porth.porth:4871:37: OP_INLINED 161
addr_37894: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_37895: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37896: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_37897: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37898: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37899: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_37900: ;;// porth.porth:4872:9: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_37901: ;;// porth.porth:4873:7: OP_ELSE 54
    jmp addr_37955
addr_37902: ;;// porth.porth:4873:12: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_37903: ;;// porth.porth:4873:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_37904: ;;// porth.porth:4873:23: OP_INLINED 36
addr_37905: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37906: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37907: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37908: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37909: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37910: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37911: ;;// porth.porth:4873:28: OP_INLINED 16
addr_37912: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37913: ;;// porth.porth:4873:33: OP_PUSH_INT 26
    mov rax, 26
    push rax
addr_37914: ;;// porth.porth:4873:46: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_37915: ;;// porth.porth:4873:48: OP_IFSTAR 41
    pop rax
    test rax, rax
    jz addr_37956
addr_37916: ;;// porth.porth:4874:9: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_37917: ;;// porth.porth:4874:12: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_37918: ;;// porth.porth:4874:23: OP_INLINED 36
addr_37919: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37920: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37921: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37922: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37923: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37924: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37925: ;;// porth.porth:4874:28: OP_INLINED 16
addr_37926: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37927: ;;// porth.porth:4875:9: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_37928: ;;// porth.porth:4875:12: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_37929: ;;// porth.porth:4875:21: OP_INLINED 36
addr_37930: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37931: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37932: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37933: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37934: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37935: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37936: ;;// porth.porth:4876:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_37937: ;;// porth.porth:4877:9: OP_CALL 36331
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_36331
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_37938: ;;// porth.porth:4879:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_37939: ;;// porth.porth:4879:17: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_37940: ;;// porth.porth:4879:32: OP_INLINED 36
addr_37941: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37942: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37943: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37944: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37945: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37946: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37947: ;;// porth.porth:4879:37: OP_INLINED 161
addr_37948: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_37949: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37950: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_37951: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37952: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37953: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_37954: ;;// porth.porth:4880:9: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_37955: ;;// porth.porth:4881:7: OP_ELSE 174
    jmp addr_38129
addr_37956: ;;// porth.porth:4881:12: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_37957: ;;// porth.porth:4881:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_37958: ;;// porth.porth:4881:23: OP_INLINED 36
addr_37959: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37960: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37961: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37962: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37963: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37964: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37965: ;;// porth.porth:4881:28: OP_INLINED 16
addr_37966: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37967: ;;// porth.porth:4881:33: OP_PUSH_INT 19
    mov rax, 19
    push rax
addr_37968: ;;// porth.porth:4881:44: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_37969: ;;// porth.porth:4881:46: OP_IFSTAR 161
    pop rax
    test rax, rax
    jz addr_38130
addr_37970: ;;// porth.porth:4882:9: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_37971: ;;// porth.porth:4882:12: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_37972: ;;// porth.porth:4882:21: OP_INLINED 36
addr_37973: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37974: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37975: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37976: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37977: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37978: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37979: ;;// porth.porth:4883:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_37980: ;;// porth.porth:4883:17: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_37981: ;;// porth.porth:4883:35: OP_INLINED 36
addr_37982: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37983: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37984: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37985: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37986: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37987: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37988: ;;// porth.porth:4884:9: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_37989: ;;// porth.porth:4884:12: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_37990: ;;// porth.porth:4884:23: OP_INLINED 36
addr_37991: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37992: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_37993: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_37994: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_37995: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_37996: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_37997: ;;// porth.porth:4884:28: OP_INLINED 16
addr_37998: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_37999: ;;// porth.porth:4884:33: OP_CALL 14146
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_14146
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_38000: ;;// porth.porth:4885:11: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_38001: ;;// porth.porth:4885:15: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_38002: ;;// porth.porth:4885:20: OP_INLINED 59
addr_38003: ;;// std/core.porth:52:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38004: ;;// std/core.porth:52:8: OP_INTRINSIC cast(int)
addr_38005: ;;// std/core.porth:53:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38006: ;;// std/core.porth:53:8: OP_INTRINSIC cast(int)
addr_38007: ;;// std/core.porth:54:3: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_38008: ;;// porth.porth:4885:25: OP_IF 22
    pop rax
    test rax, rax
    jz addr_38030
addr_38009: ;;// porth.porth:4886:13: OP_PUSH_STR 962
    mov rax, 19
    push rax
    lea rax, [str_962]
    push rax
addr_38010: ;;// porth.porth:4886:18: OP_INLINED 676
addr_38011: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_38012: ;;// std/std.porth:50:37: OP_INLINED 662
addr_38013: ;;// std/std.porth:48:34: OP_INLINED 394
addr_38014: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_38015: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_38016: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_38017: ;;// porth.porth:4886:24: OP_PUSH_STR 963
    mov rax, 125
    push rax
    lea rax, [str_963]
    push rax
addr_38018: ;;// porth.porth:4886:153: OP_INLINED 676
addr_38019: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_38020: ;;// std/std.porth:50:37: OP_INLINED 662
addr_38021: ;;// std/std.porth:48:34: OP_INLINED 394
addr_38022: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_38023: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_38024: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_38025: ;;// porth.porth:4887:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_38026: ;;// porth.porth:4887:15: OP_INLINED 418
addr_38027: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_38028: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_38029: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_38030: ;;// porth.porth:4888:11: OP_END_IF 0
addr_38031: ;;// porth.porth:4889:11: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_38032: ;;// porth.porth:4889:16: OP_PUSH_INT 72
    mov rax, 72
    push rax
addr_38033: ;;// porth.porth:4889:26: OP_INLINED 36
addr_38034: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38035: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38036: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38037: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38038: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38039: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38040: ;;// porth.porth:4890:11: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38041: ;;// porth.porth:4890:16: OP_PUSH_INT 88
    mov rax, 88
    push rax
addr_38042: ;;// porth.porth:4890:26: OP_INLINED 36
addr_38043: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38044: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38045: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38046: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38047: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38048: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38049: ;;// porth.porth:4891:9: OP_CALL 34681
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_34681
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_38050: ;;// porth.porth:4893:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_38051: ;;// porth.porth:4893:17: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_38052: ;;// porth.porth:4893:32: OP_INLINED 36
addr_38053: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38054: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38055: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38056: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38057: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38058: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38059: ;;// porth.porth:4893:37: OP_INLINED 16
addr_38060: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_38061: ;;// porth.porth:4894:9: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_38062: ;;// porth.porth:4894:12: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_38063: ;;// porth.porth:4894:23: OP_INLINED 36
addr_38064: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38065: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38066: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38067: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38068: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38069: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38070: ;;// porth.porth:4894:28: OP_INLINED 16
addr_38071: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_38072: ;;// porth.porth:4894:33: OP_CALL 14146
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_14146
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_38073: ;;// porth.porth:4895:9: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_38074: ;;// porth.porth:4895:13: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_38075: ;;// porth.porth:4895:18: OP_INLINED 59
addr_38076: ;;// std/core.porth:52:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38077: ;;// std/core.porth:52:8: OP_INTRINSIC cast(int)
addr_38078: ;;// std/core.porth:53:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38079: ;;// std/core.porth:53:8: OP_INTRINSIC cast(int)
addr_38080: ;;// std/core.porth:54:3: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_38081: ;;// porth.porth:4895:23: OP_IF 22
    pop rax
    test rax, rax
    jz addr_38103
addr_38082: ;;// porth.porth:4896:11: OP_PUSH_STR 964
    mov rax, 19
    push rax
    lea rax, [str_964]
    push rax
addr_38083: ;;// porth.porth:4896:16: OP_INLINED 676
addr_38084: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_38085: ;;// std/std.porth:50:37: OP_INLINED 662
addr_38086: ;;// std/std.porth:48:34: OP_INLINED 394
addr_38087: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_38088: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_38089: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_38090: ;;// porth.porth:4896:22: OP_PUSH_STR 965
    mov rax, 125
    push rax
    lea rax, [str_965]
    push rax
addr_38091: ;;// porth.porth:4896:151: OP_INLINED 676
addr_38092: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_38093: ;;// std/std.porth:50:37: OP_INLINED 662
addr_38094: ;;// std/std.porth:48:34: OP_INLINED 394
addr_38095: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_38096: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_38097: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_38098: ;;// porth.porth:4897:11: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_38099: ;;// porth.porth:4897:13: OP_INLINED 418
addr_38100: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_38101: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_38102: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_38103: ;;// porth.porth:4898:9: OP_END_IF 0
addr_38104: ;;// porth.porth:4899:9: OP_PUSH_INT 112
    mov rax, 112
    push rax
addr_38105: ;;// porth.porth:4899:19: OP_INLINED 36
addr_38106: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38107: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38108: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38109: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38110: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38111: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38112: ;;// porth.porth:4899:24: OP_INLINED 16
addr_38113: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_38114: ;;// porth.porth:4899:29: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38115: ;;// porth.porth:4900:9: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_38116: ;;// porth.porth:4900:11: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38117: ;;// porth.porth:4901:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_38118: ;;// porth.porth:4901:17: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_38119: ;;// porth.porth:4901:32: OP_INLINED 36
addr_38120: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38121: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38122: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38123: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38124: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38125: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38126: ;;// porth.porth:4901:37: OP_INLINED 30
addr_38127: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_38128: ;;// porth.porth:4903:9: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_38129: ;;// porth.porth:4904:7: OP_ELSE 126
    jmp addr_38255
addr_38130: ;;// porth.porth:4904:12: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_38131: ;;// porth.porth:4904:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_38132: ;;// porth.porth:4904:23: OP_INLINED 36
addr_38133: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38134: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38135: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38136: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38137: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38138: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38139: ;;// porth.porth:4904:28: OP_INLINED 16
addr_38140: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_38141: ;;// porth.porth:4904:33: OP_PUSH_INT 20
    mov rax, 20
    push rax
addr_38142: ;;// porth.porth:4904:42: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_38143: ;;// porth.porth:4904:44: OP_IFSTAR 113
    pop rax
    test rax, rax
    jz addr_38256
addr_38144: ;;// porth.porth:4905:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_38145: ;;// porth.porth:4905:17: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_38146: ;;// porth.porth:4905:32: OP_INLINED 36
addr_38147: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38148: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38149: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38150: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38151: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38152: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38153: ;;// porth.porth:4905:37: OP_INLINED 16
addr_38154: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_38155: ;;// porth.porth:4906:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_38156: ;;// porth.porth:4906:17: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_38157: ;;// porth.porth:4906:44: OP_INLINED 36
addr_38158: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38159: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38160: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38161: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38162: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38163: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38164: ;;// porth.porth:4906:49: OP_INLINED 16
addr_38165: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_38166: ;;// porth.porth:4906:54: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_38167: ;;// porth.porth:4906:57: OP_IF 86
    pop rax
    test rax, rax
    jz addr_38253
addr_38168: ;;// porth.porth:4907:11: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_38169: ;;// porth.porth:4907:19: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_38170: ;;// porth.porth:4907:37: OP_INLINED 36
addr_38171: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38172: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38173: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38174: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38175: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38176: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38177: ;;// porth.porth:4908:11: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_38178: ;;// porth.porth:4908:19: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_38179: ;;// porth.porth:4908:34: OP_INLINED 36
addr_38180: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38181: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38182: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38183: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38184: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38185: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38186: ;;// porth.porth:4908:39: OP_INLINED 16
addr_38187: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_38188: ;;// porth.porth:4908:44: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_38189: ;;// porth.porth:4908:46: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38190: ;;// porth.porth:4909:11: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_38191: ;;// porth.porth:4909:19: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_38192: ;;// porth.porth:4909:37: OP_INLINED 36
addr_38193: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38194: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38195: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38196: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38197: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38198: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38199: ;;// porth.porth:4910:11: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_38200: ;;// porth.porth:4910:19: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_38201: ;;// porth.porth:4910:34: OP_INLINED 36
addr_38202: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38203: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38204: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38205: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38206: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38207: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38208: ;;// porth.porth:4910:39: OP_INLINED 16
addr_38209: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_38210: ;;// porth.porth:4911:11: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_38211: ;;// porth.porth:4911:19: OP_PUSH_INT 48
    mov rax, 48
    push rax
addr_38212: ;;// porth.porth:4911:35: OP_INLINED 36
addr_38213: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38214: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38215: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38216: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38217: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38218: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38219: ;;// porth.porth:4912:11: OP_PUSH_LOCAL_MEM 64
    mov rax, [ret_stack_rsp]
    add rax, 64
    push rax
addr_38220: ;;// porth.porth:4913:11: OP_CALL 35669
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_35669
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_38221: ;;// porth.porth:4914:11: OP_CALL 36455
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_36455
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_38222: ;;// porth.porth:4916:11: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_38223: ;;// porth.porth:4916:19: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_38224: ;;// porth.porth:4916:34: OP_INLINED 36
addr_38225: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38226: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38227: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38228: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38229: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38230: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38231: ;;// porth.porth:4917:11: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_38232: ;;// porth.porth:4918:13: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_38233: ;;// porth.porth:4918:16: OP_INLINED 16
addr_38234: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_38235: ;;// porth.porth:4919:13: OP_PUSH_LOCAL_MEM 136
    mov rax, [ret_stack_rsp]
    add rax, 136
    push rax
addr_38236: ;;// porth.porth:4919:16: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_38237: ;;// porth.porth:4919:27: OP_INLINED 36
addr_38238: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38239: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38240: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38241: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38242: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38243: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38244: ;;// porth.porth:4919:32: OP_INLINED 16
addr_38245: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_38246: ;;// porth.porth:4919:37: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38247: ;;// porth.porth:4920:13: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_38248: ;;// porth.porth:4920:16: OP_INLINED 30
addr_38249: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_38250: ;;// porth.porth:4921:11: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_38251: ;;// porth.porth:4922:11: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_38252: ;;// porth.porth:4923:9: OP_ELSE 2
    jmp addr_38254
addr_38253: ;;// porth.porth:4924:11: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_38254: ;;// porth.porth:4925:9: OP_END_IF 0
addr_38255: ;;// porth.porth:4926:7: OP_ELSE 69
    jmp addr_38324
addr_38256: ;;// porth.porth:4926:12: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_38257: ;;// porth.porth:4926:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_38258: ;;// porth.porth:4926:23: OP_INLINED 36
addr_38259: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38260: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38261: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38262: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38263: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38264: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38265: ;;// porth.porth:4926:28: OP_INLINED 16
addr_38266: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_38267: ;;// porth.porth:4926:33: OP_PUSH_INT 21
    mov rax, 21
    push rax
addr_38268: ;;// porth.porth:4926:39: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_38269: ;;// porth.porth:4926:41: OP_IFSTAR 56
    pop rax
    test rax, rax
    jz addr_38325
addr_38270: ;;// porth.porth:4927:9: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_38271: ;;// porth.porth:4927:12: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_38272: ;;// porth.porth:4927:21: OP_INLINED 36
addr_38273: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38274: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38275: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38276: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38277: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38278: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38279: ;;// porth.porth:4927:26: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_38280: ;;// porth.porth:4927:34: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_38281: ;;// porth.porth:4927:52: OP_INLINED 36
addr_38282: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38283: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38284: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38285: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38286: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38287: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38288: ;;// porth.porth:4927:57: OP_CALL 35291
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_35291
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_38289: ;;// porth.porth:4930:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_38290: ;;// porth.porth:4930:17: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_38291: ;;// porth.porth:4930:32: OP_INLINED 36
addr_38292: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38293: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38294: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38295: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38296: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38297: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38298: ;;// porth.porth:4930:37: OP_INLINED 161
addr_38299: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_38300: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_38301: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_38302: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38303: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38304: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_38305: ;;// porth.porth:4931:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_38306: ;;// porth.porth:4931:17: OP_CALL 36455
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_36455
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_38307: ;;// porth.porth:4932:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_38308: ;;// porth.porth:4932:17: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_38309: ;;// porth.porth:4932:32: OP_INLINED 36
addr_38310: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38311: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38312: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38313: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38314: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38315: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38316: ;;// porth.porth:4932:37: OP_INLINED 169
addr_38317: ;;// std/core.porth:108:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_38318: ;;// std/core.porth:108:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_38319: ;;// std/core.porth:108:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_38320: ;;// std/core.porth:108:36: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_38321: ;;// std/core.porth:108:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38322: ;;// std/core.porth:108:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_38323: ;;// porth.porth:4935:9: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_38324: ;;// porth.porth:4936:7: OP_ELSE 1954
    jmp addr_40278
addr_38325: ;;// porth.porth:4936:12: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_38326: ;;// porth.porth:4936:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_38327: ;;// porth.porth:4936:23: OP_INLINED 36
addr_38328: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38329: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38330: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38331: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38332: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38333: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38334: ;;// porth.porth:4936:28: OP_INLINED 16
addr_38335: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_38336: ;;// porth.porth:4936:33: OP_PUSH_INT 22
    mov rax, 22
    push rax
addr_38337: ;;// porth.porth:4936:46: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_38338: ;;// porth.porth:4936:48: OP_IFSTAR 1941
    pop rax
    test rax, rax
    jz addr_40279
addr_38339: ;;// porth.porth:4939:9: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_38340: ;;// porth.porth:4939:12: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_38341: ;;// porth.porth:4939:23: OP_INLINED 36
addr_38342: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38343: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38344: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38345: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38346: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38347: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38348: ;;// porth.porth:4939:28: OP_INLINED 16
addr_38349: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_38350: ;;// porth.porth:4940:11: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_38351: ;;// porth.porth:4940:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_38352: ;;// porth.porth:4940:30: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_38353: ;;// porth.porth:4940:32: OP_IF 22
    pop rax
    test rax, rax
    jz addr_38375
addr_38354: ;;// porth.porth:4941:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_38355: ;;// porth.porth:4941:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_38356: ;;// porth.porth:4941:25: OP_INLINED 36
addr_38357: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38358: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38359: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38360: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38361: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38362: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38363: ;;// porth.porth:4941:30: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_38364: ;;// porth.porth:4941:38: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_38365: ;;// porth.porth:4941:56: OP_INLINED 36
addr_38366: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38367: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38368: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38369: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38370: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38371: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38372: ;;// porth.porth:4941:61: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_38373: ;;// porth.porth:4941:74: OP_CALL 35232
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_35232
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_38374: ;;// porth.porth:4942:11: OP_ELSE 25
    jmp addr_38399
addr_38375: ;;// porth.porth:4942:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_38376: ;;// porth.porth:4942:20: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_38377: ;;// porth.porth:4942:39: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_38378: ;;// porth.porth:4942:41: OP_IFSTAR 22
    pop rax
    test rax, rax
    jz addr_38400
addr_38379: ;;// porth.porth:4943:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_38380: ;;// porth.porth:4943:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_38381: ;;// porth.porth:4943:25: OP_INLINED 36
addr_38382: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38383: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38384: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38385: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38386: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38387: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38388: ;;// porth.porth:4943:30: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_38389: ;;// porth.porth:4943:38: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_38390: ;;// porth.porth:4943:56: OP_INLINED 36
addr_38391: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38392: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38393: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38394: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38395: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38396: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38397: ;;// porth.porth:4943:61: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_38398: ;;// porth.porth:4943:76: OP_CALL 35232
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_35232
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_38399: ;;// porth.porth:4944:11: OP_ELSE 25
    jmp addr_38424
addr_38400: ;;// porth.porth:4944:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_38401: ;;// porth.porth:4944:20: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_38402: ;;// porth.porth:4944:39: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_38403: ;;// porth.porth:4944:41: OP_IFSTAR 22
    pop rax
    test rax, rax
    jz addr_38425
addr_38404: ;;// porth.porth:4945:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_38405: ;;// porth.porth:4945:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_38406: ;;// porth.porth:4945:25: OP_INLINED 36
addr_38407: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38408: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38409: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38410: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38411: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38412: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38413: ;;// porth.porth:4945:30: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_38414: ;;// porth.porth:4945:38: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_38415: ;;// porth.porth:4945:56: OP_INLINED 36
addr_38416: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38417: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38418: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38419: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38420: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38421: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38422: ;;// porth.porth:4945:61: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_38423: ;;// porth.porth:4945:77: OP_CALL 35232
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_35232
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_38424: ;;// porth.porth:4946:11: OP_ELSE 25
    jmp addr_38449
addr_38425: ;;// porth.porth:4946:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_38426: ;;// porth.porth:4946:20: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_38427: ;;// porth.porth:4946:36: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_38428: ;;// porth.porth:4946:38: OP_IFSTAR 22
    pop rax
    test rax, rax
    jz addr_38450
addr_38429: ;;// porth.porth:4947:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_38430: ;;// porth.porth:4947:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_38431: ;;// porth.porth:4947:25: OP_INLINED 36
addr_38432: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38433: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38434: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38435: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38436: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38437: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38438: ;;// porth.porth:4947:30: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_38439: ;;// porth.porth:4947:38: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_38440: ;;// porth.porth:4947:56: OP_INLINED 36
addr_38441: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38442: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38443: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38444: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38445: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38446: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38447: ;;// porth.porth:4947:61: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_38448: ;;// porth.porth:4947:74: OP_CALL 35232
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_35232
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_38449: ;;// porth.porth:4948:11: OP_ELSE 25
    jmp addr_38474
addr_38450: ;;// porth.porth:4948:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_38451: ;;// porth.porth:4948:20: OP_PUSH_INT 4
    mov rax, 4
    push rax
addr_38452: ;;// porth.porth:4948:34: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_38453: ;;// porth.porth:4948:36: OP_IFSTAR 22
    pop rax
    test rax, rax
    jz addr_38475
addr_38454: ;;// porth.porth:4949:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_38455: ;;// porth.porth:4949:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_38456: ;;// porth.porth:4949:25: OP_INLINED 36
addr_38457: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38458: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38459: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38460: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38461: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38462: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38463: ;;// porth.porth:4949:30: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_38464: ;;// porth.porth:4949:38: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_38465: ;;// porth.porth:4949:56: OP_INLINED 36
addr_38466: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38467: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38468: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38469: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38470: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38471: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38472: ;;// porth.porth:4949:61: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_38473: ;;// porth.porth:4949:74: OP_CALL 35232
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_35232
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_38474: ;;// porth.porth:4950:11: OP_ELSE 24
    jmp addr_38498
addr_38475: ;;// porth.porth:4950:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_38476: ;;// porth.porth:4950:20: OP_PUSH_INT 5
    mov rax, 5
    push rax
addr_38477: ;;// porth.porth:4950:37: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_38478: ;;// porth.porth:4950:39: OP_IFSTAR 21
    pop rax
    test rax, rax
    jz addr_38499
addr_38479: ;;// porth.porth:4951:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_38480: ;;// porth.porth:4951:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_38481: ;;// porth.porth:4951:25: OP_INLINED 36
addr_38482: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38483: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38484: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38485: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38486: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38487: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38488: ;;// porth.porth:4951:30: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_38489: ;;// porth.porth:4951:38: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_38490: ;;// porth.porth:4951:56: OP_INLINED 36
addr_38491: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38492: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38493: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38494: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38495: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38496: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38497: ;;// porth.porth:4951:61: OP_CALL 35504
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_35504
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_38498: ;;// porth.porth:4952:11: OP_ELSE 24
    jmp addr_38522
addr_38499: ;;// porth.porth:4952:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_38500: ;;// porth.porth:4952:20: OP_PUSH_INT 6
    mov rax, 6
    push rax
addr_38501: ;;// porth.porth:4952:38: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_38502: ;;// porth.porth:4952:40: OP_IFSTAR 21
    pop rax
    test rax, rax
    jz addr_38523
addr_38503: ;;// porth.porth:4953:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_38504: ;;// porth.porth:4953:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_38505: ;;// porth.porth:4953:25: OP_INLINED 36
addr_38506: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38507: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38508: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38509: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38510: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38511: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38512: ;;// porth.porth:4953:30: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_38513: ;;// porth.porth:4953:38: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_38514: ;;// porth.porth:4953:56: OP_INLINED 36
addr_38515: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38516: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38517: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38518: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38519: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38520: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38521: ;;// porth.porth:4953:61: OP_CALL 35504
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_35504
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_38522: ;;// porth.porth:4954:11: OP_ELSE 25
    jmp addr_38547
addr_38523: ;;// porth.porth:4954:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_38524: ;;// porth.porth:4954:20: OP_PUSH_INT 7
    mov rax, 7
    push rax
addr_38525: ;;// porth.porth:4954:34: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_38526: ;;// porth.porth:4954:36: OP_IFSTAR 22
    pop rax
    test rax, rax
    jz addr_38548
addr_38527: ;;// porth.porth:4955:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_38528: ;;// porth.porth:4955:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_38529: ;;// porth.porth:4955:25: OP_INLINED 36
addr_38530: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38531: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38532: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38533: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38534: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38535: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38536: ;;// porth.porth:4955:30: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_38537: ;;// porth.porth:4955:38: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_38538: ;;// porth.porth:4955:56: OP_INLINED 36
addr_38539: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38540: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38541: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38542: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38543: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38544: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38545: ;;// porth.porth:4955:61: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_38546: ;;// porth.porth:4955:74: OP_CALL 35232
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_35232
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_38547: ;;// porth.porth:4956:11: OP_ELSE 24
    jmp addr_38571
addr_38548: ;;// porth.porth:4956:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_38549: ;;// porth.porth:4956:20: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_38550: ;;// porth.porth:4956:33: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_38551: ;;// porth.porth:4956:35: OP_IFSTAR 21
    pop rax
    test rax, rax
    jz addr_38572
addr_38552: ;;// porth.porth:4957:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_38553: ;;// porth.porth:4957:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_38554: ;;// porth.porth:4957:25: OP_INLINED 36
addr_38555: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38556: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38557: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38558: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38559: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38560: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38561: ;;// porth.porth:4957:30: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_38562: ;;// porth.porth:4957:38: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_38563: ;;// porth.porth:4957:56: OP_INLINED 36
addr_38564: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38565: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38566: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38567: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38568: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38569: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38570: ;;// porth.porth:4957:61: OP_CALL 35449
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_35449
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_38571: ;;// porth.porth:4958:11: OP_ELSE 24
    jmp addr_38595
addr_38572: ;;// porth.porth:4958:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_38573: ;;// porth.porth:4958:20: OP_PUSH_INT 9
    mov rax, 9
    push rax
addr_38574: ;;// porth.porth:4958:33: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_38575: ;;// porth.porth:4958:35: OP_IFSTAR 21
    pop rax
    test rax, rax
    jz addr_38596
addr_38576: ;;// porth.porth:4959:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_38577: ;;// porth.porth:4959:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_38578: ;;// porth.porth:4959:25: OP_INLINED 36
addr_38579: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38580: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38581: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38582: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38583: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38584: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38585: ;;// porth.porth:4959:30: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_38586: ;;// porth.porth:4959:38: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_38587: ;;// porth.porth:4959:56: OP_INLINED 36
addr_38588: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38589: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38590: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38591: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38592: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38593: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38594: ;;// porth.porth:4959:61: OP_CALL 35449
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_35449
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_38595: ;;// porth.porth:4960:11: OP_ELSE 24
    jmp addr_38619
addr_38596: ;;// porth.porth:4960:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_38597: ;;// porth.porth:4960:20: OP_PUSH_INT 10
    mov rax, 10
    push rax
addr_38598: ;;// porth.porth:4960:33: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_38599: ;;// porth.porth:4960:35: OP_IFSTAR 21
    pop rax
    test rax, rax
    jz addr_38620
addr_38600: ;;// porth.porth:4961:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_38601: ;;// porth.porth:4961:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_38602: ;;// porth.porth:4961:25: OP_INLINED 36
addr_38603: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38604: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38605: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38606: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38607: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38608: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38609: ;;// porth.porth:4961:30: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_38610: ;;// porth.porth:4961:38: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_38611: ;;// porth.porth:4961:56: OP_INLINED 36
addr_38612: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38613: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38614: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38615: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38616: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38617: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38618: ;;// porth.porth:4961:61: OP_CALL 35449
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_35449
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_38619: ;;// porth.porth:4962:11: OP_ELSE 24
    jmp addr_38643
addr_38620: ;;// porth.porth:4962:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_38621: ;;// porth.porth:4962:20: OP_PUSH_INT 11
    mov rax, 11
    push rax
addr_38622: ;;// porth.porth:4962:33: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_38623: ;;// porth.porth:4962:35: OP_IFSTAR 21
    pop rax
    test rax, rax
    jz addr_38644
addr_38624: ;;// porth.porth:4963:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_38625: ;;// porth.porth:4963:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_38626: ;;// porth.porth:4963:25: OP_INLINED 36
addr_38627: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38628: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38629: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38630: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38631: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38632: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38633: ;;// porth.porth:4963:30: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_38634: ;;// porth.porth:4963:38: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_38635: ;;// porth.porth:4963:56: OP_INLINED 36
addr_38636: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38637: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38638: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38639: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38640: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38641: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38642: ;;// porth.porth:4963:61: OP_CALL 35449
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_35449
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_38643: ;;// porth.porth:4964:11: OP_ELSE 24
    jmp addr_38667
addr_38644: ;;// porth.porth:4964:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_38645: ;;// porth.porth:4964:20: OP_PUSH_INT 12
    mov rax, 12
    push rax
addr_38646: ;;// porth.porth:4964:33: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_38647: ;;// porth.porth:4964:35: OP_IFSTAR 21
    pop rax
    test rax, rax
    jz addr_38668
addr_38648: ;;// porth.porth:4965:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_38649: ;;// porth.porth:4965:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_38650: ;;// porth.porth:4965:25: OP_INLINED 36
addr_38651: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38652: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38653: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38654: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38655: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38656: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38657: ;;// porth.porth:4965:30: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_38658: ;;// porth.porth:4965:38: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_38659: ;;// porth.porth:4965:56: OP_INLINED 36
addr_38660: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38661: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38662: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38663: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38664: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38665: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38666: ;;// porth.porth:4965:61: OP_CALL 35449
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_35449
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_38667: ;;// porth.porth:4966:11: OP_ELSE 24
    jmp addr_38691
addr_38668: ;;// porth.porth:4966:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_38669: ;;// porth.porth:4966:20: OP_PUSH_INT 13
    mov rax, 13
    push rax
addr_38670: ;;// porth.porth:4966:33: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_38671: ;;// porth.porth:4966:35: OP_IFSTAR 21
    pop rax
    test rax, rax
    jz addr_38692
addr_38672: ;;// porth.porth:4967:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_38673: ;;// porth.porth:4967:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_38674: ;;// porth.porth:4967:25: OP_INLINED 36
addr_38675: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38676: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38677: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38678: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38679: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38680: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38681: ;;// porth.porth:4967:30: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_38682: ;;// porth.porth:4967:38: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_38683: ;;// porth.porth:4967:56: OP_INLINED 36
addr_38684: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38685: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38686: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38687: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38688: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38689: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38690: ;;// porth.porth:4967:61: OP_CALL 35449
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_35449
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_38691: ;;// porth.porth:4968:11: OP_ELSE 25
    jmp addr_38716
addr_38692: ;;// porth.porth:4968:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_38693: ;;// porth.porth:4968:20: OP_PUSH_INT 14
    mov rax, 14
    push rax
addr_38694: ;;// porth.porth:4968:34: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_38695: ;;// porth.porth:4968:36: OP_IFSTAR 22
    pop rax
    test rax, rax
    jz addr_38717
addr_38696: ;;// porth.porth:4969:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_38697: ;;// porth.porth:4969:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_38698: ;;// porth.porth:4969:25: OP_INLINED 36
addr_38699: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38700: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38701: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38702: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38703: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38704: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38705: ;;// porth.porth:4969:30: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_38706: ;;// porth.porth:4969:38: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_38707: ;;// porth.porth:4969:56: OP_INLINED 36
addr_38708: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38709: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38710: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38711: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38712: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38713: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38714: ;;// porth.porth:4969:61: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_38715: ;;// porth.porth:4969:74: OP_CALL 35232
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_35232
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_38716: ;;// porth.porth:4970:11: OP_ELSE 25
    jmp addr_38741
addr_38717: ;;// porth.porth:4970:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_38718: ;;// porth.porth:4970:20: OP_PUSH_INT 15
    mov rax, 15
    push rax
addr_38719: ;;// porth.porth:4970:34: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_38720: ;;// porth.porth:4970:36: OP_IFSTAR 22
    pop rax
    test rax, rax
    jz addr_38742
addr_38721: ;;// porth.porth:4971:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_38722: ;;// porth.porth:4971:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_38723: ;;// porth.porth:4971:25: OP_INLINED 36
addr_38724: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38725: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38726: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38727: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38728: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38729: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38730: ;;// porth.porth:4971:30: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_38731: ;;// porth.porth:4971:38: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_38732: ;;// porth.porth:4971:56: OP_INLINED 36
addr_38733: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38734: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38735: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38736: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38737: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38738: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38739: ;;// porth.porth:4971:61: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_38740: ;;// porth.porth:4971:74: OP_CALL 35232
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_35232
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_38741: ;;// porth.porth:4972:11: OP_ELSE 25
    jmp addr_38766
addr_38742: ;;// porth.porth:4972:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_38743: ;;// porth.porth:4972:20: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_38744: ;;// porth.porth:4972:33: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_38745: ;;// porth.porth:4972:35: OP_IFSTAR 22
    pop rax
    test rax, rax
    jz addr_38767
addr_38746: ;;// porth.porth:4973:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_38747: ;;// porth.porth:4973:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_38748: ;;// porth.porth:4973:25: OP_INLINED 36
addr_38749: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38750: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38751: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38752: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38753: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38754: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38755: ;;// porth.porth:4973:30: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_38756: ;;// porth.porth:4973:38: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_38757: ;;// porth.porth:4973:56: OP_INLINED 36
addr_38758: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38759: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38760: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38761: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38762: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38763: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38764: ;;// porth.porth:4973:61: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_38765: ;;// porth.porth:4973:74: OP_CALL 35232
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_35232
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_38766: ;;// porth.porth:4974:11: OP_ELSE 25
    jmp addr_38791
addr_38767: ;;// porth.porth:4974:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_38768: ;;// porth.porth:4974:20: OP_PUSH_INT 17
    mov rax, 17
    push rax
addr_38769: ;;// porth.porth:4974:34: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_38770: ;;// porth.porth:4974:36: OP_IFSTAR 22
    pop rax
    test rax, rax
    jz addr_38792
addr_38771: ;;// porth.porth:4975:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_38772: ;;// porth.porth:4975:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_38773: ;;// porth.porth:4975:25: OP_INLINED 36
addr_38774: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38775: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38776: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38777: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38778: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38779: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38780: ;;// porth.porth:4975:30: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_38781: ;;// porth.porth:4975:38: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_38782: ;;// porth.porth:4975:56: OP_INLINED 36
addr_38783: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38784: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38785: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38786: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38787: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38788: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38789: ;;// porth.porth:4975:61: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_38790: ;;// porth.porth:4975:74: OP_CALL 35232
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_35232
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_38791: ;;// porth.porth:4976:11: OP_ELSE 24
    jmp addr_38815
addr_38792: ;;// porth.porth:4976:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_38793: ;;// porth.porth:4976:20: OP_PUSH_INT 18
    mov rax, 18
    push rax
addr_38794: ;;// porth.porth:4976:34: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_38795: ;;// porth.porth:4976:36: OP_IFSTAR 21
    pop rax
    test rax, rax
    jz addr_38816
addr_38796: ;;// porth.porth:4977:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_38797: ;;// porth.porth:4977:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_38798: ;;// porth.porth:4977:25: OP_INLINED 36
addr_38799: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38800: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38801: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38802: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38803: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38804: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38805: ;;// porth.porth:4977:30: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_38806: ;;// porth.porth:4977:38: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_38807: ;;// porth.porth:4977:56: OP_INLINED 36
addr_38808: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38809: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38810: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38811: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38812: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38813: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38814: ;;// porth.porth:4977:61: OP_CALL 35406
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_35406
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_38815: ;;// porth.porth:4978:11: OP_ELSE 30
    jmp addr_38845
addr_38816: ;;// porth.porth:4978:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_38817: ;;// porth.porth:4978:20: OP_PUSH_INT 19
    mov rax, 19
    push rax
addr_38818: ;;// porth.porth:4978:36: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_38819: ;;// porth.porth:4978:38: OP_IFSTAR 27
    pop rax
    test rax, rax
    jz addr_38846
addr_38820: ;;// porth.porth:4979:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_38821: ;;// porth.porth:4979:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_38822: ;;// porth.porth:4979:25: OP_INLINED 36
addr_38823: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38824: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38825: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38826: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38827: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38828: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38829: ;;// porth.porth:4980:13: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_38830: ;;// porth.porth:4980:21: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_38831: ;;// porth.porth:4980:39: OP_INLINED 36
addr_38832: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38833: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38834: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38835: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38836: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38837: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38838: ;;// porth.porth:4981:13: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_38839: ;;// porth.porth:4981:18: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_38840: ;;// porth.porth:4981:23: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_38841: ;;// porth.porth:4981:25: OP_CALL 33845
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_33845
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_38842: ;;// porth.porth:4982:13: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_38843: ;;// porth.porth:4982:31: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_38844: ;;// porth.porth:4983:13: OP_CALL 34681
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_34681
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_38845: ;;// porth.porth:4984:11: OP_ELSE 24
    jmp addr_38869
addr_38846: ;;// porth.porth:4984:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_38847: ;;// porth.porth:4984:20: OP_PUSH_INT 20
    mov rax, 20
    push rax
addr_38848: ;;// porth.porth:4984:34: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_38849: ;;// porth.porth:4984:36: OP_IFSTAR 21
    pop rax
    test rax, rax
    jz addr_38870
addr_38850: ;;// porth.porth:4985:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_38851: ;;// porth.porth:4985:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_38852: ;;// porth.porth:4985:25: OP_INLINED 36
addr_38853: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38854: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38855: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38856: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38857: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38858: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38859: ;;// porth.porth:4985:30: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_38860: ;;// porth.porth:4985:38: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_38861: ;;// porth.porth:4985:56: OP_INLINED 36
addr_38862: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38863: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38864: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38865: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38866: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38867: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38868: ;;// porth.porth:4985:61: OP_CALL 35198
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_35198
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_38869: ;;// porth.porth:4986:11: OP_ELSE 30
    jmp addr_38899
addr_38870: ;;// porth.porth:4986:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_38871: ;;// porth.porth:4986:20: OP_PUSH_INT 21
    mov rax, 21
    push rax
addr_38872: ;;// porth.porth:4986:35: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_38873: ;;// porth.porth:4986:37: OP_IFSTAR 27
    pop rax
    test rax, rax
    jz addr_38900
addr_38874: ;;// porth.porth:4988:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_38875: ;;// porth.porth:4988:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_38876: ;;// porth.porth:4988:25: OP_INLINED 36
addr_38877: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38878: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38879: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38880: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38881: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38882: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38883: ;;// porth.porth:4990:13: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_38884: ;;// porth.porth:4990:21: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_38885: ;;// porth.porth:4990:39: OP_INLINED 36
addr_38886: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38887: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38888: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38889: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38890: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38891: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38892: ;;// porth.porth:4992:13: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_38893: ;;// porth.porth:4992:18: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_38894: ;;// porth.porth:4992:23: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_38895: ;;// porth.porth:4992:25: OP_CALL 33845
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_33845
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_38896: ;;// porth.porth:4994:13: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_38897: ;;// porth.porth:4994:17: OP_CALL 13934
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13934
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_38898: ;;// porth.porth:4995:13: OP_CALL 34681
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_34681
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_38899: ;;// porth.porth:4996:11: OP_ELSE 30
    jmp addr_38929
addr_38900: ;;// porth.porth:4996:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_38901: ;;// porth.porth:4996:20: OP_PUSH_INT 22
    mov rax, 22
    push rax
addr_38902: ;;// porth.porth:4996:35: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_38903: ;;// porth.porth:4996:37: OP_IFSTAR 27
    pop rax
    test rax, rax
    jz addr_38930
addr_38904: ;;// porth.porth:4997:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_38905: ;;// porth.porth:4997:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_38906: ;;// porth.porth:4997:25: OP_INLINED 36
addr_38907: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38908: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38909: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38910: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38911: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38912: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38913: ;;// porth.porth:4998:13: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_38914: ;;// porth.porth:4998:21: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_38915: ;;// porth.porth:4998:39: OP_INLINED 36
addr_38916: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38917: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38918: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38919: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38920: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38921: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38922: ;;// porth.porth:4999:13: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_38923: ;;// porth.porth:4999:18: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_38924: ;;// porth.porth:4999:23: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_38925: ;;// porth.porth:4999:25: OP_CALL 33845
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_33845
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_38926: ;;// porth.porth:5000:13: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_38927: ;;// porth.porth:5000:31: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_38928: ;;// porth.porth:5001:13: OP_CALL 34681
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_34681
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_38929: ;;// porth.porth:5002:11: OP_ELSE 24
    jmp addr_38953
addr_38930: ;;// porth.porth:5002:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_38931: ;;// porth.porth:5002:20: OP_PUSH_INT 23
    mov rax, 23
    push rax
addr_38932: ;;// porth.porth:5002:35: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_38933: ;;// porth.porth:5002:37: OP_IFSTAR 21
    pop rax
    test rax, rax
    jz addr_38954
addr_38934: ;;// porth.porth:5003:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_38935: ;;// porth.porth:5003:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_38936: ;;// porth.porth:5003:25: OP_INLINED 36
addr_38937: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38938: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38939: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38940: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38941: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38942: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38943: ;;// porth.porth:5003:30: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_38944: ;;// porth.porth:5003:38: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_38945: ;;// porth.porth:5003:56: OP_INLINED 36
addr_38946: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38947: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38948: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38949: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38950: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38951: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38952: ;;// porth.porth:5003:61: OP_CALL 35058
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_35058
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_38953: ;;// porth.porth:5004:11: OP_ELSE 24
    jmp addr_38977
addr_38954: ;;// porth.porth:5004:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_38955: ;;// porth.porth:5004:20: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_38956: ;;// porth.porth:5004:34: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_38957: ;;// porth.porth:5004:36: OP_IFSTAR 21
    pop rax
    test rax, rax
    jz addr_38978
addr_38958: ;;// porth.porth:5005:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_38959: ;;// porth.porth:5005:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_38960: ;;// porth.porth:5005:25: OP_INLINED 36
addr_38961: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38962: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38963: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38964: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38965: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38966: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38967: ;;// porth.porth:5005:30: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_38968: ;;// porth.porth:5005:38: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_38969: ;;// porth.porth:5005:56: OP_INLINED 36
addr_38970: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38971: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38972: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38973: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38974: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38975: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38976: ;;// porth.porth:5005:61: OP_CALL 35103
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_35103
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_38977: ;;// porth.porth:5006:11: OP_ELSE 24
    jmp addr_39001
addr_38978: ;;// porth.porth:5006:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_38979: ;;// porth.porth:5006:20: OP_PUSH_INT 25
    mov rax, 25
    push rax
addr_38980: ;;// porth.porth:5006:36: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_38981: ;;// porth.porth:5006:38: OP_IFSTAR 21
    pop rax
    test rax, rax
    jz addr_39002
addr_38982: ;;// porth.porth:5007:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_38983: ;;// porth.porth:5007:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_38984: ;;// porth.porth:5007:25: OP_INLINED 36
addr_38985: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38986: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38987: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38988: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38989: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38990: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_38991: ;;// porth.porth:5007:30: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_38992: ;;// porth.porth:5007:38: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_38993: ;;// porth.porth:5007:56: OP_INLINED 36
addr_38994: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38995: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_38996: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_38997: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_38998: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_38999: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39000: ;;// porth.porth:5007:61: OP_CALL 35363
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_35363
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39001: ;;// porth.porth:5008:11: OP_ELSE 24
    jmp addr_39025
addr_39002: ;;// porth.porth:5008:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_39003: ;;// porth.porth:5008:20: OP_PUSH_INT 26
    mov rax, 26
    push rax
addr_39004: ;;// porth.porth:5008:37: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_39005: ;;// porth.porth:5008:39: OP_IFSTAR 21
    pop rax
    test rax, rax
    jz addr_39026
addr_39006: ;;// porth.porth:5009:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_39007: ;;// porth.porth:5009:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39008: ;;// porth.porth:5009:25: OP_INLINED 36
addr_39009: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39010: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39011: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39012: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39013: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39014: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39015: ;;// porth.porth:5009:30: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_39016: ;;// porth.porth:5009:38: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39017: ;;// porth.porth:5009:56: OP_INLINED 36
addr_39018: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39019: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39020: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39021: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39022: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39023: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39024: ;;// porth.porth:5009:61: OP_CALL 35320
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_35320
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39025: ;;// porth.porth:5010:11: OP_ELSE 24
    jmp addr_39049
addr_39026: ;;// porth.porth:5010:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_39027: ;;// porth.porth:5010:20: OP_PUSH_INT 27
    mov rax, 27
    push rax
addr_39028: ;;// porth.porth:5010:37: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_39029: ;;// porth.porth:5010:39: OP_IFSTAR 21
    pop rax
    test rax, rax
    jz addr_39050
addr_39030: ;;// porth.porth:5011:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_39031: ;;// porth.porth:5011:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39032: ;;// porth.porth:5011:25: OP_INLINED 36
addr_39033: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39034: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39035: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39036: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39037: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39038: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39039: ;;// porth.porth:5011:30: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_39040: ;;// porth.porth:5011:38: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39041: ;;// porth.porth:5011:56: OP_INLINED 36
addr_39042: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39043: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39044: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39045: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39046: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39047: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39048: ;;// porth.porth:5011:61: OP_CALL 35363
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_35363
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39049: ;;// porth.porth:5012:11: OP_ELSE 24
    jmp addr_39073
addr_39050: ;;// porth.porth:5012:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_39051: ;;// porth.porth:5012:20: OP_PUSH_INT 28
    mov rax, 28
    push rax
addr_39052: ;;// porth.porth:5012:38: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_39053: ;;// porth.porth:5012:40: OP_IFSTAR 21
    pop rax
    test rax, rax
    jz addr_39074
addr_39054: ;;// porth.porth:5013:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_39055: ;;// porth.porth:5013:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39056: ;;// porth.porth:5013:25: OP_INLINED 36
addr_39057: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39058: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39059: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39060: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39061: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39062: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39063: ;;// porth.porth:5013:30: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_39064: ;;// porth.porth:5013:38: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39065: ;;// porth.porth:5013:56: OP_INLINED 36
addr_39066: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39067: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39068: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39069: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39070: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39071: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39072: ;;// porth.porth:5013:61: OP_CALL 35320
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_35320
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39073: ;;// porth.porth:5014:11: OP_ELSE 24
    jmp addr_39097
addr_39074: ;;// porth.porth:5014:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_39075: ;;// porth.porth:5014:20: OP_PUSH_INT 29
    mov rax, 29
    push rax
addr_39076: ;;// porth.porth:5014:37: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_39077: ;;// porth.porth:5014:39: OP_IFSTAR 21
    pop rax
    test rax, rax
    jz addr_39098
addr_39078: ;;// porth.porth:5015:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_39079: ;;// porth.porth:5015:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39080: ;;// porth.porth:5015:25: OP_INLINED 36
addr_39081: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39082: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39083: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39084: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39085: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39086: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39087: ;;// porth.porth:5015:30: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_39088: ;;// porth.porth:5015:38: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39089: ;;// porth.porth:5015:56: OP_INLINED 36
addr_39090: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39091: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39092: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39093: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39094: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39095: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39096: ;;// porth.porth:5015:61: OP_CALL 35363
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_35363
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39097: ;;// porth.porth:5016:11: OP_ELSE 24
    jmp addr_39121
addr_39098: ;;// porth.porth:5016:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_39099: ;;// porth.porth:5016:20: OP_PUSH_INT 30
    mov rax, 30
    push rax
addr_39100: ;;// porth.porth:5016:38: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_39101: ;;// porth.porth:5016:40: OP_IFSTAR 21
    pop rax
    test rax, rax
    jz addr_39122
addr_39102: ;;// porth.porth:5017:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_39103: ;;// porth.porth:5017:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39104: ;;// porth.porth:5017:25: OP_INLINED 36
addr_39105: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39106: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39107: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39108: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39109: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39110: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39111: ;;// porth.porth:5017:30: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_39112: ;;// porth.porth:5017:38: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39113: ;;// porth.porth:5017:56: OP_INLINED 36
addr_39114: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39115: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39116: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39117: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39118: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39119: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39120: ;;// porth.porth:5017:61: OP_CALL 35320
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_35320
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39121: ;;// porth.porth:5018:11: OP_ELSE 24
    jmp addr_39145
addr_39122: ;;// porth.porth:5018:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_39123: ;;// porth.porth:5018:20: OP_PUSH_INT 31
    mov rax, 31
    push rax
addr_39124: ;;// porth.porth:5018:37: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_39125: ;;// porth.porth:5018:39: OP_IFSTAR 21
    pop rax
    test rax, rax
    jz addr_39146
addr_39126: ;;// porth.porth:5019:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_39127: ;;// porth.porth:5019:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39128: ;;// porth.porth:5019:25: OP_INLINED 36
addr_39129: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39130: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39131: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39132: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39133: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39134: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39135: ;;// porth.porth:5019:30: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_39136: ;;// porth.porth:5019:38: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39137: ;;// porth.porth:5019:56: OP_INLINED 36
addr_39138: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39139: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39140: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39141: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39142: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39143: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39144: ;;// porth.porth:5019:61: OP_CALL 35363
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_35363
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39145: ;;// porth.porth:5020:11: OP_ELSE 24
    jmp addr_39169
addr_39146: ;;// porth.porth:5020:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_39147: ;;// porth.porth:5020:20: OP_PUSH_INT 32
    mov rax, 32
    push rax
addr_39148: ;;// porth.porth:5020:38: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_39149: ;;// porth.porth:5020:40: OP_IFSTAR 21
    pop rax
    test rax, rax
    jz addr_39170
addr_39150: ;;// porth.porth:5021:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_39151: ;;// porth.porth:5021:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39152: ;;// porth.porth:5021:25: OP_INLINED 36
addr_39153: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39154: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39155: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39156: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39157: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39158: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39159: ;;// porth.porth:5021:30: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_39160: ;;// porth.porth:5021:38: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39161: ;;// porth.porth:5021:56: OP_INLINED 36
addr_39162: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39163: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39164: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39165: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39166: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39167: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39168: ;;// porth.porth:5021:61: OP_CALL 35320
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_35320
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39169: ;;// porth.porth:5022:11: OP_ELSE 52
    jmp addr_39221
addr_39170: ;;// porth.porth:5022:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_39171: ;;// porth.porth:5022:20: OP_PUSH_INT 33
    mov rax, 33
    push rax
addr_39172: ;;// porth.porth:5022:39: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_39173: ;;// porth.porth:5022:41: OP_IFSTAR 49
    pop rax
    test rax, rax
    jz addr_39222
addr_39174: ;;// porth.porth:5023:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_39175: ;;// porth.porth:5023:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39176: ;;// porth.porth:5023:25: OP_INLINED 36
addr_39177: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39178: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39179: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39180: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39181: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39182: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39183: ;;// porth.porth:5024:13: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_39184: ;;// porth.porth:5024:21: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39185: ;;// porth.porth:5024:39: OP_INLINED 36
addr_39186: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39187: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39188: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39189: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39190: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39191: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39192: ;;// porth.porth:5025:13: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_39193: ;;// porth.porth:5026:13: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_39194: ;;// porth.porth:5027:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_39195: ;;// porth.porth:5027:15: OP_CALL 33845
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_33845
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39196: ;;// porth.porth:5028:13: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39197: ;;// porth.porth:5028:31: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39198: ;;// porth.porth:5029:15: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_39199: ;;// porth.porth:5029:20: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_39200: ;;// porth.porth:5030:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39201: ;;// porth.porth:5030:20: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_39202: ;;// porth.porth:5030:23: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39203: ;;// porth.porth:5030:32: OP_INLINED 36
addr_39204: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39205: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39206: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39207: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39208: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39209: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39210: ;;// porth.porth:5030:37: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_39211: ;;// porth.porth:5030:47: OP_INLINED 36
addr_39212: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39213: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39214: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39215: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39216: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39217: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39218: ;;// porth.porth:5031:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39219: ;;// porth.porth:5031:20: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39220: ;;// porth.porth:5032:13: OP_CALL 34681
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_34681
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39221: ;;// porth.porth:5033:11: OP_ELSE 52
    jmp addr_39273
addr_39222: ;;// porth.porth:5033:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_39223: ;;// porth.porth:5033:20: OP_PUSH_INT 34
    mov rax, 34
    push rax
addr_39224: ;;// porth.porth:5033:39: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_39225: ;;// porth.porth:5033:41: OP_IFSTAR 49
    pop rax
    test rax, rax
    jz addr_39274
addr_39226: ;;// porth.porth:5034:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_39227: ;;// porth.porth:5034:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39228: ;;// porth.porth:5034:25: OP_INLINED 36
addr_39229: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39230: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39231: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39232: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39233: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39234: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39235: ;;// porth.porth:5035:13: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_39236: ;;// porth.porth:5035:21: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39237: ;;// porth.porth:5035:39: OP_INLINED 36
addr_39238: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39239: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39240: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39241: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39242: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39243: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39244: ;;// porth.porth:5036:13: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_39245: ;;// porth.porth:5037:13: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_39246: ;;// porth.porth:5038:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_39247: ;;// porth.porth:5038:15: OP_CALL 33845
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_33845
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39248: ;;// porth.porth:5039:13: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39249: ;;// porth.porth:5039:31: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39250: ;;// porth.porth:5040:15: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_39251: ;;// porth.porth:5040:20: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39252: ;;// porth.porth:5041:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39253: ;;// porth.porth:5041:20: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_39254: ;;// porth.porth:5041:23: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39255: ;;// porth.porth:5041:32: OP_INLINED 36
addr_39256: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39257: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39258: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39259: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39260: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39261: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39262: ;;// porth.porth:5041:37: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_39263: ;;// porth.porth:5041:47: OP_INLINED 36
addr_39264: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39265: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39266: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39267: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39268: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39269: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39270: ;;// porth.porth:5042:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39271: ;;// porth.porth:5042:20: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39272: ;;// porth.porth:5043:13: OP_CALL 34681
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_34681
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39273: ;;// porth.porth:5044:11: OP_ELSE 52
    jmp addr_39325
addr_39274: ;;// porth.porth:5044:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_39275: ;;// porth.porth:5044:20: OP_PUSH_INT 37
    mov rax, 37
    push rax
addr_39276: ;;// porth.porth:5044:40: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_39277: ;;// porth.porth:5044:42: OP_IFSTAR 49
    pop rax
    test rax, rax
    jz addr_39326
addr_39278: ;;// porth.porth:5045:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_39279: ;;// porth.porth:5045:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39280: ;;// porth.porth:5045:25: OP_INLINED 36
addr_39281: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39282: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39283: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39284: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39285: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39286: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39287: ;;// porth.porth:5046:13: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_39288: ;;// porth.porth:5046:21: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39289: ;;// porth.porth:5046:39: OP_INLINED 36
addr_39290: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39291: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39292: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39293: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39294: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39295: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39296: ;;// porth.porth:5047:13: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_39297: ;;// porth.porth:5048:13: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_39298: ;;// porth.porth:5049:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_39299: ;;// porth.porth:5049:15: OP_CALL 33845
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_33845
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39300: ;;// porth.porth:5050:13: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39301: ;;// porth.porth:5050:31: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39302: ;;// porth.porth:5051:15: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_39303: ;;// porth.porth:5051:20: OP_PUSH_INT 4
    mov rax, 4
    push rax
addr_39304: ;;// porth.porth:5052:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39305: ;;// porth.porth:5052:20: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_39306: ;;// porth.porth:5052:23: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39307: ;;// porth.porth:5052:32: OP_INLINED 36
addr_39308: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39309: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39310: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39311: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39312: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39313: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39314: ;;// porth.porth:5052:37: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_39315: ;;// porth.porth:5052:47: OP_INLINED 36
addr_39316: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39317: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39318: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39319: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39320: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39321: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39322: ;;// porth.porth:5053:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39323: ;;// porth.porth:5053:20: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39324: ;;// porth.porth:5054:13: OP_CALL 34681
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_34681
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39325: ;;// porth.porth:5055:11: OP_ELSE 52
    jmp addr_39377
addr_39326: ;;// porth.porth:5055:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_39327: ;;// porth.porth:5055:20: OP_PUSH_INT 35
    mov rax, 35
    push rax
addr_39328: ;;// porth.porth:5055:41: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_39329: ;;// porth.porth:5055:43: OP_IFSTAR 49
    pop rax
    test rax, rax
    jz addr_39378
addr_39330: ;;// porth.porth:5056:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_39331: ;;// porth.porth:5056:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39332: ;;// porth.porth:5056:25: OP_INLINED 36
addr_39333: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39334: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39335: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39336: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39337: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39338: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39339: ;;// porth.porth:5057:13: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_39340: ;;// porth.porth:5057:21: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39341: ;;// porth.porth:5057:39: OP_INLINED 36
addr_39342: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39343: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39344: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39345: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39346: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39347: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39348: ;;// porth.porth:5058:13: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_39349: ;;// porth.porth:5059:13: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_39350: ;;// porth.porth:5060:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_39351: ;;// porth.porth:5060:15: OP_CALL 33845
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_33845
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39352: ;;// porth.porth:5061:13: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39353: ;;// porth.porth:5061:31: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39354: ;;// porth.porth:5062:15: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_39355: ;;// porth.porth:5062:20: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_39356: ;;// porth.porth:5063:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39357: ;;// porth.porth:5063:20: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_39358: ;;// porth.porth:5063:23: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39359: ;;// porth.porth:5063:32: OP_INLINED 36
addr_39360: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39361: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39362: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39363: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39364: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39365: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39366: ;;// porth.porth:5063:37: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_39367: ;;// porth.porth:5063:47: OP_INLINED 36
addr_39368: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39369: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39370: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39371: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39372: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39373: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39374: ;;// porth.porth:5064:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39375: ;;// porth.porth:5064:20: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39376: ;;// porth.porth:5065:13: OP_CALL 34681
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_34681
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39377: ;;// porth.porth:5066:11: OP_ELSE 52
    jmp addr_39429
addr_39378: ;;// porth.porth:5066:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_39379: ;;// porth.porth:5066:20: OP_PUSH_INT 36
    mov rax, 36
    push rax
addr_39380: ;;// porth.porth:5066:42: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_39381: ;;// porth.porth:5066:44: OP_IFSTAR 49
    pop rax
    test rax, rax
    jz addr_39430
addr_39382: ;;// porth.porth:5067:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_39383: ;;// porth.porth:5067:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39384: ;;// porth.porth:5067:25: OP_INLINED 36
addr_39385: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39386: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39387: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39388: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39389: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39390: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39391: ;;// porth.porth:5068:13: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_39392: ;;// porth.porth:5068:21: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39393: ;;// porth.porth:5068:39: OP_INLINED 36
addr_39394: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39395: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39396: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39397: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39398: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39399: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39400: ;;// porth.porth:5069:13: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_39401: ;;// porth.porth:5070:13: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_39402: ;;// porth.porth:5071:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_39403: ;;// porth.porth:5071:15: OP_CALL 33845
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_33845
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39404: ;;// porth.porth:5072:13: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39405: ;;// porth.porth:5072:31: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39406: ;;// porth.porth:5073:15: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_39407: ;;// porth.porth:5073:20: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_39408: ;;// porth.porth:5074:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39409: ;;// porth.porth:5074:20: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_39410: ;;// porth.porth:5074:23: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39411: ;;// porth.porth:5074:32: OP_INLINED 36
addr_39412: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39413: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39414: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39415: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39416: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39417: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39418: ;;// porth.porth:5074:37: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_39419: ;;// porth.porth:5074:47: OP_INLINED 36
addr_39420: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39421: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39422: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39423: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39424: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39425: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39426: ;;// porth.porth:5075:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39427: ;;// porth.porth:5075:20: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39428: ;;// porth.porth:5076:13: OP_CALL 34681
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_34681
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39429: ;;// porth.porth:5077:11: OP_ELSE 52
    jmp addr_39481
addr_39430: ;;// porth.porth:5077:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_39431: ;;// porth.porth:5077:20: OP_PUSH_INT 38
    mov rax, 38
    push rax
addr_39432: ;;// porth.porth:5077:40: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_39433: ;;// porth.porth:5077:42: OP_IFSTAR 49
    pop rax
    test rax, rax
    jz addr_39482
addr_39434: ;;// porth.porth:5078:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_39435: ;;// porth.porth:5078:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39436: ;;// porth.porth:5078:25: OP_INLINED 36
addr_39437: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39438: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39439: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39440: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39441: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39442: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39443: ;;// porth.porth:5079:13: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_39444: ;;// porth.porth:5079:21: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39445: ;;// porth.porth:5079:39: OP_INLINED 36
addr_39446: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39447: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39448: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39449: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39450: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39451: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39452: ;;// porth.porth:5080:13: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_39453: ;;// porth.porth:5081:13: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_39454: ;;// porth.porth:5082:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_39455: ;;// porth.porth:5082:15: OP_CALL 33845
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_33845
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39456: ;;// porth.porth:5083:13: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39457: ;;// porth.porth:5083:31: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39458: ;;// porth.porth:5084:15: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_39459: ;;// porth.porth:5084:20: OP_PUSH_INT 5
    mov rax, 5
    push rax
addr_39460: ;;// porth.porth:5085:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39461: ;;// porth.porth:5085:20: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_39462: ;;// porth.porth:5085:23: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39463: ;;// porth.porth:5085:32: OP_INLINED 36
addr_39464: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39465: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39466: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39467: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39468: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39469: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39470: ;;// porth.porth:5085:37: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_39471: ;;// porth.porth:5085:47: OP_INLINED 36
addr_39472: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39473: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39474: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39475: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39476: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39477: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39478: ;;// porth.porth:5086:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39479: ;;// porth.porth:5086:20: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39480: ;;// porth.porth:5087:13: OP_CALL 34681
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_34681
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39481: ;;// porth.porth:5088:11: OP_ELSE 33
    jmp addr_39514
addr_39482: ;;// porth.porth:5088:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_39483: ;;// porth.porth:5088:20: OP_PUSH_INT 39
    mov rax, 39
    push rax
addr_39484: ;;// porth.porth:5088:35: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_39485: ;;// porth.porth:5088:37: OP_IFSTAR 30
    pop rax
    test rax, rax
    jz addr_39515
addr_39486: ;;// porth.porth:5089:13: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39487: ;;// porth.porth:5090:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_39488: ;;// porth.porth:5090:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39489: ;;// porth.porth:5090:25: OP_INLINED 36
addr_39490: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39491: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39492: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39493: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39494: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39495: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39496: ;;// porth.porth:5090:30: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_39497: ;;// porth.porth:5090:40: OP_INLINED 36
addr_39498: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39499: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39500: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39501: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39502: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39503: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39504: ;;// porth.porth:5091:13: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_39505: ;;// porth.porth:5091:21: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39506: ;;// porth.porth:5091:39: OP_INLINED 36
addr_39507: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39508: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39509: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39510: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39511: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39512: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39513: ;;// porth.porth:5092:13: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39514: ;;// porth.porth:5093:11: OP_ELSE 33
    jmp addr_39547
addr_39515: ;;// porth.porth:5093:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_39516: ;;// porth.porth:5093:20: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_39517: ;;// porth.porth:5093:35: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_39518: ;;// porth.porth:5093:37: OP_IFSTAR 30
    pop rax
    test rax, rax
    jz addr_39548
addr_39519: ;;// porth.porth:5094:13: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_39520: ;;// porth.porth:5095:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_39521: ;;// porth.porth:5095:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39522: ;;// porth.porth:5095:25: OP_INLINED 36
addr_39523: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39524: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39525: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39526: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39527: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39528: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39529: ;;// porth.porth:5095:30: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_39530: ;;// porth.porth:5095:40: OP_INLINED 36
addr_39531: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39532: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39533: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39534: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39535: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39536: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39537: ;;// porth.porth:5096:13: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_39538: ;;// porth.porth:5096:21: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39539: ;;// porth.porth:5096:39: OP_INLINED 36
addr_39540: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39541: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39542: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39543: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39544: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39545: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39546: ;;// porth.porth:5097:13: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39547: ;;// porth.porth:5098:11: OP_ELSE 33
    jmp addr_39580
addr_39548: ;;// porth.porth:5098:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_39549: ;;// porth.porth:5098:20: OP_PUSH_INT 41
    mov rax, 41
    push rax
addr_39550: ;;// porth.porth:5098:35: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_39551: ;;// porth.porth:5098:37: OP_IFSTAR 30
    pop rax
    test rax, rax
    jz addr_39581
addr_39552: ;;// porth.porth:5099:13: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_39553: ;;// porth.porth:5100:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_39554: ;;// porth.porth:5100:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39555: ;;// porth.porth:5100:25: OP_INLINED 36
addr_39556: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39557: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39558: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39559: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39560: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39561: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39562: ;;// porth.porth:5100:30: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_39563: ;;// porth.porth:5100:40: OP_INLINED 36
addr_39564: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39565: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39566: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39567: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39568: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39569: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39570: ;;// porth.porth:5101:13: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_39571: ;;// porth.porth:5101:21: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39572: ;;// porth.porth:5101:39: OP_INLINED 36
addr_39573: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39574: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39575: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39576: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39577: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39578: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39579: ;;// porth.porth:5102:13: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39580: ;;// porth.porth:5103:11: OP_ELSE 75
    jmp addr_39655
addr_39581: ;;// porth.porth:5103:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_39582: ;;// porth.porth:5103:20: OP_PUSH_INT 42
    mov rax, 42
    push rax
addr_39583: ;;// porth.porth:5103:39: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_39584: ;;// porth.porth:5103:41: OP_IFSTAR 72
    pop rax
    test rax, rax
    jz addr_39656
addr_39585: ;;// porth.porth:5105:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_39586: ;;// porth.porth:5105:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39587: ;;// porth.porth:5105:25: OP_INLINED 36
addr_39588: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39589: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39590: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39591: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39592: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39593: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39594: ;;// porth.porth:5107:13: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_39595: ;;// porth.porth:5107:21: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39596: ;;// porth.porth:5107:39: OP_INLINED 36
addr_39597: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39598: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39599: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39600: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39601: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39602: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39603: ;;// porth.porth:5109:13: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_39604: ;;// porth.porth:5110:13: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_39605: ;;// porth.porth:5111:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_39606: ;;// porth.porth:5111:15: OP_CALL 33845
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_33845
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39607: ;;// porth.porth:5112:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39608: ;;// porth.porth:5113:15: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_39609: ;;// porth.porth:5114:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39610: ;;// porth.porth:5114:29: OP_INLINED 36
addr_39611: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39612: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39613: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39614: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39615: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39616: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39617: ;;// porth.porth:5114:34: OP_INLINED 0
addr_39618: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_39619: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_39620: ;;// porth.porth:5115:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39621: ;;// porth.porth:5115:30: OP_INLINED 36
addr_39622: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39623: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39624: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39625: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39626: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39627: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39628: ;;// porth.porth:5116:15: OP_INLINED 30
addr_39629: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_39630: ;;// porth.porth:5118:13: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39631: ;;// porth.porth:5118:31: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39632: ;;// porth.porth:5119:15: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_39633: ;;// porth.porth:5119:20: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39634: ;;// porth.porth:5120:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39635: ;;// porth.porth:5120:20: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_39636: ;;// porth.porth:5120:23: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39637: ;;// porth.porth:5120:32: OP_INLINED 36
addr_39638: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39639: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39640: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39641: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39642: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39643: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39644: ;;// porth.porth:5120:37: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_39645: ;;// porth.porth:5120:47: OP_INLINED 36
addr_39646: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39647: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39648: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39649: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39650: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39651: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39652: ;;// porth.porth:5121:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39653: ;;// porth.porth:5121:20: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39654: ;;// porth.porth:5122:13: OP_CALL 34681
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_34681
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39655: ;;// porth.porth:5123:11: OP_ELSE 75
    jmp addr_39730
addr_39656: ;;// porth.porth:5123:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_39657: ;;// porth.porth:5123:20: OP_PUSH_INT 43
    mov rax, 43
    push rax
addr_39658: ;;// porth.porth:5123:39: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_39659: ;;// porth.porth:5123:41: OP_IFSTAR 72
    pop rax
    test rax, rax
    jz addr_39731
addr_39660: ;;// porth.porth:5125:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_39661: ;;// porth.porth:5125:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39662: ;;// porth.porth:5125:25: OP_INLINED 36
addr_39663: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39664: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39665: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39666: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39667: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39668: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39669: ;;// porth.porth:5127:13: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_39670: ;;// porth.porth:5127:21: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39671: ;;// porth.porth:5127:39: OP_INLINED 36
addr_39672: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39673: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39674: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39675: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39676: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39677: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39678: ;;// porth.porth:5129:13: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_39679: ;;// porth.porth:5130:13: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_39680: ;;// porth.porth:5131:13: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_39681: ;;// porth.porth:5131:15: OP_CALL 33845
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_33845
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39682: ;;// porth.porth:5132:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39683: ;;// porth.porth:5133:15: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_39684: ;;// porth.porth:5134:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39685: ;;// porth.porth:5134:29: OP_INLINED 36
addr_39686: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39687: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39688: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39689: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39690: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39691: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39692: ;;// porth.porth:5134:34: OP_INLINED 0
addr_39693: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_39694: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_39695: ;;// porth.porth:5135:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39696: ;;// porth.porth:5135:30: OP_INLINED 36
addr_39697: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39698: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39699: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39700: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39701: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39702: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39703: ;;// porth.porth:5136:15: OP_INLINED 30
addr_39704: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_39705: ;;// porth.porth:5138:13: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39706: ;;// porth.porth:5138:31: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39707: ;;// porth.porth:5139:15: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_39708: ;;// porth.porth:5139:20: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39709: ;;// porth.porth:5140:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39710: ;;// porth.porth:5140:20: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_39711: ;;// porth.porth:5140:23: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39712: ;;// porth.porth:5140:32: OP_INLINED 36
addr_39713: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39714: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39715: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39716: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39717: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39718: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39719: ;;// porth.porth:5140:37: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_39720: ;;// porth.porth:5140:47: OP_INLINED 36
addr_39721: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39722: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39723: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39724: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39725: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39726: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39727: ;;// porth.porth:5141:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39728: ;;// porth.porth:5141:20: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39729: ;;// porth.porth:5142:13: OP_CALL 34681
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_34681
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39730: ;;// porth.porth:5143:11: OP_ELSE 75
    jmp addr_39805
addr_39731: ;;// porth.porth:5143:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_39732: ;;// porth.porth:5143:20: OP_PUSH_INT 44
    mov rax, 44
    push rax
addr_39733: ;;// porth.porth:5143:39: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_39734: ;;// porth.porth:5143:41: OP_IFSTAR 72
    pop rax
    test rax, rax
    jz addr_39806
addr_39735: ;;// porth.porth:5145:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_39736: ;;// porth.porth:5145:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39737: ;;// porth.porth:5145:25: OP_INLINED 36
addr_39738: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39739: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39740: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39741: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39742: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39743: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39744: ;;// porth.porth:5147:13: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_39745: ;;// porth.porth:5147:21: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39746: ;;// porth.porth:5147:39: OP_INLINED 36
addr_39747: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39748: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39749: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39750: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39751: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39752: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39753: ;;// porth.porth:5149:13: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_39754: ;;// porth.porth:5150:13: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_39755: ;;// porth.porth:5151:13: OP_PUSH_INT 3
    mov rax, 3
    push rax
addr_39756: ;;// porth.porth:5151:15: OP_CALL 33845
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_33845
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39757: ;;// porth.porth:5152:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39758: ;;// porth.porth:5153:15: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_39759: ;;// porth.porth:5154:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39760: ;;// porth.porth:5154:29: OP_INLINED 36
addr_39761: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39762: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39763: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39764: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39765: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39766: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39767: ;;// porth.porth:5154:34: OP_INLINED 0
addr_39768: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_39769: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_39770: ;;// porth.porth:5155:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39771: ;;// porth.porth:5155:30: OP_INLINED 36
addr_39772: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39773: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39774: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39775: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39776: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39777: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39778: ;;// porth.porth:5156:15: OP_INLINED 30
addr_39779: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_39780: ;;// porth.porth:5158:13: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39781: ;;// porth.porth:5158:31: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39782: ;;// porth.porth:5159:15: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_39783: ;;// porth.porth:5159:20: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39784: ;;// porth.porth:5160:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39785: ;;// porth.porth:5160:20: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_39786: ;;// porth.porth:5160:23: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39787: ;;// porth.porth:5160:32: OP_INLINED 36
addr_39788: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39789: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39790: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39791: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39792: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39793: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39794: ;;// porth.porth:5160:37: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_39795: ;;// porth.porth:5160:47: OP_INLINED 36
addr_39796: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39797: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39798: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39799: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39800: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39801: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39802: ;;// porth.porth:5161:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39803: ;;// porth.porth:5161:20: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39804: ;;// porth.porth:5162:13: OP_CALL 34681
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_34681
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39805: ;;// porth.porth:5163:11: OP_ELSE 75
    jmp addr_39880
addr_39806: ;;// porth.porth:5163:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_39807: ;;// porth.porth:5163:20: OP_PUSH_INT 45
    mov rax, 45
    push rax
addr_39808: ;;// porth.porth:5163:39: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_39809: ;;// porth.porth:5163:41: OP_IFSTAR 72
    pop rax
    test rax, rax
    jz addr_39881
addr_39810: ;;// porth.porth:5165:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_39811: ;;// porth.porth:5165:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39812: ;;// porth.porth:5165:25: OP_INLINED 36
addr_39813: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39814: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39815: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39816: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39817: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39818: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39819: ;;// porth.porth:5167:13: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_39820: ;;// porth.porth:5167:21: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39821: ;;// porth.porth:5167:39: OP_INLINED 36
addr_39822: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39823: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39824: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39825: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39826: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39827: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39828: ;;// porth.porth:5169:13: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_39829: ;;// porth.porth:5170:13: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_39830: ;;// porth.porth:5171:13: OP_PUSH_INT 4
    mov rax, 4
    push rax
addr_39831: ;;// porth.porth:5171:15: OP_CALL 33845
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_33845
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39832: ;;// porth.porth:5172:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39833: ;;// porth.porth:5173:15: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_39834: ;;// porth.porth:5174:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39835: ;;// porth.porth:5174:29: OP_INLINED 36
addr_39836: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39837: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39838: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39839: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39840: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39841: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39842: ;;// porth.porth:5174:34: OP_INLINED 0
addr_39843: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_39844: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_39845: ;;// porth.porth:5175:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39846: ;;// porth.porth:5175:30: OP_INLINED 36
addr_39847: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39848: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39849: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39850: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39851: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39852: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39853: ;;// porth.porth:5176:15: OP_INLINED 30
addr_39854: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_39855: ;;// porth.porth:5178:13: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39856: ;;// porth.porth:5178:31: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39857: ;;// porth.porth:5179:15: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_39858: ;;// porth.porth:5179:20: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39859: ;;// porth.porth:5180:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39860: ;;// porth.porth:5180:20: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_39861: ;;// porth.porth:5180:23: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39862: ;;// porth.porth:5180:32: OP_INLINED 36
addr_39863: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39864: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39865: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39866: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39867: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39868: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39869: ;;// porth.porth:5180:37: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_39870: ;;// porth.porth:5180:47: OP_INLINED 36
addr_39871: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39872: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39873: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39874: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39875: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39876: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39877: ;;// porth.porth:5181:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39878: ;;// porth.porth:5181:20: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39879: ;;// porth.porth:5182:13: OP_CALL 34681
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_34681
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39880: ;;// porth.porth:5183:11: OP_ELSE 75
    jmp addr_39955
addr_39881: ;;// porth.porth:5183:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_39882: ;;// porth.porth:5183:20: OP_PUSH_INT 46
    mov rax, 46
    push rax
addr_39883: ;;// porth.porth:5183:39: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_39884: ;;// porth.porth:5183:41: OP_IFSTAR 72
    pop rax
    test rax, rax
    jz addr_39956
addr_39885: ;;// porth.porth:5185:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_39886: ;;// porth.porth:5185:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39887: ;;// porth.porth:5185:25: OP_INLINED 36
addr_39888: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39889: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39890: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39891: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39892: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39893: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39894: ;;// porth.porth:5187:13: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_39895: ;;// porth.porth:5187:21: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39896: ;;// porth.porth:5187:39: OP_INLINED 36
addr_39897: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39898: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39899: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39900: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39901: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39902: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39903: ;;// porth.porth:5189:13: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_39904: ;;// porth.porth:5190:13: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_39905: ;;// porth.porth:5191:13: OP_PUSH_INT 5
    mov rax, 5
    push rax
addr_39906: ;;// porth.porth:5191:15: OP_CALL 33845
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_33845
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39907: ;;// porth.porth:5192:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39908: ;;// porth.porth:5193:15: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_39909: ;;// porth.porth:5194:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39910: ;;// porth.porth:5194:29: OP_INLINED 36
addr_39911: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39912: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39913: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39914: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39915: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39916: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39917: ;;// porth.porth:5194:34: OP_INLINED 0
addr_39918: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_39919: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_39920: ;;// porth.porth:5195:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39921: ;;// porth.porth:5195:30: OP_INLINED 36
addr_39922: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39923: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39924: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39925: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39926: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39927: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39928: ;;// porth.porth:5196:15: OP_INLINED 30
addr_39929: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_39930: ;;// porth.porth:5198:13: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39931: ;;// porth.porth:5198:31: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39932: ;;// porth.porth:5199:15: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_39933: ;;// porth.porth:5199:20: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39934: ;;// porth.porth:5200:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39935: ;;// porth.porth:5200:20: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_39936: ;;// porth.porth:5200:23: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39937: ;;// porth.porth:5200:32: OP_INLINED 36
addr_39938: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39939: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39940: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39941: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39942: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39943: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39944: ;;// porth.porth:5200:37: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_39945: ;;// porth.porth:5200:47: OP_INLINED 36
addr_39946: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39947: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39948: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39949: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39950: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39951: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39952: ;;// porth.porth:5201:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39953: ;;// porth.porth:5201:20: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39954: ;;// porth.porth:5202:13: OP_CALL 34681
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_34681
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39955: ;;// porth.porth:5203:11: OP_ELSE 75
    jmp addr_40030
addr_39956: ;;// porth.porth:5203:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_39957: ;;// porth.porth:5203:20: OP_PUSH_INT 47
    mov rax, 47
    push rax
addr_39958: ;;// porth.porth:5203:39: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_39959: ;;// porth.porth:5203:41: OP_IFSTAR 72
    pop rax
    test rax, rax
    jz addr_40031
addr_39960: ;;// porth.porth:5205:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_39961: ;;// porth.porth:5205:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_39962: ;;// porth.porth:5205:25: OP_INLINED 36
addr_39963: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39964: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39965: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39966: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39967: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39968: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39969: ;;// porth.porth:5207:13: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_39970: ;;// porth.porth:5207:21: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39971: ;;// porth.porth:5207:39: OP_INLINED 36
addr_39972: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39973: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39974: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39975: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39976: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39977: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39978: ;;// porth.porth:5209:13: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_39979: ;;// porth.porth:5210:13: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_39980: ;;// porth.porth:5211:13: OP_PUSH_INT 6
    mov rax, 6
    push rax
addr_39981: ;;// porth.porth:5211:15: OP_CALL 33845
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_33845
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_39982: ;;// porth.porth:5212:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39983: ;;// porth.porth:5213:15: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_39984: ;;// porth.porth:5214:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39985: ;;// porth.porth:5214:29: OP_INLINED 36
addr_39986: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39987: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39988: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39989: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_39990: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_39991: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_39992: ;;// porth.porth:5214:34: OP_INLINED 0
addr_39993: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_39994: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_39995: ;;// porth.porth:5215:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_39996: ;;// porth.porth:5215:30: OP_INLINED 36
addr_39997: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_39998: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_39999: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40000: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40001: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40002: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40003: ;;// porth.porth:5216:15: OP_INLINED 30
addr_40004: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_40005: ;;// porth.porth:5218:13: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_40006: ;;// porth.porth:5218:31: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_40007: ;;// porth.porth:5219:15: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_40008: ;;// porth.porth:5219:20: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_40009: ;;// porth.porth:5220:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40010: ;;// porth.porth:5220:20: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_40011: ;;// porth.porth:5220:23: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_40012: ;;// porth.porth:5220:32: OP_INLINED 36
addr_40013: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40014: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40015: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40016: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40017: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40018: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40019: ;;// porth.porth:5220:37: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_40020: ;;// porth.porth:5220:47: OP_INLINED 36
addr_40021: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40022: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40023: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40024: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40025: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40026: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40027: ;;// porth.porth:5221:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40028: ;;// porth.porth:5221:20: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_40029: ;;// porth.porth:5222:13: OP_CALL 34681
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_34681
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_40030: ;;// porth.porth:5223:11: OP_ELSE 75
    jmp addr_40105
addr_40031: ;;// porth.porth:5223:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_40032: ;;// porth.porth:5223:20: OP_PUSH_INT 48
    mov rax, 48
    push rax
addr_40033: ;;// porth.porth:5223:39: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_40034: ;;// porth.porth:5223:41: OP_IFSTAR 72
    pop rax
    test rax, rax
    jz addr_40106
addr_40035: ;;// porth.porth:5225:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_40036: ;;// porth.porth:5225:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_40037: ;;// porth.porth:5225:25: OP_INLINED 36
addr_40038: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40039: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40040: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40041: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40042: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40043: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40044: ;;// porth.porth:5227:13: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_40045: ;;// porth.porth:5227:21: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_40046: ;;// porth.porth:5227:39: OP_INLINED 36
addr_40047: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40048: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40049: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40050: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40051: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40052: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40053: ;;// porth.porth:5229:13: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_40054: ;;// porth.porth:5230:13: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_40055: ;;// porth.porth:5231:13: OP_PUSH_INT 7
    mov rax, 7
    push rax
addr_40056: ;;// porth.porth:5231:15: OP_CALL 33845
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_33845
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_40057: ;;// porth.porth:5232:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_40058: ;;// porth.porth:5233:15: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_40059: ;;// porth.porth:5234:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_40060: ;;// porth.porth:5234:29: OP_INLINED 36
addr_40061: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40062: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40063: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40064: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40065: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40066: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40067: ;;// porth.porth:5234:34: OP_INLINED 0
addr_40068: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_40069: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_40070: ;;// porth.porth:5235:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_40071: ;;// porth.porth:5235:30: OP_INLINED 36
addr_40072: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40073: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40074: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40075: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40076: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40077: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40078: ;;// porth.porth:5236:15: OP_INLINED 30
addr_40079: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_40080: ;;// porth.porth:5238:13: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_40081: ;;// porth.porth:5238:31: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_40082: ;;// porth.porth:5239:15: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_40083: ;;// porth.porth:5239:20: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_40084: ;;// porth.porth:5240:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40085: ;;// porth.porth:5240:20: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_40086: ;;// porth.porth:5240:23: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_40087: ;;// porth.porth:5240:32: OP_INLINED 36
addr_40088: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40089: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40090: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40091: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40092: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40093: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40094: ;;// porth.porth:5240:37: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_40095: ;;// porth.porth:5240:47: OP_INLINED 36
addr_40096: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40097: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40098: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40099: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40100: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40101: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40102: ;;// porth.porth:5241:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40103: ;;// porth.porth:5241:20: OP_CALL 13552
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13552
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_40104: ;;// porth.porth:5242:13: OP_CALL 34681
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_34681
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_40105: ;;// porth.porth:5243:11: OP_ELSE 132
    jmp addr_40237
addr_40106: ;;// porth.porth:5243:16: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_40107: ;;// porth.porth:5243:20: OP_PUSH_INT 49
    mov rax, 49
    push rax
addr_40108: ;;// porth.porth:5243:34: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_40109: ;;// porth.porth:5243:36: OP_IFSTAR 129
    pop rax
    test rax, rax
    jz addr_40238
addr_40110: ;;// porth.porth:5244:13: OP_PUSH_LOCAL_MEM 128
    mov rax, [ret_stack_rsp]
    add rax, 128
    push rax
addr_40111: ;;// porth.porth:5244:16: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_40112: ;;// porth.porth:5244:25: OP_INLINED 36
addr_40113: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40114: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40115: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40116: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40117: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40118: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40119: ;;// porth.porth:5244:30: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_40120: ;;// porth.porth:5244:40: OP_INLINED 36
addr_40121: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40122: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40123: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40124: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40125: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40126: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40127: ;;// porth.porth:5244:73: OP_INLINED 5367
addr_40128: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_40129: ;;// porth.porth:32:35: OP_INLINED 5195
addr_40130: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_40131: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_40132: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_40133: ;;// porth.porth:24:23: OP_INLINED 36
addr_40134: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40135: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40136: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40137: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40138: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40139: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40140: ;;// porth.porth:24:28: OP_INLINED 753
addr_40141: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_40142: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_40143: ;;// std/std.porth:65:7: OP_INLINED 704
addr_40144: ;;// std/std.porth:58:38: OP_INLINED 684
addr_40145: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_40146: ;;// std/std.porth:56:57: OP_INLINED 36
addr_40147: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40148: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40149: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40150: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40151: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40152: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40153: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_40154: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_40155: ;;// std/std.porth:66:7: OP_INLINED 716
addr_40156: ;;// std/std.porth:59:37: OP_INLINED 694
addr_40157: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_40158: ;;// std/std.porth:57:55: OP_INLINED 36
addr_40159: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40160: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40161: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40162: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40163: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40164: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40165: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_40166: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_40167: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_40168: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_40169: ;;// porth.porth:24:36: OP_INLINED 662
addr_40170: ;;// std/std.porth:48:34: OP_INLINED 394
addr_40171: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_40172: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_40173: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_40174: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_40175: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_40176: ;;// porth.porth:25:36: OP_INLINED 662
addr_40177: ;;// std/std.porth:48:34: OP_INLINED 394
addr_40178: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_40179: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_40180: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_40181: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_40182: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_40183: ;;// porth.porth:26:17: OP_INLINED 36
addr_40184: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40185: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40186: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40187: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40188: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40189: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40190: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_40191: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_40192: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_40193: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_40194: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_40195: ;;// porth.porth:27:36: OP_INLINED 662
addr_40196: ;;// std/std.porth:48:34: OP_INLINED 394
addr_40197: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_40198: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_40199: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_40200: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_40201: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_40202: ;;// porth.porth:28:17: OP_INLINED 36
addr_40203: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40204: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40205: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40206: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40207: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40208: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40209: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_40210: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_40211: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_40212: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_40213: ;;// porth.porth:5245:13: OP_PUSH_STR 966
    mov rax, 56
    push rax
    lea rax, [str_966]
    push rax
addr_40214: ;;// porth.porth:5245:73: OP_INLINED 676
addr_40215: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_40216: ;;// std/std.porth:50:37: OP_INLINED 662
addr_40217: ;;// std/std.porth:48:34: OP_INLINED 394
addr_40218: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_40219: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_40220: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_40221: ;;// porth.porth:5246:13: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_40222: ;;// porth.porth:5246:21: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_40223: ;;// porth.porth:5246:39: OP_INLINED 36
addr_40224: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40225: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40226: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40227: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40228: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40229: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40230: ;;// porth.porth:5246:44: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_40231: ;;// porth.porth:5246:51: OP_CALL 13761
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13761
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_40232: ;;// porth.porth:5247:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_40233: ;;// porth.porth:5247:15: OP_INLINED 418
addr_40234: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_40235: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_40236: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_40237: ;;// porth.porth:5248:11: OP_ELSE 22
    jmp addr_40259
addr_40238: ;;// porth.porth:5249:13: OP_PUSH_STR 967
    mov rax, 19
    push rax
    lea rax, [str_967]
    push rax
addr_40239: ;;// porth.porth:5249:18: OP_INLINED 676
addr_40240: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_40241: ;;// std/std.porth:50:37: OP_INLINED 662
addr_40242: ;;// std/std.porth:48:34: OP_INLINED 394
addr_40243: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_40244: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_40245: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_40246: ;;// porth.porth:5249:24: OP_PUSH_STR 968
    mov rax, 14
    push rax
    lea rax, [str_968]
    push rax
addr_40247: ;;// porth.porth:5249:42: OP_INLINED 676
addr_40248: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_40249: ;;// std/std.porth:50:37: OP_INLINED 662
addr_40250: ;;// std/std.porth:48:34: OP_INLINED 394
addr_40251: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_40252: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_40253: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_40254: ;;// porth.porth:5250:13: OP_PUSH_INT 64
    mov rax, 64
    push rax
addr_40255: ;;// porth.porth:5250:16: OP_INLINED 418
addr_40256: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_40257: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_40258: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_40259: ;;// porth.porth:5251:11: OP_END_IF 0
addr_40260: ;;// porth.porth:5252:9: OP_INTRINSIC drop
    pop rax
addr_40261: ;;// porth.porth:5254:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_40262: ;;// porth.porth:5254:17: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_40263: ;;// porth.porth:5254:32: OP_INLINED 36
addr_40264: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40265: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40266: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40267: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40268: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40269: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40270: ;;// porth.porth:5254:37: OP_INLINED 161
addr_40271: ;;// std/core.porth:107:26: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_40272: ;;// std/core.porth:107:30: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_40273: ;;// std/core.porth:107:34: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_40274: ;;// std/core.porth:107:36: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40275: ;;// std/core.porth:107:38: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40276: ;;// std/core.porth:107:43: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_40277: ;;// porth.porth:5256:9: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_40278: ;;// porth.porth:5257:7: OP_ELSE 23
    jmp addr_40301
addr_40279: ;;// porth.porth:5258:9: OP_PUSH_STR 969
    mov rax, 18
    push rax
    lea rax, [str_969]
    push rax
addr_40280: ;;// porth.porth:5258:14: OP_INLINED 676
addr_40281: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_40282: ;;// std/std.porth:50:37: OP_INLINED 662
addr_40283: ;;// std/std.porth:48:34: OP_INLINED 394
addr_40284: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_40285: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_40286: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_40287: ;;// porth.porth:5258:20: OP_PUSH_STR 970
    mov rax, 14
    push rax
    lea rax, [str_970]
    push rax
addr_40288: ;;// porth.porth:5258:38: OP_INLINED 676
addr_40289: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_40290: ;;// std/std.porth:50:37: OP_INLINED 662
addr_40291: ;;// std/std.porth:48:34: OP_INLINED 394
addr_40292: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_40293: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_40294: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_40295: ;;// porth.porth:5259:9: OP_PUSH_INT 69
    mov rax, 69
    push rax
addr_40296: ;;// porth.porth:5259:12: OP_INLINED 418
addr_40297: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_40298: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_40299: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_40300: ;;// porth.porth:5261:9: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_40301: ;;// porth.porth:5262:7: OP_END_IF 0
addr_40302: ;;// porth.porth:5263:5: OP_ELSE 2
    jmp addr_40304
addr_40303: ;;// porth.porth:5264:7: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_40304: ;;// porth.porth:5265:5: OP_END_IF 0
addr_40305: ;;// porth.porth:5266:5: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40306: ;;// porth.porth:5266:10: OP_INLINED 2426
addr_40307: ;;// std/std.porth:509:31: OP_PUSH_GLOBAL_MEM 8
    lea rax, [mem+8]
    push rax
addr_40308: ;;// std/std.porth:509:41: OP_INLINED 78
addr_40309: ;;// std/core.porth:68:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40310: ;;// std/core.porth:68:8: OP_INTRINSIC cast(int)
addr_40311: ;;// std/core.porth:69:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40312: ;;// std/core.porth:69:8: OP_INTRINSIC cast(int)
addr_40313: ;;// std/core.porth:70:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_40314: ;;// std/std.porth:509:50: OP_PUSH_GLOBAL_MEM 8388616
    lea rax, [mem+8388616]
    push rax
addr_40315: ;;// std/std.porth:509:59: OP_INLINED 30
addr_40316: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_40317: ;;// porth.porth:5267:3: OP_DO 2
    pop rax
    test rax, rax
    jz addr_40319
addr_40318: ;;// porth.porth:5267:6: OP_END_WHILE 3854
    jmp addr_36464
addr_40319: ;;// porth.porth:5269:3: OP_WHILE 743
addr_40320: ;;// porth.porth:5270:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_40321: ;;// porth.porth:5270:13: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_40322: ;;// porth.porth:5270:31: OP_INLINED 36
addr_40323: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40324: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40325: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40326: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40327: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40328: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40329: ;;// porth.porth:5270:36: OP_CALL 13741
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13741
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_40330: ;;// porth.porth:5271:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_40331: ;;// porth.porth:5271:13: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_40332: ;;// porth.porth:5271:30: OP_INLINED 36
addr_40333: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40334: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40335: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40336: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40337: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40338: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40339: ;;// porth.porth:5271:36: OP_CALL 13741
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13741
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_40340: ;;// porth.porth:5272:5: OP_INLINED 146
addr_40341: ;;// std/core.porth:100:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40342: ;;// std/core.porth:100:8: OP_INTRINSIC cast(int)
addr_40343: ;;// std/core.porth:101:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40344: ;;// std/core.porth:101:8: OP_INTRINSIC cast(int)
addr_40345: ;;// std/core.porth:102:3: OP_INTRINSIC or
    pop rax
    pop rbx
    or rbx, rax
    push rbx
addr_40346: ;;// std/core.porth:103:3: OP_INTRINSIC cast(bool)
addr_40347: ;;// porth.porth:5273:5: OP_INLINED 131
addr_40348: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_40349: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_40350: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40351: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_40352: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_40353: ;;// porth.porth:5274:3: OP_DO 709
    pop rax
    test rax, rax
    jz addr_41062
addr_40354: ;;// porth.porth:5275:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_40355: ;;// porth.porth:5275:13: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_40356: ;;// porth.porth:5275:31: OP_INLINED 36
addr_40357: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40358: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40359: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40360: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40361: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40362: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40363: ;;// porth.porth:5275:36: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_40364: ;;// porth.porth:5275:50: OP_INLINED 36
addr_40365: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40366: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40367: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40368: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40369: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40370: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40371: ;;// porth.porth:5275:55: OP_INLINED 0
addr_40372: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_40373: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_40374: ;;// porth.porth:5275:60: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_40375: ;;// porth.porth:5275:75: OP_INLINED 36
addr_40376: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40377: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40378: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40379: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40380: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40381: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40382: ;;// porth.porth:5275:80: OP_INLINED 16
addr_40383: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_40384: ;;// porth.porth:5276:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_40385: ;;// porth.porth:5276:13: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_40386: ;;// porth.porth:5276:30: OP_INLINED 36
addr_40387: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40388: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40389: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40390: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40391: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40392: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40393: ;;// porth.porth:5276:36: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_40394: ;;// porth.porth:5276:50: OP_INLINED 36
addr_40395: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40396: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40397: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40398: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40399: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40400: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40401: ;;// porth.porth:5276:55: OP_INLINED 0
addr_40402: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_40403: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_40404: ;;// porth.porth:5276:60: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_40405: ;;// porth.porth:5276:75: OP_INLINED 36
addr_40406: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40407: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40408: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40409: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40410: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40411: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40412: ;;// porth.porth:5276:80: OP_INLINED 16
addr_40413: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_40414: ;;// porth.porth:5277:5: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_40415: ;;// porth.porth:5277:8: OP_IF 625
    pop rax
    test rax, rax
    jz addr_41040
addr_40416: ;;// porth.porth:5278:7: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_40417: ;;// porth.porth:5278:15: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_40418: ;;// porth.porth:5278:42: OP_INLINED 36
addr_40419: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40420: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40421: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40422: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40423: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40424: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40425: ;;// porth.porth:5278:47: OP_INLINED 16
addr_40426: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_40427: ;;// porth.porth:5278:52: OP_PUSH_INT 88
    mov rax, 88
    push rax
addr_40428: ;;// porth.porth:5278:63: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_40429: ;;// porth.porth:5278:65: OP_PUSH_GLOBAL_MEM 8421432
    lea rax, [mem+8421432]
    push rax
addr_40430: ;;// porth.porth:5278:69: OP_INLINED 73
addr_40431: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_40432: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40433: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_40434: ;;// porth.porth:5279:9: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_40435: ;;// porth.porth:5279:13: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_40436: ;;// porth.porth:5279:21: OP_INLINED 36
addr_40437: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40438: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40439: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40440: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40441: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40442: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40443: ;;// porth.porth:5279:26: OP_INLINED 16
addr_40444: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_40445: ;;// porth.porth:5279:31: OP_PUSH_INT 20
    mov rax, 20
    push rax
addr_40446: ;;// porth.porth:5279:40: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_40447: ;;// porth.porth:5279:42: OP_IF 125
    pop rax
    test rax, rax
    jz addr_40572
addr_40448: ;;// porth.porth:5280:11: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_40449: ;;// porth.porth:5280:15: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_40450: ;;// porth.porth:5280:24: OP_INLINED 36
addr_40451: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40452: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40453: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40454: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40455: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40456: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40457: ;;// porth.porth:5280:29: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_40458: ;;// porth.porth:5280:39: OP_INLINED 36
addr_40459: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40460: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40461: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40462: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40463: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40464: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40465: ;;// porth.porth:5280:44: OP_INLINED 5367
addr_40466: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_40467: ;;// porth.porth:32:35: OP_INLINED 5195
addr_40468: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_40469: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_40470: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_40471: ;;// porth.porth:24:23: OP_INLINED 36
addr_40472: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40473: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40474: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40475: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40476: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40477: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40478: ;;// porth.porth:24:28: OP_INLINED 753
addr_40479: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_40480: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_40481: ;;// std/std.porth:65:7: OP_INLINED 704
addr_40482: ;;// std/std.porth:58:38: OP_INLINED 684
addr_40483: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_40484: ;;// std/std.porth:56:57: OP_INLINED 36
addr_40485: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40486: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40487: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40488: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40489: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40490: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40491: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_40492: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_40493: ;;// std/std.porth:66:7: OP_INLINED 716
addr_40494: ;;// std/std.porth:59:37: OP_INLINED 694
addr_40495: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_40496: ;;// std/std.porth:57:55: OP_INLINED 36
addr_40497: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40498: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40499: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40500: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40501: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40502: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40503: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_40504: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_40505: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_40506: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_40507: ;;// porth.porth:24:36: OP_INLINED 662
addr_40508: ;;// std/std.porth:48:34: OP_INLINED 394
addr_40509: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_40510: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_40511: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_40512: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_40513: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_40514: ;;// porth.porth:25:36: OP_INLINED 662
addr_40515: ;;// std/std.porth:48:34: OP_INLINED 394
addr_40516: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_40517: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_40518: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_40519: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_40520: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_40521: ;;// porth.porth:26:17: OP_INLINED 36
addr_40522: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40523: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40524: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40525: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40526: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40527: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40528: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_40529: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_40530: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_40531: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_40532: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_40533: ;;// porth.porth:27:36: OP_INLINED 662
addr_40534: ;;// std/std.porth:48:34: OP_INLINED 394
addr_40535: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_40536: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_40537: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_40538: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_40539: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_40540: ;;// porth.porth:28:17: OP_INLINED 36
addr_40541: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40542: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40543: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40544: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40545: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40546: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40547: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_40548: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_40549: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_40550: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_40551: ;;// porth.porth:5281:11: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_40552: ;;// porth.porth:5281:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_40553: ;;// porth.porth:5281:23: OP_INLINED 36
addr_40554: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40555: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40556: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40557: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40558: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40559: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40560: ;;// porth.porth:5281:28: OP_INLINED 16
addr_40561: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_40562: ;;// porth.porth:5282:13: OP_PUSH_STR 971
    mov rax, 176
    push rax
    lea rax, [str_971]
    push rax
addr_40563: ;;// porth.porth:5282:193: OP_INLINED 676
addr_40564: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_40565: ;;// std/std.porth:50:37: OP_INLINED 662
addr_40566: ;;// std/std.porth:48:34: OP_INLINED 394
addr_40567: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_40568: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_40569: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_40570: ;;// porth.porth:5283:11: OP_INTRINSIC drop
    pop rax
addr_40571: ;;// porth.porth:5284:9: OP_ELSE 138
    jmp addr_40709
addr_40572: ;;// porth.porth:5284:14: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_40573: ;;// porth.porth:5284:18: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_40574: ;;// porth.porth:5284:26: OP_INLINED 36
addr_40575: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40576: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40577: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40578: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40579: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40580: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40581: ;;// porth.porth:5284:31: OP_INLINED 16
addr_40582: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_40583: ;;// porth.porth:5284:36: OP_PUSH_INT 15
    mov rax, 15
    push rax
addr_40584: ;;// porth.porth:5284:49: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_40585: ;;// porth.porth:5284:51: OP_IFSTAR 125
    pop rax
    test rax, rax
    jz addr_40710
addr_40586: ;;// porth.porth:5285:11: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_40587: ;;// porth.porth:5285:15: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_40588: ;;// porth.porth:5285:24: OP_INLINED 36
addr_40589: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40590: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40591: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40592: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40593: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40594: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40595: ;;// porth.porth:5285:29: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_40596: ;;// porth.porth:5285:39: OP_INLINED 36
addr_40597: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40598: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40599: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40600: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40601: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40602: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40603: ;;// porth.porth:5285:44: OP_INLINED 5367
addr_40604: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_40605: ;;// porth.porth:32:35: OP_INLINED 5195
addr_40606: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_40607: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_40608: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_40609: ;;// porth.porth:24:23: OP_INLINED 36
addr_40610: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40611: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40612: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40613: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40614: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40615: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40616: ;;// porth.porth:24:28: OP_INLINED 753
addr_40617: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_40618: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_40619: ;;// std/std.porth:65:7: OP_INLINED 704
addr_40620: ;;// std/std.porth:58:38: OP_INLINED 684
addr_40621: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_40622: ;;// std/std.porth:56:57: OP_INLINED 36
addr_40623: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40624: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40625: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40626: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40627: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40628: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40629: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_40630: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_40631: ;;// std/std.porth:66:7: OP_INLINED 716
addr_40632: ;;// std/std.porth:59:37: OP_INLINED 694
addr_40633: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_40634: ;;// std/std.porth:57:55: OP_INLINED 36
addr_40635: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40636: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40637: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40638: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40639: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40640: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40641: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_40642: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_40643: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_40644: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_40645: ;;// porth.porth:24:36: OP_INLINED 662
addr_40646: ;;// std/std.porth:48:34: OP_INLINED 394
addr_40647: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_40648: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_40649: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_40650: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_40651: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_40652: ;;// porth.porth:25:36: OP_INLINED 662
addr_40653: ;;// std/std.porth:48:34: OP_INLINED 394
addr_40654: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_40655: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_40656: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_40657: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_40658: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_40659: ;;// porth.porth:26:17: OP_INLINED 36
addr_40660: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40661: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40662: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40663: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40664: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40665: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40666: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_40667: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_40668: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_40669: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_40670: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_40671: ;;// porth.porth:27:36: OP_INLINED 662
addr_40672: ;;// std/std.porth:48:34: OP_INLINED 394
addr_40673: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_40674: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_40675: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_40676: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_40677: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_40678: ;;// porth.porth:28:17: OP_INLINED 36
addr_40679: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40680: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40681: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40682: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40683: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40684: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40685: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_40686: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_40687: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_40688: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_40689: ;;// porth.porth:5286:11: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_40690: ;;// porth.porth:5286:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_40691: ;;// porth.porth:5286:23: OP_INLINED 36
addr_40692: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40693: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40694: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40695: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40696: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40697: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40698: ;;// porth.porth:5286:28: OP_INLINED 16
addr_40699: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_40700: ;;// porth.porth:5287:13: OP_PUSH_STR 972
    mov rax, 138
    push rax
    lea rax, [str_972]
    push rax
addr_40701: ;;// porth.porth:5287:155: OP_INLINED 676
addr_40702: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_40703: ;;// std/std.porth:50:37: OP_INLINED 662
addr_40704: ;;// std/std.porth:48:34: OP_INLINED 394
addr_40705: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_40706: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_40707: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_40708: ;;// porth.porth:5288:11: OP_INTRINSIC drop
    pop rax
addr_40709: ;;// porth.porth:5289:9: OP_ELSE 22
    jmp addr_40731
addr_40710: ;;// porth.porth:5290:11: OP_PUSH_STR 973
    mov rax, 19
    push rax
    lea rax, [str_973]
    push rax
addr_40711: ;;// porth.porth:5290:30: OP_INLINED 676
addr_40712: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_40713: ;;// std/std.porth:50:37: OP_INLINED 662
addr_40714: ;;// std/std.porth:48:34: OP_INLINED 394
addr_40715: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_40716: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_40717: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_40718: ;;// porth.porth:5291:11: OP_PUSH_STR 974
    mov rax, 14
    push rax
    lea rax, [str_974]
    push rax
addr_40719: ;;// porth.porth:5291:30: OP_INLINED 676
addr_40720: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_40721: ;;// std/std.porth:50:37: OP_INLINED 662
addr_40722: ;;// std/std.porth:48:34: OP_INLINED 394
addr_40723: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_40724: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_40725: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_40726: ;;// porth.porth:5292:11: OP_PUSH_INT 69
    mov rax, 69
    push rax
addr_40727: ;;// porth.porth:5292:14: OP_INLINED 418
addr_40728: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_40729: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_40730: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_40731: ;;// porth.porth:5293:9: OP_END_IF 0
addr_40732: ;;// porth.porth:5294:7: OP_INTRINSIC drop
    pop rax
addr_40733: ;;// porth.porth:5296:7: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_40734: ;;// porth.porth:5296:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_40735: ;;// porth.porth:5296:33: OP_INLINED 36
addr_40736: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40737: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40738: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40739: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40740: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40741: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40742: ;;// porth.porth:5296:38: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_40743: ;;// porth.porth:5296:52: OP_INLINED 36
addr_40744: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40745: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40746: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40747: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40748: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40749: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40750: ;;// porth.porth:5296:57: OP_INLINED 0
addr_40751: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_40752: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_40753: ;;// porth.porth:5297:9: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_40754: ;;// porth.porth:5297:13: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_40755: ;;// porth.porth:5297:27: OP_INLINED 36
addr_40756: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40757: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40758: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40759: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40760: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40761: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40762: ;;// porth.porth:5297:52: OP_INLINED 5367
addr_40763: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_40764: ;;// porth.porth:32:35: OP_INLINED 5195
addr_40765: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_40766: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_40767: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_40768: ;;// porth.porth:24:23: OP_INLINED 36
addr_40769: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40770: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40771: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40772: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40773: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40774: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40775: ;;// porth.porth:24:28: OP_INLINED 753
addr_40776: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_40777: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_40778: ;;// std/std.porth:65:7: OP_INLINED 704
addr_40779: ;;// std/std.porth:58:38: OP_INLINED 684
addr_40780: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_40781: ;;// std/std.porth:56:57: OP_INLINED 36
addr_40782: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40783: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40784: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40785: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40786: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40787: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40788: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_40789: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_40790: ;;// std/std.porth:66:7: OP_INLINED 716
addr_40791: ;;// std/std.porth:59:37: OP_INLINED 694
addr_40792: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_40793: ;;// std/std.porth:57:55: OP_INLINED 36
addr_40794: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40795: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40796: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40797: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40798: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40799: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40800: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_40801: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_40802: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_40803: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_40804: ;;// porth.porth:24:36: OP_INLINED 662
addr_40805: ;;// std/std.porth:48:34: OP_INLINED 394
addr_40806: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_40807: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_40808: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_40809: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_40810: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_40811: ;;// porth.porth:25:36: OP_INLINED 662
addr_40812: ;;// std/std.porth:48:34: OP_INLINED 394
addr_40813: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_40814: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_40815: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_40816: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_40817: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_40818: ;;// porth.porth:26:17: OP_INLINED 36
addr_40819: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40820: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40821: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40822: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40823: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40824: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40825: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_40826: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_40827: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_40828: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_40829: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_40830: ;;// porth.porth:27:36: OP_INLINED 662
addr_40831: ;;// std/std.porth:48:34: OP_INLINED 394
addr_40832: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_40833: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_40834: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_40835: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_40836: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_40837: ;;// porth.porth:28:17: OP_INLINED 36
addr_40838: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40839: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40840: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40841: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40842: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40843: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40844: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_40845: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_40846: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_40847: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_40848: ;;// porth.porth:5298:9: OP_PUSH_STR 975
    mov rax, 25
    push rax
    lea rax, [str_975]
    push rax
addr_40849: ;;// porth.porth:5298:52: OP_INLINED 676
addr_40850: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_40851: ;;// std/std.porth:50:37: OP_INLINED 662
addr_40852: ;;// std/std.porth:48:34: OP_INLINED 394
addr_40853: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_40854: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_40855: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_40856: ;;// porth.porth:5299:9: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_40857: ;;// porth.porth:5299:13: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_40858: ;;// porth.porth:5299:28: OP_INLINED 36
addr_40859: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40860: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40861: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40862: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40863: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40864: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40865: ;;// porth.porth:5299:33: OP_INLINED 16
addr_40866: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_40867: ;;// porth.porth:5299:38: OP_CALL 10541
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_10541
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_40868: ;;// porth.porth:5299:52: OP_INLINED 676
addr_40869: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_40870: ;;// std/std.porth:50:37: OP_INLINED 662
addr_40871: ;;// std/std.porth:48:34: OP_INLINED 394
addr_40872: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_40873: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_40874: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_40875: ;;// porth.porth:5300:9: OP_PUSH_STR 976
    mov rax, 2
    push rax
    lea rax, [str_976]
    push rax
addr_40876: ;;// porth.porth:5300:52: OP_INLINED 676
addr_40877: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_40878: ;;// std/std.porth:50:37: OP_INLINED 662
addr_40879: ;;// std/std.porth:48:34: OP_INLINED 394
addr_40880: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_40881: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_40882: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_40883: ;;// porth.porth:5301:7: OP_INTRINSIC drop
    pop rax
addr_40884: ;;// porth.porth:5303:7: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_40885: ;;// porth.porth:5303:15: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_40886: ;;// porth.porth:5303:32: OP_INLINED 36
addr_40887: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40888: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40889: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40890: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40891: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40892: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40893: ;;// porth.porth:5303:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_40894: ;;// porth.porth:5303:51: OP_INLINED 36
addr_40895: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40896: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40897: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40898: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40899: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40900: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40901: ;;// porth.porth:5303:56: OP_INLINED 0
addr_40902: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_40903: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_40904: ;;// porth.porth:5304:9: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_40905: ;;// porth.porth:5304:13: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_40906: ;;// porth.porth:5304:27: OP_INLINED 36
addr_40907: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40908: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40909: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40910: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40911: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40912: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40913: ;;// porth.porth:5304:54: OP_INLINED 5367
addr_40914: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_40915: ;;// porth.porth:32:35: OP_INLINED 5195
addr_40916: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_40917: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_40918: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_40919: ;;// porth.porth:24:23: OP_INLINED 36
addr_40920: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40921: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40922: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40923: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40924: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40925: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40926: ;;// porth.porth:24:28: OP_INLINED 753
addr_40927: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_40928: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_40929: ;;// std/std.porth:65:7: OP_INLINED 704
addr_40930: ;;// std/std.porth:58:38: OP_INLINED 684
addr_40931: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_40932: ;;// std/std.porth:56:57: OP_INLINED 36
addr_40933: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40934: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40935: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40936: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40937: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40938: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40939: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_40940: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_40941: ;;// std/std.porth:66:7: OP_INLINED 716
addr_40942: ;;// std/std.porth:59:37: OP_INLINED 694
addr_40943: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_40944: ;;// std/std.porth:57:55: OP_INLINED 36
addr_40945: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40946: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40947: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40948: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40949: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40950: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40951: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_40952: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_40953: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_40954: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_40955: ;;// porth.porth:24:36: OP_INLINED 662
addr_40956: ;;// std/std.porth:48:34: OP_INLINED 394
addr_40957: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_40958: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_40959: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_40960: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_40961: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_40962: ;;// porth.porth:25:36: OP_INLINED 662
addr_40963: ;;// std/std.porth:48:34: OP_INLINED 394
addr_40964: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_40965: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_40966: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_40967: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_40968: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_40969: ;;// porth.porth:26:17: OP_INLINED 36
addr_40970: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40971: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40972: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40973: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40974: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40975: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40976: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_40977: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_40978: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_40979: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_40980: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_40981: ;;// porth.porth:27:36: OP_INLINED 662
addr_40982: ;;// std/std.porth:48:34: OP_INLINED 394
addr_40983: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_40984: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_40985: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_40986: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_40987: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_40988: ;;// porth.porth:28:17: OP_INLINED 36
addr_40989: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40990: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_40991: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_40992: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_40993: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_40994: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_40995: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_40996: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_40997: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_40998: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_40999: ;;// porth.porth:5305:9: OP_PUSH_STR 977
    mov rax, 23
    push rax
    lea rax, [str_977]
    push rax
addr_41000: ;;// porth.porth:5305:54: OP_INLINED 676
addr_41001: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_41002: ;;// std/std.porth:50:37: OP_INLINED 662
addr_41003: ;;// std/std.porth:48:34: OP_INLINED 394
addr_41004: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_41005: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_41006: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_41007: ;;// porth.porth:5306:9: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_41008: ;;// porth.porth:5306:13: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_41009: ;;// porth.porth:5306:28: OP_INLINED 36
addr_41010: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41011: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41012: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41013: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41014: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41015: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41016: ;;// porth.porth:5306:33: OP_INLINED 16
addr_41017: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_41018: ;;// porth.porth:5306:38: OP_CALL 10541
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_10541
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_41019: ;;// porth.porth:5306:54: OP_INLINED 676
addr_41020: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_41021: ;;// std/std.porth:50:37: OP_INLINED 662
addr_41022: ;;// std/std.porth:48:34: OP_INLINED 394
addr_41023: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_41024: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_41025: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_41026: ;;// porth.porth:5307:9: OP_PUSH_STR 978
    mov rax, 2
    push rax
    lea rax, [str_978]
    push rax
addr_41027: ;;// porth.porth:5307:54: OP_INLINED 676
addr_41028: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_41029: ;;// std/std.porth:50:37: OP_INLINED 662
addr_41030: ;;// std/std.porth:48:34: OP_INLINED 394
addr_41031: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_41032: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_41033: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_41034: ;;// porth.porth:5308:7: OP_INTRINSIC drop
    pop rax
addr_41035: ;;// porth.porth:5310:7: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_41036: ;;// porth.porth:5310:9: OP_INLINED 418
addr_41037: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_41038: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_41039: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_41040: ;;// porth.porth:5311:5: OP_END_IF 0
addr_41041: ;;// porth.porth:5312:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_41042: ;;// porth.porth:5312:13: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_41043: ;;// porth.porth:5312:31: OP_INLINED 36
addr_41044: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41045: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41046: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41047: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41048: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41049: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41050: ;;// porth.porth:5312:36: OP_CALL 13682
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13682
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_41051: ;;// porth.porth:5313:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_41052: ;;// porth.porth:5313:13: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_41053: ;;// porth.porth:5313:30: OP_INLINED 36
addr_41054: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41055: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41056: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41057: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41058: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41059: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41060: ;;// porth.porth:5313:36: OP_CALL 13682
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13682
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_41061: ;;// porth.porth:5314:3: OP_END_WHILE 742
    jmp addr_40319
addr_41062: ;;// porth.porth:5316:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_41063: ;;// porth.porth:5316:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_41064: ;;// porth.porth:5316:29: OP_INLINED 36
addr_41065: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41066: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41067: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41068: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41069: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41070: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41071: ;;// porth.porth:5316:34: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_41072: ;;// porth.porth:5316:50: OP_INLINED 36
addr_41073: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41074: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41075: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41076: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41077: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41078: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41079: ;;// porth.porth:5316:55: OP_INLINED 16
addr_41080: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_41081: ;;// porth.porth:5317:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_41082: ;;// porth.porth:5317:11: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_41083: ;;// porth.porth:5317:28: OP_INLINED 36
addr_41084: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41085: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41086: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41087: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41088: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41089: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41090: ;;// porth.porth:5317:34: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_41091: ;;// porth.porth:5317:50: OP_INLINED 36
addr_41092: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41093: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41094: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41095: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41096: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41097: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41098: ;;// porth.porth:5317:55: OP_INLINED 16
addr_41099: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_41100: ;;// porth.porth:5318:5: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_41101: ;;// porth.porth:5318:10: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_41102: ;;// porth.porth:5318:15: OP_INTRINSIC >
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_41103: ;;// porth.porth:5318:17: OP_IF 334
    pop rax
    test rax, rax
    jz addr_41437
addr_41104: ;;// porth.porth:5319:7: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_41105: ;;// porth.porth:5319:15: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_41106: ;;// porth.porth:5319:42: OP_INLINED 36
addr_41107: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41108: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41109: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41110: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41111: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41112: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41113: ;;// porth.porth:5319:47: OP_INLINED 16
addr_41114: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_41115: ;;// porth.porth:5319:52: OP_PUSH_INT 88
    mov rax, 88
    push rax
addr_41116: ;;// porth.porth:5319:63: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_41117: ;;// porth.porth:5319:65: OP_PUSH_GLOBAL_MEM 8421432
    lea rax, [mem+8421432]
    push rax
addr_41118: ;;// porth.porth:5319:69: OP_INLINED 73
addr_41119: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_41120: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41121: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_41122: ;;// porth.porth:5320:9: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_41123: ;;// porth.porth:5320:13: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_41124: ;;// porth.porth:5320:21: OP_INLINED 36
addr_41125: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41126: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41127: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41128: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41129: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41130: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41131: ;;// porth.porth:5320:26: OP_INLINED 16
addr_41132: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_41133: ;;// porth.porth:5320:31: OP_PUSH_INT 20
    mov rax, 20
    push rax
addr_41134: ;;// porth.porth:5320:40: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_41135: ;;// porth.porth:5320:42: OP_IF 125
    pop rax
    test rax, rax
    jz addr_41260
addr_41136: ;;// porth.porth:5321:11: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_41137: ;;// porth.porth:5321:15: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_41138: ;;// porth.porth:5321:24: OP_INLINED 36
addr_41139: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41140: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41141: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41142: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41143: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41144: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41145: ;;// porth.porth:5321:29: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_41146: ;;// porth.porth:5321:39: OP_INLINED 36
addr_41147: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41148: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41149: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41150: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41151: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41152: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41153: ;;// porth.porth:5321:44: OP_INLINED 5367
addr_41154: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_41155: ;;// porth.porth:32:35: OP_INLINED 5195
addr_41156: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_41157: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_41158: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_41159: ;;// porth.porth:24:23: OP_INLINED 36
addr_41160: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41161: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41162: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41163: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41164: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41165: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41166: ;;// porth.porth:24:28: OP_INLINED 753
addr_41167: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_41168: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_41169: ;;// std/std.porth:65:7: OP_INLINED 704
addr_41170: ;;// std/std.porth:58:38: OP_INLINED 684
addr_41171: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_41172: ;;// std/std.porth:56:57: OP_INLINED 36
addr_41173: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41174: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41175: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41176: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41177: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41178: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41179: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_41180: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_41181: ;;// std/std.porth:66:7: OP_INLINED 716
addr_41182: ;;// std/std.porth:59:37: OP_INLINED 694
addr_41183: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_41184: ;;// std/std.porth:57:55: OP_INLINED 36
addr_41185: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41186: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41187: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41188: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41189: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41190: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41191: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_41192: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_41193: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_41194: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_41195: ;;// porth.porth:24:36: OP_INLINED 662
addr_41196: ;;// std/std.porth:48:34: OP_INLINED 394
addr_41197: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_41198: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_41199: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_41200: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_41201: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_41202: ;;// porth.porth:25:36: OP_INLINED 662
addr_41203: ;;// std/std.porth:48:34: OP_INLINED 394
addr_41204: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_41205: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_41206: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_41207: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_41208: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_41209: ;;// porth.porth:26:17: OP_INLINED 36
addr_41210: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41211: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41212: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41213: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41214: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41215: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41216: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_41217: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_41218: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_41219: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_41220: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_41221: ;;// porth.porth:27:36: OP_INLINED 662
addr_41222: ;;// std/std.porth:48:34: OP_INLINED 394
addr_41223: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_41224: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_41225: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_41226: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_41227: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_41228: ;;// porth.porth:28:17: OP_INLINED 36
addr_41229: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41230: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41231: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41232: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41233: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41234: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41235: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_41236: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_41237: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_41238: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_41239: ;;// porth.porth:5322:11: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_41240: ;;// porth.porth:5322:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_41241: ;;// porth.porth:5322:23: OP_INLINED 36
addr_41242: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41243: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41244: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41245: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41246: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41247: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41248: ;;// porth.porth:5322:28: OP_INLINED 16
addr_41249: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_41250: ;;// porth.porth:5323:13: OP_PUSH_STR 979
    mov rax, 221
    push rax
    lea rax, [str_979]
    push rax
addr_41251: ;;// porth.porth:5323:238: OP_INLINED 676
addr_41252: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_41253: ;;// std/std.porth:50:37: OP_INLINED 662
addr_41254: ;;// std/std.porth:48:34: OP_INLINED 394
addr_41255: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_41256: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_41257: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_41258: ;;// porth.porth:5324:11: OP_INTRINSIC drop
    pop rax
addr_41259: ;;// porth.porth:5325:9: OP_ELSE 138
    jmp addr_41397
addr_41260: ;;// porth.porth:5325:14: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_41261: ;;// porth.porth:5325:18: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_41262: ;;// porth.porth:5325:26: OP_INLINED 36
addr_41263: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41264: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41265: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41266: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41267: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41268: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41269: ;;// porth.porth:5325:31: OP_INLINED 16
addr_41270: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_41271: ;;// porth.porth:5325:36: OP_PUSH_INT 15
    mov rax, 15
    push rax
addr_41272: ;;// porth.porth:5325:49: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_41273: ;;// porth.porth:5325:51: OP_IFSTAR 125
    pop rax
    test rax, rax
    jz addr_41398
addr_41274: ;;// porth.porth:5326:11: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_41275: ;;// porth.porth:5326:15: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_41276: ;;// porth.porth:5326:24: OP_INLINED 36
addr_41277: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41278: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41279: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41280: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41281: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41282: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41283: ;;// porth.porth:5326:29: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_41284: ;;// porth.porth:5326:39: OP_INLINED 36
addr_41285: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41286: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41287: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41288: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41289: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41290: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41291: ;;// porth.porth:5326:44: OP_INLINED 5367
addr_41292: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_41293: ;;// porth.porth:32:35: OP_INLINED 5195
addr_41294: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_41295: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_41296: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_41297: ;;// porth.porth:24:23: OP_INLINED 36
addr_41298: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41299: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41300: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41301: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41302: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41303: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41304: ;;// porth.porth:24:28: OP_INLINED 753
addr_41305: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_41306: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_41307: ;;// std/std.porth:65:7: OP_INLINED 704
addr_41308: ;;// std/std.porth:58:38: OP_INLINED 684
addr_41309: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_41310: ;;// std/std.porth:56:57: OP_INLINED 36
addr_41311: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41312: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41313: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41314: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41315: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41316: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41317: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_41318: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_41319: ;;// std/std.porth:66:7: OP_INLINED 716
addr_41320: ;;// std/std.porth:59:37: OP_INLINED 694
addr_41321: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_41322: ;;// std/std.porth:57:55: OP_INLINED 36
addr_41323: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41324: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41325: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41326: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41327: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41328: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41329: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_41330: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_41331: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_41332: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_41333: ;;// porth.porth:24:36: OP_INLINED 662
addr_41334: ;;// std/std.porth:48:34: OP_INLINED 394
addr_41335: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_41336: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_41337: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_41338: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_41339: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_41340: ;;// porth.porth:25:36: OP_INLINED 662
addr_41341: ;;// std/std.porth:48:34: OP_INLINED 394
addr_41342: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_41343: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_41344: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_41345: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_41346: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_41347: ;;// porth.porth:26:17: OP_INLINED 36
addr_41348: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41349: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41350: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41351: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41352: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41353: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41354: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_41355: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_41356: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_41357: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_41358: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_41359: ;;// porth.porth:27:36: OP_INLINED 662
addr_41360: ;;// std/std.porth:48:34: OP_INLINED 394
addr_41361: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_41362: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_41363: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_41364: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_41365: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_41366: ;;// porth.porth:28:17: OP_INLINED 36
addr_41367: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41368: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41369: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41370: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41371: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41372: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41373: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_41374: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_41375: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_41376: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_41377: ;;// porth.porth:5327:11: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_41378: ;;// porth.porth:5327:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_41379: ;;// porth.porth:5327:23: OP_INLINED 36
addr_41380: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41381: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41382: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41383: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41384: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41385: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41386: ;;// porth.porth:5327:28: OP_INLINED 16
addr_41387: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_41388: ;;// porth.porth:5328:13: OP_PUSH_STR 980
    mov rax, 183
    push rax
    lea rax, [str_980]
    push rax
addr_41389: ;;// porth.porth:5328:200: OP_INLINED 676
addr_41390: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_41391: ;;// std/std.porth:50:37: OP_INLINED 662
addr_41392: ;;// std/std.porth:48:34: OP_INLINED 394
addr_41393: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_41394: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_41395: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_41396: ;;// porth.porth:5329:11: OP_INTRINSIC drop
    pop rax
addr_41397: ;;// porth.porth:5330:9: OP_ELSE 22
    jmp addr_41419
addr_41398: ;;// porth.porth:5331:11: OP_PUSH_STR 981
    mov rax, 19
    push rax
    lea rax, [str_981]
    push rax
addr_41399: ;;// porth.porth:5331:30: OP_INLINED 676
addr_41400: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_41401: ;;// std/std.porth:50:37: OP_INLINED 662
addr_41402: ;;// std/std.porth:48:34: OP_INLINED 394
addr_41403: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_41404: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_41405: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_41406: ;;// porth.porth:5332:11: OP_PUSH_STR 982
    mov rax, 14
    push rax
    lea rax, [str_982]
    push rax
addr_41407: ;;// porth.porth:5332:30: OP_INLINED 676
addr_41408: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_41409: ;;// std/std.porth:50:37: OP_INLINED 662
addr_41410: ;;// std/std.porth:48:34: OP_INLINED 394
addr_41411: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_41412: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_41413: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_41414: ;;// porth.porth:5333:11: OP_PUSH_INT 69
    mov rax, 69
    push rax
addr_41415: ;;// porth.porth:5333:14: OP_INLINED 418
addr_41416: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_41417: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_41418: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_41419: ;;// porth.porth:5334:9: OP_END_IF 0
addr_41420: ;;// porth.porth:5335:7: OP_INTRINSIC drop
    pop rax
addr_41421: ;;// porth.porth:5336:7: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_41422: ;;// porth.porth:5336:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_41423: ;;// porth.porth:5336:33: OP_INLINED 36
addr_41424: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41425: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41426: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41427: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41428: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41429: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41430: ;;// porth.porth:5336:38: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_41431: ;;// porth.porth:5336:45: OP_CALL 13761
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13761
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_41432: ;;// porth.porth:5338:7: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_41433: ;;// porth.porth:5338:9: OP_INLINED 418
addr_41434: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_41435: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_41436: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_41437: ;;// porth.porth:5339:5: OP_END_IF 0
addr_41438: ;;// porth.porth:5341:5: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_41439: ;;// porth.porth:5341:10: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_41440: ;;// porth.porth:5341:15: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_41441: ;;// porth.porth:5341:17: OP_IF 334
    pop rax
    test rax, rax
    jz addr_41775
addr_41442: ;;// porth.porth:5342:7: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_41443: ;;// porth.porth:5342:15: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_41444: ;;// porth.porth:5342:42: OP_INLINED 36
addr_41445: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41446: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41447: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41448: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41449: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41450: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41451: ;;// porth.porth:5342:47: OP_INLINED 16
addr_41452: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_41453: ;;// porth.porth:5342:52: OP_PUSH_INT 88
    mov rax, 88
    push rax
addr_41454: ;;// porth.porth:5342:63: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_41455: ;;// porth.porth:5342:65: OP_PUSH_GLOBAL_MEM 8421432
    lea rax, [mem+8421432]
    push rax
addr_41456: ;;// porth.porth:5342:69: OP_INLINED 73
addr_41457: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_41458: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41459: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_41460: ;;// porth.porth:5343:9: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_41461: ;;// porth.porth:5343:13: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_41462: ;;// porth.porth:5343:21: OP_INLINED 36
addr_41463: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41464: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41465: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41466: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41467: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41468: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41469: ;;// porth.porth:5343:26: OP_INLINED 16
addr_41470: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_41471: ;;// porth.porth:5343:31: OP_PUSH_INT 20
    mov rax, 20
    push rax
addr_41472: ;;// porth.porth:5343:40: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_41473: ;;// porth.porth:5343:42: OP_IF 125
    pop rax
    test rax, rax
    jz addr_41598
addr_41474: ;;// porth.porth:5344:11: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_41475: ;;// porth.porth:5344:15: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_41476: ;;// porth.porth:5344:24: OP_INLINED 36
addr_41477: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41478: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41479: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41480: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41481: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41482: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41483: ;;// porth.porth:5344:29: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_41484: ;;// porth.porth:5344:39: OP_INLINED 36
addr_41485: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41486: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41487: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41488: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41489: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41490: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41491: ;;// porth.porth:5344:44: OP_INLINED 5367
addr_41492: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_41493: ;;// porth.porth:32:35: OP_INLINED 5195
addr_41494: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_41495: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_41496: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_41497: ;;// porth.porth:24:23: OP_INLINED 36
addr_41498: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41499: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41500: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41501: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41502: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41503: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41504: ;;// porth.porth:24:28: OP_INLINED 753
addr_41505: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_41506: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_41507: ;;// std/std.porth:65:7: OP_INLINED 704
addr_41508: ;;// std/std.porth:58:38: OP_INLINED 684
addr_41509: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_41510: ;;// std/std.porth:56:57: OP_INLINED 36
addr_41511: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41512: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41513: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41514: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41515: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41516: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41517: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_41518: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_41519: ;;// std/std.porth:66:7: OP_INLINED 716
addr_41520: ;;// std/std.porth:59:37: OP_INLINED 694
addr_41521: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_41522: ;;// std/std.porth:57:55: OP_INLINED 36
addr_41523: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41524: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41525: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41526: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41527: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41528: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41529: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_41530: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_41531: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_41532: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_41533: ;;// porth.porth:24:36: OP_INLINED 662
addr_41534: ;;// std/std.porth:48:34: OP_INLINED 394
addr_41535: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_41536: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_41537: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_41538: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_41539: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_41540: ;;// porth.porth:25:36: OP_INLINED 662
addr_41541: ;;// std/std.porth:48:34: OP_INLINED 394
addr_41542: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_41543: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_41544: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_41545: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_41546: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_41547: ;;// porth.porth:26:17: OP_INLINED 36
addr_41548: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41549: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41550: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41551: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41552: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41553: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41554: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_41555: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_41556: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_41557: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_41558: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_41559: ;;// porth.porth:27:36: OP_INLINED 662
addr_41560: ;;// std/std.porth:48:34: OP_INLINED 394
addr_41561: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_41562: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_41563: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_41564: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_41565: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_41566: ;;// porth.porth:28:17: OP_INLINED 36
addr_41567: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41568: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41569: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41570: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41571: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41572: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41573: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_41574: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_41575: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_41576: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_41577: ;;// porth.porth:5345:11: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_41578: ;;// porth.porth:5345:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_41579: ;;// porth.porth:5345:23: OP_INLINED 36
addr_41580: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41581: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41582: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41583: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41584: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41585: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41586: ;;// porth.porth:5345:28: OP_INLINED 16
addr_41587: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_41588: ;;// porth.porth:5346:13: OP_PUSH_STR 983
    mov rax, 224
    push rax
    lea rax, [str_983]
    push rax
addr_41589: ;;// porth.porth:5346:241: OP_INLINED 676
addr_41590: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_41591: ;;// std/std.porth:50:37: OP_INLINED 662
addr_41592: ;;// std/std.porth:48:34: OP_INLINED 394
addr_41593: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_41594: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_41595: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_41596: ;;// porth.porth:5347:11: OP_INTRINSIC drop
    pop rax
addr_41597: ;;// porth.porth:5348:9: OP_ELSE 138
    jmp addr_41735
addr_41598: ;;// porth.porth:5348:14: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_41599: ;;// porth.porth:5348:18: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_41600: ;;// porth.porth:5348:26: OP_INLINED 36
addr_41601: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41602: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41603: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41604: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41605: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41606: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41607: ;;// porth.porth:5348:31: OP_INLINED 16
addr_41608: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_41609: ;;// porth.porth:5348:36: OP_PUSH_INT 15
    mov rax, 15
    push rax
addr_41610: ;;// porth.porth:5348:49: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_41611: ;;// porth.porth:5348:51: OP_IFSTAR 125
    pop rax
    test rax, rax
    jz addr_41736
addr_41612: ;;// porth.porth:5349:11: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_41613: ;;// porth.porth:5349:15: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_41614: ;;// porth.porth:5349:24: OP_INLINED 36
addr_41615: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41616: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41617: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41618: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41619: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41620: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41621: ;;// porth.porth:5349:29: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_41622: ;;// porth.porth:5349:39: OP_INLINED 36
addr_41623: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41624: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41625: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41626: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41627: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41628: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41629: ;;// porth.porth:5349:44: OP_INLINED 5367
addr_41630: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_41631: ;;// porth.porth:32:35: OP_INLINED 5195
addr_41632: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_41633: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_41634: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_41635: ;;// porth.porth:24:23: OP_INLINED 36
addr_41636: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41637: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41638: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41639: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41640: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41641: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41642: ;;// porth.porth:24:28: OP_INLINED 753
addr_41643: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_41644: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_41645: ;;// std/std.porth:65:7: OP_INLINED 704
addr_41646: ;;// std/std.porth:58:38: OP_INLINED 684
addr_41647: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_41648: ;;// std/std.porth:56:57: OP_INLINED 36
addr_41649: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41650: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41651: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41652: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41653: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41654: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41655: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_41656: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_41657: ;;// std/std.porth:66:7: OP_INLINED 716
addr_41658: ;;// std/std.porth:59:37: OP_INLINED 694
addr_41659: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_41660: ;;// std/std.porth:57:55: OP_INLINED 36
addr_41661: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41662: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41663: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41664: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41665: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41666: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41667: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_41668: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_41669: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_41670: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_41671: ;;// porth.porth:24:36: OP_INLINED 662
addr_41672: ;;// std/std.porth:48:34: OP_INLINED 394
addr_41673: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_41674: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_41675: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_41676: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_41677: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_41678: ;;// porth.porth:25:36: OP_INLINED 662
addr_41679: ;;// std/std.porth:48:34: OP_INLINED 394
addr_41680: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_41681: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_41682: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_41683: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_41684: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_41685: ;;// porth.porth:26:17: OP_INLINED 36
addr_41686: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41687: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41688: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41689: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41690: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41691: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41692: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_41693: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_41694: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_41695: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_41696: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_41697: ;;// porth.porth:27:36: OP_INLINED 662
addr_41698: ;;// std/std.porth:48:34: OP_INLINED 394
addr_41699: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_41700: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_41701: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_41702: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_41703: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_41704: ;;// porth.porth:28:17: OP_INLINED 36
addr_41705: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41706: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41707: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41708: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41709: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41710: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41711: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_41712: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_41713: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_41714: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_41715: ;;// porth.porth:5350:11: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_41716: ;;// porth.porth:5350:15: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_41717: ;;// porth.porth:5350:23: OP_INLINED 36
addr_41718: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41719: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41720: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41721: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41722: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41723: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41724: ;;// porth.porth:5350:28: OP_INLINED 16
addr_41725: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_41726: ;;// porth.porth:5351:13: OP_PUSH_STR 984
    mov rax, 186
    push rax
    lea rax, [str_984]
    push rax
addr_41727: ;;// porth.porth:5351:203: OP_INLINED 676
addr_41728: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_41729: ;;// std/std.porth:50:37: OP_INLINED 662
addr_41730: ;;// std/std.porth:48:34: OP_INLINED 394
addr_41731: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_41732: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_41733: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_41734: ;;// porth.porth:5352:11: OP_INTRINSIC drop
    pop rax
addr_41735: ;;// porth.porth:5353:9: OP_ELSE 22
    jmp addr_41757
addr_41736: ;;// porth.porth:5354:11: OP_PUSH_STR 985
    mov rax, 19
    push rax
    lea rax, [str_985]
    push rax
addr_41737: ;;// porth.porth:5354:30: OP_INLINED 676
addr_41738: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_41739: ;;// std/std.porth:50:37: OP_INLINED 662
addr_41740: ;;// std/std.porth:48:34: OP_INLINED 394
addr_41741: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_41742: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_41743: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_41744: ;;// porth.porth:5355:11: OP_PUSH_STR 986
    mov rax, 14
    push rax
    lea rax, [str_986]
    push rax
addr_41745: ;;// porth.porth:5355:30: OP_INLINED 676
addr_41746: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_41747: ;;// std/std.porth:50:37: OP_INLINED 662
addr_41748: ;;// std/std.porth:48:34: OP_INLINED 394
addr_41749: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_41750: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_41751: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_41752: ;;// porth.porth:5356:11: OP_PUSH_INT 69
    mov rax, 69
    push rax
addr_41753: ;;// porth.porth:5356:14: OP_INLINED 418
addr_41754: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_41755: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_41756: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_41757: ;;// porth.porth:5357:9: OP_END_IF 0
addr_41758: ;;// porth.porth:5358:7: OP_INTRINSIC drop
    pop rax
addr_41759: ;;// porth.porth:5359:7: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_41760: ;;// porth.porth:5359:15: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_41761: ;;// porth.porth:5359:32: OP_INLINED 36
addr_41762: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41763: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41764: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41765: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41766: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41767: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41768: ;;// porth.porth:5359:37: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_41769: ;;// porth.porth:5359:44: OP_CALL 13761
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13761
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_41770: ;;// porth.porth:5361:7: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_41771: ;;// porth.porth:5361:9: OP_INLINED 418
addr_41772: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_41773: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_41774: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_41775: ;;// porth.porth:5362:5: OP_END_IF 0
addr_41776: ;;// porth.porth:5363:3: OP_INTRINSIC drop
    pop rax
addr_41777: ;;// porth.porth:5364:3: OP_INTRINSIC drop
    pop rax
addr_41778: ;;// porth.porth:5365:3: OP_PUSH_GLOBAL_MEM 15073352
    lea rax, [mem+15073352]
    push rax
addr_41779: ;;// porth.porth:5365:25: OP_INLINED 30
addr_41780: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_41781: ;;// porth.porth:5366:1: OP_RET 216
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 216
    ret
addr_41782: ;;// porth.porth:5369:6: OP_PREP_PROC 72
    sub rsp, 72
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_41783: ;;// porth.porth:5372:3: OP_CALL 3443
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_3443
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_41784: ;;// porth.porth:5374:3: OP_PUSH_STR 987
    mov rax, 4
    push rax
    lea rax, [str_987]
    push rax
addr_41785: ;;// porth.porth:5374:10: OP_CALL 14004
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_14004
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_41786: ;;// porth.porth:5375:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_41787: ;;// porth.porth:5375:9: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_41788: ;;// porth.porth:5375:14: OP_INLINED 59
addr_41789: ;;// std/core.porth:52:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41790: ;;// std/core.porth:52:8: OP_INTRINSIC cast(int)
addr_41791: ;;// std/core.porth:53:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41792: ;;// std/core.porth:53:8: OP_INTRINSIC cast(int)
addr_41793: ;;// std/core.porth:54:3: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_41794: ;;// porth.porth:5375:19: OP_IF 14
    pop rax
    test rax, rax
    jz addr_41808
addr_41795: ;;// porth.porth:5376:7: OP_PUSH_STR 988
    mov rax, 41
    push rax
    lea rax, [str_988]
    push rax
addr_41796: ;;// porth.porth:5376:52: OP_INLINED 676
addr_41797: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_41798: ;;// std/std.porth:50:37: OP_INLINED 662
addr_41799: ;;// std/std.porth:48:34: OP_INLINED 394
addr_41800: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_41801: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_41802: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_41803: ;;// porth.porth:5377:7: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_41804: ;;// porth.porth:5377:9: OP_INLINED 418
addr_41805: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_41806: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_41807: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_41808: ;;// porth.porth:5378:5: OP_END_IF 0
addr_41809: ;;// porth.porth:5380:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_41810: ;;// porth.porth:5380:9: OP_PUSH_INT 72
    mov rax, 72
    push rax
addr_41811: ;;// porth.porth:5380:18: OP_INLINED 36
addr_41812: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41813: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41814: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41815: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41816: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41817: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41818: ;;// porth.porth:5380:23: OP_CALL 13741
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13741
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_41819: ;;// porth.porth:5380:41: OP_INLINED 131
addr_41820: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_41821: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_41822: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41823: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_41824: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_41825: ;;// porth.porth:5380:46: OP_IF 109
    pop rax
    test rax, rax
    jz addr_41934
addr_41826: ;;// porth.porth:5381:7: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_41827: ;;// porth.porth:5381:11: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_41828: ;;// porth.porth:5381:20: OP_INLINED 36
addr_41829: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41830: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41831: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41832: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41833: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41834: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41835: ;;// porth.porth:5381:67: OP_INLINED 5367
addr_41836: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_41837: ;;// porth.porth:32:35: OP_INLINED 5195
addr_41838: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_41839: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_41840: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_41841: ;;// porth.porth:24:23: OP_INLINED 36
addr_41842: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41843: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41844: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41845: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41846: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41847: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41848: ;;// porth.porth:24:28: OP_INLINED 753
addr_41849: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_41850: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_41851: ;;// std/std.porth:65:7: OP_INLINED 704
addr_41852: ;;// std/std.porth:58:38: OP_INLINED 684
addr_41853: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_41854: ;;// std/std.porth:56:57: OP_INLINED 36
addr_41855: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41856: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41857: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41858: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41859: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41860: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41861: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_41862: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_41863: ;;// std/std.porth:66:7: OP_INLINED 716
addr_41864: ;;// std/std.porth:59:37: OP_INLINED 694
addr_41865: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_41866: ;;// std/std.porth:57:55: OP_INLINED 36
addr_41867: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41868: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41869: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41870: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41871: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41872: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41873: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_41874: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_41875: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_41876: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_41877: ;;// porth.porth:24:36: OP_INLINED 662
addr_41878: ;;// std/std.porth:48:34: OP_INLINED 394
addr_41879: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_41880: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_41881: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_41882: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_41883: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_41884: ;;// porth.porth:25:36: OP_INLINED 662
addr_41885: ;;// std/std.porth:48:34: OP_INLINED 394
addr_41886: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_41887: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_41888: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_41889: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_41890: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_41891: ;;// porth.porth:26:17: OP_INLINED 36
addr_41892: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41893: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41894: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41895: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41896: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41897: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41898: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_41899: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_41900: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_41901: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_41902: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_41903: ;;// porth.porth:27:36: OP_INLINED 662
addr_41904: ;;// std/std.porth:48:34: OP_INLINED 394
addr_41905: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_41906: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_41907: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_41908: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_41909: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_41910: ;;// porth.porth:28:17: OP_INLINED 36
addr_41911: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41912: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41913: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41914: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41915: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41916: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41917: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_41918: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_41919: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_41920: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_41921: ;;// porth.porth:5382:7: OP_PUSH_STR 989
    mov rax, 56
    push rax
    lea rax, [str_989]
    push rax
addr_41922: ;;// porth.porth:5382:67: OP_INLINED 676
addr_41923: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_41924: ;;// std/std.porth:50:37: OP_INLINED 662
addr_41925: ;;// std/std.porth:48:34: OP_INLINED 394
addr_41926: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_41927: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_41928: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_41929: ;;// porth.porth:5383:7: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_41930: ;;// porth.porth:5383:9: OP_INLINED 418
addr_41931: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_41932: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_41933: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_41934: ;;// porth.porth:5384:5: OP_END_IF 0
addr_41935: ;;// porth.porth:5386:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_41936: ;;// porth.porth:5386:9: OP_PUSH_INT 88
    mov rax, 88
    push rax
addr_41937: ;;// porth.porth:5386:19: OP_INLINED 36
addr_41938: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41939: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41940: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41941: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41942: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41943: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41944: ;;// porth.porth:5386:24: OP_CALL 13741
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13741
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_41945: ;;// porth.porth:5386:42: OP_INLINED 131
addr_41946: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_41947: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_41948: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41949: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_41950: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_41951: ;;// porth.porth:5386:47: OP_IF 109
    pop rax
    test rax, rax
    jz addr_42060
addr_41952: ;;// porth.porth:5387:7: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_41953: ;;// porth.porth:5387:11: OP_PUSH_INT 40
    mov rax, 40
    push rax
addr_41954: ;;// porth.porth:5387:20: OP_INLINED 36
addr_41955: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41956: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41957: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41958: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41959: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41960: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41961: ;;// porth.porth:5387:62: OP_INLINED 5367
addr_41962: ;;// porth.porth:32:28: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_41963: ;;// porth.porth:32:35: OP_INLINED 5195
addr_41964: ;;// porth.porth:23:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_41965: ;;// porth.porth:24:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_41966: ;;// porth.porth:24:9: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_41967: ;;// porth.porth:24:23: OP_INLINED 36
addr_41968: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41969: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41970: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41971: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41972: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41973: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41974: ;;// porth.porth:24:28: OP_INLINED 753
addr_41975: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_41976: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_41977: ;;// std/std.porth:65:7: OP_INLINED 704
addr_41978: ;;// std/std.porth:58:38: OP_INLINED 684
addr_41979: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_41980: ;;// std/std.porth:56:57: OP_INLINED 36
addr_41981: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41982: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41983: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41984: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41985: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41986: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41987: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_41988: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_41989: ;;// std/std.porth:66:7: OP_INLINED 716
addr_41990: ;;// std/std.porth:59:37: OP_INLINED 694
addr_41991: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_41992: ;;// std/std.porth:57:55: OP_INLINED 36
addr_41993: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41994: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_41995: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_41996: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_41997: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_41998: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_41999: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42000: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_42001: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_42002: ;;// porth.porth:24:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_42003: ;;// porth.porth:24:36: OP_INLINED 662
addr_42004: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42005: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42006: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42007: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42008: ;;// porth.porth:25:5: OP_PUSH_STR 55
    mov rax, 1
    push rax
    lea rax, [str_55]
    push rax
addr_42009: ;;// porth.porth:25:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_42010: ;;// porth.porth:25:36: OP_INLINED 662
addr_42011: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42012: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42013: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42014: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42015: ;;// porth.porth:26:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_42016: ;;// porth.porth:26:9: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_42017: ;;// porth.porth:26:17: OP_INLINED 36
addr_42018: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_42019: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_42020: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_42021: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_42022: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_42023: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_42024: ;;// porth.porth:26:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42025: ;;// porth.porth:26:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_42026: ;;// porth.porth:26:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42027: ;;// porth.porth:27:5: OP_PUSH_STR 56
    mov rax, 1
    push rax
    lea rax, [str_56]
    push rax
addr_42028: ;;// porth.porth:27:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_42029: ;;// porth.porth:27:36: OP_INLINED 662
addr_42030: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42031: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42032: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42033: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42034: ;;// porth.porth:28:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_42035: ;;// porth.porth:28:9: OP_PUSH_INT 24
    mov rax, 24
    push rax
addr_42036: ;;// porth.porth:28:17: OP_INLINED 36
addr_42037: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_42038: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_42039: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_42040: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_42041: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_42042: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_42043: ;;// porth.porth:28:22: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42044: ;;// porth.porth:28:33: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_42045: ;;// porth.porth:28:36: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42046: ;;// porth.porth:29:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_42047: ;;// porth.porth:5388:7: OP_PUSH_STR 990
    mov rax, 51
    push rax
    lea rax, [str_990]
    push rax
addr_42048: ;;// porth.porth:5388:62: OP_INLINED 676
addr_42049: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_42050: ;;// std/std.porth:50:37: OP_INLINED 662
addr_42051: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42052: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42053: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42054: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42055: ;;// porth.porth:5389:7: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42056: ;;// porth.porth:5389:9: OP_INLINED 418
addr_42057: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_42058: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_42059: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_42060: ;;// porth.porth:5390:5: OP_END_IF 0
addr_42061: ;;// porth.porth:5391:3: OP_INTRINSIC drop
    pop rax
addr_42062: ;;// porth.porth:5395:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_42063: ;;// porth.porth:5395:5: OP_WHILE 95
addr_42064: ;;// porth.porth:5395:11: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_42065: ;;// porth.porth:5395:15: OP_PUSH_GLOBAL_MEM 15073360
    lea rax, [mem+15073360]
    push rax
addr_42066: ;;// porth.porth:5395:27: OP_INLINED 16
addr_42067: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42068: ;;// porth.porth:5395:32: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_42069: ;;// porth.porth:5395:34: OP_DO 89
    pop rax
    test rax, rax
    jz addr_42158
addr_42070: ;;// porth.porth:5396:5: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_42071: ;;// porth.porth:5396:9: OP_PUSH_INT 120
    mov rax, 120
    push rax
addr_42072: ;;// porth.porth:5396:22: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_42073: ;;// porth.porth:5396:24: OP_PUSH_GLOBAL_MEM 15073368
    lea rax, [mem+15073368]
    push rax
addr_42074: ;;// porth.porth:5396:30: OP_INLINED 73
addr_42075: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_42076: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_42077: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_42078: ;;// porth.porth:5397:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_42079: ;;// porth.porth:5397:10: OP_INLINED 27
addr_42080: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_42081: ;;// porth.porth:5399:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_42082: ;;// porth.porth:5399:10: OP_INLINED 0
addr_42083: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42084: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_42085: ;;// porth.porth:5399:15: OP_PUSH_INT 104
    mov rax, 104
    push rax
addr_42086: ;;// porth.porth:5399:25: OP_INLINED 36
addr_42087: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_42088: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_42089: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_42090: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_42091: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_42092: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_42093: ;;// porth.porth:5399:30: OP_INLINED 16
addr_42094: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42095: ;;// porth.porth:5399:35: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_42096: ;;// porth.porth:5399:47: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_42097: ;;// porth.porth:5399:50: OP_IF 57
    pop rax
    test rax, rax
    jz addr_42154
addr_42098: ;;// porth.porth:5401:7: OP_PUSH_INT 64
    mov rax, 64
    push rax
addr_42099: ;;// porth.porth:5401:27: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_42100: ;;// porth.porth:5401:29: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_42101: ;;// porth.porth:5401:37: OP_CALL 2169
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2169
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42102: ;;// porth.porth:5401:44: OP_INTRINSIC drop
    pop rax
addr_42103: ;;// porth.porth:5402:7: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_42104: ;;// porth.porth:5402:12: OP_INLINED 0
addr_42105: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42106: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_42107: ;;// porth.porth:5402:17: OP_PUSH_INT 72
    mov rax, 72
    push rax
addr_42108: ;;// porth.porth:5402:27: OP_INLINED 36
addr_42109: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_42110: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_42111: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_42112: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_42113: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_42114: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_42115: ;;// porth.porth:5403:7: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_42116: ;;// porth.porth:5403:12: OP_INLINED 0
addr_42117: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42118: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_42119: ;;// porth.porth:5403:17: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_42120: ;;// porth.porth:5403:27: OP_INLINED 36
addr_42121: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_42122: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_42123: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_42124: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_42125: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_42126: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_42127: ;;// porth.porth:5403:32: OP_INLINED 16
addr_42128: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42129: ;;// porth.porth:5404:7: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_42130: ;;// porth.porth:5404:12: OP_INLINED 0
addr_42131: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42132: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_42133: ;;// porth.porth:5404:17: OP_PUSH_INT 88
    mov rax, 88
    push rax
addr_42134: ;;// porth.porth:5404:27: OP_INLINED 36
addr_42135: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_42136: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_42137: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_42138: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_42139: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_42140: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_42141: ;;// porth.porth:5405:7: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_42142: ;;// porth.porth:5406:7: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_42143: ;;// porth.porth:5406:15: OP_PUSH_INT 48
    mov rax, 48
    push rax
addr_42144: ;;// porth.porth:5406:31: OP_INLINED 36
addr_42145: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_42146: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_42147: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_42148: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_42149: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_42150: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_42151: ;;// porth.porth:5407:7: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_42152: ;;// porth.porth:5409:7: OP_CALL 35669
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_35669
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42153: ;;// porth.porth:5411:7: OP_CALL 36455
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_36455
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42154: ;;// porth.porth:5412:5: OP_END_IF 0
addr_42155: ;;// porth.porth:5414:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42156: ;;// porth.porth:5414:7: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_42157: ;;// porth.porth:5415:3: OP_END_WHILE 94
    jmp addr_42063
addr_42158: ;;// porth.porth:5415:7: OP_INTRINSIC drop
    pop rax
addr_42159: ;;// porth.porth:5417:3: OP_PUSH_STR 991
    mov rax, 20
    push rax
    lea rax, [str_991]
    push rax
addr_42160: ;;// porth.porth:5417:26: OP_PUSH_GLOBAL_MEM 15310976
    lea rax, [mem+15310976]
    push rax
addr_42161: ;;// porth.porth:5417:33: OP_INLINED 12
addr_42162: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42163: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_42164: ;;// porth.porth:5417:39: OP_CALL 3467
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_3467
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42165: ;;// porth.porth:5418:1: OP_RET 72
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 72
    ret
addr_42166: ;;// porth.porth:5420:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42167: ;;// porth.porth:5421:3: OP_PUSH_STR 992
    mov rax, 30
    push rax
    lea rax, [str_992]
    push rax
addr_42168: ;;// porth.porth:5421:36: OP_INLINED 668
addr_42169: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42170: ;;// std/std.porth:49:36: OP_INLINED 662
addr_42171: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42172: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42173: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42174: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42175: ;;// porth.porth:5421:41: OP_PUSH_GLOBAL_MEM 8421424
    lea rax, [mem+8421424]
    push rax
addr_42176: ;;// porth.porth:5421:64: OP_INLINED 16
addr_42177: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42178: ;;// porth.porth:5421:69: OP_INLINED 2111
addr_42179: ;;// std/std.porth:408:25: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42180: ;;// std/std.porth:408:32: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42181: ;;// porth.porth:5421:74: OP_PUSH_STR 993
    mov rax, 1
    push rax
    lea rax, [str_993]
    push rax
addr_42182: ;;// porth.porth:5421:78: OP_INLINED 668
addr_42183: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42184: ;;// std/std.porth:49:36: OP_INLINED 662
addr_42185: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42186: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42187: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42188: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42189: ;;// porth.porth:5421:83: OP_PUSH_INT 65536
    mov rax, 65536
    push rax
addr_42190: ;;// porth.porth:5421:103: OP_INLINED 2111
addr_42191: ;;// std/std.porth:408:25: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42192: ;;// std/std.porth:408:32: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42193: ;;// porth.porth:5421:108: OP_PUSH_STR 994
    mov rax, 1
    push rax
    lea rax, [str_994]
    push rax
addr_42194: ;;// porth.porth:5421:113: OP_INLINED 668
addr_42195: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42196: ;;// std/std.porth:49:36: OP_INLINED 662
addr_42197: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42198: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42199: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42200: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42201: ;;// porth.porth:5422:3: OP_PUSH_STR 995
    mov rax, 30
    push rax
    lea rax, [str_995]
    push rax
addr_42202: ;;// porth.porth:5422:36: OP_INLINED 668
addr_42203: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42204: ;;// std/std.porth:49:36: OP_INLINED 662
addr_42205: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42206: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42207: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42208: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42209: ;;// porth.porth:5422:41: OP_PUSH_GLOBAL_MEM 14286912
    lea rax, [mem+14286912]
    push rax
addr_42210: ;;// porth.porth:5422:64: OP_INLINED 16
addr_42211: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42212: ;;// porth.porth:5422:69: OP_INLINED 2111
addr_42213: ;;// std/std.porth:408:25: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42214: ;;// std/std.porth:408:32: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42215: ;;// porth.porth:5422:74: OP_PUSH_STR 996
    mov rax, 1
    push rax
    lea rax, [str_996]
    push rax
addr_42216: ;;// porth.porth:5422:78: OP_INLINED 668
addr_42217: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42218: ;;// std/std.porth:49:36: OP_INLINED 662
addr_42219: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42220: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42221: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42222: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42223: ;;// porth.porth:5422:83: OP_PUSH_INT 1024
    mov rax, 1024
    push rax
addr_42224: ;;// porth.porth:5422:103: OP_INLINED 2111
addr_42225: ;;// std/std.porth:408:25: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42226: ;;// std/std.porth:408:32: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42227: ;;// porth.porth:5422:108: OP_PUSH_STR 997
    mov rax, 1
    push rax
    lea rax, [str_997]
    push rax
addr_42228: ;;// porth.porth:5422:113: OP_INLINED 668
addr_42229: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42230: ;;// std/std.porth:49:36: OP_INLINED 662
addr_42231: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42232: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42233: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42234: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42235: ;;// porth.porth:5423:3: OP_PUSH_STR 998
    mov rax, 30
    push rax
    lea rax, [str_998]
    push rax
addr_42236: ;;// porth.porth:5423:36: OP_INLINED 668
addr_42237: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42238: ;;// std/std.porth:49:36: OP_INLINED 662
addr_42239: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42240: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42241: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42242: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42243: ;;// porth.porth:5423:41: OP_PUSH_GLOBAL_MEM 15073360
    lea rax, [mem+15073360]
    push rax
addr_42244: ;;// porth.porth:5423:64: OP_INLINED 16
addr_42245: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42246: ;;// porth.porth:5423:69: OP_INLINED 2111
addr_42247: ;;// std/std.porth:408:25: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42248: ;;// std/std.porth:408:32: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42249: ;;// porth.porth:5423:74: OP_PUSH_STR 999
    mov rax, 1
    push rax
    lea rax, [str_999]
    push rax
addr_42250: ;;// porth.porth:5423:78: OP_INLINED 668
addr_42251: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42252: ;;// std/std.porth:49:36: OP_INLINED 662
addr_42253: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42254: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42255: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42256: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42257: ;;// porth.porth:5423:83: OP_PUSH_INT 1024
    mov rax, 1024
    push rax
addr_42258: ;;// porth.porth:5423:103: OP_INLINED 2111
addr_42259: ;;// std/std.porth:408:25: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42260: ;;// std/std.porth:408:32: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42261: ;;// porth.porth:5423:108: OP_PUSH_STR 1000
    mov rax, 1
    push rax
    lea rax, [str_1000]
    push rax
addr_42262: ;;// porth.porth:5423:113: OP_INLINED 668
addr_42263: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42264: ;;// std/std.porth:49:36: OP_INLINED 662
addr_42265: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42266: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42267: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42268: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42269: ;;// porth.porth:5424:3: OP_PUSH_STR 1001
    mov rax, 30
    push rax
    lea rax, [str_1001]
    push rax
addr_42270: ;;// porth.porth:5424:36: OP_INLINED 668
addr_42271: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42272: ;;// std/std.porth:49:36: OP_INLINED 662
addr_42273: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42274: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42275: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42276: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42277: ;;// porth.porth:5424:41: OP_PUSH_GLOBAL_MEM 15425744
    lea rax, [mem+15425744]
    push rax
addr_42278: ;;// porth.porth:5424:64: OP_INLINED 16
addr_42279: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42280: ;;// porth.porth:5424:69: OP_INLINED 2111
addr_42281: ;;// std/std.porth:408:25: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42282: ;;// std/std.porth:408:32: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42283: ;;// porth.porth:5424:74: OP_PUSH_STR 1002
    mov rax, 1
    push rax
    lea rax, [str_1002]
    push rax
addr_42284: ;;// porth.porth:5424:78: OP_INLINED 668
addr_42285: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42286: ;;// std/std.porth:49:36: OP_INLINED 662
addr_42287: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42288: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42289: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42290: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42291: ;;// porth.porth:5424:83: OP_PUSH_INT 256
    mov rax, 256
    push rax
addr_42292: ;;// porth.porth:5424:103: OP_INLINED 2111
addr_42293: ;;// std/std.porth:408:25: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42294: ;;// std/std.porth:408:32: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42295: ;;// porth.porth:5424:108: OP_PUSH_STR 1003
    mov rax, 1
    push rax
    lea rax, [str_1003]
    push rax
addr_42296: ;;// porth.porth:5424:113: OP_INLINED 668
addr_42297: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42298: ;;// std/std.porth:49:36: OP_INLINED 662
addr_42299: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42300: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42301: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42302: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42303: ;;// porth.porth:5425:3: OP_PUSH_STR 1004
    mov rax, 30
    push rax
    lea rax, [str_1004]
    push rax
addr_42304: ;;// porth.porth:5425:36: OP_INLINED 668
addr_42305: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42306: ;;// std/std.porth:49:36: OP_INLINED 662
addr_42307: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42308: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42309: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42310: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42311: ;;// porth.porth:5425:41: OP_PUSH_GLOBAL_MEM 14188600
    lea rax, [mem+14188600]
    push rax
addr_42312: ;;// porth.porth:5425:64: OP_INLINED 16
addr_42313: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42314: ;;// porth.porth:5425:69: OP_INLINED 2111
addr_42315: ;;// std/std.porth:408:25: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42316: ;;// std/std.porth:408:32: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42317: ;;// porth.porth:5425:74: OP_PUSH_STR 1005
    mov rax, 1
    push rax
    lea rax, [str_1005]
    push rax
addr_42318: ;;// porth.porth:5425:78: OP_INLINED 668
addr_42319: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42320: ;;// std/std.porth:49:36: OP_INLINED 662
addr_42321: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42322: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42323: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42324: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42325: ;;// porth.porth:5425:83: OP_PUSH_INT 2048
    mov rax, 2048
    push rax
addr_42326: ;;// porth.porth:5425:103: OP_INLINED 2111
addr_42327: ;;// std/std.porth:408:25: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42328: ;;// std/std.porth:408:32: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42329: ;;// porth.porth:5425:108: OP_PUSH_STR 1006
    mov rax, 1
    push rax
    lea rax, [str_1006]
    push rax
addr_42330: ;;// porth.porth:5425:113: OP_INLINED 668
addr_42331: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42332: ;;// std/std.porth:49:36: OP_INLINED 662
addr_42333: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42334: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42335: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42336: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42337: ;;// porth.porth:5426:3: OP_PUSH_STR 1007
    mov rax, 30
    push rax
    lea rax, [str_1007]
    push rax
addr_42338: ;;// porth.porth:5426:36: OP_INLINED 668
addr_42339: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42340: ;;// std/std.porth:49:36: OP_INLINED 662
addr_42341: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42342: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42343: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42344: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42345: ;;// porth.porth:5426:41: OP_PUSH_GLOBAL_MEM 8388648
    lea rax, [mem+8388648]
    push rax
addr_42346: ;;// porth.porth:5426:64: OP_INLINED 16
addr_42347: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42348: ;;// porth.porth:5426:69: OP_INLINED 2111
addr_42349: ;;// std/std.porth:408:25: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42350: ;;// std/std.porth:408:32: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42351: ;;// porth.porth:5426:74: OP_PUSH_STR 1008
    mov rax, 1
    push rax
    lea rax, [str_1008]
    push rax
addr_42352: ;;// porth.porth:5426:78: OP_INLINED 668
addr_42353: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42354: ;;// std/std.porth:49:36: OP_INLINED 662
addr_42355: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42356: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42357: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42358: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42359: ;;// porth.porth:5426:83: OP_PUSH_INT 32768
    mov rax, 32768
    push rax
addr_42360: ;;// porth.porth:5426:103: OP_INLINED 2111
addr_42361: ;;// std/std.porth:408:25: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42362: ;;// std/std.porth:408:32: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42363: ;;// porth.porth:5426:108: OP_PUSH_STR 1009
    mov rax, 1
    push rax
    lea rax, [str_1009]
    push rax
addr_42364: ;;// porth.porth:5426:113: OP_INLINED 668
addr_42365: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42366: ;;// std/std.porth:49:36: OP_INLINED 662
addr_42367: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42368: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42369: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42370: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42371: ;;// porth.porth:5427:3: OP_PUSH_STR 1010
    mov rax, 30
    push rax
    lea rax, [str_1010]
    push rax
addr_42372: ;;// porth.porth:5427:36: OP_INLINED 668
addr_42373: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42374: ;;// std/std.porth:49:36: OP_INLINED 662
addr_42375: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42376: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42377: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42378: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42379: ;;// porth.porth:5427:41: OP_PUSH_GLOBAL_MEM 15196256
    lea rax, [mem+15196256]
    push rax
addr_42380: ;;// porth.porth:5427:64: OP_INLINED 16
addr_42381: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42382: ;;// porth.porth:5427:69: OP_INLINED 2111
addr_42383: ;;// std/std.porth:408:25: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42384: ;;// std/std.porth:408:32: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42385: ;;// porth.porth:5427:74: OP_PUSH_STR 1011
    mov rax, 1
    push rax
    lea rax, [str_1011]
    push rax
addr_42386: ;;// porth.porth:5427:78: OP_INLINED 668
addr_42387: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42388: ;;// std/std.porth:49:36: OP_INLINED 662
addr_42389: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42390: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42391: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42392: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42393: ;;// porth.porth:5427:83: OP_PUSH_INT 1024
    mov rax, 1024
    push rax
addr_42394: ;;// porth.porth:5427:103: OP_INLINED 2111
addr_42395: ;;// std/std.porth:408:25: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42396: ;;// std/std.porth:408:32: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42397: ;;// porth.porth:5427:108: OP_PUSH_STR 1012
    mov rax, 1
    push rax
    lea rax, [str_1012]
    push rax
addr_42398: ;;// porth.porth:5427:113: OP_INLINED 668
addr_42399: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42400: ;;// std/std.porth:49:36: OP_INLINED 662
addr_42401: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42402: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42403: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42404: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42405: ;;// porth.porth:5430:3: OP_PUSH_STR 1013
    mov rax, 30
    push rax
    lea rax, [str_1013]
    push rax
addr_42406: ;;// porth.porth:5430:36: OP_INLINED 668
addr_42407: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42408: ;;// std/std.porth:49:36: OP_INLINED 662
addr_42409: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42410: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42411: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42412: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42413: ;;// porth.porth:5430:41: OP_PUSH_GLOBAL_MEM 15253608
    lea rax, [mem+15253608]
    push rax
addr_42414: ;;// porth.porth:5430:64: OP_INLINED 16
addr_42415: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42416: ;;// porth.porth:5430:69: OP_INLINED 2111
addr_42417: ;;// std/std.porth:408:25: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42418: ;;// std/std.porth:408:32: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42419: ;;// porth.porth:5430:74: OP_PUSH_STR 1014
    mov rax, 1
    push rax
    lea rax, [str_1014]
    push rax
addr_42420: ;;// porth.porth:5430:79: OP_INLINED 668
addr_42421: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42422: ;;// std/std.porth:49:36: OP_INLINED 662
addr_42423: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42424: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42425: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42426: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42427: ;;// porth.porth:5431:3: OP_PUSH_STR 1015
    mov rax, 30
    push rax
    lea rax, [str_1015]
    push rax
addr_42428: ;;// porth.porth:5431:36: OP_INLINED 668
addr_42429: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42430: ;;// std/std.porth:49:36: OP_INLINED 662
addr_42431: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42432: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42433: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42434: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42435: ;;// porth.porth:5431:41: OP_PUSH_GLOBAL_MEM 15073352
    lea rax, [mem+15073352]
    push rax
addr_42436: ;;// porth.porth:5431:64: OP_INLINED 16
addr_42437: ;;// std/core.porth:23:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42438: ;;// porth.porth:5431:69: OP_INLINED 2111
addr_42439: ;;// std/std.porth:408:25: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42440: ;;// std/std.porth:408:32: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42441: ;;// porth.porth:5431:74: OP_PUSH_STR 1016
    mov rax, 1
    push rax
    lea rax, [str_1016]
    push rax
addr_42442: ;;// porth.porth:5431:78: OP_INLINED 668
addr_42443: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42444: ;;// std/std.porth:49:36: OP_INLINED 662
addr_42445: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42446: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42447: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42448: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42449: ;;// porth.porth:5431:83: OP_PUSH_INT 16384
    mov rax, 16384
    push rax
addr_42450: ;;// porth.porth:5431:103: OP_INLINED 2111
addr_42451: ;;// std/std.porth:408:25: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42452: ;;// std/std.porth:408:32: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42453: ;;// porth.porth:5431:108: OP_PUSH_STR 1017
    mov rax, 1
    push rax
    lea rax, [str_1017]
    push rax
addr_42454: ;;// porth.porth:5431:113: OP_INLINED 668
addr_42455: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42456: ;;// std/std.porth:49:36: OP_INLINED 662
addr_42457: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42458: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42459: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42460: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42461: ;;// porth.porth:5432:3: OP_PUSH_STR 1018
    mov rax, 30
    push rax
    lea rax, [str_1018]
    push rax
addr_42462: ;;// porth.porth:5432:36: OP_INLINED 668
addr_42463: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42464: ;;// std/std.porth:49:36: OP_INLINED 662
addr_42465: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42466: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42467: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42468: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42469: ;;// porth.porth:5432:41: OP_PUSH_INT 48
    mov rax, 48
    push rax
addr_42470: ;;// porth.porth:5432:59: OP_INLINED 2111
addr_42471: ;;// std/std.porth:408:25: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42472: ;;// std/std.porth:408:32: OP_CALL 1907
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1907
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42473: ;;// porth.porth:5432:64: OP_PUSH_STR 1019
    mov rax, 1
    push rax
    lea rax, [str_1019]
    push rax
addr_42474: ;;// porth.porth:5432:69: OP_INLINED 668
addr_42475: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42476: ;;// std/std.porth:49:36: OP_INLINED 662
addr_42477: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42478: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42479: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42480: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42481: ;;// porth.porth:5433:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_42482: ;;// porth.porth:5435:6: OP_PREP_PROC 0
    sub rsp, 0
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42483: ;;// porth.porth:5439:3: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_42484: ;;// porth.porth:5440:5: OP_PUSH_STR 1020
    mov rax, 7
    push rax
    lea rax, [str_1020]
    push rax
addr_42485: ;;// porth.porth:5440:15: OP_INLINED 676
addr_42486: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_42487: ;;// std/std.porth:50:37: OP_INLINED 662
addr_42488: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42489: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42490: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42491: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42492: ;;// porth.porth:5440:21: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_42493: ;;// porth.porth:5440:26: OP_INLINED 657
addr_42494: ;;// std/std.porth:45:43: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_42495: ;;// std/std.porth:45:47: OP_CALL 564
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_564
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42496: ;;// std/std.porth:45:55: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_42497: ;;// porth.porth:5440:38: OP_INLINED 668
addr_42498: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42499: ;;// std/std.porth:49:36: OP_INLINED 662
addr_42500: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42501: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42502: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42503: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42504: ;;// porth.porth:5440:43: OP_PUSH_STR 1021
    mov rax, 24
    push rax
    lea rax, [str_1021]
    push rax
addr_42505: ;;// porth.porth:5440:96: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_42506: ;;// porth.porth:5440:99: OP_INLINED 662
addr_42507: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42508: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42509: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42510: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42511: ;;// porth.porth:5441:5: OP_PUSH_STR 1022
    mov rax, 11
    push rax
    lea rax, [str_1022]
    push rax
addr_42512: ;;// porth.porth:5441:96: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_42513: ;;// porth.porth:5441:99: OP_INLINED 662
addr_42514: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42515: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42516: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42517: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42518: ;;// porth.porth:5442:5: OP_PUSH_STR 1023
    mov rax, 49
    push rax
    lea rax, [str_1023]
    push rax
addr_42519: ;;// porth.porth:5442:96: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_42520: ;;// porth.porth:5442:99: OP_INLINED 662
addr_42521: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42522: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42523: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42524: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42525: ;;// porth.porth:5443:5: OP_PUSH_STR 1024
    mov rax, 64
    push rax
    lea rax, [str_1024]
    push rax
addr_42526: ;;// porth.porth:5443:96: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_42527: ;;// porth.porth:5443:99: OP_INLINED 662
addr_42528: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42529: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42530: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42531: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42532: ;;// porth.porth:5444:5: OP_PUSH_STR 1025
    mov rax, 15
    push rax
    lea rax, [str_1025]
    push rax
addr_42533: ;;// porth.porth:5444:96: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_42534: ;;// porth.porth:5444:99: OP_INLINED 662
addr_42535: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42536: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42537: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42538: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42539: ;;// porth.porth:5445:5: OP_PUSH_STR 1026
    mov rax, 46
    push rax
    lea rax, [str_1026]
    push rax
addr_42540: ;;// porth.porth:5445:96: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_42541: ;;// porth.porth:5445:99: OP_INLINED 662
addr_42542: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42543: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42544: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42545: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42546: ;;// porth.porth:5446:5: OP_PUSH_STR 1027
    mov rax, 15
    push rax
    lea rax, [str_1027]
    push rax
addr_42547: ;;// porth.porth:5446:96: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_42548: ;;// porth.porth:5446:99: OP_INLINED 662
addr_42549: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42550: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42551: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42552: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42553: ;;// porth.porth:5448:5: OP_PUSH_STR 1028
    mov rax, 55
    push rax
    lea rax, [str_1028]
    push rax
addr_42554: ;;// porth.porth:5448:96: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_42555: ;;// porth.porth:5448:99: OP_INLINED 662
addr_42556: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42557: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42558: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42559: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42560: ;;// porth.porth:5449:5: OP_PUSH_STR 1029
    mov rax, 81
    push rax
    lea rax, [str_1029]
    push rax
addr_42561: ;;// porth.porth:5449:96: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_42562: ;;// porth.porth:5449:99: OP_INLINED 662
addr_42563: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42564: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42565: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42566: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42567: ;;// porth.porth:5450:5: OP_PUSH_STR 1030
    mov rax, 73
    push rax
    lea rax, [str_1030]
    push rax
addr_42568: ;;// porth.porth:5450:96: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_42569: ;;// porth.porth:5450:99: OP_INLINED 662
addr_42570: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42571: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42572: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42573: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42574: ;;// porth.porth:5451:5: OP_PUSH_STR 1031
    mov rax, 87
    push rax
    lea rax, [str_1031]
    push rax
addr_42575: ;;// porth.porth:5451:96: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_42576: ;;// porth.porth:5451:99: OP_INLINED 662
addr_42577: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42578: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42579: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42580: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42581: ;;// porth.porth:5452:5: OP_PUSH_STR 1032
    mov rax, 54
    push rax
    lea rax, [str_1032]
    push rax
addr_42582: ;;// porth.porth:5452:96: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_42583: ;;// porth.porth:5452:99: OP_INLINED 662
addr_42584: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42585: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42586: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42587: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42588: ;;// porth.porth:5453:5: OP_PUSH_STR 1033
    mov rax, 63
    push rax
    lea rax, [str_1033]
    push rax
addr_42589: ;;// porth.porth:5453:96: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_42590: ;;// porth.porth:5453:99: OP_INLINED 662
addr_42591: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42592: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42593: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42594: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42595: ;;// porth.porth:5454:5: OP_PUSH_STR 1034
    mov rax, 59
    push rax
    lea rax, [str_1034]
    push rax
addr_42596: ;;// porth.porth:5454:96: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_42597: ;;// porth.porth:5454:99: OP_INLINED 662
addr_42598: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42599: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42600: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42601: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42602: ;;// porth.porth:5455:5: OP_PUSH_STR 1035
    mov rax, 73
    push rax
    lea rax, [str_1035]
    push rax
addr_42603: ;;// porth.porth:5455:96: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_42604: ;;// porth.porth:5455:99: OP_INLINED 662
addr_42605: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42606: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42607: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42608: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42609: ;;// porth.porth:5456:3: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_42610: ;;// porth.porth:5457:1: OP_RET 0
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 0
    ret
addr_42611: ;;// porth.porth:5459:6: OP_PREP_PROC 56
    sub rsp, 56
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42612: ;;// porth.porth:5460:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_42613: ;;// porth.porth:5460:5: OP_PUSH_GLOBAL_MEM 15421640
    lea rax, [mem+15421640]
    push rax
addr_42614: ;;// porth.porth:5460:25: OP_INLINED 30
addr_42615: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_42616: ;;// porth.porth:5462:3: OP_PUSH_STR 1036
    mov rax, 1
    push rax
    lea rax, [str_1036]
    push rax
addr_42617: ;;// porth.porth:5462:11: OP_CALL 25750
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_25750
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42618: ;;// porth.porth:5463:3: OP_PUSH_STR 1037
    mov rax, 5
    push rax
    lea rax, [str_1037]
    push rax
addr_42619: ;;// porth.porth:5463:11: OP_CALL 25750
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_25750
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42620: ;;// porth.porth:5466:3: OP_PUSH_STR 1038
    mov rax, 19
    push rax
    lea rax, [str_1038]
    push rax
addr_42621: ;;// porth.porth:5466:25: OP_CALL 2219
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2219
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42622: ;;// porth.porth:5466:32: OP_INLINED 657
addr_42623: ;;// std/std.porth:45:43: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_42624: ;;// std/std.porth:45:47: OP_CALL 564
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_564
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42625: ;;// std/std.porth:45:55: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_42626: ;;// porth.porth:5467:3: OP_WHILE 13
addr_42627: ;;// porth.porth:5467:9: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_42628: ;;// porth.porth:5467:14: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_42629: ;;// porth.porth:5467:16: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_42630: ;;// porth.porth:5467:19: OP_DO 9
    pop rax
    test rax, rax
    jz addr_42639
addr_42631: ;;// porth.porth:5468:5: OP_BIND_LET 2
    mov rax, [ret_stack_rsp]
    sub rax, 16
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_42632: ;;// porth.porth:5469:7: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_42633: ;;// porth.porth:5469:9: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_42634: ;;// porth.porth:5469:11: OP_PUSH_INT 58
    mov rax, 58
    push rax
addr_42635: ;;// porth.porth:5469:15: OP_CALL 1360
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_1360
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42636: ;;// porth.porth:5470:7: OP_CALL 25750
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_25750
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42637: ;;// porth.porth:5471:5: OP_UNBIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov [ret_stack_rsp], rax
addr_42638: ;;// porth.porth:5472:3: OP_END_WHILE 12
    jmp addr_42626
addr_42639: ;;// porth.porth:5472:7: OP_INTRINSIC drop
    pop rax
addr_42640: ;;// porth.porth:5472:12: OP_INTRINSIC drop
    pop rax
addr_42641: ;;// porth.porth:5475:3: OP_INTRINSIC argv
    mov rax, [args_ptr]
    add rax, 8
    push rax
addr_42642: ;;// porth.porth:5475:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_42643: ;;// porth.porth:5475:13: OP_INLINED 27
addr_42644: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_42645: ;;// porth.porth:5478:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_42646: ;;// porth.porth:5478:8: OP_INLINED 4
addr_42647: ;;// std/core.porth:21:33: OP_INLINED 0
addr_42648: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42649: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_42650: ;;// std/core.porth:21:38: OP_INLINED 0
addr_42651: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42652: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_42653: ;;// porth.porth:5478:14: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_42654: ;;// porth.porth:5478:22: OP_INLINED 27
addr_42655: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_42656: ;;// porth.porth:5481:3: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_42657: ;;// porth.porth:5481:9: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_42658: ;;// porth.porth:5481:16: OP_INLINED 24
addr_42659: ;;// std/core.porth:26:31: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_42660: ;;// porth.porth:5483:3: OP_WHILE 108
addr_42661: ;;// porth.porth:5484:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_42662: ;;// porth.porth:5484:10: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_42663: ;;// porth.porth:5484:22: OP_INLINED 154
addr_42664: ;;// std/core.porth:106:33: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_42665: ;;// std/core.porth:106:38: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42666: ;;// std/core.porth:106:42: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_42667: ;;// std/core.porth:106:44: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_42668: ;;// std/core.porth:106:49: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_42669: ;;// porth.porth:5485:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_42670: ;;// porth.porth:5485:10: OP_INLINED 4
addr_42671: ;;// std/core.porth:21:33: OP_INLINED 0
addr_42672: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42673: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_42674: ;;// std/core.porth:21:38: OP_INLINED 0
addr_42675: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42676: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_42677: ;;// porth.porth:5485:16: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_42678: ;;// porth.porth:5485:21: OP_INLINED 59
addr_42679: ;;// std/core.porth:52:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_42680: ;;// std/core.porth:52:8: OP_INTRINSIC cast(int)
addr_42681: ;;// std/core.porth:53:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_42682: ;;// std/core.porth:53:8: OP_INTRINSIC cast(int)
addr_42683: ;;// std/core.porth:54:3: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_42684: ;;// porth.porth:5485:26: OP_IF 3
    pop rax
    test rax, rax
    jz addr_42687
addr_42685: ;;// porth.porth:5486:7: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_42686: ;;// porth.porth:5487:5: OP_ELSE 17
    jmp addr_42703
addr_42687: ;;// porth.porth:5487:10: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_42688: ;;// porth.porth:5487:15: OP_INLINED 4
addr_42689: ;;// std/core.porth:21:33: OP_INLINED 0
addr_42690: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42691: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_42692: ;;// std/core.porth:21:38: OP_INLINED 0
addr_42693: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42694: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_42695: ;;// porth.porth:5487:21: OP_PUSH_CSTR 1039
    lea rax, [str_1039]
    push rax
addr_42696: ;;// porth.porth:5487:32: OP_CALL 589
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_589
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42697: ;;// porth.porth:5487:39: OP_IFSTAR 7
    pop rax
    test rax, rax
    jz addr_42704
addr_42698: ;;// porth.porth:5488:7: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_42699: ;;// porth.porth:5488:12: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_42700: ;;// porth.porth:5488:19: OP_INLINED 24
addr_42701: ;;// std/core.porth:26:31: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_42702: ;;// porth.porth:5489:7: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_42703: ;;// porth.porth:5490:5: OP_ELSE 60
    jmp addr_42763
addr_42704: ;;// porth.porth:5490:10: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_42705: ;;// porth.porth:5490:15: OP_INLINED 4
addr_42706: ;;// std/core.porth:21:33: OP_INLINED 0
addr_42707: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42708: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_42709: ;;// std/core.porth:21:38: OP_INLINED 0
addr_42710: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42711: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_42712: ;;// porth.porth:5490:21: OP_PUSH_CSTR 1040
    lea rax, [str_1040]
    push rax
addr_42713: ;;// porth.porth:5490:27: OP_CALL 589
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_589
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42714: ;;// porth.porth:5490:34: OP_IFSTAR 50
    pop rax
    test rax, rax
    jz addr_42764
addr_42715: ;;// porth.porth:5491:7: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_42716: ;;// porth.porth:5491:12: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_42717: ;;// porth.porth:5491:24: OP_INLINED 154
addr_42718: ;;// std/core.porth:106:33: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_42719: ;;// std/core.porth:106:38: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42720: ;;// std/core.porth:106:42: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_42721: ;;// std/core.porth:106:44: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_42722: ;;// std/core.porth:106:49: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_42723: ;;// porth.porth:5492:7: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_42724: ;;// porth.porth:5492:12: OP_INLINED 4
addr_42725: ;;// std/core.porth:21:33: OP_INLINED 0
addr_42726: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42727: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_42728: ;;// std/core.porth:21:38: OP_INLINED 0
addr_42729: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42730: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_42731: ;;// porth.porth:5493:9: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_42732: ;;// porth.porth:5493:13: OP_INLINED 214
addr_42733: ;;// std/core.porth:116:34: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_42734: ;;// std/core.porth:116:39: OP_INLINED 59
addr_42735: ;;// std/core.porth:52:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_42736: ;;// std/core.porth:52:8: OP_INTRINSIC cast(int)
addr_42737: ;;// std/core.porth:53:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_42738: ;;// std/core.porth:53:8: OP_INTRINSIC cast(int)
addr_42739: ;;// std/core.porth:54:3: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_42740: ;;// porth.porth:5493:19: OP_IF 14
    pop rax
    test rax, rax
    jz addr_42754
addr_42741: ;;// porth.porth:5494:11: OP_PUSH_STR 1041
    mov rax, 43
    push rax
    lea rax, [str_1041]
    push rax
addr_42742: ;;// porth.porth:5494:58: OP_INLINED 676
addr_42743: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_42744: ;;// std/std.porth:50:37: OP_INLINED 662
addr_42745: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42746: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42747: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42748: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42749: ;;// porth.porth:5495:11: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42750: ;;// porth.porth:5495:13: OP_INLINED 418
addr_42751: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_42752: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_42753: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_42754: ;;// porth.porth:5496:9: OP_END_IF 0
addr_42755: ;;// porth.porth:5497:9: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_42756: ;;// porth.porth:5497:13: OP_INLINED 657
addr_42757: ;;// std/std.porth:45:43: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_42758: ;;// std/std.porth:45:47: OP_CALL 564
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_564
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42759: ;;// std/std.porth:45:55: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_42760: ;;// porth.porth:5497:25: OP_CALL 25750
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_25750
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42761: ;;// porth.porth:5498:7: OP_INTRINSIC drop
    pop rax
addr_42762: ;;// porth.porth:5499:7: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_42763: ;;// porth.porth:5500:5: OP_ELSE 2
    jmp addr_42765
addr_42764: ;;// porth.porth:5501:7: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_42765: ;;// porth.porth:5502:5: OP_END_IF 0
addr_42766: ;;// porth.porth:5503:3: OP_DO 2
    pop rax
    test rax, rax
    jz addr_42768
addr_42767: ;;// porth.porth:5503:6: OP_END_WHILE 107
    jmp addr_42660
addr_42768: ;;// porth.porth:5505:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_42769: ;;// porth.porth:5505:8: OP_INLINED 4
addr_42770: ;;// std/core.porth:21:33: OP_INLINED 0
addr_42771: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42772: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_42773: ;;// std/core.porth:21:38: OP_INLINED 0
addr_42774: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42775: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_42776: ;;// porth.porth:5505:14: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_42777: ;;// porth.porth:5505:19: OP_INLINED 59
addr_42778: ;;// std/core.porth:52:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_42779: ;;// std/core.porth:52:8: OP_INTRINSIC cast(int)
addr_42780: ;;// std/core.porth:53:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_42781: ;;// std/core.porth:53:8: OP_INTRINSIC cast(int)
addr_42782: ;;// std/core.porth:54:3: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_42783: ;;// porth.porth:5505:24: OP_IF 20
    pop rax
    test rax, rax
    jz addr_42803
addr_42784: ;;// porth.porth:5506:5: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_42785: ;;// porth.porth:5506:13: OP_INLINED 0
addr_42786: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42787: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_42788: ;;// porth.porth:5506:18: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_42789: ;;// porth.porth:5506:25: OP_CALL 42482
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_42482
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42790: ;;// porth.porth:5507:5: OP_PUSH_STR 1042
    mov rax, 34
    push rax
    lea rax, [str_1042]
    push rax
addr_42791: ;;// porth.porth:5507:43: OP_INLINED 676
addr_42792: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_42793: ;;// std/std.porth:50:37: OP_INLINED 662
addr_42794: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42795: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42796: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42797: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42798: ;;// porth.porth:5508:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42799: ;;// porth.porth:5508:7: OP_INLINED 418
addr_42800: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_42801: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_42802: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_42803: ;;// porth.porth:5509:3: OP_END_IF 0
addr_42804: ;;// porth.porth:5512:3: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_42805: ;;// porth.porth:5512:8: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_42806: ;;// porth.porth:5512:29: OP_INLINED 27
addr_42807: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_42808: ;;// porth.porth:5514:3: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_42809: ;;// porth.porth:5514:5: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_42810: ;;// porth.porth:5514:10: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_42811: ;;// porth.porth:5514:25: OP_INLINED 782
addr_42812: ;;// std/std.porth:71:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_42813: ;;// std/std.porth:72:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_42814: ;;// std/std.porth:72:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_42815: ;;// std/std.porth:72:9: OP_INLINED 729
addr_42816: ;;// std/std.porth:60:35: OP_INLINED 684
addr_42817: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_42818: ;;// std/std.porth:56:57: OP_INLINED 36
addr_42819: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_42820: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_42821: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_42822: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_42823: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_42824: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_42825: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_42826: ;;// std/std.porth:73:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_42827: ;;// std/std.porth:73:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_42828: ;;// std/std.porth:73:9: OP_INLINED 741
addr_42829: ;;// std/std.porth:61:34: OP_INLINED 694
addr_42830: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_42831: ;;// std/std.porth:57:55: OP_INLINED 36
addr_42832: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_42833: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_42834: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_42835: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_42836: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_42837: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_42838: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_42839: ;;// std/std.porth:74:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_42840: ;;// porth.porth:5516:3: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_42841: ;;// porth.porth:5516:9: OP_PUSH_LOCAL_MEM 48
    mov rax, [ret_stack_rsp]
    add rax, 48
    push rax
addr_42842: ;;// porth.porth:5516:13: OP_INLINED 24
addr_42843: ;;// std/core.porth:26:31: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_42844: ;;// porth.porth:5518:3: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_42845: ;;// porth.porth:5518:8: OP_INLINED 4
addr_42846: ;;// std/core.porth:21:33: OP_INLINED 0
addr_42847: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42848: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_42849: ;;// std/core.porth:21:38: OP_INLINED 0
addr_42850: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42851: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_42852: ;;// porth.porth:5518:14: OP_PUSH_CSTR 1043
    lea rax, [str_1043]
    push rax
addr_42853: ;;// porth.porth:5518:21: OP_CALL 589
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_589
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42854: ;;// porth.porth:5518:28: OP_IF 1369
    pop rax
    test rax, rax
    jz addr_44223
addr_42855: ;;// porth.porth:5519:5: OP_WHILE 101
addr_42856: ;;// porth.porth:5520:7: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_42857: ;;// porth.porth:5520:12: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_42858: ;;// porth.porth:5520:24: OP_INLINED 154
addr_42859: ;;// std/core.porth:106:33: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_42860: ;;// std/core.porth:106:38: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42861: ;;// std/core.porth:106:42: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_42862: ;;// std/core.porth:106:44: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_42863: ;;// std/core.porth:106:49: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_42864: ;;// porth.porth:5521:7: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_42865: ;;// porth.porth:5521:12: OP_INLINED 4
addr_42866: ;;// std/core.porth:21:33: OP_INLINED 0
addr_42867: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42868: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_42869: ;;// std/core.porth:21:38: OP_INLINED 0
addr_42870: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42871: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_42872: ;;// porth.porth:5521:18: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_42873: ;;// porth.porth:5521:23: OP_INLINED 59
addr_42874: ;;// std/core.porth:52:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_42875: ;;// std/core.porth:52:8: OP_INTRINSIC cast(int)
addr_42876: ;;// std/core.porth:53:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_42877: ;;// std/core.porth:53:8: OP_INTRINSIC cast(int)
addr_42878: ;;// std/core.porth:54:3: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_42879: ;;// porth.porth:5521:28: OP_IF 3
    pop rax
    test rax, rax
    jz addr_42882
addr_42880: ;;// porth.porth:5522:9: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_42881: ;;// porth.porth:5523:7: OP_ELSE 17
    jmp addr_42898
addr_42882: ;;// porth.porth:5523:12: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_42883: ;;// porth.porth:5523:17: OP_INLINED 4
addr_42884: ;;// std/core.porth:21:33: OP_INLINED 0
addr_42885: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42886: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_42887: ;;// std/core.porth:21:38: OP_INLINED 0
addr_42888: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42889: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_42890: ;;// porth.porth:5523:23: OP_PUSH_CSTR 1044
    lea rax, [str_1044]
    push rax
addr_42891: ;;// porth.porth:5523:29: OP_CALL 589
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_589
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42892: ;;// porth.porth:5523:36: OP_IFSTAR 7
    pop rax
    test rax, rax
    jz addr_42899
addr_42893: ;;// porth.porth:5524:9: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_42894: ;;// porth.porth:5524:14: OP_PUSH_GLOBAL_MEM 15310984
    lea rax, [mem+15310984]
    push rax
addr_42895: ;;// porth.porth:5524:22: OP_INLINED 24
addr_42896: ;;// std/core.porth:26:31: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_42897: ;;// porth.porth:5525:9: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_42898: ;;// porth.porth:5526:7: OP_ELSE 17
    jmp addr_42915
addr_42899: ;;// porth.porth:5526:12: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_42900: ;;// porth.porth:5526:17: OP_INLINED 4
addr_42901: ;;// std/core.porth:21:33: OP_INLINED 0
addr_42902: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42903: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_42904: ;;// std/core.porth:21:38: OP_INLINED 0
addr_42905: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42906: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_42907: ;;// porth.porth:5526:23: OP_PUSH_CSTR 1045
    lea rax, [str_1045]
    push rax
addr_42908: ;;// porth.porth:5526:29: OP_CALL 589
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_589
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42909: ;;// porth.porth:5526:36: OP_IFSTAR 7
    pop rax
    test rax, rax
    jz addr_42916
addr_42910: ;;// porth.porth:5527:9: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_42911: ;;// porth.porth:5527:14: OP_PUSH_LOCAL_MEM 48
    mov rax, [ret_stack_rsp]
    add rax, 48
    push rax
addr_42912: ;;// porth.porth:5527:18: OP_INLINED 24
addr_42913: ;;// std/core.porth:26:31: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_42914: ;;// porth.porth:5528:9: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_42915: ;;// porth.porth:5529:7: OP_ELSE 17
    jmp addr_42932
addr_42916: ;;// porth.porth:5529:12: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_42917: ;;// porth.porth:5529:17: OP_INLINED 4
addr_42918: ;;// std/core.porth:21:33: OP_INLINED 0
addr_42919: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42920: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_42921: ;;// std/core.porth:21:38: OP_INLINED 0
addr_42922: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42923: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_42924: ;;// porth.porth:5529:23: OP_PUSH_CSTR 1046
    lea rax, [str_1046]
    push rax
addr_42925: ;;// porth.porth:5529:29: OP_CALL 589
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_589
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42926: ;;// porth.porth:5529:36: OP_IFSTAR 7
    pop rax
    test rax, rax
    jz addr_42933
addr_42927: ;;// porth.porth:5530:9: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_42928: ;;// porth.porth:5530:14: OP_PUSH_GLOBAL_MEM 15310976
    lea rax, [mem+15310976]
    push rax
addr_42929: ;;// porth.porth:5530:21: OP_INLINED 24
addr_42930: ;;// std/core.porth:26:31: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_42931: ;;// porth.porth:5531:9: OP_PUSH_BOOL 1
    mov rax, 1
    push rax
addr_42932: ;;// porth.porth:5532:7: OP_ELSE 21
    jmp addr_42953
addr_42933: ;;// porth.porth:5533:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_42934: ;;// porth.porth:5533:14: OP_INLINED 4
addr_42935: ;;// std/core.porth:21:33: OP_INLINED 0
addr_42936: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42937: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_42938: ;;// std/core.porth:21:38: OP_INLINED 0
addr_42939: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42940: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_42941: ;;// porth.porth:5533:20: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_42942: ;;// porth.porth:5533:41: OP_INLINED 27
addr_42943: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_42944: ;;// porth.porth:5534:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_42945: ;;// porth.porth:5534:14: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_42946: ;;// porth.porth:5534:26: OP_INLINED 154
addr_42947: ;;// std/core.porth:106:33: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_42948: ;;// std/core.porth:106:38: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42949: ;;// std/core.porth:106:42: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_42950: ;;// std/core.porth:106:44: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_42951: ;;// std/core.porth:106:49: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_42952: ;;// porth.porth:5535:9: OP_PUSH_BOOL 0
    mov rax, 0
    push rax
addr_42953: ;;// porth.porth:5536:7: OP_END_IF 0
addr_42954: ;;// porth.porth:5537:5: OP_DO 2
    pop rax
    test rax, rax
    jz addr_42956
addr_42955: ;;// porth.porth:5537:8: OP_END_WHILE 100
    jmp addr_42855
addr_42956: ;;// porth.porth:5539:5: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_42957: ;;// porth.porth:5539:26: OP_INLINED 0
addr_42958: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42959: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_42960: ;;// porth.porth:5539:31: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_42961: ;;// porth.porth:5539:36: OP_INLINED 59
addr_42962: ;;// std/core.porth:52:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_42963: ;;// std/core.porth:52:8: OP_INTRINSIC cast(int)
addr_42964: ;;// std/core.porth:53:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_42965: ;;// std/core.porth:53:8: OP_INTRINSIC cast(int)
addr_42966: ;;// std/core.porth:54:3: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_42967: ;;// porth.porth:5539:41: OP_IF 20
    pop rax
    test rax, rax
    jz addr_42987
addr_42968: ;;// porth.porth:5540:7: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_42969: ;;// porth.porth:5540:15: OP_INLINED 0
addr_42970: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42971: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_42972: ;;// porth.porth:5540:20: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_42973: ;;// porth.porth:5540:27: OP_CALL 42482
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_42482
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42974: ;;// porth.porth:5541:7: OP_PUSH_STR 1047
    mov rax, 55
    push rax
    lea rax, [str_1047]
    push rax
addr_42975: ;;// porth.porth:5541:66: OP_INLINED 676
addr_42976: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_42977: ;;// std/std.porth:50:37: OP_INLINED 662
addr_42978: ;;// std/std.porth:48:34: OP_INLINED 394
addr_42979: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42980: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_42981: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_42982: ;;// porth.porth:5542:7: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_42983: ;;// porth.porth:5542:9: OP_INLINED 418
addr_42984: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_42985: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_42986: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_42987: ;;// porth.porth:5543:5: OP_END_IF 0
addr_42988: ;;// porth.porth:5545:5: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_42989: ;;// porth.porth:5545:26: OP_INLINED 0
addr_42990: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_42991: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_42992: ;;// porth.porth:5545:31: OP_INLINED 657
addr_42993: ;;// std/std.porth:45:43: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_42994: ;;// std/std.porth:45:47: OP_CALL 564
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_564
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42995: ;;// std/std.porth:45:55: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_42996: ;;// porth.porth:5545:43: OP_CALL 3961
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_3961
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_42997: ;;// porth.porth:5545:54: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_42998: ;;// porth.porth:5545:69: OP_INLINED 782
addr_42999: ;;// std/std.porth:71:3: OP_BIND_LET 3
    mov rax, [ret_stack_rsp]
    sub rax, 24
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+16], rbx
    pop rbx
    mov [rax+8], rbx
    pop rbx
    mov [rax+0], rbx
addr_43000: ;;// std/std.porth:72:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_43001: ;;// std/std.porth:72:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_43002: ;;// std/std.porth:72:9: OP_INLINED 729
addr_43003: ;;// std/std.porth:60:35: OP_INLINED 684
addr_43004: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_43005: ;;// std/std.porth:56:57: OP_INLINED 36
addr_43006: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43007: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_43008: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43009: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_43010: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_43011: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_43012: ;;// std/std.porth:60:45: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_43013: ;;// std/std.porth:73:5: OP_PUSH_BIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov rbx, [rax]
    push rbx
addr_43014: ;;// std/std.porth:73:7: OP_PUSH_BIND 2
    mov rax, [ret_stack_rsp]
    add rax, 16
    mov rbx, [rax]
    push rbx
addr_43015: ;;// std/std.porth:73:9: OP_INLINED 741
addr_43016: ;;// std/std.porth:61:34: OP_INLINED 694
addr_43017: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_43018: ;;// std/std.porth:57:55: OP_INLINED 36
addr_43019: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43020: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_43021: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43022: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_43023: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_43024: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_43025: ;;// std/std.porth:61:44: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_43026: ;;// std/std.porth:74:3: OP_UNBIND 3
    mov rax, [ret_stack_rsp]
    add rax, 24
    mov [ret_stack_rsp], rax
addr_43027: ;;// porth.porth:5547:5: OP_PUSH_LOCAL_MEM 24
    mov rax, [ret_stack_rsp]
    add rax, 24
    push rax
addr_43028: ;;// porth.porth:5547:26: OP_INLINED 0
addr_43029: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43030: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_43031: ;;// porth.porth:5547:31: OP_CALL 34210
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_34210
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43032: ;;// porth.porth:5548:5: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_43033: ;;// porth.porth:5548:12: OP_INLINED 12
addr_43034: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43035: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_43036: ;;// porth.porth:5548:18: OP_INLINED 131
addr_43037: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_43038: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_43039: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43040: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_43041: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_43042: ;;// porth.porth:5548:23: OP_IF 2
    pop rax
    test rax, rax
    jz addr_43044
addr_43043: ;;// porth.porth:5548:26: OP_CALL 41782
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_41782
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43044: ;;// porth.porth:5548:45: OP_END_IF 0
addr_43045: ;;// porth.porth:5550:5: OP_CALL 3443
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_3443
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43046: ;;// porth.porth:5551:7: OP_INLINED 18105
addr_43047: ;;// porth.porth:2400:31: OP_PUSH_GLOBAL_MEM 15315096
    lea rax, [mem+15315096]
    push rax
addr_43048: ;;// porth.porth:2400:41: OP_PUSH_GLOBAL_MEM 15347864
    lea rax, [mem+15347864]
    push rax
addr_43049: ;;// porth.porth:2400:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43050: ;;// porth.porth:2400:54: OP_INLINED 36
addr_43051: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43052: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_43053: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43054: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_43055: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_43056: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_43057: ;;// porth.porth:5552:9: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_43058: ;;// porth.porth:5552:24: OP_INLINED 753
addr_43059: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_43060: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_43061: ;;// std/std.porth:65:7: OP_INLINED 704
addr_43062: ;;// std/std.porth:58:38: OP_INLINED 684
addr_43063: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_43064: ;;// std/std.porth:56:57: OP_INLINED 36
addr_43065: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43066: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_43067: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43068: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_43069: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_43070: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_43071: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43072: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_43073: ;;// std/std.porth:66:7: OP_INLINED 716
addr_43074: ;;// std/std.porth:59:37: OP_INLINED 694
addr_43075: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_43076: ;;// std/std.porth:57:55: OP_INLINED 36
addr_43077: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43078: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_43079: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43080: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_43081: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_43082: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_43083: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43084: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_43085: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_43086: ;;// porth.porth:5552:29: OP_INLINED 18180
addr_43087: ;;// porth.porth:2417:42: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_43088: ;;// porth.porth:2417:47: OP_CALL 18129
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18129
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43089: ;;// porth.porth:2417:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43090: ;;// porth.porth:5552:40: OP_INTRINSIC drop
    pop rax
addr_43091: ;;// porth.porth:5553:9: OP_PUSH_STR 1048
    mov rax, 4
    push rax
    lea rax, [str_1048]
    push rax
addr_43092: ;;// porth.porth:5553:29: OP_INLINED 18180
addr_43093: ;;// porth.porth:2417:42: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_43094: ;;// porth.porth:2417:47: OP_CALL 18129
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18129
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43095: ;;// porth.porth:2417:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43096: ;;// porth.porth:5553:40: OP_INTRINSIC drop
    pop rax
addr_43097: ;;// porth.porth:5554:9: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_43098: ;;// porth.porth:5554:29: OP_CALL 18129
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18129
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43099: ;;// porth.porth:5554:40: OP_INTRINSIC drop
    pop rax
addr_43100: ;;// porth.porth:5555:9: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_43101: ;;// porth.porth:5555:13: OP_PUSH_GLOBAL_MEM 15310984
    lea rax, [mem+15310984]
    push rax
addr_43102: ;;// porth.porth:5555:21: OP_INLINED 12
addr_43103: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43104: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_43105: ;;// porth.porth:5555:27: OP_IF 3
    pop rax
    test rax, rax
    jz addr_43108
addr_43106: ;;// porth.porth:5555:30: OP_CALL 17048
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_17048
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43107: ;;// porth.porth:5555:56: OP_ELSE 2
    jmp addr_43109
addr_43108: ;;// porth.porth:5555:61: OP_CALL 17658
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_17658
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43109: ;;// porth.porth:5555:88: OP_END_IF 0
addr_43110: ;;// porth.porth:5556:7: OP_INLINED 18117
addr_43111: ;;// porth.porth:2401:31: OP_PUSH_GLOBAL_MEM 15315096
    lea rax, [mem+15315096]
    push rax
addr_43112: ;;// porth.porth:2401:41: OP_INLINED 78
addr_43113: ;;// std/core.porth:68:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43114: ;;// std/core.porth:68:8: OP_INTRINSIC cast(int)
addr_43115: ;;// std/core.porth:69:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43116: ;;// std/core.porth:69:8: OP_INTRINSIC cast(int)
addr_43117: ;;// std/core.porth:70:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_43118: ;;// porth.porth:2401:50: OP_PUSH_GLOBAL_MEM 15347864
    lea rax, [mem+15347864]
    push rax
addr_43119: ;;// porth.porth:2401:59: OP_INLINED 30
addr_43120: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_43121: ;;// porth.porth:5557:5: OP_PUSH_STR 1049
    mov rax, 17
    push rax
    lea rax, [str_1049]
    push rax
addr_43122: ;;// porth.porth:5557:25: OP_PUSH_GLOBAL_MEM 15310976
    lea rax, [mem+15310976]
    push rax
addr_43123: ;;// porth.porth:5557:32: OP_INLINED 12
addr_43124: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43125: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_43126: ;;// porth.porth:5557:38: OP_CALL 3467
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_3467
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43127: ;;// porth.porth:5559:5: OP_CALL 3443
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_3443
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43128: ;;// porth.porth:5560:7: OP_PUSH_GLOBAL_MEM 8388640
    lea rax, [mem+8388640]
    push rax
addr_43129: ;;// porth.porth:5560:27: OP_INLINED 12
addr_43130: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43131: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_43132: ;;// porth.porth:5561:9: OP_PUSH_GLOBAL_MEM 15310976
    lea rax, [mem+15310976]
    push rax
addr_43133: ;;// porth.porth:5561:16: OP_INLINED 12
addr_43134: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43135: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_43136: ;;// porth.porth:5561:22: OP_PUSH_GLOBAL_MEM 8388640
    lea rax, [mem+8388640]
    push rax
addr_43137: ;;// porth.porth:5561:42: OP_INLINED 24
addr_43138: ;;// std/core.porth:26:31: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_43139: ;;// porth.porth:5562:9: OP_INLINED 18105
addr_43140: ;;// porth.porth:2400:31: OP_PUSH_GLOBAL_MEM 15315096
    lea rax, [mem+15315096]
    push rax
addr_43141: ;;// porth.porth:2400:41: OP_PUSH_GLOBAL_MEM 15347864
    lea rax, [mem+15347864]
    push rax
addr_43142: ;;// porth.porth:2400:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43143: ;;// porth.porth:2400:54: OP_INLINED 36
addr_43144: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43145: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_43146: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43147: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_43148: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_43149: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_43150: ;;// porth.porth:5563:11: OP_INLINED 2414
addr_43151: ;;// std/std.porth:506:31: OP_PUSH_GLOBAL_MEM 8
    lea rax, [mem+8]
    push rax
addr_43152: ;;// std/std.porth:506:41: OP_PUSH_GLOBAL_MEM 8388616
    lea rax, [mem+8388616]
    push rax
addr_43153: ;;// std/std.porth:506:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43154: ;;// std/std.porth:506:54: OP_INLINED 36
addr_43155: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43156: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_43157: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43158: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_43159: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_43160: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_43161: ;;// porth.porth:5564:11: OP_PUSH_GLOBAL_MEM 15310984
    lea rax, [mem+15310984]
    push rax
addr_43162: ;;// porth.porth:5564:19: OP_INLINED 12
addr_43163: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43164: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_43165: ;;// porth.porth:5564:25: OP_IF 144
    pop rax
    test rax, rax
    jz addr_43309
addr_43166: ;;// porth.porth:5565:13: OP_PUSH_CSTR 1050
    lea rax, [str_1050]
    push rax
addr_43167: ;;// porth.porth:5565:19: OP_INLINED 2501
addr_43168: ;;// std/std.porth:528:3: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_43169: ;;// std/std.porth:528:15: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43170: ;;// std/std.porth:528:25: OP_INLINED 27
addr_43171: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_43172: ;;// porth.porth:5566:13: OP_PUSH_CSTR 1051
    lea rax, [str_1051]
    push rax
addr_43173: ;;// porth.porth:5566:19: OP_INLINED 2501
addr_43174: ;;// std/std.porth:528:3: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_43175: ;;// std/std.porth:528:15: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43176: ;;// std/std.porth:528:25: OP_INLINED 27
addr_43177: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_43178: ;;// porth.porth:5567:13: OP_PUSH_CSTR 1052
    lea rax, [str_1052]
    push rax
addr_43179: ;;// porth.porth:5567:19: OP_INLINED 2501
addr_43180: ;;// std/std.porth:528:3: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_43181: ;;// std/std.porth:528:15: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43182: ;;// std/std.porth:528:25: OP_INLINED 27
addr_43183: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_43184: ;;// porth.porth:5568:13: OP_INLINED 18105
addr_43185: ;;// porth.porth:2400:31: OP_PUSH_GLOBAL_MEM 15315096
    lea rax, [mem+15315096]
    push rax
addr_43186: ;;// porth.porth:2400:41: OP_PUSH_GLOBAL_MEM 15347864
    lea rax, [mem+15347864]
    push rax
addr_43187: ;;// porth.porth:2400:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43188: ;;// porth.porth:2400:54: OP_INLINED 36
addr_43189: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43190: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_43191: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43192: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_43193: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_43194: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_43195: ;;// porth.porth:5569:15: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_43196: ;;// porth.porth:5569:30: OP_INLINED 753
addr_43197: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_43198: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_43199: ;;// std/std.porth:65:7: OP_INLINED 704
addr_43200: ;;// std/std.porth:58:38: OP_INLINED 684
addr_43201: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_43202: ;;// std/std.porth:56:57: OP_INLINED 36
addr_43203: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43204: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_43205: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43206: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_43207: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_43208: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_43209: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43210: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_43211: ;;// std/std.porth:66:7: OP_INLINED 716
addr_43212: ;;// std/std.porth:59:37: OP_INLINED 694
addr_43213: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_43214: ;;// std/std.porth:57:55: OP_INLINED 36
addr_43215: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43216: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_43217: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43218: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_43219: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_43220: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_43221: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43222: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_43223: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_43224: ;;// porth.porth:5569:35: OP_INLINED 18180
addr_43225: ;;// porth.porth:2417:42: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_43226: ;;// porth.porth:2417:47: OP_CALL 18129
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18129
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43227: ;;// porth.porth:2417:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43228: ;;// porth.porth:5569:46: OP_INTRINSIC drop
    pop rax
addr_43229: ;;// porth.porth:5570:15: OP_PUSH_STR 1053
    mov rax, 2
    push rax
    lea rax, [str_1053]
    push rax
addr_43230: ;;// porth.porth:5570:35: OP_INLINED 18180
addr_43231: ;;// porth.porth:2417:42: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_43232: ;;// porth.porth:2417:47: OP_CALL 18129
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18129
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43233: ;;// porth.porth:2417:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43234: ;;// porth.porth:5570:46: OP_INTRINSIC drop
    pop rax
addr_43235: ;;// porth.porth:5571:15: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_43236: ;;// porth.porth:5571:35: OP_CALL 18129
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18129
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43237: ;;// porth.porth:5571:46: OP_INTRINSIC drop
    pop rax
addr_43238: ;;// porth.porth:5572:15: OP_INLINED 2501
addr_43239: ;;// std/std.porth:528:3: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_43240: ;;// std/std.porth:528:15: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43241: ;;// std/std.porth:528:25: OP_INLINED 27
addr_43242: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_43243: ;;// porth.porth:5573:13: OP_INLINED 18105
addr_43244: ;;// porth.porth:2400:31: OP_PUSH_GLOBAL_MEM 15315096
    lea rax, [mem+15315096]
    push rax
addr_43245: ;;// porth.porth:2400:41: OP_PUSH_GLOBAL_MEM 15347864
    lea rax, [mem+15347864]
    push rax
addr_43246: ;;// porth.porth:2400:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43247: ;;// porth.porth:2400:54: OP_INLINED 36
addr_43248: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43249: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_43250: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43251: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_43252: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_43253: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_43254: ;;// porth.porth:5574:15: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_43255: ;;// porth.porth:5574:30: OP_INLINED 753
addr_43256: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_43257: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_43258: ;;// std/std.porth:65:7: OP_INLINED 704
addr_43259: ;;// std/std.porth:58:38: OP_INLINED 684
addr_43260: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_43261: ;;// std/std.porth:56:57: OP_INLINED 36
addr_43262: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43263: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_43264: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43265: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_43266: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_43267: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_43268: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43269: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_43270: ;;// std/std.porth:66:7: OP_INLINED 716
addr_43271: ;;// std/std.porth:59:37: OP_INLINED 694
addr_43272: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_43273: ;;// std/std.porth:57:55: OP_INLINED 36
addr_43274: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43275: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_43276: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43277: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_43278: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_43279: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_43280: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43281: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_43282: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_43283: ;;// porth.porth:5574:35: OP_INLINED 18180
addr_43284: ;;// porth.porth:2417:42: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_43285: ;;// porth.porth:2417:47: OP_CALL 18129
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18129
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43286: ;;// porth.porth:2417:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43287: ;;// porth.porth:5574:46: OP_INTRINSIC drop
    pop rax
addr_43288: ;;// porth.porth:5575:15: OP_PUSH_STR 1054
    mov rax, 4
    push rax
    lea rax, [str_1054]
    push rax
addr_43289: ;;// porth.porth:5575:35: OP_INLINED 18180
addr_43290: ;;// porth.porth:2417:42: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_43291: ;;// porth.porth:2417:47: OP_CALL 18129
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18129
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43292: ;;// porth.porth:2417:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43293: ;;// porth.porth:5575:46: OP_INTRINSIC drop
    pop rax
addr_43294: ;;// porth.porth:5576:15: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_43295: ;;// porth.porth:5576:35: OP_CALL 18129
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18129
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43296: ;;// porth.porth:5576:46: OP_INTRINSIC drop
    pop rax
addr_43297: ;;// porth.porth:5577:15: OP_INLINED 2501
addr_43298: ;;// std/std.porth:528:3: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_43299: ;;// std/std.porth:528:15: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43300: ;;// std/std.porth:528:25: OP_INLINED 27
addr_43301: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_43302: ;;// porth.porth:5578:13: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_43303: ;;// porth.porth:5578:27: OP_INLINED 2501
addr_43304: ;;// std/std.porth:528:3: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_43305: ;;// std/std.porth:528:15: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43306: ;;// std/std.porth:528:25: OP_INLINED 27
addr_43307: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_43308: ;;// porth.porth:5579:11: OP_ELSE 143
    jmp addr_43451
addr_43309: ;;// porth.porth:5580:13: OP_PUSH_CSTR 1055
    lea rax, [str_1055]
    push rax
addr_43310: ;;// porth.porth:5580:27: OP_INLINED 2501
addr_43311: ;;// std/std.porth:528:3: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_43312: ;;// std/std.porth:528:15: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43313: ;;// std/std.porth:528:25: OP_INLINED 27
addr_43314: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_43315: ;;// porth.porth:5581:13: OP_PUSH_CSTR 1056
    lea rax, [str_1056]
    push rax
addr_43316: ;;// porth.porth:5581:27: OP_INLINED 2501
addr_43317: ;;// std/std.porth:528:3: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_43318: ;;// std/std.porth:528:15: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43319: ;;// std/std.porth:528:25: OP_INLINED 27
addr_43320: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_43321: ;;// porth.porth:5582:13: OP_PUSH_CSTR 1057
    lea rax, [str_1057]
    push rax
addr_43322: ;;// porth.porth:5582:27: OP_INLINED 2501
addr_43323: ;;// std/std.porth:528:3: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_43324: ;;// std/std.porth:528:15: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43325: ;;// std/std.porth:528:25: OP_INLINED 27
addr_43326: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_43327: ;;// porth.porth:5583:13: OP_INLINED 18105
addr_43328: ;;// porth.porth:2400:31: OP_PUSH_GLOBAL_MEM 15315096
    lea rax, [mem+15315096]
    push rax
addr_43329: ;;// porth.porth:2400:41: OP_PUSH_GLOBAL_MEM 15347864
    lea rax, [mem+15347864]
    push rax
addr_43330: ;;// porth.porth:2400:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43331: ;;// porth.porth:2400:54: OP_INLINED 36
addr_43332: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43333: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_43334: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43335: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_43336: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_43337: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_43338: ;;// porth.porth:5584:15: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_43339: ;;// porth.porth:5584:30: OP_INLINED 753
addr_43340: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_43341: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_43342: ;;// std/std.porth:65:7: OP_INLINED 704
addr_43343: ;;// std/std.porth:58:38: OP_INLINED 684
addr_43344: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_43345: ;;// std/std.porth:56:57: OP_INLINED 36
addr_43346: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43347: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_43348: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43349: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_43350: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_43351: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_43352: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43353: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_43354: ;;// std/std.porth:66:7: OP_INLINED 716
addr_43355: ;;// std/std.porth:59:37: OP_INLINED 694
addr_43356: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_43357: ;;// std/std.porth:57:55: OP_INLINED 36
addr_43358: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43359: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_43360: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43361: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_43362: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_43363: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_43364: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43365: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_43366: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_43367: ;;// porth.porth:5584:35: OP_INLINED 18180
addr_43368: ;;// porth.porth:2417:42: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_43369: ;;// porth.porth:2417:47: OP_CALL 18129
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18129
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43370: ;;// porth.porth:2417:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43371: ;;// porth.porth:5584:46: OP_INTRINSIC drop
    pop rax
addr_43372: ;;// porth.porth:5585:15: OP_PUSH_STR 1058
    mov rax, 4
    push rax
    lea rax, [str_1058]
    push rax
addr_43373: ;;// porth.porth:5585:35: OP_INLINED 18180
addr_43374: ;;// porth.porth:2417:42: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_43375: ;;// porth.porth:2417:47: OP_CALL 18129
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18129
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43376: ;;// porth.porth:2417:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43377: ;;// porth.porth:5585:46: OP_INTRINSIC drop
    pop rax
addr_43378: ;;// porth.porth:5586:15: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_43379: ;;// porth.porth:5586:35: OP_CALL 18129
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18129
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43380: ;;// porth.porth:5586:46: OP_INTRINSIC drop
    pop rax
addr_43381: ;;// porth.porth:5587:15: OP_INLINED 2501
addr_43382: ;;// std/std.porth:528:3: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_43383: ;;// std/std.porth:528:15: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43384: ;;// std/std.porth:528:25: OP_INLINED 27
addr_43385: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_43386: ;;// porth.porth:5588:13: OP_INLINED 18105
addr_43387: ;;// porth.porth:2400:31: OP_PUSH_GLOBAL_MEM 15315096
    lea rax, [mem+15315096]
    push rax
addr_43388: ;;// porth.porth:2400:41: OP_PUSH_GLOBAL_MEM 15347864
    lea rax, [mem+15347864]
    push rax
addr_43389: ;;// porth.porth:2400:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43390: ;;// porth.porth:2400:54: OP_INLINED 36
addr_43391: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43392: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_43393: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43394: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_43395: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_43396: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_43397: ;;// porth.porth:5589:15: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_43398: ;;// porth.porth:5589:30: OP_INLINED 753
addr_43399: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_43400: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_43401: ;;// std/std.porth:65:7: OP_INLINED 704
addr_43402: ;;// std/std.porth:58:38: OP_INLINED 684
addr_43403: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_43404: ;;// std/std.porth:56:57: OP_INLINED 36
addr_43405: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43406: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_43407: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43408: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_43409: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_43410: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_43411: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43412: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_43413: ;;// std/std.porth:66:7: OP_INLINED 716
addr_43414: ;;// std/std.porth:59:37: OP_INLINED 694
addr_43415: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_43416: ;;// std/std.porth:57:55: OP_INLINED 36
addr_43417: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43418: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_43419: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43420: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_43421: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_43422: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_43423: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43424: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_43425: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_43426: ;;// porth.porth:5589:35: OP_INLINED 18180
addr_43427: ;;// porth.porth:2417:42: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_43428: ;;// porth.porth:2417:47: OP_CALL 18129
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18129
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43429: ;;// porth.porth:2417:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43430: ;;// porth.porth:5589:46: OP_INTRINSIC drop
    pop rax
addr_43431: ;;// porth.porth:5590:15: OP_PUSH_STR 1059
    mov rax, 2
    push rax
    lea rax, [str_1059]
    push rax
addr_43432: ;;// porth.porth:5590:35: OP_INLINED 18180
addr_43433: ;;// porth.porth:2417:42: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_43434: ;;// porth.porth:2417:47: OP_CALL 18129
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18129
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43435: ;;// porth.porth:2417:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43436: ;;// porth.porth:5590:46: OP_INTRINSIC drop
    pop rax
addr_43437: ;;// porth.porth:5591:15: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_43438: ;;// porth.porth:5591:35: OP_CALL 18129
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18129
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43439: ;;// porth.porth:5591:46: OP_INTRINSIC drop
    pop rax
addr_43440: ;;// porth.porth:5592:15: OP_INLINED 2501
addr_43441: ;;// std/std.porth:528:3: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_43442: ;;// std/std.porth:528:15: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43443: ;;// std/std.porth:528:25: OP_INLINED 27
addr_43444: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_43445: ;;// porth.porth:5593:13: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_43446: ;;// porth.porth:5593:27: OP_INLINED 2501
addr_43447: ;;// std/std.porth:528:3: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_43448: ;;// std/std.porth:528:15: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43449: ;;// std/std.porth:528:25: OP_INLINED 27
addr_43450: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_43451: ;;// porth.porth:5594:11: OP_END_IF 0
addr_43452: ;;// porth.porth:5595:11: OP_PUSH_GLOBAL_MEM 15310976
    lea rax, [mem+15310976]
    push rax
addr_43453: ;;// porth.porth:5595:18: OP_INLINED 12
addr_43454: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43455: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_43456: ;;// porth.porth:5595:24: OP_INLINED 131
addr_43457: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_43458: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_43459: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43460: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_43461: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_43462: ;;// porth.porth:5595:29: OP_CALL 4107
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_4107
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43463: ;;// porth.porth:5596:9: OP_INLINED 18117
addr_43464: ;;// porth.porth:2401:31: OP_PUSH_GLOBAL_MEM 15315096
    lea rax, [mem+15315096]
    push rax
addr_43465: ;;// porth.porth:2401:41: OP_INLINED 78
addr_43466: ;;// std/core.porth:68:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43467: ;;// std/core.porth:68:8: OP_INTRINSIC cast(int)
addr_43468: ;;// std/core.porth:69:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43469: ;;// std/core.porth:69:8: OP_INTRINSIC cast(int)
addr_43470: ;;// std/core.porth:70:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_43471: ;;// porth.porth:2401:50: OP_PUSH_GLOBAL_MEM 15347864
    lea rax, [mem+15347864]
    push rax
addr_43472: ;;// porth.porth:2401:59: OP_INLINED 30
addr_43473: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_43474: ;;// porth.porth:5597:7: OP_PUSH_GLOBAL_MEM 8388640
    lea rax, [mem+8388640]
    push rax
addr_43475: ;;// porth.porth:5597:27: OP_INLINED 24
addr_43476: ;;// std/core.porth:26:31: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_43477: ;;// porth.porth:5599:5: OP_PUSH_GLOBAL_MEM 15310984
    lea rax, [mem+15310984]
    push rax
addr_43478: ;;// porth.porth:5599:13: OP_INLINED 12
addr_43479: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43480: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_43481: ;;// porth.porth:5599:19: OP_IF 3
    pop rax
    test rax, rax
    jz addr_43484
addr_43482: ;;// porth.porth:5599:22: OP_PUSH_STR 1060
    mov rax, 10
    push rax
    lea rax, [str_1060]
    push rax
addr_43483: ;;// porth.porth:5599:35: OP_ELSE 2
    jmp addr_43485
addr_43484: ;;// porth.porth:5599:40: OP_PUSH_STR 1061
    mov rax, 11
    push rax
    lea rax, [str_1061]
    push rax
addr_43485: ;;// porth.porth:5599:54: OP_END_IF 0
addr_43486: ;;// porth.porth:5599:58: OP_PUSH_GLOBAL_MEM 15310976
    lea rax, [mem+15310976]
    push rax
addr_43487: ;;// porth.porth:5599:65: OP_INLINED 12
addr_43488: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43489: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_43490: ;;// porth.porth:5599:71: OP_CALL 3467
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_3467
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43491: ;;// porth.porth:5601:7: OP_PUSH_GLOBAL_MEM 8388640
    lea rax, [mem+8388640]
    push rax
addr_43492: ;;// porth.porth:5601:27: OP_INLINED 12
addr_43493: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43494: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_43495: ;;// porth.porth:5602:9: OP_PUSH_GLOBAL_MEM 15310976
    lea rax, [mem+15310976]
    push rax
addr_43496: ;;// porth.porth:5602:16: OP_INLINED 12
addr_43497: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43498: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_43499: ;;// porth.porth:5602:22: OP_PUSH_GLOBAL_MEM 8388640
    lea rax, [mem+8388640]
    push rax
addr_43500: ;;// porth.porth:5602:42: OP_INLINED 24
addr_43501: ;;// std/core.porth:26:31: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_43502: ;;// porth.porth:5603:9: OP_INLINED 18105
addr_43503: ;;// porth.porth:2400:31: OP_PUSH_GLOBAL_MEM 15315096
    lea rax, [mem+15315096]
    push rax
addr_43504: ;;// porth.porth:2400:41: OP_PUSH_GLOBAL_MEM 15347864
    lea rax, [mem+15347864]
    push rax
addr_43505: ;;// porth.porth:2400:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43506: ;;// porth.porth:2400:54: OP_INLINED 36
addr_43507: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43508: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_43509: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43510: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_43511: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_43512: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_43513: ;;// porth.porth:5604:11: OP_INLINED 2414
addr_43514: ;;// std/std.porth:506:31: OP_PUSH_GLOBAL_MEM 8
    lea rax, [mem+8]
    push rax
addr_43515: ;;// std/std.porth:506:41: OP_PUSH_GLOBAL_MEM 8388616
    lea rax, [mem+8388616]
    push rax
addr_43516: ;;// std/std.porth:506:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43517: ;;// std/std.porth:506:54: OP_INLINED 36
addr_43518: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43519: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_43520: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43521: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_43522: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_43523: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_43524: ;;// porth.porth:5605:11: OP_PUSH_CSTR 1062
    lea rax, [str_1062]
    push rax
addr_43525: ;;// porth.porth:5605:28: OP_INLINED 2501
addr_43526: ;;// std/std.porth:528:3: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_43527: ;;// std/std.porth:528:15: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43528: ;;// std/std.porth:528:25: OP_INLINED 27
addr_43529: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_43530: ;;// porth.porth:5606:11: OP_PUSH_CSTR 1063
    lea rax, [str_1063]
    push rax
addr_43531: ;;// porth.porth:5606:28: OP_INLINED 2501
addr_43532: ;;// std/std.porth:528:3: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_43533: ;;// std/std.porth:528:15: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43534: ;;// std/std.porth:528:25: OP_INLINED 27
addr_43535: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_43536: ;;// porth.porth:5607:11: OP_INLINED 18105
addr_43537: ;;// porth.porth:2400:31: OP_PUSH_GLOBAL_MEM 15315096
    lea rax, [mem+15315096]
    push rax
addr_43538: ;;// porth.porth:2400:41: OP_PUSH_GLOBAL_MEM 15347864
    lea rax, [mem+15347864]
    push rax
addr_43539: ;;// porth.porth:2400:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43540: ;;// porth.porth:2400:54: OP_INLINED 36
addr_43541: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43542: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_43543: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43544: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_43545: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_43546: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_43547: ;;// porth.porth:5608:13: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_43548: ;;// porth.porth:5608:28: OP_INLINED 753
addr_43549: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_43550: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_43551: ;;// std/std.porth:65:7: OP_INLINED 704
addr_43552: ;;// std/std.porth:58:38: OP_INLINED 684
addr_43553: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_43554: ;;// std/std.porth:56:57: OP_INLINED 36
addr_43555: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43556: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_43557: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43558: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_43559: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_43560: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_43561: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43562: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_43563: ;;// std/std.porth:66:7: OP_INLINED 716
addr_43564: ;;// std/std.porth:59:37: OP_INLINED 694
addr_43565: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_43566: ;;// std/std.porth:57:55: OP_INLINED 36
addr_43567: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43568: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_43569: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43570: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_43571: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_43572: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_43573: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43574: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_43575: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_43576: ;;// porth.porth:5608:33: OP_INLINED 18180
addr_43577: ;;// porth.porth:2417:42: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_43578: ;;// porth.porth:2417:47: OP_CALL 18129
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18129
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43579: ;;// porth.porth:2417:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43580: ;;// porth.porth:5608:44: OP_INTRINSIC drop
    pop rax
addr_43581: ;;// porth.porth:5609:13: OP_PUSH_STR 1064
    mov rax, 4
    push rax
    lea rax, [str_1064]
    push rax
addr_43582: ;;// porth.porth:5609:33: OP_INLINED 18180
addr_43583: ;;// porth.porth:2417:42: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_43584: ;;// porth.porth:2417:47: OP_CALL 18129
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18129
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43585: ;;// porth.porth:2417:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43586: ;;// porth.porth:5609:44: OP_INTRINSIC drop
    pop rax
addr_43587: ;;// porth.porth:5610:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_43588: ;;// porth.porth:5610:33: OP_CALL 18129
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18129
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43589: ;;// porth.porth:5610:44: OP_INTRINSIC drop
    pop rax
addr_43590: ;;// porth.porth:5611:13: OP_INLINED 2501
addr_43591: ;;// std/std.porth:528:3: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_43592: ;;// std/std.porth:528:15: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43593: ;;// std/std.porth:528:25: OP_INLINED 27
addr_43594: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_43595: ;;// porth.porth:5612:11: OP_INLINED 18105
addr_43596: ;;// porth.porth:2400:31: OP_PUSH_GLOBAL_MEM 15315096
    lea rax, [mem+15315096]
    push rax
addr_43597: ;;// porth.porth:2400:41: OP_PUSH_GLOBAL_MEM 15347864
    lea rax, [mem+15347864]
    push rax
addr_43598: ;;// porth.porth:2400:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43599: ;;// porth.porth:2400:54: OP_INLINED 36
addr_43600: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43601: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_43602: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43603: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_43604: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_43605: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_43606: ;;// porth.porth:5613:13: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_43607: ;;// porth.porth:5613:28: OP_INLINED 753
addr_43608: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_43609: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_43610: ;;// std/std.porth:65:7: OP_INLINED 704
addr_43611: ;;// std/std.porth:58:38: OP_INLINED 684
addr_43612: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_43613: ;;// std/std.porth:56:57: OP_INLINED 36
addr_43614: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43615: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_43616: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43617: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_43618: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_43619: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_43620: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43621: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_43622: ;;// std/std.porth:66:7: OP_INLINED 716
addr_43623: ;;// std/std.porth:59:37: OP_INLINED 694
addr_43624: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_43625: ;;// std/std.porth:57:55: OP_INLINED 36
addr_43626: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43627: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_43628: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43629: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_43630: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_43631: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_43632: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43633: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_43634: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_43635: ;;// porth.porth:5613:33: OP_INLINED 18180
addr_43636: ;;// porth.porth:2417:42: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_43637: ;;// porth.porth:2417:47: OP_CALL 18129
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18129
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43638: ;;// porth.porth:2417:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43639: ;;// porth.porth:5613:44: OP_INTRINSIC drop
    pop rax
addr_43640: ;;// porth.porth:5614:13: OP_PUSH_STR 1065
    mov rax, 2
    push rax
    lea rax, [str_1065]
    push rax
addr_43641: ;;// porth.porth:5614:33: OP_INLINED 18180
addr_43642: ;;// porth.porth:2417:42: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_43643: ;;// porth.porth:2417:47: OP_CALL 18129
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18129
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43644: ;;// porth.porth:2417:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43645: ;;// porth.porth:5614:44: OP_INTRINSIC drop
    pop rax
addr_43646: ;;// porth.porth:5615:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_43647: ;;// porth.porth:5615:33: OP_CALL 18129
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18129
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43648: ;;// porth.porth:5615:44: OP_INTRINSIC drop
    pop rax
addr_43649: ;;// porth.porth:5616:13: OP_INLINED 2501
addr_43650: ;;// std/std.porth:528:3: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_43651: ;;// std/std.porth:528:15: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43652: ;;// std/std.porth:528:25: OP_INLINED 27
addr_43653: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_43654: ;;// porth.porth:5617:11: OP_PUSH_CSTR 1066
    lea rax, [str_1066]
    push rax
addr_43655: ;;// porth.porth:5617:28: OP_INLINED 2501
addr_43656: ;;// std/std.porth:528:3: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_43657: ;;// std/std.porth:528:15: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43658: ;;// std/std.porth:528:25: OP_INLINED 27
addr_43659: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_43660: ;;// porth.porth:5619:11: OP_PUSH_CSTR 1067
    lea rax, [str_1067]
    push rax
addr_43661: ;;// porth.porth:5619:28: OP_INLINED 2501
addr_43662: ;;// std/std.porth:528:3: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_43663: ;;// std/std.porth:528:15: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43664: ;;// std/std.porth:528:25: OP_INLINED 27
addr_43665: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_43666: ;;// porth.porth:5620:11: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_43667: ;;// porth.porth:5620:13: OP_WHILE 72
addr_43668: ;;// porth.porth:5620:19: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_43669: ;;// porth.porth:5620:23: OP_PUSH_GLOBAL_MEM 15425744
    lea rax, [mem+15425744]
    push rax
addr_43670: ;;// porth.porth:5620:39: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43671: ;;// porth.porth:5620:43: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_43672: ;;// porth.porth:5620:45: OP_DO 67
    pop rax
    test rax, rax
    jz addr_43739
addr_43673: ;;// porth.porth:5621:13: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_43674: ;;// porth.porth:5622:15: OP_INLINED 18105
addr_43675: ;;// porth.porth:2400:31: OP_PUSH_GLOBAL_MEM 15315096
    lea rax, [mem+15315096]
    push rax
addr_43676: ;;// porth.porth:2400:41: OP_PUSH_GLOBAL_MEM 15347864
    lea rax, [mem+15347864]
    push rax
addr_43677: ;;// porth.porth:2400:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43678: ;;// porth.porth:2400:54: OP_INLINED 36
addr_43679: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43680: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_43681: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43682: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_43683: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_43684: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_43685: ;;// porth.porth:5623:17: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_43686: ;;// porth.porth:5623:19: OP_PUSH_INT 16
    mov rax, 16
    push rax
addr_43687: ;;// porth.porth:5623:31: OP_INTRINSIC *
    pop rax
    pop rbx
    mul rbx
    push rax
addr_43688: ;;// porth.porth:5623:33: OP_PUSH_GLOBAL_MEM 15421648
    lea rax, [mem+15421648]
    push rax
addr_43689: ;;// porth.porth:5623:43: OP_INLINED 73
addr_43690: ;;// std/core.porth:64:3: OP_INTRINSIC cast(int)
addr_43691: ;;// std/core.porth:64:13: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_43692: ;;// std/core.porth:64:15: OP_INTRINSIC cast(ptr)
addr_43693: ;;// porth.porth:5623:48: OP_INLINED 753
addr_43694: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_43695: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_43696: ;;// std/std.porth:65:7: OP_INLINED 704
addr_43697: ;;// std/std.porth:58:38: OP_INLINED 684
addr_43698: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_43699: ;;// std/std.porth:56:57: OP_INLINED 36
addr_43700: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43701: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_43702: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43703: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_43704: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_43705: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_43706: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43707: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_43708: ;;// std/std.porth:66:7: OP_INLINED 716
addr_43709: ;;// std/std.porth:59:37: OP_INLINED 694
addr_43710: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_43711: ;;// std/std.porth:57:55: OP_INLINED 36
addr_43712: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43713: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_43714: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43715: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_43716: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_43717: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_43718: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43719: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_43720: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_43721: ;;// porth.porth:5623:53: OP_INLINED 18180
addr_43722: ;;// porth.porth:2417:42: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_43723: ;;// porth.porth:2417:47: OP_CALL 18129
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18129
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43724: ;;// porth.porth:2417:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43725: ;;// porth.porth:5623:64: OP_INTRINSIC drop
    pop rax
addr_43726: ;;// porth.porth:5624:17: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_43727: ;;// porth.porth:5624:53: OP_CALL 18129
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18129
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43728: ;;// porth.porth:5624:64: OP_INTRINSIC drop
    pop rax
addr_43729: ;;// porth.porth:5625:17: OP_INLINED 2501
addr_43730: ;;// std/std.porth:528:3: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_43731: ;;// std/std.porth:528:15: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43732: ;;// std/std.porth:528:25: OP_INLINED 27
addr_43733: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_43734: ;;// porth.porth:5626:15: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_43735: ;;// porth.porth:5626:17: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_43736: ;;// porth.porth:5626:19: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_43737: ;;// porth.porth:5627:13: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_43738: ;;// porth.porth:5628:11: OP_END_WHILE 71
    jmp addr_43667
addr_43739: ;;// porth.porth:5628:15: OP_INTRINSIC drop
    pop rax
addr_43740: ;;// porth.porth:5629:11: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_43741: ;;// porth.porth:5629:25: OP_INLINED 2501
addr_43742: ;;// std/std.porth:528:3: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_43743: ;;// std/std.porth:528:15: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43744: ;;// std/std.porth:528:25: OP_INLINED 27
addr_43745: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_43746: ;;// porth.porth:5630:11: OP_PUSH_GLOBAL_MEM 15310976
    lea rax, [mem+15310976]
    push rax
addr_43747: ;;// porth.porth:5630:18: OP_INLINED 12
addr_43748: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43749: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_43750: ;;// porth.porth:5630:24: OP_INLINED 131
addr_43751: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_43752: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_43753: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43754: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_43755: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_43756: ;;// porth.porth:5630:29: OP_CALL 4107
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_4107
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43757: ;;// porth.porth:5631:9: OP_INLINED 18117
addr_43758: ;;// porth.porth:2401:31: OP_PUSH_GLOBAL_MEM 15315096
    lea rax, [mem+15315096]
    push rax
addr_43759: ;;// porth.porth:2401:41: OP_INLINED 78
addr_43760: ;;// std/core.porth:68:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43761: ;;// std/core.porth:68:8: OP_INTRINSIC cast(int)
addr_43762: ;;// std/core.porth:69:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43763: ;;// std/core.porth:69:8: OP_INTRINSIC cast(int)
addr_43764: ;;// std/core.porth:70:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_43765: ;;// porth.porth:2401:50: OP_PUSH_GLOBAL_MEM 15347864
    lea rax, [mem+15347864]
    push rax
addr_43766: ;;// porth.porth:2401:59: OP_INLINED 30
addr_43767: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_43768: ;;// porth.porth:5632:7: OP_PUSH_GLOBAL_MEM 8388640
    lea rax, [mem+8388640]
    push rax
addr_43769: ;;// porth.porth:5632:27: OP_INLINED 24
addr_43770: ;;// std/core.porth:26:31: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_43771: ;;// porth.porth:5634:7: OP_INLINED 18105
addr_43772: ;;// porth.porth:2400:31: OP_PUSH_GLOBAL_MEM 15315096
    lea rax, [mem+15315096]
    push rax
addr_43773: ;;// porth.porth:2400:41: OP_PUSH_GLOBAL_MEM 15347864
    lea rax, [mem+15347864]
    push rax
addr_43774: ;;// porth.porth:2400:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43775: ;;// porth.porth:2400:54: OP_INLINED 36
addr_43776: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43777: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_43778: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43779: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_43780: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_43781: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_43782: ;;// porth.porth:5635:9: OP_INLINED 18105
addr_43783: ;;// porth.porth:2400:31: OP_PUSH_GLOBAL_MEM 15315096
    lea rax, [mem+15315096]
    push rax
addr_43784: ;;// porth.porth:2400:41: OP_PUSH_GLOBAL_MEM 15347864
    lea rax, [mem+15347864]
    push rax
addr_43785: ;;// porth.porth:2400:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43786: ;;// porth.porth:2400:54: OP_INLINED 36
addr_43787: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43788: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_43789: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43790: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_43791: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_43792: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_43793: ;;// porth.porth:5636:11: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_43794: ;;// porth.porth:5636:26: OP_INLINED 753
addr_43795: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_43796: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_43797: ;;// std/std.porth:65:7: OP_INLINED 704
addr_43798: ;;// std/std.porth:58:38: OP_INLINED 684
addr_43799: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_43800: ;;// std/std.porth:56:57: OP_INLINED 36
addr_43801: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43802: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_43803: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43804: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_43805: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_43806: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_43807: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43808: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_43809: ;;// std/std.porth:66:7: OP_INLINED 716
addr_43810: ;;// std/std.porth:59:37: OP_INLINED 694
addr_43811: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_43812: ;;// std/std.porth:57:55: OP_INLINED 36
addr_43813: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43814: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_43815: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43816: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_43817: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_43818: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_43819: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43820: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_43821: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_43822: ;;// porth.porth:5636:31: OP_INLINED 18180
addr_43823: ;;// porth.porth:2417:42: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_43824: ;;// porth.porth:2417:47: OP_CALL 18129
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18129
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43825: ;;// porth.porth:2417:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43826: ;;// porth.porth:5636:42: OP_INTRINSIC drop
    pop rax
addr_43827: ;;// porth.porth:5637:11: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_43828: ;;// porth.porth:5637:31: OP_CALL 18129
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18129
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43829: ;;// porth.porth:5637:42: OP_INTRINSIC drop
    pop rax
addr_43830: ;;// porth.porth:5639:9: OP_INLINED 18105
addr_43831: ;;// porth.porth:2400:31: OP_PUSH_GLOBAL_MEM 15315096
    lea rax, [mem+15315096]
    push rax
addr_43832: ;;// porth.porth:2400:41: OP_PUSH_GLOBAL_MEM 15347864
    lea rax, [mem+15347864]
    push rax
addr_43833: ;;// porth.porth:2400:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43834: ;;// porth.porth:2400:54: OP_INLINED 36
addr_43835: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43836: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_43837: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43838: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_43839: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_43840: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_43841: ;;// porth.porth:5640:11: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_43842: ;;// porth.porth:5640:26: OP_INLINED 753
addr_43843: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_43844: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_43845: ;;// std/std.porth:65:7: OP_INLINED 704
addr_43846: ;;// std/std.porth:58:38: OP_INLINED 684
addr_43847: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_43848: ;;// std/std.porth:56:57: OP_INLINED 36
addr_43849: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43850: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_43851: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43852: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_43853: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_43854: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_43855: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43856: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_43857: ;;// std/std.porth:66:7: OP_INLINED 716
addr_43858: ;;// std/std.porth:59:37: OP_INLINED 694
addr_43859: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_43860: ;;// std/std.porth:57:55: OP_INLINED 36
addr_43861: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43862: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_43863: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43864: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_43865: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_43866: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_43867: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43868: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_43869: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_43870: ;;// porth.porth:5640:31: OP_INLINED 18180
addr_43871: ;;// porth.porth:2417:42: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_43872: ;;// porth.porth:2417:47: OP_CALL 18129
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18129
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43873: ;;// porth.porth:2417:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43874: ;;// porth.porth:5640:42: OP_INTRINSIC drop
    pop rax
addr_43875: ;;// porth.porth:5641:11: OP_PUSH_STR 1068
    mov rax, 4
    push rax
    lea rax, [str_1068]
    push rax
addr_43876: ;;// porth.porth:5641:31: OP_INLINED 18180
addr_43877: ;;// porth.porth:2417:42: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_43878: ;;// porth.porth:2417:47: OP_CALL 18129
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18129
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43879: ;;// porth.porth:2417:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43880: ;;// porth.porth:5641:42: OP_INTRINSIC drop
    pop rax
addr_43881: ;;// porth.porth:5642:11: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_43882: ;;// porth.porth:5642:31: OP_CALL 18129
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18129
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43883: ;;// porth.porth:5642:42: OP_INTRINSIC drop
    pop rax
addr_43884: ;;// porth.porth:5644:9: OP_PUSH_GLOBAL_MEM 15310976
    lea rax, [mem+15310976]
    push rax
addr_43885: ;;// porth.porth:5644:16: OP_INLINED 12
addr_43886: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43887: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_43888: ;;// porth.porth:5644:22: OP_INLINED 131
addr_43889: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_43890: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_43891: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43892: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_43893: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_43894: ;;// porth.porth:5644:27: OP_IF 49
    pop rax
    test rax, rax
    jz addr_43943
addr_43895: ;;// porth.porth:5645:11: OP_PUSH_STR 1069
    mov rax, 16
    push rax
    lea rax, [str_1069]
    push rax
addr_43896: ;;// porth.porth:5645:30: OP_INLINED 668
addr_43897: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_43898: ;;// std/std.porth:49:36: OP_INLINED 662
addr_43899: ;;// std/std.porth:48:34: OP_INLINED 394
addr_43900: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_43901: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_43902: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_43903: ;;// porth.porth:5646:11: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_43904: ;;// porth.porth:5646:15: OP_INLINED 657
addr_43905: ;;// std/std.porth:45:43: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_43906: ;;// std/std.porth:45:47: OP_CALL 564
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_564
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43907: ;;// std/std.porth:45:55: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43908: ;;// porth.porth:5646:30: OP_INLINED 668
addr_43909: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_43910: ;;// std/std.porth:49:36: OP_INLINED 662
addr_43911: ;;// std/std.porth:48:34: OP_INLINED 394
addr_43912: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_43913: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_43914: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_43915: ;;// porth.porth:5647:11: OP_PUSH_STR 1070
    mov rax, 4
    push rax
    lea rax, [str_1070]
    push rax
addr_43916: ;;// porth.porth:5647:30: OP_INLINED 668
addr_43917: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_43918: ;;// std/std.porth:49:36: OP_INLINED 662
addr_43919: ;;// std/std.porth:48:34: OP_INLINED 394
addr_43920: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_43921: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_43922: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_43923: ;;// porth.porth:5648:11: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_43924: ;;// porth.porth:5648:16: OP_INLINED 657
addr_43925: ;;// std/std.porth:45:43: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_43926: ;;// std/std.porth:45:47: OP_CALL 564
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_564
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_43927: ;;// std/std.porth:45:55: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43928: ;;// porth.porth:5648:30: OP_INLINED 668
addr_43929: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_43930: ;;// std/std.porth:49:36: OP_INLINED 662
addr_43931: ;;// std/std.porth:48:34: OP_INLINED 394
addr_43932: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_43933: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_43934: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_43935: ;;// porth.porth:5649:11: OP_PUSH_STR 1071
    mov rax, 1
    push rax
    lea rax, [str_1071]
    push rax
addr_43936: ;;// porth.porth:5649:30: OP_INLINED 668
addr_43937: ;;// std/std.porth:49:29: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_43938: ;;// std/std.porth:49:36: OP_INLINED 662
addr_43939: ;;// std/std.porth:48:34: OP_INLINED 394
addr_43940: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_43941: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_43942: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_43943: ;;// porth.porth:5650:9: OP_END_IF 0
addr_43944: ;;// porth.porth:5652:9: OP_INLINED 451
addr_43945: ;;// std/linux.porth:428:38: OP_PUSH_INT 82
    mov rax, 82
    push rax
addr_43946: ;;// std/linux.porth:428:49: OP_INTRINSIC syscall2
    pop rax
    pop rdi
    pop rsi
    syscall
    push rax
addr_43947: ;;// porth.porth:5652:16: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_43948: ;;// porth.porth:5652:18: OP_INTRINSIC <
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_43949: ;;// porth.porth:5652:20: OP_IF 14
    pop rax
    test rax, rax
    jz addr_43963
addr_43950: ;;// porth.porth:5653:11: OP_PUSH_STR 1072
    mov rax, 33
    push rax
    lea rax, [str_1072]
    push rax
addr_43951: ;;// porth.porth:5653:48: OP_INLINED 676
addr_43952: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_43953: ;;// std/std.porth:50:37: OP_INLINED 662
addr_43954: ;;// std/std.porth:48:34: OP_INLINED 394
addr_43955: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_43956: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_43957: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_43958: ;;// porth.porth:5654:11: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_43959: ;;// porth.porth:5654:13: OP_INLINED 418
addr_43960: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_43961: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_43962: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_43963: ;;// porth.porth:5655:9: OP_END_IF 0
addr_43964: ;;// porth.porth:5656:7: OP_INLINED 18117
addr_43965: ;;// porth.porth:2401:31: OP_PUSH_GLOBAL_MEM 15315096
    lea rax, [mem+15315096]
    push rax
addr_43966: ;;// porth.porth:2401:41: OP_INLINED 78
addr_43967: ;;// std/core.porth:68:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43968: ;;// std/core.porth:68:8: OP_INTRINSIC cast(int)
addr_43969: ;;// std/core.porth:69:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43970: ;;// std/core.porth:69:8: OP_INTRINSIC cast(int)
addr_43971: ;;// std/core.porth:70:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_43972: ;;// porth.porth:2401:50: OP_PUSH_GLOBAL_MEM 15347864
    lea rax, [mem+15347864]
    push rax
addr_43973: ;;// porth.porth:2401:59: OP_INLINED 30
addr_43974: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_43975: ;;// porth.porth:5658:7: OP_INLINED 18105
addr_43976: ;;// porth.porth:2400:31: OP_PUSH_GLOBAL_MEM 15315096
    lea rax, [mem+15315096]
    push rax
addr_43977: ;;// porth.porth:2400:41: OP_PUSH_GLOBAL_MEM 15347864
    lea rax, [mem+15347864]
    push rax
addr_43978: ;;// porth.porth:2400:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43979: ;;// porth.porth:2400:54: OP_INLINED 36
addr_43980: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43981: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_43982: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43983: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_43984: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_43985: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_43986: ;;// porth.porth:5659:9: OP_INLINED 2414
addr_43987: ;;// std/std.porth:506:31: OP_PUSH_GLOBAL_MEM 8
    lea rax, [mem+8]
    push rax
addr_43988: ;;// std/std.porth:506:41: OP_PUSH_GLOBAL_MEM 8388616
    lea rax, [mem+8388616]
    push rax
addr_43989: ;;// std/std.porth:506:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_43990: ;;// std/std.porth:506:54: OP_INLINED 36
addr_43991: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43992: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_43993: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_43994: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_43995: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_43996: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_43997: ;;// porth.porth:5660:9: OP_PUSH_CSTR 1073
    lea rax, [str_1073]
    push rax
addr_43998: ;;// porth.porth:5660:23: OP_INLINED 2501
addr_43999: ;;// std/std.porth:528:3: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_44000: ;;// std/std.porth:528:15: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_44001: ;;// std/std.porth:528:25: OP_INLINED 27
addr_44002: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_44003: ;;// porth.porth:5661:9: OP_PUSH_CSTR 1074
    lea rax, [str_1074]
    push rax
addr_44004: ;;// porth.porth:5661:23: OP_INLINED 2501
addr_44005: ;;// std/std.porth:528:3: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_44006: ;;// std/std.porth:528:15: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_44007: ;;// std/std.porth:528:25: OP_INLINED 27
addr_44008: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_44009: ;;// porth.porth:5662:9: OP_INLINED 18105
addr_44010: ;;// porth.porth:2400:31: OP_PUSH_GLOBAL_MEM 15315096
    lea rax, [mem+15315096]
    push rax
addr_44011: ;;// porth.porth:2400:41: OP_PUSH_GLOBAL_MEM 15347864
    lea rax, [mem+15347864]
    push rax
addr_44012: ;;// porth.porth:2400:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44013: ;;// porth.porth:2400:54: OP_INLINED 36
addr_44014: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_44015: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_44016: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_44017: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_44018: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_44019: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_44020: ;;// porth.porth:5663:11: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_44021: ;;// porth.porth:5663:26: OP_INLINED 753
addr_44022: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_44023: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_44024: ;;// std/std.porth:65:7: OP_INLINED 704
addr_44025: ;;// std/std.porth:58:38: OP_INLINED 684
addr_44026: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_44027: ;;// std/std.porth:56:57: OP_INLINED 36
addr_44028: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_44029: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_44030: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_44031: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_44032: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_44033: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_44034: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44035: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_44036: ;;// std/std.porth:66:7: OP_INLINED 716
addr_44037: ;;// std/std.porth:59:37: OP_INLINED 694
addr_44038: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_44039: ;;// std/std.porth:57:55: OP_INLINED 36
addr_44040: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_44041: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_44042: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_44043: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_44044: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_44045: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_44046: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44047: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_44048: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_44049: ;;// porth.porth:5663:31: OP_INLINED 18180
addr_44050: ;;// porth.porth:2417:42: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_44051: ;;// porth.porth:2417:47: OP_CALL 18129
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18129
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_44052: ;;// porth.porth:2417:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_44053: ;;// porth.porth:5663:42: OP_INTRINSIC drop
    pop rax
addr_44054: ;;// porth.porth:5664:11: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_44055: ;;// porth.porth:5664:31: OP_CALL 18129
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18129
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_44056: ;;// porth.porth:5664:42: OP_INTRINSIC drop
    pop rax
addr_44057: ;;// porth.porth:5665:11: OP_INLINED 2501
addr_44058: ;;// std/std.porth:528:3: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_44059: ;;// std/std.porth:528:15: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_44060: ;;// std/std.porth:528:25: OP_INLINED 27
addr_44061: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_44062: ;;// porth.porth:5666:9: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_44063: ;;// porth.porth:5666:23: OP_INLINED 2501
addr_44064: ;;// std/std.porth:528:3: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_44065: ;;// std/std.porth:528:15: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_44066: ;;// std/std.porth:528:25: OP_INLINED 27
addr_44067: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_44068: ;;// porth.porth:5667:9: OP_PUSH_GLOBAL_MEM 15310976
    lea rax, [mem+15310976]
    push rax
addr_44069: ;;// porth.porth:5667:16: OP_INLINED 12
addr_44070: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44071: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_44072: ;;// porth.porth:5667:22: OP_INLINED 131
addr_44073: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_44074: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_44075: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_44076: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_44077: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_44078: ;;// porth.porth:5667:27: OP_CALL 4107
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_4107
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_44079: ;;// porth.porth:5668:7: OP_INLINED 18117
addr_44080: ;;// porth.porth:2401:31: OP_PUSH_GLOBAL_MEM 15315096
    lea rax, [mem+15315096]
    push rax
addr_44081: ;;// porth.porth:2401:41: OP_INLINED 78
addr_44082: ;;// std/core.porth:68:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_44083: ;;// std/core.porth:68:8: OP_INTRINSIC cast(int)
addr_44084: ;;// std/core.porth:69:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_44085: ;;// std/core.porth:69:8: OP_INTRINSIC cast(int)
addr_44086: ;;// std/core.porth:70:3: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_44087: ;;// porth.porth:2401:50: OP_PUSH_GLOBAL_MEM 15347864
    lea rax, [mem+15347864]
    push rax
addr_44088: ;;// porth.porth:2401:59: OP_INLINED 30
addr_44089: ;;// std/core.porth:28:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_44090: ;;// porth.porth:5669:5: OP_PUSH_STR 1075
    mov rax, 14
    push rax
    lea rax, [str_1075]
    push rax
addr_44091: ;;// porth.porth:5669:22: OP_PUSH_GLOBAL_MEM 15310976
    lea rax, [mem+15310976]
    push rax
addr_44092: ;;// porth.porth:5669:29: OP_INLINED 12
addr_44093: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44094: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_44095: ;;// porth.porth:5669:35: OP_CALL 3467
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_3467
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_44096: ;;// porth.porth:5671:5: OP_PUSH_LOCAL_MEM 48
    mov rax, [ret_stack_rsp]
    add rax, 48
    push rax
addr_44097: ;;// porth.porth:5671:9: OP_INLINED 12
addr_44098: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44099: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_44100: ;;// porth.porth:5671:15: OP_IF 121
    pop rax
    test rax, rax
    jz addr_44221
addr_44101: ;;// porth.porth:5672:7: OP_INLINED 2414
addr_44102: ;;// std/std.porth:506:31: OP_PUSH_GLOBAL_MEM 8
    lea rax, [mem+8]
    push rax
addr_44103: ;;// std/std.porth:506:41: OP_PUSH_GLOBAL_MEM 8388616
    lea rax, [mem+8388616]
    push rax
addr_44104: ;;// std/std.porth:506:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44105: ;;// std/std.porth:506:54: OP_INLINED 36
addr_44106: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_44107: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_44108: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_44109: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_44110: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_44111: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_44112: ;;// porth.porth:5673:7: OP_INLINED 18105
addr_44113: ;;// porth.porth:2400:31: OP_PUSH_GLOBAL_MEM 15315096
    lea rax, [mem+15315096]
    push rax
addr_44114: ;;// porth.porth:2400:41: OP_PUSH_GLOBAL_MEM 15347864
    lea rax, [mem+15347864]
    push rax
addr_44115: ;;// porth.porth:2400:50: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44116: ;;// porth.porth:2400:54: OP_INLINED 36
addr_44117: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_44118: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_44119: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_44120: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_44121: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_44122: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_44123: ;;// porth.porth:5674:9: OP_PUSH_LOCAL_MEM 32
    mov rax, [ret_stack_rsp]
    add rax, 32
    push rax
addr_44124: ;;// porth.porth:5674:24: OP_INLINED 753
addr_44125: ;;// std/std.porth:64:3: OP_BIND_LET 1
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov [ret_stack_rsp], rax
    pop rbx
    mov [rax+0], rbx
addr_44126: ;;// std/std.porth:65:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_44127: ;;// std/std.porth:65:7: OP_INLINED 704
addr_44128: ;;// std/std.porth:58:38: OP_INLINED 684
addr_44129: ;;// std/std.porth:56:37: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_44130: ;;// std/std.porth:56:57: OP_INLINED 36
addr_44131: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_44132: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_44133: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_44134: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_44135: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_44136: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_44137: ;;// std/std.porth:58:48: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44138: ;;// std/std.porth:66:5: OP_PUSH_BIND 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    mov rbx, [rax]
    push rbx
addr_44139: ;;// std/std.porth:66:7: OP_INLINED 716
addr_44140: ;;// std/std.porth:59:37: OP_INLINED 694
addr_44141: ;;// std/std.porth:57:36: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_44142: ;;// std/std.porth:57:55: OP_INLINED 36
addr_44143: ;;// std/core.porth:32:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_44144: ;;// std/core.porth:32:8: OP_INTRINSIC cast(int)
addr_44145: ;;// std/core.porth:33:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_44146: ;;// std/core.porth:33:8: OP_INTRINSIC cast(int)
addr_44147: ;;// std/core.porth:34:3: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_44148: ;;// std/core.porth:35:3: OP_INTRINSIC cast(ptr)
addr_44149: ;;// std/std.porth:59:47: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44150: ;;// std/std.porth:59:51: OP_INTRINSIC cast(ptr)
addr_44151: ;;// std/std.porth:67:3: OP_UNBIND 1
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov [ret_stack_rsp], rax
addr_44152: ;;// porth.porth:5674:29: OP_INLINED 18180
addr_44153: ;;// porth.porth:2417:42: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_44154: ;;// porth.porth:2417:47: OP_CALL 18129
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18129
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_44155: ;;// porth.porth:2417:57: OP_CALL 2123
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2123
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_44156: ;;// porth.porth:5674:40: OP_INTRINSIC drop
    pop rax
addr_44157: ;;// porth.porth:5675:9: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_44158: ;;// porth.porth:5675:11: OP_CALL 18129
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_18129
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_44159: ;;// porth.porth:5675:21: OP_INTRINSIC drop
    pop rax
addr_44160: ;;// porth.porth:5676:9: OP_INLINED 2501
addr_44161: ;;// std/std.porth:528:3: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_44162: ;;// std/std.porth:528:15: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_44163: ;;// std/std.porth:528:25: OP_INLINED 27
addr_44164: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_44165: ;;// porth.porth:5677:7: OP_WHILE 39
addr_44166: ;;// porth.porth:5677:13: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_44167: ;;// porth.porth:5677:18: OP_INLINED 4
addr_44168: ;;// std/core.porth:21:33: OP_INLINED 0
addr_44169: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44170: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_44171: ;;// std/core.porth:21:38: OP_INLINED 0
addr_44172: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44173: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_44174: ;;// porth.porth:5677:24: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_44175: ;;// porth.porth:5677:29: OP_INLINED 52
addr_44176: ;;// std/core.porth:46:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_44177: ;;// std/core.porth:46:8: OP_INTRINSIC cast(int)
addr_44178: ;;// std/core.porth:47:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_44179: ;;// std/core.porth:47:8: OP_INTRINSIC cast(int)
addr_44180: ;;// std/core.porth:48:3: OP_INTRINSIC !=
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_44181: ;;// porth.porth:5677:35: OP_DO 23
    pop rax
    test rax, rax
    jz addr_44204
addr_44182: ;;// porth.porth:5678:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_44183: ;;// porth.porth:5678:14: OP_INLINED 4
addr_44184: ;;// std/core.porth:21:33: OP_INLINED 0
addr_44185: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44186: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_44187: ;;// std/core.porth:21:38: OP_INLINED 0
addr_44188: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44189: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_44190: ;;// porth.porth:5678:20: OP_INLINED 2501
addr_44191: ;;// std/std.porth:528:3: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_44192: ;;// std/std.porth:528:15: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_44193: ;;// std/std.porth:528:25: OP_INLINED 27
addr_44194: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_44195: ;;// porth.porth:5679:9: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_44196: ;;// porth.porth:5679:14: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_44197: ;;// porth.porth:5679:26: OP_INLINED 154
addr_44198: ;;// std/core.porth:106:33: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_44199: ;;// std/core.porth:106:38: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44200: ;;// std/core.porth:106:42: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_44201: ;;// std/core.porth:106:44: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_44202: ;;// std/core.porth:106:49: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_44203: ;;// porth.porth:5680:7: OP_END_WHILE 38
    jmp addr_44165
addr_44204: ;;// porth.porth:5681:7: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_44205: ;;// porth.porth:5681:19: OP_INLINED 2501
addr_44206: ;;// std/std.porth:528:3: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_44207: ;;// std/std.porth:528:15: OP_CALL 2438
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_2438
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_44208: ;;// std/std.porth:528:25: OP_INLINED 27
addr_44209: ;;// std/core.porth:27:29: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_44210: ;;// porth.porth:5682:7: OP_PUSH_GLOBAL_MEM 15310976
    lea rax, [mem+15310976]
    push rax
addr_44211: ;;// porth.porth:5682:14: OP_INLINED 12
addr_44212: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44213: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_44214: ;;// porth.porth:5682:20: OP_INLINED 131
addr_44215: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_44216: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_44217: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_44218: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_44219: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_44220: ;;// porth.porth:5682:25: OP_CALL 4107
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_4107
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_44221: ;;// porth.porth:5683:5: OP_END_IF 0
addr_44222: ;;// porth.porth:5684:3: OP_ELSE 23
    jmp addr_44245
addr_44223: ;;// porth.porth:5684:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_44224: ;;// porth.porth:5684:13: OP_INLINED 4
addr_44225: ;;// std/core.porth:21:33: OP_INLINED 0
addr_44226: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44227: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_44228: ;;// std/core.porth:21:38: OP_INLINED 0
addr_44229: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44230: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_44231: ;;// porth.porth:5684:19: OP_PUSH_CSTR 1076
    lea rax, [str_1076]
    push rax
addr_44232: ;;// porth.porth:5684:27: OP_CALL 589
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_589
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_44233: ;;// porth.porth:5684:34: OP_IFSTAR 13
    pop rax
    test rax, rax
    jz addr_44246
addr_44234: ;;// porth.porth:5685:5: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_44235: ;;// porth.porth:5685:13: OP_INLINED 0
addr_44236: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44237: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_44238: ;;// porth.porth:5685:18: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_44239: ;;// porth.porth:5685:25: OP_CALL 42482
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_42482
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_44240: ;;// porth.porth:5686:5: OP_PUSH_INT 0
    mov rax, 0
    push rax
addr_44241: ;;// porth.porth:5686:7: OP_INLINED 418
addr_44242: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_44243: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_44244: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_44245: ;;// porth.porth:5687:3: OP_ELSE 79
    jmp addr_44324
addr_44246: ;;// porth.porth:5687:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_44247: ;;// porth.porth:5687:13: OP_INLINED 4
addr_44248: ;;// std/core.porth:21:33: OP_INLINED 0
addr_44249: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44250: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_44251: ;;// std/core.porth:21:38: OP_INLINED 0
addr_44252: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44253: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_44254: ;;// porth.porth:5687:19: OP_PUSH_CSTR 1077
    lea rax, [str_1077]
    push rax
addr_44255: ;;// porth.porth:5687:27: OP_CALL 589
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_589
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_44256: ;;// porth.porth:5687:34: OP_IFSTAR 69
    pop rax
    test rax, rax
    jz addr_44325
addr_44257: ;;// porth.porth:5688:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_44258: ;;// porth.porth:5688:10: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_44259: ;;// porth.porth:5688:22: OP_INLINED 154
addr_44260: ;;// std/core.porth:106:33: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_44261: ;;// std/core.porth:106:38: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44262: ;;// std/core.porth:106:42: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_44263: ;;// std/core.porth:106:44: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_44264: ;;// std/core.porth:106:49: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_44265: ;;// porth.porth:5689:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_44266: ;;// porth.porth:5689:10: OP_INLINED 4
addr_44267: ;;// std/core.porth:21:33: OP_INLINED 0
addr_44268: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44269: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_44270: ;;// std/core.porth:21:38: OP_INLINED 0
addr_44271: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44272: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_44273: ;;// porth.porth:5689:16: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_44274: ;;// porth.porth:5689:21: OP_INLINED 59
addr_44275: ;;// std/core.porth:52:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_44276: ;;// std/core.porth:52:8: OP_INTRINSIC cast(int)
addr_44277: ;;// std/core.porth:53:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_44278: ;;// std/core.porth:53:8: OP_INTRINSIC cast(int)
addr_44279: ;;// std/core.porth:54:3: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_44280: ;;// porth.porth:5689:26: OP_IF 20
    pop rax
    test rax, rax
    jz addr_44300
addr_44281: ;;// porth.porth:5690:7: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_44282: ;;// porth.porth:5690:15: OP_INLINED 0
addr_44283: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44284: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_44285: ;;// porth.porth:5690:20: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_44286: ;;// porth.porth:5690:27: OP_CALL 42482
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_42482
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_44287: ;;// porth.porth:5691:7: OP_PUSH_STR 1078
    mov rax, 59
    push rax
    lea rax, [str_1078]
    push rax
addr_44288: ;;// porth.porth:5691:70: OP_INLINED 676
addr_44289: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_44290: ;;// std/std.porth:50:37: OP_INLINED 662
addr_44291: ;;// std/std.porth:48:34: OP_INLINED 394
addr_44292: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_44293: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_44294: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_44295: ;;// porth.porth:5692:7: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_44296: ;;// porth.porth:5692:9: OP_INLINED 418
addr_44297: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_44298: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_44299: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_44300: ;;// porth.porth:5693:5: OP_END_IF 0
addr_44301: ;;// porth.porth:5695:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_44302: ;;// porth.porth:5695:10: OP_INLINED 4
addr_44303: ;;// std/core.porth:21:33: OP_INLINED 0
addr_44304: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44305: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_44306: ;;// std/core.porth:21:38: OP_INLINED 0
addr_44307: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44308: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_44309: ;;// porth.porth:5695:16: OP_CALL 34210
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_34210
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_44310: ;;// porth.porth:5696:5: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_44311: ;;// porth.porth:5696:12: OP_INLINED 12
addr_44312: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44313: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_44314: ;;// porth.porth:5696:18: OP_INLINED 131
addr_44315: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_44316: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_44317: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_44318: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_44319: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_44320: ;;// porth.porth:5696:23: OP_IF 2
    pop rax
    test rax, rax
    jz addr_44322
addr_44321: ;;// porth.porth:5696:26: OP_CALL 41782
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_41782
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_44322: ;;// porth.porth:5696:45: OP_END_IF 0
addr_44323: ;;// porth.porth:5698:5: OP_CALL 13032
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_13032
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_44324: ;;// porth.porth:5699:3: OP_ELSE 65
    jmp addr_44389
addr_44325: ;;// porth.porth:5699:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_44326: ;;// porth.porth:5699:13: OP_INLINED 4
addr_44327: ;;// std/core.porth:21:33: OP_INLINED 0
addr_44328: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44329: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_44330: ;;// std/core.porth:21:38: OP_INLINED 0
addr_44331: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44332: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_44333: ;;// porth.porth:5699:19: OP_PUSH_CSTR 1079
    lea rax, [str_1079]
    push rax
addr_44334: ;;// porth.porth:5699:26: OP_CALL 589
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_589
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_44335: ;;// porth.porth:5699:33: OP_IFSTAR 55
    pop rax
    test rax, rax
    jz addr_44390
addr_44336: ;;// porth.porth:5700:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_44337: ;;// porth.porth:5700:10: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_44338: ;;// porth.porth:5700:22: OP_INLINED 154
addr_44339: ;;// std/core.porth:106:33: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_44340: ;;// std/core.porth:106:38: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44341: ;;// std/core.porth:106:42: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_44342: ;;// std/core.porth:106:44: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_44343: ;;// std/core.porth:106:49: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_44344: ;;// porth.porth:5701:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_44345: ;;// porth.porth:5701:10: OP_INLINED 4
addr_44346: ;;// std/core.porth:21:33: OP_INLINED 0
addr_44347: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44348: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_44349: ;;// std/core.porth:21:38: OP_INLINED 0
addr_44350: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44351: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_44352: ;;// porth.porth:5701:16: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_44353: ;;// porth.porth:5701:21: OP_INLINED 59
addr_44354: ;;// std/core.porth:52:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_44355: ;;// std/core.porth:52:8: OP_INTRINSIC cast(int)
addr_44356: ;;// std/core.porth:53:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_44357: ;;// std/core.porth:53:8: OP_INTRINSIC cast(int)
addr_44358: ;;// std/core.porth:54:3: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_44359: ;;// porth.porth:5701:26: OP_IF 20
    pop rax
    test rax, rax
    jz addr_44379
addr_44360: ;;// porth.porth:5702:7: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_44361: ;;// porth.porth:5702:15: OP_INLINED 0
addr_44362: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44363: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_44364: ;;// porth.porth:5702:20: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_44365: ;;// porth.porth:5702:27: OP_CALL 42482
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_42482
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_44366: ;;// porth.porth:5703:7: OP_PUSH_STR 1080
    mov rax, 58
    push rax
    lea rax, [str_1080]
    push rax
addr_44367: ;;// porth.porth:5703:69: OP_INLINED 676
addr_44368: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_44369: ;;// std/std.porth:50:37: OP_INLINED 662
addr_44370: ;;// std/std.porth:48:34: OP_INLINED 394
addr_44371: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_44372: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_44373: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_44374: ;;// porth.porth:5704:7: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_44375: ;;// porth.porth:5704:9: OP_INLINED 418
addr_44376: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_44377: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_44378: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_44379: ;;// porth.porth:5705:5: OP_END_IF 0
addr_44380: ;;// porth.porth:5707:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_44381: ;;// porth.porth:5707:10: OP_INLINED 4
addr_44382: ;;// std/core.porth:21:33: OP_INLINED 0
addr_44383: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44384: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_44385: ;;// std/core.porth:21:38: OP_INLINED 0
addr_44386: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44387: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_44388: ;;// porth.porth:5707:16: OP_CALL 9581
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_9581
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_44389: ;;// porth.porth:5708:3: OP_ELSE 79
    jmp addr_44468
addr_44390: ;;// porth.porth:5708:8: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_44391: ;;// porth.porth:5708:13: OP_INLINED 4
addr_44392: ;;// std/core.porth:21:33: OP_INLINED 0
addr_44393: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44394: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_44395: ;;// std/core.porth:21:38: OP_INLINED 0
addr_44396: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44397: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_44398: ;;// porth.porth:5708:19: OP_PUSH_CSTR 1081
    lea rax, [str_1081]
    push rax
addr_44399: ;;// porth.porth:5708:30: OP_CALL 589
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_589
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_44400: ;;// porth.porth:5708:37: OP_IFSTAR 69
    pop rax
    test rax, rax
    jz addr_44469
addr_44401: ;;// porth.porth:5709:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_44402: ;;// porth.porth:5709:10: OP_PUSH_INT 8
    mov rax, 8
    push rax
addr_44403: ;;// porth.porth:5709:22: OP_INLINED 154
addr_44404: ;;// std/core.porth:106:33: OP_INTRINSIC over
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_44405: ;;// std/core.porth:106:38: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44406: ;;// std/core.porth:106:42: OP_INTRINSIC +
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_44407: ;;// std/core.porth:106:44: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_44408: ;;// std/core.porth:106:49: OP_INTRINSIC !64
    pop rax
    pop rbx
    mov [rax], rbx
addr_44409: ;;// porth.porth:5710:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_44410: ;;// porth.porth:5710:10: OP_INLINED 4
addr_44411: ;;// std/core.porth:21:33: OP_INLINED 0
addr_44412: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44413: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_44414: ;;// std/core.porth:21:38: OP_INLINED 0
addr_44415: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44416: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_44417: ;;// porth.porth:5710:16: OP_PUSH_PTR 0
    mov rax, 0
    push rax
addr_44418: ;;// porth.porth:5710:21: OP_INLINED 59
addr_44419: ;;// std/core.porth:52:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_44420: ;;// std/core.porth:52:8: OP_INTRINSIC cast(int)
addr_44421: ;;// std/core.porth:53:3: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_44422: ;;// std/core.porth:53:8: OP_INTRINSIC cast(int)
addr_44423: ;;// std/core.porth:54:3: OP_INTRINSIC =
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_44424: ;;// porth.porth:5710:26: OP_IF 20
    pop rax
    test rax, rax
    jz addr_44444
addr_44425: ;;// porth.porth:5711:7: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_44426: ;;// porth.porth:5711:15: OP_INLINED 0
addr_44427: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44428: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_44429: ;;// porth.porth:5711:20: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_44430: ;;// porth.porth:5711:27: OP_CALL 42482
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_42482
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_44431: ;;// porth.porth:5712:7: OP_PUSH_STR 1082
    mov rax, 59
    push rax
    lea rax, [str_1082]
    push rax
addr_44432: ;;// porth.porth:5712:70: OP_INLINED 676
addr_44433: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_44434: ;;// std/std.porth:50:37: OP_INLINED 662
addr_44435: ;;// std/std.porth:48:34: OP_INLINED 394
addr_44436: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_44437: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_44438: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_44439: ;;// porth.porth:5713:7: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_44440: ;;// porth.porth:5713:9: OP_INLINED 418
addr_44441: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_44442: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_44443: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_44444: ;;// porth.porth:5714:5: OP_END_IF 0
addr_44445: ;;// porth.porth:5716:5: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_44446: ;;// porth.porth:5716:10: OP_INLINED 4
addr_44447: ;;// std/core.porth:21:33: OP_INLINED 0
addr_44448: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44449: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_44450: ;;// std/core.porth:21:38: OP_INLINED 0
addr_44451: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44452: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_44453: ;;// porth.porth:5716:16: OP_CALL 34210
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_34210
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_44454: ;;// porth.porth:5717:5: OP_PUSH_LOCAL_MEM 16
    mov rax, [ret_stack_rsp]
    add rax, 16
    push rax
addr_44455: ;;// porth.porth:5717:12: OP_INLINED 12
addr_44456: ;;// std/core.porth:22:34: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44457: ;;// std/core.porth:22:38: OP_INTRINSIC cast(bool)
addr_44458: ;;// porth.porth:5717:18: OP_INLINED 131
addr_44459: ;;// std/core.porth:89:3: OP_INTRINSIC cast(int)
addr_44460: ;;// std/core.porth:89:13: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_44461: ;;// std/core.porth:89:15: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_44462: ;;// std/core.porth:89:20: OP_INTRINSIC -
    pop rax
    pop rbx
    sub rbx, rax
    push rbx
addr_44463: ;;// std/core.porth:89:22: OP_INTRINSIC cast(bool)
addr_44464: ;;// porth.porth:5717:23: OP_IF 2
    pop rax
    test rax, rax
    jz addr_44466
addr_44465: ;;// porth.porth:5717:26: OP_CALL 41782
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_41782
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_44466: ;;// porth.porth:5717:45: OP_END_IF 0
addr_44467: ;;// porth.porth:5719:5: OP_CALL 42166
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_42166
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_44468: ;;// porth.porth:5720:3: OP_ELSE 47
    jmp addr_44515
addr_44469: ;;// porth.porth:5721:5: OP_PUSH_LOCAL_MEM 8
    mov rax, [ret_stack_rsp]
    add rax, 8
    push rax
addr_44470: ;;// porth.porth:5721:13: OP_INLINED 0
addr_44471: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44472: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_44473: ;;// porth.porth:5721:18: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_44474: ;;// porth.porth:5721:25: OP_CALL 42482
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_42482
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_44475: ;;// porth.porth:5722:5: OP_PUSH_STR 1083
    mov rax, 27
    push rax
    lea rax, [str_1083]
    push rax
addr_44476: ;;// porth.porth:5722:35: OP_INLINED 676
addr_44477: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_44478: ;;// std/std.porth:50:37: OP_INLINED 662
addr_44479: ;;// std/std.porth:48:34: OP_INLINED 394
addr_44480: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_44481: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_44482: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_44483: ;;// porth.porth:5722:41: OP_PUSH_LOCAL_MEM 0
    mov rax, [ret_stack_rsp]
    add rax, 0
    push rax
addr_44484: ;;// porth.porth:5722:46: OP_INLINED 4
addr_44485: ;;// std/core.porth:21:33: OP_INLINED 0
addr_44486: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44487: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_44488: ;;// std/core.porth:21:38: OP_INLINED 0
addr_44489: ;;// std/core.porth:20:32: OP_INTRINSIC @64
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_44490: ;;// std/core.porth:20:36: OP_INTRINSIC cast(ptr)
addr_44491: ;;// porth.porth:5722:52: OP_INLINED 657
addr_44492: ;;// std/std.porth:45:43: OP_INTRINSIC dup
    pop rax
    push rax
    push rax
addr_44493: ;;// std/std.porth:45:47: OP_CALL 564
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    call addr_564
    mov [ret_stack_rsp], rsp
    mov rsp, rax
addr_44494: ;;// std/std.porth:45:55: OP_INTRINSIC swap
    pop rax
    pop rbx
    push rax
    push rbx
addr_44495: ;;// porth.porth:5722:64: OP_INLINED 676
addr_44496: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_44497: ;;// std/std.porth:50:37: OP_INLINED 662
addr_44498: ;;// std/std.porth:48:34: OP_INLINED 394
addr_44499: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_44500: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_44501: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_44502: ;;// porth.porth:5722:70: OP_PUSH_STR 1084
    mov rax, 2
    push rax
    lea rax, [str_1084]
    push rax
addr_44503: ;;// porth.porth:5722:76: OP_INLINED 676
addr_44504: ;;// std/std.porth:50:30: OP_PUSH_INT 2
    mov rax, 2
    push rax
addr_44505: ;;// std/std.porth:50:37: OP_INLINED 662
addr_44506: ;;// std/std.porth:48:34: OP_INLINED 394
addr_44507: ;;// std/linux.porth:414:41: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_44508: ;;// std/linux.porth:414:51: OP_INTRINSIC syscall3
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_44509: ;;// std/std.porth:48:40: OP_INTRINSIC drop
    pop rax
addr_44510: ;;// porth.porth:5723:5: OP_PUSH_INT 1
    mov rax, 1
    push rax
addr_44511: ;;// porth.porth:5723:7: OP_INLINED 418
addr_44512: ;;// std/linux.porth:420:25: OP_PUSH_INT 60
    mov rax, 60
    push rax
addr_44513: ;;// std/linux.porth:420:34: OP_INTRINSIC syscall1
    pop rax
    pop rdi
    syscall
    push rax
addr_44514: ;;// std/linux.porth:420:43: OP_INTRINSIC drop
    pop rax
addr_44515: ;;// porth.porth:5724:3: OP_END_IF 0
addr_44516: ;;// porth.porth:5725:1: OP_RET 56
    mov rax, rsp
    mov rsp, [ret_stack_rsp]
    add rsp, 56
    ret
addr_44517:
public main
main:
    lea rax, [rsi-8]
    mov [args_ptr], rax
    mov rax, ret_stack_end
    mov [ret_stack_rsp], rax
    call addr_42611
    mov rax, 60
    mov rdi, 0
    syscall
section '.data' writeable
str_0: db 48
str_1: db 45
str_2: db 115,116,100,47,115,116,100,46,112,111,114,116,104,58,53,49,55,58,53
str_3: db 58,32,84,101,109,112,111,114,97,114,121,32,109,101,109,111,114,121,32,98,117,102,102,101,114,32,99,97,112,97,99,105,116,121,32,101,120,99,101,101,100,101,100,46,32,78,101,101,100,32,116,111,32,99,97,108,108,32,116,109,112,45,99,108,101,97,110,32,109,111,114,101,32,111,102,116,101,110,10
str_4: db 80,65,84,72
str_5: db 67,111,117,108,100,32,110,111,116,32,102,105,110,100,32,36,80,65,84,72,10
str_6: db 47
str_7: db 115,116,100,47,115,116,100,46,112,111,114,116,104,58,53,55,50,58,51
str_8: db 58,32,69,82,82,79,82,58,32,99,111,117,108,100,32,110,111,116,32,102,105,110,100,32,101,120,101,99,117,116,97,98,108,101,32,96
str_9: db 96,10
str_10: db 69,82,82,79,82,58,32,99,111,117,108,100,32,110,111,116,32,111,112,101,110,32,102,105,108,101,32
str_11: db 10
str_12: db 69,82,82,79,82,58,32,99,111,117,108,100,32,110,111,116,32,100,101,116,101,114,109,105,110,101,32,116,104,101,32,115,105,122,101,32,111,102,32,102,105,108,101,32
str_13: db 10
str_14: db 69,82,82,79,82,58,32,99,111,117,108,100,32,110,111,116,32,109,101,109,111,114,121,32,109,97,112,32,102,105,108,101,32
str_15: db 10
str_16: db 115,116,100,47,115,116,100,46,112,111,114,116,104,58,55,48,50,58,53
str_17: db 58,32,69,82,82,79,82,58,32,63,102,105,108,101,45,101,120,105,115,116,32,102,97,105,108,101,100,10
str_18: db 64,37,43,61,58,44,46,47,45,95
str_19: db 39
str_20: db 39,34,39,34,39
str_21: db 39
str_22: db 69,82,82,79,82,58,32,116,105,109,101,105,116,47,115,116,97,114,116,58,32,99,111,117,108,100,32,110,111,116,32,103,101,116,32,99,117,114,114,101,110,116,32,116,105,109,101,32,102,111,114,32,115,111,109,101,32,114,101,97,115,111,110,10
str_23: db 69,82,82,79,82,58,32,116,105,109,101,105,116,47,101,110,100,58,32,99,111,117,108,100,32,110,111,116,32,103,101,116,32,99,117,114,114,101,110,116,32,116,105,109,101,32,102,111,114,32,115,111,109,101,32,114,101,97,115,111,110,10
str_24: db 32,116,111,111,107,32
str_25: db 46
str_26: db 32,115,101,99,115,10
str_27: db 46
str_28: db 47
str_29: db 91,67,77,68,93
str_30: db 32
str_31: db 10
str_32: db 47,100,101,118,47,110,117,108,108,0
str_33: db 115,116,100,47,115,116,100,46,112,111,114,116,104,58,57,52,51,58,49,51
str_34: db 58,32,69,82,82,79,82,58,32,99,111,117,108,100,32,110,111,116,32,111,112,101,110,32,47,100,101,118,47,110,117,108,108,32,116,111,32,115,105,108,101,110,99,101,32,116,104,101,32,99,111,109,109,97,110,100,32,105,110,32,99,109,100,45,101,99,104,111,101,100,10
str_35: db 115,116,100,47,115,116,100,46,112,111,114,116,104,58,57,52,56,58,49,51
str_36: db 58,32,69,82,82,79,82,58,32,99,111,117,108,100,32,110,111,116,32,114,101,111,112,101,110,32,47,100,101,118,47,110,117,108,108,32,97,115,32,115,116,100,111,117,116,32,102,111,114,32,99,104,105,108,100,32,112,114,111,99,101,115,115,32,105,110,32,99,109,100,45,101,99,104,111,101,100,10
str_37: db 91,69,82,82,79,82,93,32,99,111,117,108,100,32,110,111,116,32,119,97,105,116,32,117,110,116,105,108,32,116,104,101,32,99,104,105,108,100,32,112,114,111,99,101,115,115,32,104,97,115,32,102,105,110,105,115,104,101,100,32,101,120,101,99,117,116,105,110,103,10
str_38: db 69,82,82,79,82,58,32,116,104,101,32,99,104,105,108,100,32,112,114,111,99,101,115,115,32,119,97,115,32,116,101,114,109,105,110,97,116,101,100,32,98,121,32,97,32,115,105,103,110,97,108,32
str_39: db 10
str_40: db 115,116,100,47,115,116,100,46,112,111,114,116,104,58,57,56,57,58,49,53
str_41: db 58,32,117,110,114,101,97,99,104,97,98,108,101,10
str_42: db 91,69,82,82,79,82,93,32,99,111,117,108,100,32,110,111,116,32,102,111,114,107,32,97,32,99,104,105,108,100,10
str_43: db 46,46
str_44: db 46,46
str_45: db 46
str_46:
str_47: db 47
str_48: db 47,47
str_49: db 47
str_50: db 46
str_51: db 69,82,82,79,82,58,32,103,101,116,99,119,100,32,102,97,105,108,101,100,10
str_52: db 47
str_53: db 58
str_54: db 58
str_55: db 58
str_56: db 58
str_57: db 105,102
str_58: db 105,102,42
str_59: db 101,108,115,101
str_60: db 101,110,100
str_61: db 119,104,105,108,101
str_62: db 100,111
str_63: db 105,110,99,108,117,100,101
str_64: db 109,101,109,111,114,121
str_65: db 112,114,111,99
str_66: db 99,111,110,115,116
str_67: db 111,102,102,115,101,116
str_68: db 114,101,115,101,116
str_69: db 97,115,115,101,114,116
str_70: db 105,110
str_71: db 45,45
str_72: db 105,110,108,105,110,101
str_73: db 104,101,114,101
str_74: db 97,100,100,114,45,111,102
str_75: db 99,97,108,108,45,108,105,107,101
str_76: db 108,101,116
str_77: db 112,101,101,107
str_78: db 108,105,110,107,102,108,97,103
str_79: db 101,120,116,101,114,110
str_80: db 105,102
str_81: db 105,102,42
str_82: db 101,108,115,101
str_83: db 101,110,100
str_84: db 119,104,105,108,101
str_85: db 100,111
str_86: db 105,110,99,108,117,100,101
str_87: db 109,101,109,111,114,121
str_88: db 112,114,111,99
str_89: db 99,111,110,115,116
str_90: db 111,102,102,115,101,116
str_91: db 114,101,115,101,116
str_92: db 97,115,115,101,114,116
str_93: db 105,110
str_94: db 45,45
str_95: db 105,110,108,105,110,101
str_96: db 104,101,114,101
str_97: db 97,100,100,114,45,111,102
str_98: db 99,97,108,108,45,108,105,107,101
str_99: db 108,101,116
str_100: db 112,101,101,107
str_101: db 108,105,110,107,102,108,97,103
str_102: db 101,120,116,101,114,110
str_103: db 112,111,114,116,104,46,112,111,114,116,104,58,49,52,49,58,53
str_104: db 58,32,117,110,114,101,97,99,104,97,98,108,101,10
str_105: db 112,111,114,116,104,46,112,111,114,116,104,58,49,54,57,58,53
str_106: db 58,32,65,115,115,101,114,116,105,111,110,32,70,97,105,108,101,100,58,32,115,116,114,105,110,103,32,108,105,116,101,114,97,108,32,98,117,102,102,101,114,32,111,118,101,114,102,108,111,119,10
str_107: db 58
str_108: db 58
str_109: db 58,32,69,82,82,79,82,58,32,117,110,102,105,110,105,115,104,101,100,32,101,115,99,97,112,101,32,115,101,113,117,101,110,99,101,10
str_110: db 58,32,69,82,82,79,82,58,32,117,110,107,110,111,119,110,32,101,115,99,97,112,101,32,99,104,97,114,97,99,116,101,114,32,96
str_111: db 96,10
str_112: db 58,32,69,82,82,79,82,58,32,117,110,99,108,111,115,101,100,32,115,116,114,105,110,103,32,108,105,116,101,114,97,108,10
str_113: db 58,32,69,82,82,79,82,58,32,117,110,99,108,111,115,101,100,32,99,104,97,114,97,99,116,101,114,32,108,105,116,101,114,97,108,10
str_114: db 47,47
str_115: db 58,32,69,82,82,79,82,58,32,111,110,108,121,32,97,32,115,105,110,103,108,101,32,98,121,116,101,32,105,115,32,97,108,108,111,119,101,100,32,105,110,115,105,100,101,32,111,102,32,97,32,99,104,97,114,97,99,116,101,114,32,108,105,116,101,114,97,108,10
str_116: db 58
str_117: db 58
str_118: db 58,32
str_119: db 91,73,78,84,69,71,69,82,93,32
str_120: db 10
str_121: db 91,87,79,82,68,93,32
str_122: db 10
str_123: db 91,83,84,82,93,32,34
str_124: db 34,10
str_125: db 91,67,83,84,82,93,32,34
str_126: db 34,10
str_127: db 91,67,72,65,82,93,32
str_128: db 10
str_129: db 91,75,69,89,87,79,82,68,93,32
str_130: db 10
str_131: db 112,111,114,116,104,46,112,111,114,116,104,58,53,48,50,58,55
str_132: db 58,32,85,110,114,101,97,99,104,97,98,108,101,46,32,85,110,107,110,111,119,110,32,116,111,107,101,110,32,116,121,112,101,46,10
str_133: db 97,110,32,105,110,116,101,103,101,114
str_134: db 97,32,119,111,114,100
str_135: db 97,32,115,116,114,105,110,103
str_136: db 97,32,67,45,115,116,121,108,101,32,115,116,114,105,110,103
str_137: db 97,32,99,104,97,114,97,99,116,101,114
str_138: db 97,32,107,101,121,119,111,114,100
str_139: db 112,111,114,116,104,46,112,111,114,116,104,58,53,53,53,58,55
str_140: db 58,32,117,110,114,101,97,99,104,97,98,108,101,10
str_141: db 105,110,116,101,103,101,114,115
str_142: db 119,111,114,100,115
str_143: db 115,116,114,105,110,103,115
str_144: db 67,45,115,116,121,108,101,32,115,116,114,105,110,103,115
str_145: db 99,104,97,114,97,99,116,101,114,115
str_146: db 107,101,121,119,111,114,100,115
str_147: db 112,111,114,116,104,46,112,111,114,116,104,58,53,56,49,58,55
str_148: db 58,32,117,110,114,101,97,99,104,97,98,108,101,10
str_149: db 112,111,114,116,104,46,112,111,114,116,104,58,53,56,55,58,53
str_150: db 58,32,117,110,114,101,97,99,104,97,98,108,101,10
str_151: db 112,116,114
str_152: db 98,111,111,108
str_153: db 102,108,111,97,116
str_154: db 100,111,117,98,108,101
str_155: db 105,110,116
str_156: db 97,100,100,114
str_157: db 105,110,116
str_158: db 98,111,111,108
str_159: db 102,108,111,97,116
str_160: db 100,111,117,98,108,101
str_161: db 112,116,114
str_162: db 97,100,100,114
str_163: db 112,111,114,116,104,46,112,111,114,116,104,58,54,50,54,58,53
str_164: db 58,32,117,110,114,101,97,99,104,97,98,108,101,10
str_165: db 43
str_166: db 43,46
str_167: db 43,58
str_168: db 45
str_169: db 42
str_170: db 100,105,118,109,111,100
str_171: db 105,100,105,118,109,111,100
str_172: db 109,97,120
str_173: db 112,114,105,110,116
str_174: db 61
str_175: db 62
str_176: db 60
str_177: db 62,61
str_178: db 60,61
str_179: db 33,61
str_180: db 115,104,114
str_181: db 115,104,108
str_182: db 111,114
str_183: db 97,110,100
str_184: db 110,111,116
str_185: db 100,117,112
str_186: db 115,119,97,112
str_187: db 100,114,111,112
str_188: db 111,118,101,114
str_189: db 114,111,116
str_190: db 33,56
str_191: db 64,56
str_192: db 33,49,54
str_193: db 64,49,54
str_194: db 33,51,50
str_195: db 64,51,50
str_196: db 33,54,52
str_197: db 64,54,52
str_198: db 99,97,115,116,40,112,116,114,41
str_199: db 99,97,115,116,40,105,110,116,41
str_200: db 99,97,115,116,40,98,111,111,108,41
str_201: db 99,97,115,116,40,102,108,111,97,116,41
str_202: db 99,97,115,116,40,100,111,117,98,108,101,41
str_203: db 99,97,115,116,40,97,100,100,114,41
str_204: db 97,114,103,99
str_205: db 97,114,103,118
str_206: db 101,110,118,112
str_207: db 115,121,115,99,97,108,108,48
str_208: db 115,121,115,99,97,108,108,49
str_209: db 115,121,115,99,97,108,108,50
str_210: db 115,121,115,99,97,108,108,51
str_211: db 115,121,115,99,97,108,108,52
str_212: db 115,121,115,99,97,108,108,53
str_213: db 115,121,115,99,97,108,108,54
str_214: db 63,63,63
str_215: db 112,111,114,116,104,46,112,111,114,116,104,58,55,52,53,58,53
str_216: db 58,32,117,110,114,101,97,99,104,97,98,108,101,10
str_217: db 43
str_218: db 43,46
str_219: db 43,58
str_220: db 45
str_221: db 42
str_222: db 100,105,118,109,111,100
str_223: db 105,100,105,118,109,111,100
str_224: db 109,97,120
str_225: db 112,114,105,110,116
str_226: db 61
str_227: db 62
str_228: db 60
str_229: db 62,61
str_230: db 60,61
str_231: db 33,61
str_232: db 115,104,114
str_233: db 115,104,108
str_234: db 111,114
str_235: db 97,110,100
str_236: db 110,111,116
str_237: db 100,117,112
str_238: db 115,119,97,112
str_239: db 100,114,111,112
str_240: db 111,118,101,114
str_241: db 114,111,116
str_242: db 33,56
str_243: db 64,56
str_244: db 33,49,54
str_245: db 64,49,54
str_246: db 33,51,50
str_247: db 64,51,50
str_248: db 33,54,52
str_249: db 64,54,52
str_250: db 99,97,115,116,40,112,116,114,41
str_251: db 99,97,115,116,40,105,110,116,41
str_252: db 99,97,115,116,40,98,111,111,108,41
str_253: db 99,97,115,116,40,102,108,111,97,116,41
str_254: db 99,97,115,116,40,100,111,117,98,108,101,41
str_255: db 99,97,115,116,40,97,100,100,114,41
str_256: db 97,114,103,99
str_257: db 97,114,103,118
str_258: db 101,110,118,112
str_259: db 115,121,115,99,97,108,108,48
str_260: db 115,121,115,99,97,108,108,49
str_261: db 115,121,115,99,97,108,108,50
str_262: db 115,121,115,99,97,108,108,51
str_263: db 115,121,115,99,97,108,108,52
str_264: db 115,121,115,99,97,108,108,53
str_265: db 115,121,115,99,97,108,108,54
str_266: db 63,63,63
str_267: db 79,80,95,80,85,83,72,95,73,78,84
str_268: db 79,80,95,80,85,83,72,95,66,79,79,76
str_269: db 79,80,95,80,85,83,72,95,70,76,79,65,84
str_270: db 79,80,95,80,85,83,72,95,68,79,85,66,76,69
str_271: db 79,80,95,80,85,83,72,95,80,84,82
str_272: db 79,80,95,80,85,83,72,95,65,68,68,82
str_273: db 79,80,95,80,85,83,72,95,71,76,79,66,65,76,95,77,69,77
str_274: db 79,80,95,80,85,83,72,95,76,79,67,65,76,95,77,69,77
str_275: db 79,80,95,80,85,83,72,95,83,84,82
str_276: db 79,80,95,80,85,83,72,95,67,83,84,82
str_277: db 79,80,95,73,78,84,82,73,78,83,73,67
str_278: db 79,80,95,73,70
str_279: db 79,80,95,73,70,83,84,65,82
str_280: db 79,80,95,69,76,83,69
str_281: db 79,80,95,69,78,68,95,73,70
str_282: db 79,80,95,69,78,68,95,87,72,73,76,69
str_283: db 79,80,95,80,82,69,80,95,80,82,79,67
str_284: db 79,80,95,82,69,84
str_285: db 79,80,95,67,65,76,76
str_286: db 79,80,95,67,65,76,76,95,69,88,84,69,82,78
str_287: db 79,80,95,73,78,76,73,78,69,68
str_288: db 79,80,95,87,72,73,76,69
str_289: db 79,80,95,68,79
str_290: db 79,80,95,67,65,76,76,95,76,73,75,69
str_291: db 79,80,95,66,73,78,68,95,76,69,84
str_292: db 79,80,95,66,73,78,68,95,80,69,69,75
str_293: db 79,80,95,85,78,66,73,78,68
str_294: db 79,80,95,80,85,83,72,95,66,73,78,68
str_295: db 112,111,114,116,104,46,112,111,114,116,104,58,49,48,54,57,58,53
str_296: db 58,32,85,110,107,110,111,119,110,32,111,112,32,116,121,112,101,10
str_297: db 112,111,114,116,104,46,112,111,114,116,104,58,49,48,57,53,58,53
str_298: db 58,32,69,82,82,79,82,58,32,111,112,115,32,111,118,101,114,102,108,111,119,10
str_299: db 58,32
str_300: db 32,61,62,32
str_301: db 32
str_302: db 10
str_303: db 112,111,114,116,104,46,112,111,114,116,104,58,49,49,52,57,58,53
str_304: db 58,32,69,82,82,79,82,58,32,115,116,114,105,110,103,32,108,105,116,101,114,97,108,115,32,99,97,112,97,99,105,116,121,32,101,120,99,101,101,100,101,100,10
str_305: db 112,111,114,116,104,46,112,111,114,116,104,58,49,49,57,55,58,53
str_306: db 58,32,69,82,82,79,82,58,32,99,111,110,115,116,97,110,116,115,32,100,101,102,105,110,105,116,105,111,110,115,32,99,97,112,97,99,105,116,121,32,101,120,99,101,101,100,101,100,10
str_307: db 112,111,114,116,104,46,112,111,114,116,104,58,49,50,50,48,58,53
str_308: db 58,32,69,82,82,79,82,58,32,84,121,112,101,32,70,114,97,109,101,32,80,111,111,108,32,111,118,101,114,102,108,111,119,33,32,84,105,109,101,32,116,111,32,105,109,112,108,101,109,101,110,116,32,112,114,111,112,101,114,32,109,101,109,111,114,121,32,109,97,110,97,103,101,109,101,110,116,33,32,79,114,32,121,111,117,32,99,97,110,32,106,117,115,116,32,105,110,99,114,101,97,115,101,32,116,104,101,32,115,105,122,101,32,111,102,32,116,104,101,32,112,111,111,108,44,32,116,104,97,116,32,119,105,108,108,32,119,111,114,107,32,116,111,111,46,32,75,97,112,112,97,10
str_309: db 58,32,78,79,84,69,58,32,116,121,112,101,32,96
str_310: db 96,10
str_311: db 112,111,114,116,104,46,112,111,114,116,104,58,49,51,57,53,58,53
str_312: db 58,32,69,82,82,79,82,58,32,112,114,111,99,101,100,117,114,101,32,100,101,102,105,110,105,116,105,111,110,115,32,99,97,112,97,99,105,116,121,32,101,120,99,101,101,100,101,100,10
str_313: db 112,111,114,116,104,46,112,111,114,116,104,58,49,52,55,53,58,53
str_314: db 58,32,69,82,82,79,82,58,32,108,111,99,97,108,32,109,101,109,111,114,121,32,100,101,102,105,110,105,116,105,111,110,115,32,99,97,112,97,99,105,116,121,32,101,120,99,101,101,100,101,100,10
str_315: db 112,111,114,116,104,46,112,111,114,116,104,58,49,52,56,53,58,53
str_316: db 58,32,69,82,82,79,82,58,32,103,108,111,98,97,108,32,109,101,109,111,114,121,32,100,101,102,105,110,105,116,105,111,110,115,32,99,97,112,97,99,105,116,121,32,101,120,99,101,101,100,101,100,10
str_317: db 58,32,78,79,84,69,58,32,108,111,99,97,116,101,100,32,104,101,114,101,10
str_318: db 44
str_319: db 112,114,105,110,116,58,10
str_320: db 32,32,32,32,109,111,118,32,32,32,32,32,114,57,44,32,45,51,54,56,57,51,52,56,56,49,52,55,52,49,57,49,48,51,50,51,10
str_321: db 32,32,32,32,115,117,98,32,32,32,32,32,114,115,112,44,32,52,48,10
str_322: db 32,32,32,32,109,111,118,98,32,32,32,32,66,89,84,69,32,91,114,115,112,43,51,48,93,44,32,49,48,10
str_323: db 32,32,32,32,109,111,118,32,32,32,32,32,66,89,84,69,32,91,114,115,112,43,51,49,93,44,32,49,48,10
str_324: db 32,32,32,32,108,101,97,32,32,32,32,32,114,99,120,44,32,91,114,115,112,43,51,48,93,10
str_325: db 46,76,50,58,10
str_326: db 32,32,32,32,109,111,118,32,32,32,32,32,114,97,120,44,32,114,100,105,10
str_327: db 32,32,32,32,108,101,97,32,32,32,32,32,114,56,44,32,91,114,115,112,43,51,50,93,10
str_328: db 32,32,32,32,109,117,108,32,32,32,32,32,114,57,10
str_329: db 32,32,32,32,109,111,118,32,32,32,32,32,114,97,120,44,32,114,100,105,10
str_330: db 32,32,32,32,115,117,98,32,32,32,32,32,114,56,44,32,114,99,120,10
str_331: db 32,32,32,32,115,104,114,32,32,32,32,32,114,100,120,44,32,51,10
str_332: db 32,32,32,32,108,101,97,32,32,32,32,32,114,115,105,44,32,91,114,100,120,43,114,100,120,42,52,93,10
str_333: db 32,32,32,32,97,100,100,32,32,32,32,32,114,115,105,44,32,114,115,105,10
str_334: db 32,32,32,32,115,117,98,32,32,32,32,32,114,97,120,44,32,114,115,105,10
str_335: db 32,32,32,32,97,100,100,32,32,32,32,32,101,97,120,44,32,52,56,10
str_336: db 32,32,32,32,46,98,121,116,101,32,48,120,56,56,44,32,48,120,48,49,10
str_337: db 32,32,32,32,109,111,118,32,32,32,32,32,66,89,84,69,32,91,114,99,120,93,44,32,97,108,10
str_338: db 32,32,32,32,109,111,118,32,32,32,32,32,114,97,120,44,32,114,100,105,10
str_339: db 32,32,32,32,109,111,118,32,32,32,32,32,114,100,105,44,32,114,100,120,10
str_340: db 32,32,32,32,109,111,118,32,32,32,32,32,114,100,120,44,32,114,99,120,10
str_341: db 32,32,32,32,115,117,98,32,32,32,32,32,114,99,120,44,32,49,10
str_342: db 32,32,32,32,99,109,112,32,32,32,32,32,114,97,120,44,32,57,10
str_343: db 32,32,32,32,106,97,32,32,32,32,32,32,46,76,50,10
str_344: db 32,32,32,32,108,101,97,32,32,32,32,32,114,97,120,44,32,91,114,115,112,43,51,50,93,10
str_345: db 32,32,32,32,109,111,118,32,32,32,32,32,101,100,105,44,32,49,10
str_346: db 32,32,32,32,115,117,98,32,32,32,32,32,114,100,120,44,32,114,97,120,10
str_347: db 32,32,32,32,120,111,114,32,32,32,32,32,101,97,120,44,32,101,97,120,10
str_348: db 32,32,32,32,108,101,97,32,32,32,32,32,114,115,105,44,32,91,114,115,112,43,51,50,43,114,100,120,93,10
str_349: db 32,32,32,32,109,111,118,32,32,32,32,32,114,100,120,44,32,114,56,10
str_350: db 32,32,32,32,109,111,118,32,32,32,32,32,114,97,120,44,32,49,10
str_351: db 32,32,32,32,115,121,115,99,97,108,108,10
str_352: db 32,32,32,32,97,100,100,32,32,32,32,32,114,115,112,44,32,52,48,10
str_353: db 32,32,32,32,114,101,116,10
str_354: db 32,59,59,47,47,32
str_355: db 58,32
str_356: db 32
str_357: db 10
str_358: db 114,100,105
str_359: db 114,115,105
str_360: db 114,100,120
str_361: db 114,99,120
str_362: db 114,56
str_363: db 114,57
str_364: db 114,97,120
str_365: db 97,100,100,114,95
str_366: db 58
str_367: db 32,32,32,32,109,111,118,32,114,97,120,44,32
str_368: db 10
str_369: db 32,32,32,32,112,117,115,104,32,114,97,120,10
str_370: db 32,32,32,32,108,101,97,32,114,97,120,44,32,91,97,100,100,114,95
str_371: db 93,10
str_372: db 32,32,32,32,112,117,115,104,32,114,97,120,10
str_373: db 32,32,32,32,112,111,112,32,114,98,120,10
str_374: db 32,32,32,32,109,111,118,32,114,97,120,44,32,114,115,112,10
str_375: db 32,32,32,32,109,111,118,32,114,115,112,44,32,91,114,101,116,95,115,116,97,99,107,95,114,115,112,93,10
str_376: db 32,32,32,32,99,97,108,108,32,114,98,120,10
str_377: db 32,32,32,32,109,111,118,32,91,114,101,116,95,115,116,97,99,107,95,114,115,112,93,44,32,114,115,112,10
str_378: db 32,32,32,32,109,111,118,32,114,115,112,44,32,114,97,120,10
str_379: db 32,32,32,32,109,111,118,32,114,97,120,44,32,91,114,101,116,95,115,116,97,99,107,95,114,115,112,93,10
str_380: db 32,32,32,32,115,117,98,32,114,97,120,44,32
str_381: db 10
str_382: db 32,32,32,32,109,111,118,32,91,114,101,116,95,115,116,97,99,107,95,114,115,112,93,44,32,114,97,120,10
str_383: db 32,32,32,32,112,111,112,32,114,98,120,10
str_384: db 32,32,32,32,109,111,118,32,91,114,97,120,43
str_385: db 93,44,32,114,98,120,10
str_386: db 32,32,32,32,109,111,118,32,114,97,120,44,32,91,114,101,116,95,115,116,97,99,107,95,114,115,112,93,10
str_387: db 32,32,32,32,115,117,98,32,114,97,120,44,32
str_388: db 10
str_389: db 32,32,32,32,109,111,118,32,91,114,101,116,95,115,116,97,99,107,95,114,115,112,93,44,32,114,97,120,10
str_390: db 32,32,32,32,109,111,118,32,114,98,120,44,32,91,114,115,112,43
str_391: db 93,10
str_392: db 32,32,32,32,109,111,118,32,91,114,97,120,43
str_393: db 93,44,32,114,98,120,10
str_394: db 32,32,32,32,109,111,118,32,114,97,120,44,32,91,114,101,116,95,115,116,97,99,107,95,114,115,112,93,10
str_395: db 32,32,32,32,97,100,100,32,114,97,120,44,32
str_396: db 10
str_397: db 32,32,32,32,109,111,118,32,91,114,101,116,95,115,116,97,99,107,95,114,115,112,93,44,32,114,97,120,10
str_398: db 32,32,32,32,109,111,118,32,114,97,120,44,32,91,114,101,116,95,115,116,97,99,107,95,114,115,112,93,10
str_399: db 32,32,32,32,97,100,100,32,114,97,120,44,32
str_400: db 10
str_401: db 32,32,32,32,109,111,118,32,114,98,120,44,32,91,114,97,120,93,10
str_402: db 32,32,32,32,112,117,115,104,32,114,98,120,10
str_403: db 32,32,32,32,109,111,118,32,114,97,120,44,32,91,114,101,116,95,115,116,97,99,107,95,114,115,112,93,10
str_404: db 32,32,32,32,97,100,100,32,114,97,120,44,32
str_405: db 10
str_406: db 32,32,32,32,112,117,115,104,32,114,97,120,10
str_407: db 32,32,32,32,108,101,97,32,114,97,120,44,32,91,109,101,109,43
str_408: db 93,10
str_409: db 32,32,32,32,112,117,115,104,32,114,97,120,10
str_410: db 32,32,32,32,109,111,118,32,114,97,120,44,32
str_411: db 10
str_412: db 32,32,32,32,112,117,115,104,32,114,97,120,10
str_413: db 32,32,32,32,108,101,97,32,114,97,120,44,32,91,115,116,114,95
str_414: db 93,10
str_415: db 32,32,32,32,112,117,115,104,32,114,97,120,10
str_416: db 32,32,32,32,108,101,97,32,114,97,120,44,32,91,115,116,114,95
str_417: db 93,10
str_418: db 32,32,32,32,112,117,115,104,32,114,97,120,10
str_419: db 32,32,32,32,112,111,112,32,114,97,120,10
str_420: db 32,32,32,32,116,101,115,116,32,114,97,120,44,32,114,97,120,10
str_421: db 32,32,32,32,106,122,32,97,100,100,114,95
str_422: db 10
str_423: db 32,32,32,32,112,111,112,32,114,97,120,10
str_424: db 32,32,32,32,116,101,115,116,32,114,97,120,44,32,114,97,120,10
str_425: db 32,32,32,32,106,122,32,97,100,100,114,95
str_426: db 10
str_427: db 32,32,32,32,106,109,112,32,97,100,100,114,95
str_428: db 10
str_429: db 32,32,32,32,106,109,112,32,97,100,100,114,95
str_430: db 10
str_431: db 32,32,32,32,112,111,112,32,114,97,120,10
str_432: db 32,32,32,32,116,101,115,116,32,114,97,120,44,32,114,97,120,10
str_433: db 32,32,32,32,106,122,32,97,100,100,114,95
str_434: db 10
str_435: db 32,32,32,32,115,117,98,32,114,115,112,44,32
str_436: db 10
str_437: db 32,32,32,32,109,111,118,32,91,114,101,116,95,115,116,97,99,107,95,114,115,112,93,44,32,114,115,112,10
str_438: db 32,32,32,32,109,111,118,32,114,115,112,44,32,114,97,120,10
str_439: db 32,32,32,32,109,111,118,32,114,97,120,44,32,114,115,112,10
str_440: db 32,32,32,32,109,111,118,32,114,115,112,44,32,91,114,101,116,95,115,116,97,99,107,95,114,115,112,93,10
str_441: db 32,32,32,32,97,100,100,32,114,115,112,44,32
str_442: db 10
str_443: db 32,32,32,32,114,101,116,10
str_444: db 32,32,32,32,109,111,118,32,114,97,120,44,32,114,115,112,10
str_445: db 32,32,32,32,109,111,118,32,114,115,112,44,32,91,114,101,116,95,115,116,97,99,107,95,114,115,112,93,10
str_446: db 32,32,32,32,99,97,108,108,32,97,100,100,114,95
str_447: db 10
str_448: db 32,32,32,32,109,111,118,32,91,114,101,116,95,115,116,97,99,107,95,114,115,112,93,44,32,114,115,112,10
str_449: db 32,32,32,32,109,111,118,32,114,115,112,44,32,114,97,120,10
str_450: db 32,32,32,32,112,111,112,32
str_451: db 10
str_452: db 32,32,32,32,109,111,118,32,114,98,120,44,32,114,115,112,10
str_453: db 32,32,32,32,109,111,118,32,114,115,112,44,32,91,114,101,116,95,115,116,97,99,107,95,114,115,112,93,10
str_454: db 32,32,32,32,99,97,108,108,32
str_455: db 10
str_456: db 32,32,32,32,109,111,118,32,91,114,101,116,95,115,116,97,99,107,95,114,115,112,93,44,32,114,115,112,10
str_457: db 32,32,32,32,109,111,118,32,114,115,112,44,32,114,98,120,10
str_458: db 58,32,69,82,82,79,82,58,32,97,32,112,114,111,99,101,100,117,114,101,32,99,97,110,110,111,116,32,114,101,116,117,114,110,32,116,104,97,116,32,109,97,110,121,32,118,97,108,117,101,115,32,97,99,99,111,114,100,105,110,103,32,116,111,32,116,104,101,32,99,97,108,108,105,110,103,32,99,111,110,118,101,110,116,105,111,110,32,111,110,32,76,105,110,117,120,32,120,56,54,95,54,52,10
str_459: db 32,32,32,32,112,117,115,104,32
str_460: db 10
str_461: db 32,32,32,32,112,111,112,32,114,97,120,10
str_462: db 32,32,32,32,112,111,112,32,114,98,120,10
str_463: db 32,32,32,32,97,100,100,32,114,97,120,44,32,114,98,120,10
str_464: db 32,32,32,32,112,117,115,104,32,114,97,120,10
str_465: db 32,32,32,32,112,111,112,32,114,97,120,10
str_466: db 32,32,32,32,112,111,112,32,114,98,120,10
str_467: db 32,32,32,32,109,111,118,100,32,120,109,109,48,44,32,101,97,120,10
str_468: db 32,32,32,32,109,111,118,100,32,120,109,109,49,44,32,101,98,120,10
str_469: db 32,32,32,32,97,100,100,115,115,32,120,109,109,48,44,32,120,109,109,49,10
str_470: db 32,32,32,32,109,111,118,100,32,101,97,120,44,32,120,109,109,48,10
str_471: db 32,32,32,32,112,117,115,104,32,114,97,120,10
str_472: db 32,32,32,32,112,111,112,32,114,97,120,10
str_473: db 32,32,32,32,112,111,112,32,114,98,120,10
str_474: db 32,32,32,32,109,111,118,113,32,120,109,109,48,44,32,114,97,120,10
str_475: db 32,32,32,32,109,111,118,113,32,120,109,109,49,44,32,114,98,120,10
str_476: db 32,32,32,32,97,100,100,115,100,32,120,109,109,48,44,32,120,109,109,49,10
str_477: db 32,32,32,32,109,111,118,113,32,114,97,120,44,32,120,109,109,48,10
str_478: db 32,32,32,32,112,117,115,104,32,114,97,120,10
str_479: db 32,32,32,32,112,111,112,32,114,97,120,10
str_480: db 32,32,32,32,112,111,112,32,114,98,120,10
str_481: db 32,32,32,32,115,117,98,32,114,98,120,44,32,114,97,120,10
str_482: db 32,32,32,32,112,117,115,104,32,114,98,120,10
str_483: db 32,32,32,32,112,111,112,32,114,97,120,10
str_484: db 32,32,32,32,112,111,112,32,114,98,120,10
str_485: db 32,32,32,32,109,117,108,32,114,98,120,10
str_486: db 32,32,32,32,112,117,115,104,32,114,97,120,10
str_487: db 32,32,32,32,120,111,114,32,114,100,120,44,32,114,100,120,10
str_488: db 32,32,32,32,112,111,112,32,114,98,120,10
str_489: db 32,32,32,32,112,111,112,32,114,97,120,10
str_490: db 32,32,32,32,100,105,118,32,114,98,120,10
str_491: db 32,32,32,32,112,117,115,104,32,114,97,120,10
str_492: db 32,32,32,32,112,117,115,104,32,114,100,120,10
str_493: db 32,32,32,32,112,111,112,32,114,98,120,10
str_494: db 32,32,32,32,112,111,112,32,114,97,120,10
str_495: db 32,32,32,32,99,113,111,10
str_496: db 32,32,32,32,105,100,105,118,32,114,98,120,10
str_497: db 32,32,32,32,112,117,115,104,32,114,97,120,10
str_498: db 32,32,32,32,112,117,115,104,32,114,100,120,10
str_499: db 32,32,32,32,112,111,112,32,114,97,120,10
str_500: db 32,32,32,32,112,111,112,32,114,98,120,10
str_501: db 32,32,32,32,99,109,112,32,114,98,120,44,32,114,97,120,10
str_502: db 32,32,32,32,99,109,111,118,103,101,32,114,97,120,44,32,114,98,120,10
str_503: db 32,32,32,32,112,117,115,104,32,114,97,120,10
str_504: db 32,32,32,32,112,111,112,32,114,99,120,10
str_505: db 32,32,32,32,112,111,112,32,114,98,120,10
str_506: db 32,32,32,32,115,104,114,32,114,98,120,44,32,99,108,10
str_507: db 32,32,32,32,112,117,115,104,32,114,98,120,10
str_508: db 32,32,32,32,112,111,112,32,114,99,120,10
str_509: db 32,32,32,32,112,111,112,32,114,98,120,10
str_510: db 32,32,32,32,115,104,108,32,114,98,120,44,32,99,108,10
str_511: db 32,32,32,32,112,117,115,104,32,114,98,120,10
str_512: db 32,32,32,32,112,111,112,32,114,97,120,10
str_513: db 32,32,32,32,112,111,112,32,114,98,120,10
str_514: db 32,32,32,32,111,114,32,114,98,120,44,32,114,97,120,10
str_515: db 32,32,32,32,112,117,115,104,32,114,98,120,10
str_516: db 32,32,32,32,112,111,112,32,114,97,120,10
str_517: db 32,32,32,32,112,111,112,32,114,98,120,10
str_518: db 32,32,32,32,97,110,100,32,114,98,120,44,32,114,97,120,10
str_519: db 32,32,32,32,112,117,115,104,32,114,98,120,10
str_520: db 32,32,32,32,112,111,112,32,114,97,120,10
str_521: db 32,32,32,32,110,111,116,32,114,97,120,10
str_522: db 32,32,32,32,112,117,115,104,32,114,97,120,10
str_523: db 32,32,32,32,112,111,112,32,114,100,105,10
str_524: db 32,32,32,32,99,97,108,108,32,112,114,105,110,116,10
str_525: db 32,32,32,32,109,111,118,32,114,99,120,44,32,48,10
str_526: db 32,32,32,32,109,111,118,32,114,100,120,44,32,49,10
str_527: db 32,32,32,32,112,111,112,32,114,97,120,10
str_528: db 32,32,32,32,112,111,112,32,114,98,120,10
str_529: db 32,32,32,32,99,109,112,32,114,97,120,44,32,114,98,120,10
str_530: db 32,32,32,32,99,109,111,118,101,32,114,99,120,44,32,114,100,120,10
str_531: db 32,32,32,32,112,117,115,104,32,114,99,120,10
str_532: db 32,32,32,32,109,111,118,32,114,99,120,44,32,48,10
str_533: db 32,32,32,32,109,111,118,32,114,100,120,44,32,49,10
str_534: db 32,32,32,32,112,111,112,32,114,98,120,10
str_535: db 32,32,32,32,112,111,112,32,114,97,120,10
str_536: db 32,32,32,32,99,109,112,32,114,97,120,44,32,114,98,120,10
str_537: db 32,32,32,32,99,109,111,118,103,32,114,99,120,44,32,114,100,120,10
str_538: db 32,32,32,32,112,117,115,104,32,114,99,120,10
str_539: db 32,32,32,32,109,111,118,32,114,99,120,44,32,48,10
str_540: db 32,32,32,32,109,111,118,32,114,100,120,44,32,49,10
str_541: db 32,32,32,32,112,111,112,32,114,98,120,10
str_542: db 32,32,32,32,112,111,112,32,114,97,120,10
str_543: db 32,32,32,32,99,109,112,32,114,97,120,44,32,114,98,120,10
str_544: db 32,32,32,32,99,109,111,118,108,32,114,99,120,44,32,114,100,120,10
str_545: db 32,32,32,32,112,117,115,104,32,114,99,120,10
str_546: db 32,32,32,32,109,111,118,32,114,99,120,44,32,48,10
str_547: db 32,32,32,32,109,111,118,32,114,100,120,44,32,49,10
str_548: db 32,32,32,32,112,111,112,32,114,98,120,10
str_549: db 32,32,32,32,112,111,112,32,114,97,120,10
str_550: db 32,32,32,32,99,109,112,32,114,97,120,44,32,114,98,120,10
str_551: db 32,32,32,32,99,109,111,118,103,101,32,114,99,120,44,32,114,100,120,10
str_552: db 32,32,32,32,112,117,115,104,32,114,99,120,10
str_553: db 32,32,32,32,109,111,118,32,114,99,120,44,32,48,10
str_554: db 32,32,32,32,109,111,118,32,114,100,120,44,32,49,10
str_555: db 32,32,32,32,112,111,112,32,114,98,120,10
str_556: db 32,32,32,32,112,111,112,32,114,97,120,10
str_557: db 32,32,32,32,99,109,112,32,114,97,120,44,32,114,98,120,10
str_558: db 32,32,32,32,99,109,111,118,108,101,32,114,99,120,44,32,114,100,120,10
str_559: db 32,32,32,32,112,117,115,104,32,114,99,120,10
str_560: db 32,32,32,32,109,111,118,32,114,99,120,44,32,48,10
str_561: db 32,32,32,32,109,111,118,32,114,100,120,44,32,49,10
str_562: db 32,32,32,32,112,111,112,32,114,98,120,10
str_563: db 32,32,32,32,112,111,112,32,114,97,120,10
str_564: db 32,32,32,32,99,109,112,32,114,97,120,44,32,114,98,120,10
str_565: db 32,32,32,32,99,109,111,118,110,101,32,114,99,120,44,32,114,100,120,10
str_566: db 32,32,32,32,112,117,115,104,32,114,99,120,10
str_567: db 32,32,32,32,112,111,112,32,114,97,120,10
str_568: db 32,32,32,32,112,117,115,104,32,114,97,120,10
str_569: db 32,32,32,32,112,117,115,104,32,114,97,120,10
str_570: db 32,32,32,32,112,111,112,32,114,97,120,10
str_571: db 32,32,32,32,112,111,112,32,114,98,120,10
str_572: db 32,32,32,32,112,117,115,104,32,114,97,120,10
str_573: db 32,32,32,32,112,117,115,104,32,114,98,120,10
str_574: db 32,32,32,32,112,111,112,32,114,97,120,10
str_575: db 32,32,32,32,112,111,112,32,114,97,120,10
str_576: db 32,32,32,32,112,111,112,32,114,98,120,10
str_577: db 32,32,32,32,112,117,115,104,32,114,98,120,10
str_578: db 32,32,32,32,112,117,115,104,32,114,97,120,10
str_579: db 32,32,32,32,112,117,115,104,32,114,98,120,10
str_580: db 32,32,32,32,112,111,112,32,114,97,120,10
str_581: db 32,32,32,32,112,111,112,32,114,98,120,10
str_582: db 32,32,32,32,112,111,112,32,114,99,120,10
str_583: db 32,32,32,32,112,117,115,104,32,114,98,120,10
str_584: db 32,32,32,32,112,117,115,104,32,114,97,120,10
str_585: db 32,32,32,32,112,117,115,104,32,114,99,120,10
str_586: db 32,32,32,32,112,111,112,32,114,97,120,10
str_587: db 32,32,32,32,120,111,114,32,114,98,120,44,32,114,98,120,10
str_588: db 32,32,32,32,109,111,118,32,98,108,44,32,91,114,97,120,93,10
str_589: db 32,32,32,32,112,117,115,104,32,114,98,120,10
str_590: db 32,32,32,32,112,111,112,32,114,97,120,10
str_591: db 32,32,32,32,112,111,112,32,114,98,120,10
str_592: db 32,32,32,32,109,111,118,32,91,114,97,120,93,44,32,98,108,10
str_593: db 32,32,32,32,112,111,112,32,114,97,120,10
str_594: db 32,32,32,32,120,111,114,32,114,98,120,44,32,114,98,120,10
str_595: db 32,32,32,32,109,111,118,32,98,120,44,32,91,114,97,120,93,10
str_596: db 32,32,32,32,112,117,115,104,32,114,98,120,10
str_597: db 32,32,32,32,112,111,112,32,114,97,120,10
str_598: db 32,32,32,32,112,111,112,32,114,98,120,10
str_599: db 32,32,32,32,109,111,118,32,91,114,97,120,93,44,32,98,120,10
str_600: db 32,32,32,32,112,111,112,32,114,97,120,10
str_601: db 32,32,32,32,120,111,114,32,114,98,120,44,32,114,98,120,10
str_602: db 32,32,32,32,109,111,118,32,101,98,120,44,32,91,114,97,120,93,10
str_603: db 32,32,32,32,112,117,115,104,32,114,98,120,10
str_604: db 32,32,32,32,112,111,112,32,114,97,120,10
str_605: db 32,32,32,32,112,111,112,32,114,98,120,10
str_606: db 32,32,32,32,109,111,118,32,91,114,97,120,93,44,32,101,98,120,10
str_607: db 32,32,32,32,112,111,112,32,114,97,120,10
str_608: db 32,32,32,32,120,111,114,32,114,98,120,44,32,114,98,120,10
str_609: db 32,32,32,32,109,111,118,32,114,98,120,44,32,91,114,97,120,93,10
str_610: db 32,32,32,32,112,117,115,104,32,114,98,120,10
str_611: db 32,32,32,32,112,111,112,32,114,97,120,10
str_612: db 32,32,32,32,112,111,112,32,114,98,120,10
str_613: db 32,32,32,32,109,111,118,32,91,114,97,120,93,44,32,114,98,120,10
str_614: db 32,32,32,32,109,111,118,32,114,97,120,44,32,91,97,114,103,115,95,112,116,114,93,10
str_615: db 32,32,32,32,109,111,118,32,114,97,120,44,32,91,114,97,120,93,10
str_616: db 32,32,32,32,112,117,115,104,32,114,97,120,10
str_617: db 32,32,32,32,109,111,118,32,114,97,120,44,32,91,97,114,103,115,95,112,116,114,93,10
str_618: db 32,32,32,32,97,100,100,32,114,97,120,44,32,56,10
str_619: db 32,32,32,32,112,117,115,104,32,114,97,120,10
str_620: db 32,32,32,32,109,111,118,32,114,97,120,44,32,91,97,114,103,115,95,112,116,114,93,10
str_621: db 32,32,32,32,109,111,118,32,114,97,120,44,32,91,114,97,120,93,10
str_622: db 32,32,32,32,97,100,100,32,114,97,120,44,32,50,10
str_623: db 32,32,32,32,115,104,108,32,114,97,120,44,32,51,10
str_624: db 32,32,32,32,109,111,118,32,114,98,120,44,32,91,97,114,103,115,95,112,116,114,93,10
str_625: db 32,32,32,32,97,100,100,32,114,98,120,44,32,114,97,120,10
str_626: db 32,32,32,32,112,117,115,104,32,114,98,120,10
str_627: db 32,32,32,32,112,111,112,32,114,97,120,10
str_628: db 32,32,32,32,115,121,115,99,97,108,108,10
str_629: db 32,32,32,32,112,117,115,104,32,114,97,120,10
str_630: db 32,32,32,32,112,111,112,32,114,97,120,10
str_631: db 32,32,32,32,112,111,112,32,114,100,105,10
str_632: db 32,32,32,32,115,121,115,99,97,108,108,10
str_633: db 32,32,32,32,112,117,115,104,32,114,97,120,10
str_634: db 32,32,32,32,112,111,112,32,114,97,120,10
str_635: db 32,32,32,32,112,111,112,32,114,100,105,10
str_636: db 32,32,32,32,112,111,112,32,114,115,105,10
str_637: db 32,32,32,32,115,121,115,99,97,108,108,10
str_638: db 32,32,32,32,112,117,115,104,32,114,97,120,10
str_639: db 32,32,32,32,112,111,112,32,114,97,120,10
str_640: db 32,32,32,32,112,111,112,32,114,100,105,10
str_641: db 32,32,32,32,112,111,112,32,114,115,105,10
str_642: db 32,32,32,32,112,111,112,32,114,100,120,10
str_643: db 32,32,32,32,115,121,115,99,97,108,108,10
str_644: db 32,32,32,32,112,117,115,104,32,114,97,120,10
str_645: db 32,32,32,32,112,111,112,32,114,97,120,10
str_646: db 32,32,32,32,112,111,112,32,114,100,105,10
str_647: db 32,32,32,32,112,111,112,32,114,115,105,10
str_648: db 32,32,32,32,112,111,112,32,114,100,120,10
str_649: db 32,32,32,32,112,111,112,32,114,49,48,10
str_650: db 32,32,32,32,115,121,115,99,97,108,108,10
str_651: db 32,32,32,32,112,117,115,104,32,114,97,120,10
str_652: db 32,32,32,32,112,111,112,32,114,97,120,10
str_653: db 32,32,32,32,112,111,112,32,114,100,105,10
str_654: db 32,32,32,32,112,111,112,32,114,115,105,10
str_655: db 32,32,32,32,112,111,112,32,114,100,120,10
str_656: db 32,32,32,32,112,111,112,32,114,49,48,10
str_657: db 32,32,32,32,112,111,112,32,114,56,10
str_658: db 32,32,32,32,115,121,115,99,97,108,108,10
str_659: db 32,32,32,32,112,117,115,104,32,114,97,120,10
str_660: db 32,32,32,32,112,111,112,32,114,97,120,10
str_661: db 32,32,32,32,112,111,112,32,114,100,105,10
str_662: db 32,32,32,32,112,111,112,32,114,115,105,10
str_663: db 32,32,32,32,112,111,112,32,114,100,120,10
str_664: db 32,32,32,32,112,111,112,32,114,49,48,10
str_665: db 32,32,32,32,112,111,112,32,114,56,10
str_666: db 32,32,32,32,112,111,112,32,114,57,10
str_667: db 32,32,32,32,115,121,115,99,97,108,108,10
str_668: db 32,32,32,32,112,117,115,104,32,114,97,120,10
str_669: db 112,111,114,116,104,46,112,111,114,116,104,58,50,48,56,54,58,49,53
str_670: db 58,32,117,110,114,101,97,99,104,97,98,108,101,46,32,73,110,118,97,108,105,100,32,105,110,116,114,105,110,115,105,99,46,10
str_671: db 112,111,114,116,104,46,112,111,114,116,104,58,50,48,57,48,58,49,49
str_672: db 58,32,117,110,114,101,97,99,104,97,98,108,101,46,32,73,110,118,97,108,105,100,32,111,112,46,10
str_673: db 112,111,114,116,104,46,112,111,114,116,104,58,50,49,48,52,58,53
str_674: db 58,32,65,115,115,101,114,116,105,111,110,32,70,97,105,108,101,100,58,32,71,65,83,32,102,105,108,101,32,112,97,116,104,115,32,111,118,101,114,102,108,111,119,10
str_675: db 91,73,78,70,79,93,32,71,101,110,101,114,97,116,105,110,103,32
str_676: db 10
str_677: db 91,69,82,82,79,82,93,32,99,111,117,108,100,32,110,111,116,32,111,112,101,110,32,96,111,117,116,112,117,116,46,97,115,109,96,10
str_678: db 46,105,110,116,101,108,95,115,121,110,116,97,120,32,110,111,112,114,101,102,105,120,10
str_679: db 46,116,101,120,116,10
str_680: db 46,101,120,116,101,114,110,32
str_681: db 10
str_682: db 46,102,105,108,101,32
str_683: db 32,34
str_684: db 34,10
str_685: db 46,108,111,99,32
str_686: db 32
str_687: db 32
str_688: db 10
str_689: db 97,100,100,114,95
str_690: db 58,10
str_691: db 46,103,108,111,98,97,108,32,109,97,105,110,10
str_692: db 109,97,105,110,58,10
str_693: db 32,32,32,32,108,101,97,32,114,97,120,44,32,91,114,115,105,45,56,93,10
str_694: db 32,32,32,32,109,111,118,32,91,97,114,103,115,95,112,116,114,93,44,32,114,97,120,10
str_695: db 32,32,32,32,108,101,97,32,114,97,120,44,32,91,114,101,116,95,115,116,97,99,107,43
str_696: db 93,10
str_697: db 32,32,32,32,109,111,118,32,91,114,101,116,95,115,116,97,99,107,95,114,115,112,93,44,32,114,97,120,10
str_698: db 109,97,105,110
str_699: db 112,111,114,116,104,46,112,111,114,116,104,58,50,50,51,51,58,49,49
str_700: db 58,32,65,115,115,101,114,116,105,111,110,32,70,97,105,108,101,100,58,32,116,121,112,101,32,99,104,101,99,107,105,110,103,32,112,104,97,115,101,32,100,105,100,32,110,111,116,32,99,104,101,99,107,32,116,104,101,32,101,120,105,115,116,101,110,99,101,32,111,102,32,96,109,97,105,110,96,32,112,114,111,99,101,100,117,114,101
str_701: db 32,32,32,32,99,97,108,108,32,97,100,100,114,95
str_702: db 10
str_703: db 32,32,32,32,109,111,118,32,114,97,120,44,32,54,48,10
str_704: db 32,32,32,32,109,111,118,32,114,100,105,44,32,48,10
str_705: db 32,32,32,32,115,121,115,99,97,108,108,10
str_706: db 46,100,97,116,97,10
str_707: db 115,116,114,95
str_708: db 58
str_709: db 32,46,98,121,116,101,32
str_710: db 10
str_711: db 46,98,115,115,10
str_712: db 46,99,111,109,109,32,97,114,103,115,95,112,116,114,44,32,56,10
str_713: db 46,99,111,109,109,32,114,101,116,95,115,116,97,99,107,95,114,115,112,44,32,56,10
str_714: db 46,99,111,109,109,32,114,101,116,95,115,116,97,99,107,44,32
str_715: db 10
str_716: db 46,99,111,109,109,32,109,101,109,44,32
str_717: db 10
str_718: db 46,115,101,99,116,105,111,110,32,46,110,111,116,101,46,71,78,85,45,115,116,97,99,107,10
str_719: db 91,73,78,70,79,93,32,71,101,110,101,114,97,116,105,110,103,32
str_720: db 10
str_721: db 91,69,82,82,79,82,93,32,99,111,117,108,100,32,110,111,116,32,111,112,101,110,32,96,111,117,116,112,117,116,46,97,115,109,96,10
str_722: db 102,111,114,109,97,116,32,69,76,70,54,52,10
str_723: db 115,101,99,116,105,111,110,32,39,46,116,101,120,116,39,32,101,120,101,99,117,116,97,98,108,101,10
str_724: db 101,120,116,114,110,32
str_725: db 10
str_726: db 97,100,100,114,95
str_727: db 58,10
str_728: db 112,117,98,108,105,99,32,109,97,105,110,10
str_729: db 109,97,105,110,58,10
str_730: db 32,32,32,32,108,101,97,32,114,97,120,44,32,91,114,115,105,45,56,93,10
str_731: db 32,32,32,32,109,111,118,32,91,97,114,103,115,95,112,116,114,93,44,32,114,97,120,10
str_732: db 32,32,32,32,109,111,118,32,114,97,120,44,32,114,101,116,95,115,116,97,99,107,95,101,110,100,10
str_733: db 32,32,32,32,109,111,118,32,91,114,101,116,95,115,116,97,99,107,95,114,115,112,93,44,32,114,97,120,10
str_734: db 109,97,105,110
str_735: db 112,111,114,116,104,46,112,111,114,116,104,58,50,51,52,51,58,49,49
str_736: db 58,32,65,115,115,101,114,116,105,111,110,32,70,97,105,108,101,100,58,32,116,121,112,101,32,99,104,101,99,107,105,110,103,32,112,104,97,115,101,32,100,105,100,32,110,111,116,32,99,104,101,99,107,32,116,104,101,32,101,120,105,115,116,101,110,99,101,32,111,102,32,96,109,97,105,110,96,32,112,114,111,99,101,100,117,114,101
str_737: db 32,32,32,32,99,97,108,108,32,97,100,100,114,95
str_738: db 10
str_739: db 32,32,32,32,109,111,118,32,114,97,120,44,32,54,48,10
str_740: db 32,32,32,32,109,111,118,32,114,100,105,44,32,48,10
str_741: db 32,32,32,32,115,121,115,99,97,108,108,10
str_742: db 115,101,99,116,105,111,110,32,39,46,100,97,116,97,39,32,119,114,105,116,101,97,98,108,101,10
str_743: db 115,116,114,95
str_744: db 58
str_745: db 32,100,98,32
str_746: db 10
str_747: db 115,101,99,116,105,111,110,32,39,46,98,115,115,39,32,119,114,105,116,101,97,98,108,101,10
str_748: db 97,114,103,115,95,112,116,114,58,32,114,113,32,49,10
str_749: db 114,101,116,95,115,116,97,99,107,95,114,115,112,58,32,114,113,32,49,10
str_750: db 114,101,116,95,115,116,97,99,107,58,32,114,98,32
str_751: db 10
str_752: db 114,101,116,95,115,116,97,99,107,95,101,110,100,58,10
str_753: db 109,101,109,58,32,114,98,32
str_754: db 10
str_755: db 115,101,99,116,105,111,110,32,39,46,110,111,116,101,46,71,78,85,45,115,116,97,99,107,39,32,119,114,105,116,101,97,98,108,101,10
str_756: db 112,111,114,116,104,46,112,111,114,116,104,58,50,52,48,57,58,53
str_757: db 58,32,70,105,108,101,32,80,97,116,104,32,66,117,102,102,101,114,32,99,97,112,97,99,105,116,121,32,101,120,99,101,101,100,101,100,46,10
str_758: db 112,111,114,116,104,46,112,111,114,116,104,58,50,52,50,55,58,53
str_759: db 58,32,69,82,82,79,82,58,32,112,97,114,115,101,32,98,108,111,99,107,32,115,116,97,99,107,32,111,118,101,114,102,108,111,119,10
str_760: db 112,111,114,116,104,46,112,111,114,116,104,58,50,52,51,53,58,53
str_761: db 58,32,69,82,82,79,82,58,32,112,97,114,115,101,32,98,108,111,99,107,32,115,116,97,99,107,32,117,110,100,101,114,102,108,111,119,10
str_762: db 112,111,114,116,104,46,112,111,114,116,104,58,50,52,55,50,58,53
str_763: db 58,32,84,79,68,79,58,32,99,111,110,115,116,32,115,116,97,99,107,32,111,118,101,114,102,108,111,119,10
str_764: db 112,111,114,116,104,46,112,111,114,116,104,58,50,52,56,52,58,53
str_765: db 58,32,65,115,115,101,114,116,105,111,110,32,70,97,105,108,101,100,58,32,99,111,110,115,116,32,115,116,97,99,107,32,117,110,100,101,114,102,108,111,119,10
str_766: db 58,32,69,82,82,79,82,58,32,110,111,116,32,101,110,111,117,103,104,32,97,114,103,117,109,101,110,116,115,32,102,111,114,32,96
str_767: db 96,10
str_768: db 58,32,69,82,82,79,82,58,32,101,120,112,101,99,116,101,100,32,112,114,111,99,101,100,117,114,101,32,110,97,109,101,32,97,102,116,101,114,32,107,101,121,119,111,114,100,32,96
str_769: db 96,46,32,66,117,116,32,103,111,116,32,110,111,116,104,105,110,103,46,10
str_770: db 58,32,69,82,82,79,82,58,32,101,120,112,101,99,116,101,100,32
str_771: db 32,97,102,116,101,114,32,107,101,121,119,111,114,100,32,96
str_772: db 96,32,98,117,116,32,103,111,116,32
str_773: db 10
str_774: db 58,32,69,82,82,79,82,58,32,112,114,111,99,101,100,117,114,101,32,96
str_775: db 96,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,10
str_776: db 58,32,69,82,82,79,82,58,32,101,120,112,101,99,116,101,100,32,112,114,111,99,101,100,117,114,101,32,110,97,109,101,32,97,102,116,101,114,32,107,101,121,119,111,114,100,32,96
str_777: db 96,46,32,66,117,116,32,103,111,116,32,110,111,116,104,105,110,103,46,10
str_778: db 58,32,69,82,82,79,82,58,32,101,120,112,101,99,116,101,100,32
str_779: db 32,97,102,116,101,114,32,107,101,121,119,111,114,100,32,96
str_780: db 96,32,98,117,116,32,103,111,116,32
str_781: db 10
str_782: db 58,32,69,82,82,79,82,58,32,112,114,111,99,101,100,117,114,101,32,96
str_783: db 96,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,10
str_784: db 58,32,69,82,82,79,82,58,32,105,110,116,114,105,110,115,105,99,32,96
str_785: db 96,32,105,115,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,105,110,32,99,111,109,112,105,108,101,32,116,105,109,101,32,101,118,97,108,117,97,116,105,111,110,10
str_786: db 58,32,69,82,82,79,82,58,32,117,110,115,117,112,112,111,114,116,101,100,32,119,111,114,100,32,96
str_787: db 96,32,105,110,32,99,111,109,112,105,108,101,32,116,105,109,101,32,101,118,97,108,117,97,116,105,111,110,10
str_788: db 58,32,69,82,82,79,82,58,32,117,110,115,117,112,112,111,114,116,101,100,32,107,101,121,119,111,114,100,32,96
str_789: db 96,32,105,110,32,99,111,109,112,105,108,101,32,116,105,109,101,32,101,118,97,108,117,97,116,105,111,110,10
str_790: db 58,32,69,82,82,79,82,58,32
str_791: db 32,97,114,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,105,110,32,99,111,109,112,105,108,101,32,116,105,109,101,32,101,118,97,108,117,97,116,105,111,110,10
str_792: db 58,32,69,82,82,79,82,58,32,84,104,101,32,114,101,115,117,108,116,32,111,102,32,101,120,112,114,101,115,115,105,111,110,32,105,110,32,99,111,109,112,105,108,101,32,116,105,109,101,32,101,118,97,108,117,97,116,105,111,110,32,109,117,115,116,32,98,101,32,97,32,115,105,110,103,108,101,32,110,117,109,98,101,114,10
str_793: db 112,111,114,116,104,46,112,111,114,116,104,58,50,56,48,54,58,53
str_794: db 58,32,84,79,68,79,58,32,99,111,110,115,116,32,101,120,112,114,101,115,115,105,111,110,32,119,97,115,32,110,111,116,32,99,108,111,115,101,100,32,112,114,111,112,101,114,108,121,10
str_795: db 58,32,69,82,82,79,82,58,32,114,101,100,101,102,105,110,105,116,105,111,110,32,111,102,32,97,110,32,105,110,116,114,105,110,115,105,99,32,119,111,114,100,32,96
str_796: db 96,10
str_797: db 58,32,69,82,82,79,82,58,32,114,101,100,101,102,105,110,105,116,105,111,110,32,111,102,32,97,32,99,111,110,115,116,97,110,116,32,96
str_798: db 96,10
str_799: db 58,32,78,79,84,69,58,32,116,104,101,32,111,114,105,103,105,110,97,108,32,100,101,102,105,110,105,116,105,111,110,32,105,115,32,108,111,99,97,116,101,100,32,104,101,114,101,10
str_800: db 58,32,69,82,82,79,82,58,32,114,101,100,101,102,105,110,105,116,105,111,110,32,111,102,32,97,32,112,114,111,99,101,100,117,114,101,32,96
str_801: db 96,10
str_802: db 58,32,78,79,84,69,58,32,116,104,101,32,111,114,105,103,105,110,97,108,32,100,101,102,105,110,105,116,105,111,110,32,105,115,32,108,111,99,97,116,101,100,32,104,101,114,101,10
str_803: db 58,32,69,82,82,79,82,58,32,114,101,100,101,102,105,110,105,116,105,111,110,32,111,102,32,97,32,108,111,99,97,108,32,109,101,109,111,114,121,32,114,101,103,105,111,110,32,96
str_804: db 96,10
str_805: db 58,32,78,79,84,69,58,32,116,104,101,32,111,114,105,103,105,110,97,108,32,100,101,102,105,110,105,116,105,111,110,32,105,115,32,108,111,99,97,116,101,100,32,104,101,114,101,10
str_806: db 58,32,69,82,82,79,82,58,32,114,101,100,101,102,105,110,105,116,105,111,110,32,111,102,32,97,32,103,108,111,98,97,108,32,109,101,109,111,114,121,32,114,101,103,105,111,110,32,96
str_807: db 96,10
str_808: db 58,32,78,79,84,69,58,32,116,104,101,32,111,114,105,103,105,110,97,108,32,100,101,102,105,110,105,116,105,111,110,32,105,115,32,108,111,99,97,116,101,100,32,104,101,114,101,10
str_809: db 58,32,69,82,82,79,82,58,32,117,110,107,110,111,119,110,32,116,121,112,101,32,96
str_810: db 96,32,105,110,32,112,114,111,99,101,100,117,114,101,32,100,101,102,105,110,105,116,105,111,110,10
str_811: db 58,32,69,82,82,79,82,58,32,117,110,101,120,112,101,99,116,101,100,32,107,101,121,119,111,114,100,32,96
str_812: db 96,32,105,110,32,112,114,111,99,101,100,117,114,101,32,100,101,102,105,110,105,116,105,111,110,10
str_813: db 58,32,69,82,82,79,82,58,32
str_814: db 32,97,114,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,105,110,32,112,114,111,99,101,100,117,114,101,32,100,101,102,105,110,105,116,105,111,110,46,32,79,110,108,121,32
str_815: db 32,97,114,101,32,115,117,112,112,111,114,116,101,100,46,10
str_816: db 58,32,69,82,82,79,82,58,32,100,101,102,105,110,105,116,105,111,110,32,112,114,111,99,101,100,117,114,101,115,32,105,110,115,105,100,101,32,111,102,32,112,114,111,99,101,100,117,114,101,115,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,40,102,111,114,32,110,111,119,41,10
str_817: db 58,32,78,79,84,69,58,32,116,104,101,32,99,117,114,114,101,110,116,32,112,114,111,99,101,100,117,114,101,32,115,116,97,114,116,115,32,104,101,114,101,10
str_818: db 58,32,69,82,82,79,82,58,32,101,120,112,101,99,116,101,100,32,112,114,111,99,101,100,117,114,101,32,110,97,109,101,32,98,117,116,32,102,111,117,110,100,32,110,111,116,104,105,110,103,10
str_819: db 58,32,69,82,82,79,82,58,32,101,120,112,101,99,116,101,100,32,112,114,111,99,101,100,117,114,101,32,110,97,109,101,32,98,117,116,32,102,111,117,110,100,32,110,111,116,104,105,110,103,10
str_820: db 58,32,69,82,82,79,82,58,32,101,120,112,101,99,116,101,100,32,112,114,111,99,101,100,117,114,101,32,110,97,109,101,32,116,111,32,98,101,32,97,32,119,111,114,100,32,98,117,116,32,102,111,117,110,100,32
str_821: db 32,105,110,115,116,101,97,100,10
str_822: db 58,32,101,120,116,101,114,110,32,112,114,111,99,101,100,117,114,101,115,32,109,117,115,116,32,98,101,32,101,109,112,116,121,10
str_823: db 58,32,101,120,116,101,114,110,32,112,114,111,99,101,100,117,114,101,115,32,109,117,115,116,32,98,101,32,101,109,112,116,121,58,32,101,120,112,101,99,116,101,100,32,96,101,110,100,96,32,98,117,116,32,102,111,117,110,100,32,96
str_824: db 96,10
str_825: db 112,111,114,116,104,46,112,111,114,116,104,58,51,48,51,50,58,53
str_826: db 58,32,65,115,115,101,114,116,105,111,110,32,70,97,105,108,101,100,58,32,112,114,111,99,101,100,117,114,101,115,32,109,117,115,116,32,115,116,97,114,116,32,119,105,116,104,32,79,80,95,80,82,69,80,95,80,82,79,67,10
str_827: db 112,111,114,116,104,46,112,111,114,116,104,58,51,48,54,55,58,53
str_828: db 58,32,65,115,115,101,114,116,105,111,110,32,70,97,105,108,101,100,58,32,98,105,110,100,32,116,97,98,108,101,32,111,118,101,114,102,108,111,119,33,10
str_829: db 112,111,114,116,104,46,112,111,114,116,104,58,51,49,49,49,58,55
str_830: db 58,32,65,115,115,101,114,116,105,111,110,32,70,97,105,108,101,100,58,32,110,111,116,32,101,110,111,117,103,104,32,101,108,101,109,101,110,116,115,32,116,111,32,114,101,118,101,114,115,101,32,105,110,32,98,105,110,100,45,116,97,98,108,101,45,114,101,118,45,116,111,112
str_831: db 58,32,69,82,82,79,82,58,32,107,101,121,119,111,114,100,32,96
str_832: db 96,32,105,115,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,105,110,32,116,104,101,32,108,101,116,45,98,105,110,100,105,110,103,32,108,105,115,116,46,10
str_833: db 58,32,69,82,82,79,82,58,32
str_834: db 32,97,114,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,105,110,32,116,104,101,32,108,101,116,45,98,105,110,100,105,110,103,32,108,105,115,116,46,32,79,110,108,121,32
str_835: db 32,97,114,101,32,115,117,112,112,111,114,116,101,100,46,10
str_836: db 58,32,69,82,82,79,82,58,32,101,120,112,101,99,116,101,100,32,107,101,121,119,111,114,100,32,96
str_837: db 96,32,98,117,116,32,103,111,116,32,110,111,116,104,105,110,103,10
str_838: db 112,111,114,116,104,46,112,111,114,116,104,58,51,50,52,53,58,53
str_839: db 58,32,65,115,115,101,114,116,105,111,110,32,70,97,105,108,101,100,58,32,109,111,100,117,108,101,115,32,111,118,101,114,102,108,111,119,10
str_840: db 112,111,114,116,104,46,112,111,114,116,104,58,51,50,55,52,58,55
str_841: db 58,32,65,115,115,101,114,116,105,111,110,32,70,97,105,108,101,100,58,32,105,110,99,108,117,100,101,32,112,97,116,104,115,32,99,97,112,97,99,105,116,121,32,111,118,101,114,102,108,111,119,10
str_842: db 47
str_843: db 112,111,114,116,104,46,112,111,114,116,104,58,51,51,50,57,58,55
str_844: db 58,32,65,115,115,101,114,116,105,111,110,32,70,97,105,108,101,100,58,32,108,105,110,107,101,114,32,102,108,97,103,115,32,111,118,101,114,102,108,111,119,10
str_845: db 58,32,69,82,82,79,82,58,32
str_846: db 32,97,114,101,32,110,111,116,32,97,108,108,111,119,101,100,32,97,116,32,116,104,101,32,116,111,112,32,108,101,118,101,108,32,111,102,32,116,104,101,32,112,114,111,103,114,97,109,10
str_847: db 58,32,69,82,82,79,82,58,32,96,105,102,42,96,32,99,97,110,32,111,110,108,121,32,99,111,109,101,32,97,102,116,101,114,32,96,101,108,115,101,96,44,32,98,117,116,32,102,111,117,110,100,32,110,111,116,104,105,110,103,10
str_848: db 58,32,69,82,82,79,82,58,32,96,105,102,42,96,32,99,97,110,32,111,110,108,121,32,99,111,109,101,32,97,102,116,101,114,32,96,101,108,115,101,96,10
str_849: db 58,32,69,82,82,79,82,58,32,96,101,108,115,101,96,32,99,97,110,32,111,110,108,121,32,99,111,109,101,32,97,102,116,101,114,32,96,105,102,96,32,111,114,32,96,105,102,42,96,10
str_850: db 112,111,114,116,104,46,112,111,114,116,104,58,51,52,49,57,58,50,55
str_851: db 58,32,65,115,115,101,114,116,105,111,110,32,70,97,105,108,101,100,58,32,101,120,112,101,99,116,101,100,32,79,80,95,69,76,83,69,10
str_852: db 58,32,69,82,82,79,82,58,32,96,101,108,115,101,96,32,99,97,110,32,111,110,108,121,32,99,111,109,101,32,97,102,116,101,114,32,96,105,102,96,32,111,114,32,96,105,102,42,96,10
str_853: db 58,32,69,82,82,79,82,58,32,96,100,111,96,32,105,115,32,110,111,116,32,112,114,101,99,101,100,101,100,32,98,121,32,96,119,104,105,108,101,96,10
str_854: db 58,32,69,82,82,79,82,58,32,96,100,111,96,32,105,115,32,110,111,116,32,112,114,101,99,101,100,101,100,32,98,121,32,96,119,104,105,108,101,96,10
str_855: db 58,32,78,79,84,69,58,32,112,114,101,99,101,100,101,100,32,98,121,32,96
str_856: db 96,32,105,110,115,116,101,97,100,10
str_857: db 58,32,69,82,82,79,82,58,32,96,101,110,100,96,32,104,97,115,32,110,111,116,104,105,110,103,32,116,111,32,99,108,111,115,101,10
str_858: db 112,111,114,116,104,46,112,111,114,116,104,58,51,52,57,49,58,50,55
str_859: db 58,32,65,115,115,101,114,116,105,111,110,32,70,97,105,108,101,100,58,32,96,101,108,115,101,45,105,102,42,45,101,110,100,96,32,99,104,97,105,110,32,105,115,32,98,114,111,107,101,110,46,32,76,111,115,116,32,96,101,108,115,101,96,32,115,111,109,101,119,104,101,114,101,46,10
str_860: db 112,111,114,116,104,46,112,111,114,116,104,58,51,53,48,56,58,50,55
str_861: db 58,32,65,115,115,101,114,116,105,111,110,32,70,97,105,108,101,100,58,32,111,117,116,32,111,102,32,114,97,110,103,101,10
str_862: db 112,111,114,116,104,46,112,111,114,116,104,58,51,53,49,53,58,50,57
str_863: db 58,32,65,115,115,101,114,116,105,111,110,32,70,97,105,108,101,100,58,32,96,100,111,96,32,100,111,101,115,32,110,111,116,32,112,114,101,99,101,101,100,32,96,119,104,105,108,101,96,10
str_864: db 112,111,114,116,104,46,112,111,114,116,104,58,51,53,51,55,58,50,55
str_865: db 58,32,65,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,79,80,95,80,82,69,80,95,80,82,79,67,32,111,117,116,115,105,100,101,32,111,102,32,97,99,116,117,97,108,32,112,114,111,99,10
str_866: db 112,111,114,116,104,46,112,111,114,116,104,58,51,53,54,50,58,50,55
str_867: db 58,32,65,115,115,101,114,116,105,111,110,32,70,97,105,108,101,100,58,32,98,105,110,100,32,116,97,98,108,101,32,117,110,100,101,114,102,108,111,119,33,10
str_868: db 58,32,69,82,82,79,82,58,32,96,101,110,100,96,32,99,97,110,32,111,110,108,121,32,99,108,111,115,101,32,96,105,102,96,44,32,96,105,102,42,96,44,32,96,101,108,115,101,96,44,32,96,100,111,96,44,32,96,112,114,111,99,96,44,32,96,108,101,116,96,32,111,114,32,96,112,101,101,107,96,32,98,108,111,99,107,115,10
str_869: db 58,32,78,79,84,69,58,32,102,111,117,110,100,32,96
str_870: db 96,32,105,110,115,116,101,97,100,10
str_871: db 58,32,69,82,82,79,82,58,32,101,120,112,101,99,116,101,100,32,112,97,116,104,32,116,111,32,116,104,101,32,105,110,99,108,117,100,101,32,102,105,108,101,32,98,117,116,32,102,111,117,110,100,32,110,111,116,104,105,110,103,10
str_872: db 58,32,69,82,82,79,82,58,32,101,120,112,101,99,116,101,100,32,112,97,116,104,32,116,111,32,116,104,101,32,105,110,99,108,117,100,101,32,102,105,108,101,32,116,111,32,98,101,32,97,32,115,116,114,105,110,103,32,98,117,116,32,102,111,117,110,100,32
str_873: db 10
str_874: db 58,32,69,82,82,79,82,58,32,102,105,108,101,32,96
str_875: db 96,32,110,111,116,32,102,111,117,110,100,10
str_876: db 91,73,78,70,79,93,32,73,110,99,108,117,100,105,110,103,32
str_877: db 10
str_878: db 58,32,69,82,82,79,82,58,32,105,110,99,108,117,100,101,32,108,111,111,112,10
str_879: db 58,32,101,120,112,101,99,116,101,100,32,99,111,110,115,116,97,110,116,32,110,97,109,101,32,98,117,116,32,102,111,117,110,100,32,110,111,116,104,105,110,103,10
str_880: db 58,32,101,120,112,101,99,116,101,100,32,99,111,110,115,116,97,110,116,32,110,97,109,101,32,116,111,32,98,101,32,97,32,119,111,114,100,10
str_881: db 58,32,69,82,82,79,82,58,32,101,120,112,101,99,116,101,100,32,96,112,114,111,99,96,32,107,101,121,119,111,114,100,32,97,102,116,101,114,32,96,105,110,108,105,110,101,96,32,98,117,116,32,103,111,116,32,110,111,116,104,105,110,103,10
str_882: db 58,32,69,82,82,79,82,58,32,69,120,112,101,99,116,101,100,32,107,101,121,119,111,114,100,32,96,112,114,111,99,96,32,97,102,116,101,114,32,96,105,110,108,105,110,101,96,32,98,117,116,32,103,111,116,32,96
str_883: db 96,10
str_884: db 58,32,69,82,82,79,82,58,32,101,120,112,101,99,116,101,100,32,96,112,114,111,99,96,32,107,101,121,119,111,114,100,32,97,102,116,101,114,32,96,101,120,116,101,114,110,96,32,98,117,116,32,103,111,116,32,110,111,116,104,105,110,103,10
str_885: db 58,32,69,82,82,79,82,58,32,69,120,112,101,99,116,101,100,32,107,101,121,119,111,114,100,32,96,112,114,111,99,96,32,97,102,116,101,114,32,96,101,120,116,101,114,110,96,32,98,117,116,32,103,111,116,32,96
str_886: db 96,10
str_887: db 58,32,101,120,112,101,99,116,101,100,32,108,105,110,107,101,114,32,102,108,97,103,32,98,117,116,32,102,111,117,110,100,32,110,111,116,104,105,110,103,10
str_888: db 58,32,101,120,112,101,99,116,101,100,32,108,105,110,107,101,114,32,102,108,97,103,32,116,111,32,98,101,32,97,32,115,116,114,105,110,103,32,98,117,116,32,102,111,117,110,100,32
str_889: db 105,110,115,116,101,97,100,10
str_890: db 58,32,101,120,112,101,99,116,101,100,32,109,101,109,111,114,121,32,110,97,109,101,32,98,117,116,32,102,111,117,110,100,32,110,111,116,104,105,110,103,10
str_891: db 58,32,101,120,112,101,99,116,101,100,32,109,101,109,111,114,121,32,110,97,109,101,32,116,111,32,98,101,32,97,32,119,111,114,100,32,98,117,116,32,102,111,117,110,100,32
str_892: db 32,105,110,115,116,101,97,100,10
str_893: db 58,32,69,82,82,79,82,58,32,69,120,112,101,99,116,101,100,32,109,101,109,111,114,121,32,115,105,122,101,32,116,111,32,98,101,32,96
str_894: db 96,32,98,117,116,32,103,111,116,32,96
str_895: db 96,32,105,110,115,116,101,97,100,10
str_896: db 58,32,69,82,82,79,82,58,32,108,111,99,97,108,32,109,101,109,111,114,105,101,115,32,97,114,101,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,105,110,108,105,110,97,98,108,101,32,112,114,111,99,101,100,117,114,101,115,32,121,101,116,10
str_897: db 58,32,78,79,84,69,58,32,116,104,101,32,112,114,111,99,101,100,117,114,101,32,115,116,97,114,116,115,32,104,101,114,101,10
str_898: db 58,32,101,120,112,101,99,116,101,100,32,97,115,115,101,114,116,32,109,101,115,115,97,103,101,32,98,117,116,32,102,111,117,110,100,32,110,111,116,104,105,110,103,10
str_899: db 58,32,101,120,112,101,99,116,101,100,32,97,115,115,101,114,116,32,109,101,115,115,97,103,101,32,116,111,32,98,101,32,97,32,115,116,114,105,110,103,10
str_900: db 58,32,69,82,82,79,82,58,32,97,115,115,101,114,116,105,111,110,32,101,120,112,101,99,116,115,32,116,104,101,32,101,120,112,114,101,115,115,105,111,110,32,116,111,32,98,101,32,111,102,32,116,121,112,101,32,96,98,111,111,108,96,10
str_901: db 58,32,69,82,82,79,82,58,32,83,116,97,116,105,99,32,65,115,115,101,114,116,105,111,110,32,70,97,105,108,101,100,58,32
str_902: db 10
str_903: db 58,32,69,82,82,79,82,58,32,117,110,101,120,112,101,99,116,101,100,32,107,101,121,119,111,114,100,32,96
str_904: db 96,10
str_905: db 58,32,69,82,82,79,82,58,32
str_906: db 32,97,114,101,32,110,111,116,32,97,108,108,111,119,101,100,32,97,116,32,116,104,101,32,116,111,112,32,108,101,118,101,108,32,111,102,32,116,104,101,32,112,114,111,103,114,97,109,10
str_907: db 112,111,114,116,104,46,112,111,114,116,104,58,51,56,57,49,58,50,49
str_908: db 58,32,117,110,114,101,97,99,104,97,98,108,101,10
str_909: db 58,32,69,82,82,79,82,58,32,110,111,32,114,101,99,117,114,115,105,111,110,32,105,110,32,105,110,108,105,110,101,32,112,114,111,99,101,100,117,114,101,115,10
str_910: db 112,111,114,116,104,46,112,111,114,116,104,58,51,57,50,54,58,50,49
str_911: db 58,32,85,110,114,101,97,99,104,97,98,108,101,10
str_912: db 58,32,69,82,82,79,82,58,32,117,110,107,110,111,119,110,32,119,111,114,100,32,96
str_913: db 96,10
str_914: db 58,32,69,82,82,79,82,58,32
str_915: db 32,97,114,101,32,110,111,116,32,97,108,108,111,119,101,100,32,97,116,32,116,104,101,32,116,111,112,32,108,101,118,101,108,32,111,102,32,116,104,101,32,112,114,111,103,114,97,109,10
str_916: db 58,32,69,82,82,79,82,58,32
str_917: db 32,97,114,101,32,110,111,116,32,97,108,108,111,119,101,100,32,97,116,32,116,104,101,32,116,111,112,32,108,101,118,101,108,32,111,102,32,116,104,101,32,112,114,111,103,114,97,109,10
str_918: db 58,32,69,82,82,79,82,58,32
str_919: db 32,97,114,101,32,110,111,116,32,97,108,108,111,119,101,100,32,97,116,32,116,104,101,32,116,111,112,32,108,101,118,101,108,32,111,102,32,116,104,101,32,112,114,111,103,114,97,109,10
str_920: db 112,111,114,116,104,46,112,111,114,116,104,58,51,57,57,49,58,49,53
str_921: db 58,32,85,110,114,101,97,99,104,97,98,108,101,46,32,85,110,107,110,111,119,110,32,116,111,107,101,110,32,116,121,112,101,46,10
str_922: db 58,32,69,82,82,79,82,58,32,117,110,99,108,111,115,101,100,32,98,108,111,99,107,10
str_923: db 58,32,69,82,82,79,82,58,32,65,114,103,117,109,101,110,116,32
str_924: db 32,111,102,32,96
str_925: db 96,32,105,115,32,101,120,112,101,99,116,101,100,32,116,111,32,98,101,32,116,121,112,101,32,96
str_926: db 96,32,98,117,116,32,103,111,116,32,116,121,112,101,32,96
str_927: db 96,10
str_928: db 58,32,78,79,84,69,58,32,65,114,103,117,109,101,110,116,32
str_929: db 32,119,97,115,32,112,114,111,118,105,100,101,100,32,104,101,114,101,10
str_930: db 58,32,78,79,84,69,58,32,69,120,112,101,99,116,101,100,32,116,121,112,101,32,119,97,115,32,100,101,99,108,97,114,101,100,32,104,101,114,101,10
str_931: db 58,32,69,82,82,79,82,58,32,78,111,116,32,101,110,111,117,103,104,32,97,114,103,117,109,101,110,116,115,32,112,114,111,118,105,100,101,100,32,102,111,114,32,96
str_932: db 96,46,32,69,120,112,101,99,116,101,100,32
str_933: db 32,98,117,116,32,103,111,116,32
str_934: db 46,10
str_935: db 112,111,114,116,104,46,112,111,114,116,104,58,52,49,51,50,58,49,49
str_936: db 58,32,65,115,115,101,114,116,105,111,110,32,70,97,105,108,101,100,58,32,116,104,101,32,101,110,116,114,121,32,109,111,100,117,108,101,32,115,104,111,117,108,100,32,110,111,116,32,98,101,32,105,110,99,108,117,100,101,100,32,97,116,32,116,104,105,115,32,112,111,105,110,116,10
str_937: db 91,73,78,70,79,93,32,67,111,109,112,105,108,105,110,103,32
str_938: db 10
str_939: db 91,73,78,70,79,93,32,67,111,109,112,105,108,97,116,105,111,110
str_940: db 58,32,69,82,82,79,82,58,32,78,111,116,32,101,110,111,117,103,104,32,97,114,103,117,109,101,110,116,115,32,112,114,111,118,105,100,101,100,32,102,111,114,32,96
str_941: db 96,46,32,69,120,112,101,99,116,101,100,32
str_942: db 32,98,117,116,32,103,111,116,32
str_943: db 46,10
str_944: db 58,32,69,82,82,79,82,58,32,78,111,116,32,101,110,111,117,103,104,32,97,114,103,117,109,101,110,116,115,32,112,114,111,118,105,100,101,100,32,102,111,114,32,96
str_945: db 96,46,32,69,120,112,101,99,116,101,100,32
str_946: db 32,98,117,116,32,103,111,116,32
str_947: db 46,10
str_948: db 112,111,114,116,104,46,112,111,114,116,104,58,52,50,53,52,58,55
str_949: db 58,32,84,79,68,79,58,32,114,101,112,111,114,116,105,110,103,32,110,111,116,32,112,114,111,118,105,100,101,100,32,97,114,103,117,109,101,110,116,115,32,105,115,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,10
str_950: db 58,32,69,82,82,79,82,58,32,68,97,116,97,32,115,116,97,99,107,32,100,111,101,115,32,110,111,116,32,104,97,118,101,32,101,110,111,117,103,104,32,101,108,101,109,101,110,116,115,32,116,111,32,98,105,110,100,46,32,69,120,112,101,99,116,101,100,32
str_951: db 32,98,117,116,32,103,111,116,32
str_952: db 46,32,72,101,114,101,32,105,115,32,116,104,101,32,100,97,116,97,32,115,116,97,99,107,58,32,10
str_953: db 58,32,69,82,82,79,82,58,32,68,97,116,97,32,115,116,97,99,107,32,100,111,101,115,32,110,111,116,32,104,97,118,101,32,101,110,111,117,103,104,32,101,108,101,109,101,110,116,115,32,116,111,32,98,105,110,100,46,32,69,120,112,101,99,116,101,100,32
str_954: db 32,98,117,116,32,103,111,116,32
str_955: db 46,32,72,101,114,101,32,105,115,32,116,104,101,32,100,97,116,97,32,115,116,97,99,107,58,32,10
str_956: db 112,111,114,116,104,46,112,111,114,116,104,58,52,54,48,49,58,53
str_957: db 58,32,65,115,115,101,114,116,105,111,110,32,70,97,105,108,101,100,58,32,116,104,101,32,114,101,116,117,114,110,32,115,116,97,99,107,32,100,111,101,115,32,110,111,116,32,104,97,118,101,32,101,110,111,117,103,104,32,102,114,97,109,101,115,32,116,111,32,117,110,98,105,110,100
str_958: db 112,111,114,116,104,46,112,111,114,116,104,58,52,54,50,53,58,55
str_959: db 58,32,65,115,115,101,114,116,105,111,110,32,70,97,105,108,101,100,58,32,116,104,101,32,114,101,116,117,114,110,32,115,116,97,99,107,32,100,111,101,115,32,110,111,116,32,104,97,118,101,32,101,110,111,117,103,104,32,102,114,97,109,101,115,32,116,111,32,97,100,100,114,101,115,115,32,102,111,114,32,79,80,95,80,85,83,72,95,66,73,78,68,46,32,84,104,105,115,32,105,115,32,108,105,107,101,108,121,32,97,32,98,117,103,32,105,110,32,116,104,101,32,99,111,109,112,105,108,97,116,105,111,110,32,112,114,111,99,101,115,115,32,98,101,99,97,117,115,101,32,105,116,32,115,104,111,117,108,100,39,118,101,32,99,97,117,103,104,116,32,116,104,97,116,46,10
str_960: db 112,111,114,116,104,46,112,111,114,116,104,58,52,56,51,52,58,49,51
str_961: db 58,32,65,115,115,101,114,116,105,111,110,32,70,97,105,108,101,100,58,32,101,120,112,101,99,116,32,112,114,111,99,32,97,108,119,97,121,115,32,101,120,105,115,116,32,119,105,116,104,32,116,104,105,115,32,115,112,101,99,105,102,105,99,32,97,100,100,114,101,115,115,46,32,83,111,109,101,116,104,105,110,103,32,119,101,110,116,32,119,114,111,110,103,32,100,117,114,105,110,103,32,116,104,101,32,99,111,109,112,105,108,97,116,105,111,110,32,112,114,111,99,101,115,115,10
str_962: db 112,111,114,116,104,46,112,111,114,116,104,58,52,56,56,54,58,49,51
str_963: db 58,32,65,115,115,101,114,116,105,111,110,32,70,97,105,108,101,100,58,32,101,120,112,101,99,116,32,112,114,111,99,32,97,108,119,97,121,115,32,101,120,105,115,116,32,119,105,116,104,32,116,104,105,115,32,115,112,101,99,105,102,105,99,32,97,100,100,114,101,115,115,46,32,83,111,109,101,116,104,105,110,103,32,119,101,110,116,32,119,114,111,110,103,32,100,117,114,105,110,103,32,116,104,101,32,99,111,109,112,105,108,97,116,105,111,110,32,112,114,111,99,101,115,115,10
str_964: db 112,111,114,116,104,46,112,111,114,116,104,58,52,56,57,54,58,49,49
str_965: db 58,32,65,115,115,101,114,116,105,111,110,32,70,97,105,108,101,100,58,32,101,120,112,101,99,116,32,112,114,111,99,32,97,108,119,97,121,115,32,101,120,105,115,116,32,119,105,116,104,32,116,104,105,115,32,115,112,101,99,105,102,105,99,32,97,100,100,114,101,115,115,46,32,83,111,109,101,116,104,105,110,103,32,119,101,110,116,32,119,114,111,110,103,32,100,117,114,105,110,103,32,116,104,101,32,99,111,109,112,105,108,97,116,105,111,110,32,112,114,111,99,101,115,115,10
str_966: db 58,32,68,69,66,85,71,58,32,83,116,111,112,112,105,110,103,32,116,104,101,32,99,111,109,112,105,108,97,116,105,111,110,46,32,67,117,114,114,101,110,116,32,115,116,97,99,107,32,115,116,97,116,101,58,10
str_967: db 112,111,114,116,104,46,112,111,114,116,104,58,53,50,52,57,58,49,51
str_968: db 58,32,117,110,114,101,97,99,104,97,98,108,101,10
str_969: db 112,111,114,116,104,46,112,111,114,116,104,58,53,50,53,56,58,57
str_970: db 58,32,117,110,114,101,97,99,104,97,98,108,101,10
str_971: db 58,32,69,82,82,79,82,58,32,85,110,101,120,112,101,99,116,101,100,32,100,97,116,97,32,111,110,32,116,104,101,32,115,116,97,99,107,32,97,102,116,101,114,32,97,32,115,105,110,103,108,101,32,105,116,101,114,97,116,105,111,110,32,111,102,32,116,104,101,32,108,111,111,112,46,32,84,104,101,32,116,121,112,101,115,32,97,110,100,32,116,104,101,32,97,109,111,117,110,116,32,111,102,32,101,108,101,109,101,110,116,115,32,111,110,32,116,104,101,32,115,116,97,99,107,32,97,114,101,32,110,111,116,32,97,108,108,111,119,101,100,32,116,111,32,99,104,97,110,103,101,32,98,101,116,119,101,101,110,32,116,104,101,32,105,116,101,114,97,116,105,111,110,115,46,10
str_972: db 58,32,69,82,82,79,82,58,32,85,110,101,120,112,101,99,116,101,100,32,100,97,116,97,32,111,110,32,116,104,101,32,115,116,97,99,107,32,97,116,32,116,104,101,32,101,110,100,32,111,102,32,116,104,101,32,112,114,111,99,101,100,117,114,101,46,32,84,104,101,32,101,120,112,101,99,116,101,100,32,101,108,101,109,101,110,116,115,32,111,110,32,116,104,101,32,115,116,97,99,107,32,97,114,101,32,108,105,115,116,101,100,32,97,102,116,101,114,32,116,104,101,32,96,45,45,96,32,111,112,101,114,97,116,111,114,46,10
str_973: db 112,111,114,116,104,46,112,111,114,116,104,58,53,50,57,48,58,49,49
str_974: db 58,32,117,110,114,101,97,99,104,97,98,108,101,32
str_975: db 58,32,78,79,84,69,58,32,85,110,101,120,112,101,99,116,101,100,32,116,121,112,101,32,96
str_976: db 96,10
str_977: db 58,32,78,79,84,69,58,32,69,120,112,101,99,116,101,100,32,116,121,112,101,32,96
str_978: db 96,10
str_979: db 58,32,69,82,82,79,82,58,32,85,110,104,97,110,100,108,101,100,32,100,97,116,97,32,111,110,32,116,104,101,32,115,116,97,99,107,32,97,102,116,101,114,32,97,32,115,105,110,103,108,101,32,105,116,101,114,97,116,105,111,110,32,111,102,32,116,104,101,32,108,111,111,112,46,32,84,104,101,32,116,121,112,101,115,32,97,110,100,32,116,104,101,32,97,109,111,117,110,116,32,111,102,32,101,108,101,109,101,110,116,115,32,111,110,32,116,104,101,32,115,116,97,99,107,32,97,114,101,32,110,111,116,32,97,108,108,111,119,101,100,32,116,111,32,99,104,97,110,103,101,32,98,101,116,119,101,101,110,32,116,104,101,32,105,116,101,114,97,116,105,111,110,115,46,32,72,101,114,101,32,97,114,101,32,116,104,101,32,101,108,101,109,101,110,116,115,32,99,117,114,114,101,110,116,108,121,32,111,110,32,116,104,101,32,115,116,97,99,107,58,10
str_980: db 58,32,69,82,82,79,82,58,32,85,110,104,97,110,100,108,101,100,32,100,97,116,97,32,111,110,32,116,104,101,32,115,116,97,99,107,32,97,116,32,116,104,101,32,101,110,100,32,111,102,32,116,104,101,32,112,114,111,99,101,100,117,114,101,46,32,84,104,101,32,101,120,112,101,99,116,101,100,32,101,108,101,109,101,110,116,115,32,111,110,32,116,104,101,32,115,116,97,99,107,32,97,114,101,32,108,105,115,116,101,100,32,97,102,116,101,114,32,116,104,101,32,96,45,45,96,32,111,112,101,114,97,116,111,114,46,32,72,101,114,101,32,97,114,101,32,116,104,101,32,101,108,101,109,101,110,116,115,32,99,117,114,114,101,110,116,108,121,32,111,110,32,116,104,101,32,115,116,97,99,107,58,10
str_981: db 112,111,114,116,104,46,112,111,114,116,104,58,53,51,51,49,58,49,49
str_982: db 58,32,117,110,114,101,97,99,104,97,98,108,101,32
str_983: db 58,32,69,82,82,79,82,58,32,73,110,115,117,102,102,105,99,105,101,110,116,32,100,97,116,97,32,111,110,32,116,104,101,32,115,116,97,99,107,32,97,102,116,101,114,32,97,32,115,105,110,103,108,101,32,105,116,101,114,97,116,105,111,110,32,111,102,32,116,104,101,32,108,111,111,112,46,32,84,104,101,32,116,121,112,101,115,32,97,110,100,32,116,104,101,32,97,109,111,117,110,116,32,111,102,32,101,108,101,109,101,110,116,115,32,111,110,32,116,104,101,32,115,116,97,99,107,32,97,114,101,32,110,111,116,32,97,108,108,111,119,101,100,32,116,111,32,99,104,97,110,103,101,32,98,101,116,119,101,101,110,32,116,104,101,32,105,116,101,114,97,116,105,111,110,115,46,32,72,101,114,101,32,97,114,101,32,116,104,101,32,101,108,101,109,101,110,116,115,32,99,117,114,114,101,110,116,108,121,32,111,110,32,116,104,101,32,115,116,97,99,107,58,10
str_984: db 58,32,69,82,82,79,82,58,32,73,110,115,117,102,102,105,99,105,101,110,116,32,100,97,116,97,32,111,110,32,116,104,101,32,115,116,97,99,107,32,97,116,32,116,104,101,32,101,110,100,32,111,102,32,116,104,101,32,112,114,111,99,101,100,117,114,101,46,32,84,104,101,32,101,120,112,101,99,116,101,100,32,101,108,101,109,101,110,116,115,32,111,110,32,116,104,101,32,115,116,97,99,107,32,97,114,101,32,108,105,115,116,101,100,32,97,102,116,101,114,32,116,104,101,32,96,45,45,96,32,111,112,101,114,97,116,111,114,46,32,72,101,114,101,32,97,114,101,32,116,104,101,32,101,108,101,109,101,110,116,115,32,99,117,114,114,101,110,116,108,121,32,111,110,32,116,104,101,32,115,116,97,99,107,58,10
str_985: db 112,111,114,116,104,46,112,111,114,116,104,58,53,51,53,52,58,49,49
str_986: db 58,32,117,110,114,101,97,99,104,97,98,108,101,32
str_987: db 109,97,105,110
str_988: db 69,82,82,79,82,58,32,96,109,97,105,110,96,32,112,114,111,99,101,100,117,114,101,32,119,97,115,32,110,111,116,32,112,114,111,118,105,100,101,100,10
str_989: db 58,32,69,82,82,79,82,58,32,96,109,97,105,110,96,32,112,114,111,99,101,100,117,114,101,32,109,117,115,116,32,110,111,116,32,97,99,99,101,112,116,32,97,110,121,32,97,114,103,117,109,101,110,116,115,10
str_990: db 58,32,69,82,82,79,82,58,32,96,109,97,105,110,96,32,112,114,111,99,101,100,117,114,101,32,109,117,115,116,32,110,111,116,32,114,101,116,117,114,110,32,97,110,121,32,100,97,116,97,10
str_991: db 91,73,78,70,79,93,32,84,121,112,101,32,99,104,101,99,107,105,110,103
str_992: db 79,112,115,32,99,111,117,110,116,58,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32
str_993: db 47
str_994: db 10
str_995: db 67,111,110,115,116,115,32,99,111,117,110,116,58,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32
str_996: db 47
str_997: db 10
str_998: db 80,114,111,99,115,32,99,111,117,110,116,58,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32
str_999: db 47
str_1000: db 10
str_1001: db 76,105,110,107,101,114,32,102,108,97,103,115,32,99,111,117,110,116,58,32,32,32,32,32,32,32,32,32,32,32
str_1002: db 47
str_1003: db 10
str_1004: db 83,116,114,105,110,103,32,108,105,116,101,114,97,108,115,32,99,111,117,110,116,58,32,32,32,32,32,32,32,32
str_1005: db 47
str_1006: db 10
str_1007: db 83,116,114,105,110,103,32,108,105,116,101,114,97,108,115,32,115,105,122,101,32,40,98,121,116,101,115,41,58,32
str_1008: db 47
str_1009: db 10
str_1010: db 71,108,111,98,97,108,32,109,101,109,111,114,105,101,115,32,99,111,117,110,116,58,32,32,32,32,32,32,32,32
str_1011: db 47
str_1012: db 10
str_1013: db 71,108,111,98,97,108,32,109,101,109,111,114,121,32,115,105,122,101,32,40,98,121,116,101,115,41,58,32,32,32
str_1014: db 10
str_1015: db 84,121,112,101,32,70,114,97,109,101,115,32,108,101,97,107,101,100,58,32,32,32,32,32,32,32,32,32,32,32
str_1016: db 47
str_1017: db 10
str_1018: db 84,121,112,101,32,70,114,97,109,101,32,115,105,122,101,32,40,98,121,116,101,115,41,58,32,32,32,32,32,32
str_1019: db 10
str_1020: db 85,115,97,103,101,58,32
str_1021: db 32,91,79,80,84,73,79,78,83,93,32,60,83,85,66,67,79,77,77,65,78,68,62,10
str_1022: db 32,32,79,80,84,73,79,78,83,58,10
str_1023: db 32,32,32,32,45,117,110,115,97,102,101,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,68,105,115,97,98,108,101,32,116,121,112,101,32,99,104,101,99,107,105,110,103,46,10
str_1024: db 32,32,32,32,45,73,32,60,112,97,116,104,62,32,32,32,32,32,32,32,32,32,32,32,32,32,65,100,100,32,60,112,97,116,104,62,32,116,111,32,116,104,101,32,105,110,99,108,117,100,101,32,112,97,116,104,115,32,108,105,115,116,46,10
str_1025: db 32,32,83,85,66,67,79,77,77,65,78,68,83,58,10
str_1026: db 32,32,32,32,99,111,109,32,91,79,80,84,73,79,78,83,93,32,60,102,105,108,101,62,32,32,67,111,109,112,105,108,101,32,116,104,101,32,112,114,111,103,114,97,109,10
str_1027: db 32,32,32,32,32,32,79,80,84,73,79,78,83,58,10
str_1028: db 32,32,32,32,32,32,32,32,45,103,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,85,115,101,32,71,78,85,32,97,115,32,105,110,115,116,101,97,100,32,111,102,32,102,97,115,109,10
str_1029: db 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,40,71,78,85,32,97,115,32,99,97,110,32,103,101,110,101,114,97,116,101,32,108,105,110,101,32,110,117,109,98,101,114,32,105,110,102,111,44,32,102,97,115,109,32,99,97,110,39,116,41,10
str_1030: db 32,32,32,32,32,32,32,32,45,114,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,82,117,110,32,116,104,101,32,112,114,111,103,114,97,109,32,97,102,116,101,114,32,115,117,99,99,101,115,115,102,117,108,32,99,111,109,112,105,108,97,116,105,111,110,10
str_1031: db 32,32,32,32,32,32,32,32,45,115,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,83,105,108,101,110,116,32,109,111,100,101,46,32,68,111,110,39,116,32,112,114,105,110,116,32,97,110,121,32,105,110,102,111,32,97,98,111,117,116,32,99,111,109,112,105,108,97,116,105,111,110,32,112,104,97,115,101,115,10
str_1032: db 32,32,32,32,100,117,109,112,32,60,102,105,108,101,62,32,32,32,32,32,32,32,32,32,32,32,68,117,109,112,32,116,104,101,32,111,112,115,32,111,102,32,116,104,101,32,112,114,111,103,114,97,109,10
str_1033: db 32,32,32,32,108,101,120,32,60,102,105,108,101,62,32,32,32,32,32,32,32,32,32,32,32,32,80,114,111,100,117,99,101,32,108,101,120,105,99,97,108,32,97,110,97,108,121,115,105,115,32,111,102,32,116,104,101,32,102,105,108,101,10
str_1034: db 32,32,32,32,115,117,109,109,97,114,121,32,60,102,105,108,101,62,32,32,32,32,32,32,32,32,80,114,105,110,116,32,116,104,101,32,115,117,109,109,97,114,121,32,111,102,32,116,104,101,32,112,114,111,103,114,97,109,10
str_1035: db 32,32,32,32,104,101,108,112,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,80,114,105,110,116,32,116,104,105,115,32,104,101,108,112,32,116,111,32,115,116,100,111,117,116,32,97,110,100,32,101,120,105,116,32,119,105,116,104,32,48,32,99,111,100,101,10
str_1036: db 46
str_1037: db 46,47,115,116,100
str_1038: db 80,79,82,84,72,95,73,78,67,76,85,68,69,95,80,65,84,72,83
str_1039: db 45,117,110,115,97,102,101,0
str_1040: db 45,73,0
str_1041: db 69,82,82,79,82,58,32,110,111,32,97,114,103,117,109,101,110,116,32,105,115,32,112,114,111,118,105,100,101,100,32,102,111,114,32,45,73,32,102,108,97,103,10
str_1042: db 69,82,82,79,82,58,32,115,117,98,99,111,109,109,97,110,100,32,105,115,32,110,111,116,32,112,114,111,118,105,100,101,100,10
str_1043: db 99,111,109,0
str_1044: db 45,103,0
str_1045: db 45,114,0
str_1046: db 45,115,0
str_1047: db 91,69,82,82,79,82,93,32,110,111,32,105,110,112,117,116,32,102,105,108,101,32,105,115,32,112,114,111,118,105,100,101,100,32,102,111,114,32,116,104,101,32,99,111,109,112,105,108,97,116,105,111,110,46,10
str_1048: db 46,97,115,109
str_1049: db 91,73,78,70,79,93,32,71,101,110,101,114,97,116,105,111,110
str_1050: db 97,115,0
str_1051: db 45,103,0
str_1052: db 45,111,0
str_1053: db 46,111
str_1054: db 46,97,115,109
str_1055: db 102,97,115,109,0
str_1056: db 45,109,0
str_1057: db 53,50,52,50,56,56,0
str_1058: db 46,97,115,109
str_1059: db 46,111
str_1060: db 91,73,78,70,79,93,32,103,97,115
str_1061: db 91,73,78,70,79,93,32,102,97,115,109
str_1062: db 99,99,0
str_1063: db 45,111,0
str_1064: db 46,116,109,112
str_1065: db 46,111
str_1066: db 45,110,111,45,112,105,101,0
str_1067: db 45,108,99,0
str_1068: db 46,116,109,112
str_1069: db 91,73,78,70,79,93,32,114,101,110,97,109,105,110,103,32
str_1070: db 32,45,62,32
str_1071: db 10
str_1072: db 69,82,82,79,82,58,32,99,111,117,108,100,32,110,111,116,32,114,101,110,97,109,101,32,116,104,101,32,102,105,108,101,10
str_1073: db 99,104,109,111,100,0
str_1074: db 43,120,0
str_1075: db 91,73,78,70,79,93,32,76,105,110,107,105,110,103
str_1076: db 104,101,108,112,0
str_1077: db 100,117,109,112,0
str_1078: db 69,82,82,79,82,58,32,110,111,32,105,110,112,117,116,32,102,105,108,101,32,105,115,32,112,114,111,118,105,100,101,100,32,102,111,114,32,116,104,101,32,96,100,117,109,112,96,32,115,117,98,99,111,109,109,97,110,100,10
str_1079: db 108,101,120,0
str_1080: db 69,82,82,79,82,58,32,110,111,32,105,110,112,117,116,32,102,105,108,101,32,105,115,32,112,114,111,118,105,100,101,100,32,102,111,114,32,116,104,101,32,96,108,101,120,96,32,115,117,98,99,111,109,109,97,110,100,10
str_1081: db 115,117,109,109,97,114,121,0
str_1082: db 69,82,82,79,82,58,32,110,111,32,105,110,112,117,116,32,102,105,108,101,32,105,115,32,112,114,111,118,105,100,101,100,32,102,111,114,32,116,104,101,32,96,100,117,109,112,96,32,115,117,98,99,111,109,109,97,110,100,10
str_1083: db 69,82,82,79,82,58,32,117,110,107,110,111,119,110,32,115,117,98,99,111,109,109,97,110,100,32,96
str_1084: db 96,10
section '.bss' writeable
args_ptr: rq 1
ret_stack_rsp: rq 1
ret_stack: rb 65536
ret_stack_end:
mem: rb 15425752
section '.note.GNU-stack' writeable
